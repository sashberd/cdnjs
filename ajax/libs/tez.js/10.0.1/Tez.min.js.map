{"version":3,"file":"Tez.min.js","sources":["src/vpatch.js","src/vcomponent.js","src/vhyper.js","src/vnode.js","src/vhtml.js"],"sourcesContent":["var map = {};\r\nvar _doc = document;\r\nvar litTag = \"tagName\", litChild = \"childNodes\", litNod = \"nodeValue\", litAttr = \"attributes\", litCTN = \"createTextNode\", litCE = \"createElement\";\r\nmap[litTag] = true;\r\nmap[litChild] = true;\r\nmap[litNod] = true;\r\nmap[litAttr] = true;\r\nvar udf;\r\n\r\nexport default function VPatch(renderedTree, virtualTree, noParent) {\r\n\r\n    if (!renderedTree) {\r\n        return null;\r\n    } else if (!virtualTree) {\r\n        return renderedTree;\r\n    }\r\n    // Quick patch for TextNode\r\n    if (!!virtualTree.nodeName && !!renderedTree.nodeName && virtualTree[litNod] !== undefined) {\r\n        if (virtualTree.nodeName !== renderedTree.nodeName) {\r\n            renderedTree[litNod] = virtualTree[litNod];\r\n        }\r\n        return true;\r\n    }\r\n    if (noParent) {\r\n        if (renderedTree.nodeType && virtualTree.length === undefined) {\r\n            virtualTree = [virtualTree];\r\n        }\r\n    }\r\n    if (Array.isArray(virtualTree)) {\r\n        if (renderedTree.length > 0) {\r\n            var maxLength = Math.max(renderedTree.length, virtualTree.length);\r\n            for (var i = 0; i < maxLength; i++) {\r\n                VPatch(renderedTree[i], virtualTree[i]);\r\n            }\r\n        } else {\r\n            var renderedTreeChilds = renderedTree[litChild];\r\n            if (renderedTreeChilds) {\r\n                if (renderedTreeChilds.length > 0) {\r\n                    var maxLength = Math.max(renderedTreeChilds.length, virtualTree.length);\r\n                    for (var i = 0; i < maxLength; i++) {\r\n                        VPatch(renderedTreeChilds[i], virtualTree[i]);\r\n                    }\r\n                } else {\r\n                    for (var i = 0, len = virtualTree.length; i < len; i++) {\r\n                        var virtualChildNode = virtualTree[i];\r\n                        var isTextNode = virtualChildNode.nodeName === \"#text\";\r\n                        var createElem = isTextNode ? _doc[litCTN](virtualChildNode[litNod]) : _doc[litCE](virtualChildNode.tagName);\r\n                        if (isTextNode) {\r\n                            createElem[litNod] = virtualChildNode[litNod];\r\n                        } else {\r\n                            VPatch(createElem, virtualChildNode);\r\n                        }\r\n                        renderedTree.appendChild(createElem);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    for (var p in map) {\r\n        var rendered = renderedTree[p],\r\n        virtual = virtualTree[p];\r\n\r\n        if (!virtual && !rendered) {\r\n            continue;\r\n        } else if (p === litNod) {\r\n            if (rendered !== udf && virtual !== udf && rendered !== virtual) {\r\n                renderedTree[p] = virtual;\r\n            }\r\n        } else if (p === litChild) {\r\n            if ((!rendered || rendered && rendered.length === 0)) {\r\n                if (virtual && virtual.length > 0) {\r\n                    for (var i = 0, len = virtual.length; i < len; i++) {\r\n                        var virtualChildNode = virtual[i];\r\n                        if (!virtualChildNode) {\r\n                            continue;\r\n\t\t\t\t\t\t}\r\n                        var isTextNode = virtualChildNode.nodeName === \"#text\";\r\n                        var createElem = isTextNode ? _doc[litCTN](virtualChildNode[litNod]) : _doc[litCE](virtualChildNode.tagName);\r\n                        if (isTextNode) {\r\n                            createElem[litNod] = virtualChildNode[litNod];\r\n                        } else {\r\n                            VPatch(createElem, virtualChildNode);\r\n                        }\r\n                        renderedTree.appendChild(createElem);\r\n                    }\r\n                }\r\n            } else if (!virtual || virtual && virtual.length === 0) {\r\n                if (rendered && rendered.length > 0) {\r\n\t\t\t\t\tvar renderedChild, i = 0;\r\n                    while (renderedChild = rendered[i++]) {\r\n                        if (renderedChild === undefined) {\r\n                            renderedChild = rendered[i++];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (renderedChild && renderedChild.parentNode) {\r\n                        renderedChild.parentNode.removeChild(renderedChild);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (i >= rendered.length) {\r\n\t\t\t\t\t\t\ti = 0;\r\n\t\t\t\t\t\t}\r\n                    }\r\n                }\r\n            } else if (virtual && rendered) {\r\n                var maxLength = Math.max(rendered && rendered.length || 0, virtual && virtual.length || 0);\r\n                for (var i = 0; i < maxLength; i++) {\r\n                    var virtualChildNode = virtual[i];\r\n\t\t\t\t\tvar renderedChildNode = rendered[i];\r\n                    if (!renderedChildNode) {\r\n                        var isTextNode = virtualChildNode.nodeName === \"#text\";\r\n                        var createElem = isTextNode ? _doc[litCTN](virtualChildNode[litNod]) : _doc[litCE](virtualChildNode.tagName);\r\n                        renderedTree.appendChild(createElem);\r\n                        renderedChildNode = createElem;\r\n                        VPatch(renderedChildNode, virtualChildNode);\r\n                    } else if (!virtualChildNode) {\r\n\t\t\t\t\t\tif (renderedChildNode && renderedChildNode.parentNode) {\r\n                        renderedChildNode.parentNode.removeChild(renderedChildNode);\r\n\t\t\t\t\t\t}\r\n                    } else {\r\n                        if (virtualChildNode.nodeName && virtualChildNode[litNod] !== undefined) {\r\n                            if (renderedChildNode[litNod] !== virtualChildNode[litNod]) {\r\n                                renderedChildNode[litNod] = virtualChildNode[litNod];\r\n                            }\r\n                        } else {\r\n                            VPatch(renderedChildNode, virtualChildNode);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else if (p === litTag) {\r\n            if ((rendered && virtual) && rendered !== virtual) {\r\n                var createElem = _doc.createElement(virtual);\r\n                VPatch(createElem, virtualTree);\r\n                if (rendered && renderedTree.parentNode) {\r\n                    renderedTree.parentNode.replaceChild(createElem, renderedTree);\r\n                }\r\n            }\r\n        } else if (p === litAttr) {\r\n            var maxLength = Math.max(rendered && rendered.length || 0, virtual && virtual.length || 0);\r\n            for (var i = 0; i < maxLength; i++) {\r\n                var rAttr = rendered[i];\r\n                var vAttr = virtual && virtual[i];\r\n\r\n                if (rAttr && !vAttr) {\r\n                    renderedTree.removeAttribute(rAttr.name);\r\n                } else if (!rAttr && vAttr) {\r\n                    renderedTree.setAttribute(vAttr.name, vAttr.value);\r\n                } else if (rAttr.value !== vAttr.value) {\r\n                    rAttr.value = vAttr.value;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","import VPatch from './vpatch';\r\n\r\nvar linkState = function (scope, type) {\r\n\tvar state = scope.state || {};\r\n\treturn function (value) {\r\n\t\tstate[type] = value.target ? value.target[type] : value[type];\r\n\t\treturn scope.setState(state);\r\n\t}\r\n}\r\n\r\nvar Component = function (props) {\r\n    this.props = props;\r\n\tthis.innerScope = false;\r\n};\r\nvar p = Component.prototype;\r\np.shouldComponentUpdate = function (state) {\r\n    return !!state && JSON.stringify(this.state) !== JSON.stringify(state);\r\n};\r\np.setState = function (state) {\r\n    if (this.shouldComponentUpdate(state)) {\r\n        if (state && this.state) {\r\n            for (var p in state) {\r\n                this.state[p] = state[p];\r\n            }\r\n        }\r\n        this.redraw();\r\n    }\r\n    return this;\r\n};\r\np.redraw = function (el) {\r\n    if (!this.rendered) {\r\n        Object.defineProperty(this, 'rendered', {\r\n            value: el,\r\n            enumerable: false\r\n        });\r\n    }\r\n    var render = this.render();\r\n    if (!render) {\r\n        if (this.rendered.remove) {\r\n            this.rendered.remove();\r\n        }\r\n        if (this.componentDidUnmount) {\r\n            this.componentDidUnmount();\r\n        }\r\n    } else {\r\n        VPatch(this.rendered, render, this.innerScope);\r\n        render = null;\r\n    }\r\n    return this;\r\n};\r\np.constructor = Component;\r\n\r\nfunction isComponent(_class) {\r\n    return !!_class && (((_class instanceof Component) || _class.redraw || _class.render) || (_class.prototype && (_class.prototype.redraw || _class.prototype.render)));\r\n}\r\n\r\nfunction DOM(el, _class, innerScope) {\r\n    if (isComponent(_class)) {\r\n        if (_class.componentDidMount) {\r\n            _class.componentDidMount(el);\r\n        }\r\n        _class.redraw(el);\r\n    } else if (typeof _class === 'object') {\r\n        VPatch(el, _class, innerScope);\r\n    }\r\n    return _class;\r\n}\r\n\r\nexport {\r\n    isComponent,\r\n    Component,\r\n\tlinkState,\r\n    DOM\r\n};\r\n","import {\r\n    isComponent\r\n}\r\nfrom './vcomponent';\r\n\r\nvar slice = [].slice;\r\nvar isArray = Array.isArray;\r\n\r\nexport function VAttr(attr) {\r\n    if (!attr || isArray(attr))\r\n        return attr;\r\n    var attrs = [];\r\n    for (var prop in attr) {\r\n        attrs.push({\r\n            name: prop,\r\n            value: attr[prop]\r\n        });\r\n    }\r\n    return attrs;\r\n}\r\n\r\nexport function VText(text) {\r\n    return {\r\n        nodeName: '#text',\r\n        nodeValue: text\r\n    }\r\n}\r\n\r\nexport default function VHyper() {\r\n    var children = slice.call(arguments);\r\n    var tag = children.shift();\r\n    var attrs = children.shift();\r\n\r\n    var render;\r\n    if (isComponent(tag)) {\r\n        render = tag.render !== undefined ? tag.render() : new tag(attrs).render();\r\n    } else if (typeof tag === 'function') {\r\n        render = tag(attrs);\r\n    } else if (typeof render === 'number' || typeof render === 'string') {\r\n        render = VText(render);\r\n    } else {\r\n\t\ttag = tag.toUpperCase();\r\n        render = {\r\n            tagName: tag,\r\n            nodeName: tag,\r\n            attributes: VAttr(attrs)\r\n        }\r\n    }\r\n    if (children.length > 0) {\r\n        attrs = VAttr(attrs);\r\n        if (!render.childNodes) {\r\n            render.childNodes = [];\r\n        }\r\n        render.childNodes = render.childNodes.concat(children.map(function (item) {\r\n                    return typeof(item) === 'number' || typeof(item) === 'string' ? VText(item) : isArray(item) ? VHyper.apply(null, item) : isComponent(item) ? VHyper(item) : item;\r\n                }));\r\n    }\r\n    return render;\r\n}\r\n","var id = 0, slice = [].slice;\r\n\r\nexport default function VNode(params, key) {\r\n\tif (Array.isArray(params)) {\r\n\t\treturn params.map(function(param){\r\n\t\t\treturn VNode(param);\r\n\t\t});\r\n\t}\r\n\tvar self = {};\r\n    if (params.id) {\r\n        self.id = params.id;\r\n    }\r\n    if (params.tagName) {\r\n        self.tagName = params.tagName.toUpperCase();\r\n    }\r\n    self.nodeName = params.nodeName;\r\n    self.childNodes = slice.call(params.childNodes || []).map(function (node, index) {\r\n        return VNode(node, index);\r\n    }) || [];\r\n    if (params.attributes) {\r\n        self.attributes = slice.call(params.attributes);\r\n    }\r\n    self.key = key || id++;\r\n    self.nodeValue = params.nodeValue || null;\r\n    self.value = params.value;\r\n    self.textContent = params.tagName === \"BR\" ? \"\" : self.childNodes.length ? undefined : params.textContent;\r\n    self.name = params.name || \"VNode_\" + self.nodeName;\r\n    self.nodeType = params.nodeType || (self.nodeName && self.nodeName.indexOf('text')) !== -1 ? 3 : 1;\r\n    self.selectorText = self.nodeName;\r\n\treturn self;\r\n}","        var attrRegExp = /\\\" |\\' /g;\r\n        var quotesRegExp = /\"|'/g;\r\n        var tagsRegEx = /([>]+)|([<]+)/g;\r\n        var spaceRegEx = /([\\s+]+)/g;\r\n\r\n        var textNode = '#text';\r\n        var tagsReplacement = \"$1$TAGS$2\",\r\n        tagsSplit = '$TAGS';\r\n        var spaceReplacement = \"$1$SPACE\",\r\n        spaceSplit = '$SPACE';\r\n\r\n        function VText(text) {\r\n            return {\r\n                nodeName: textNode,\r\n                nodeValue: text\r\n            }\r\n        }\r\n\r\n        function str2attr(str) {\r\n            return (str && typeof str === 'string') ? str.split(attrRegExp).map(function (item, idx) {\r\n                if (item.indexOf(\"=\") !== -1) {\r\n                    item = item.split(\"=\");\r\n                    return {\r\n                        name: item[0],\r\n                        value: item[1].replace(quotesRegExp, '')\r\n                    }\r\n                }\r\n                return {\r\n                    name: item,\r\n                    value: true\r\n                }\r\n            }) : str;\r\n        }\r\n        function VHtml(str, innerScope) {\r\n            if (str[0] !== \"<\" || str.indexOf(\">\") === -1) {\r\n                return VText(str.replace(tagsRegEx, ''))\r\n            }\r\n            var _parsed = str.replace(tagsRegEx, tagsReplacement).split(tagsSplit).filter(function (p) {\r\n                    return p\r\n                });\r\n            var isChildTags = innerScope !== undefined ? innerScope : false;\r\n            var vnode = {\r\n                tagName: null,\r\n                childNodes: [],\r\n                attributes: ''\r\n            };\r\n\r\n            var child = vnode;\r\n\r\n            for (var i = 0, len = _parsed.length; i < len; i++) {\r\n                var tag = _parsed[i];\r\n                var isTag = tag.charAt(0) === \"<\";\r\n                if (isTag && tag.charAt(1) === \"/\") {\r\n                    if (child.parent) {\r\n                        child = child.parent;\r\n                    }\r\n                    continue;\r\n                }\r\n                if (!isTag) {\r\n                    tag.replace(spaceRegEx, spaceReplacement).split(spaceSplit).filter(function (p) {\r\n                        return p;\r\n                    }).map(function (text) {\r\n                        child.childNodes.push(VText(text));\r\n                    });\r\n                } else {\r\n                    var tagLen = tag.length;\r\n                    var selfClose = tag.indexOf(\"/>\") !== -1;\r\n                    var isOpenTag = !selfClose && isTag;\r\n                    var tagScopeOut = isTag && tag.substr(1, tagLen - 2);\r\n                    var parseTag = isTag && tagScopeOut.split(\" \");\r\n                    var tagName = parseTag.shift();\r\n                    if (parseTag.length > 0) {\r\n                        parseTag = str2attr(parseTag.join(\" \"));\r\n                    }\r\n                    if (i === 0 && !isChildTags) {\r\n                        child.tagName = child.nodeName = tagName.toUpperCase();\r\n                        child.attributes = parseTag;\r\n                    } else {\r\n                        if (selfClose) {\r\n                            var name = tagName.substr(0, tagName.length - 1);\r\n                            child.childNodes.push({\r\n                                tagName: name.toUpperCase(),\r\n                                nodeName: name,\r\n                                attributes: parseTag,\r\n                                parent: vnode\r\n                            });\r\n                        } else {\r\n                            var childOfVNode = {\r\n                                tagName: tagName.toUpperCase(),\r\n                                nodeName: tagName,\r\n                                attributes: parseTag,\r\n                                childNodes: [],\r\n                                parent: vnode\r\n                            };\r\n                            child.childNodes.push(childOfVNode);\r\n                            child = childOfVNode;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            _parsed = null;\r\n            return isChildTags ? vnode.childNodes : vnode;\r\n        }\r\n   export default VHtml;\r\n"],"names":["VPatch","renderedTree","virtualTree","noParent","nodeName","undefined","litNod","nodeType","length","Array","isArray","maxLength","Math","max","i","renderedTreeChilds","litChild","len","virtualChildNode","isTextNode","createElem","_doc","litCTN","litCE","tagName","appendChild","p","map","rendered","virtual","udf","renderedChild","parentNode","removeChild","renderedChildNode","litTag","createElement","replaceChild","litAttr","rAttr","vAttr","removeAttribute","name","setAttribute","value","isComponent","_class","Component","redraw","render","prototype","DOM","el","innerScope","componentDidMount","VAttr","attr","attrs","prop","push","VText","text","nodeValue","VHyper","children","slice","call","arguments","tag","shift","toUpperCase","attributes","childNodes","concat","item","apply","VNode","params","key","param","self","id","node","index","textContent","indexOf","selectorText","textNode","str2attr","str","split","attrRegExp","idx","replace","quotesRegExp","VHtml","tagsRegEx","_parsed","tagsReplacement","tagsSplit","filter","isChildTags","vnode","child","isTag","charAt","parent","tagLen","selfClose","tagScopeOut","substr","parseTag","join","childOfVNode","spaceRegEx","spaceReplacement","spaceSplit","document","linkState","scope","type","state","target","setState","props","this","shouldComponentUpdate","JSON","stringify","Object","defineProperty","enumerable","remove","componentDidUnmount","constructor"],"mappings":"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"}