{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/json-stable-stringify/index.js","node_modules/jsonify/index.js","node_modules/jsonify/lib/parse.js","node_modules/jsonify/lib/stringify.js","node_modules/tslib/tslib.js","node_modules/vega-event-selector/build/vega-event-selector.js","node_modules/vega-util/build/vega-util.js","package.json","src/aggregate.ts","src/axis.ts","src/bin.ts","src/channel.ts","src/compile/axis/assemble.ts","src/compile/axis/component.ts","src/compile/axis/encode.ts","src/compile/axis/parse.ts","src/compile/axis/rules.ts","src/compile/baseconcat.ts","src/compile/buildmodel.ts","src/compile/common.ts","src/compile/compile.ts","src/compile/concat.ts","src/compile/data/aggregate.ts","src/compile/data/assemble.ts","src/compile/data/bin.ts","src/compile/data/dataflow.ts","src/compile/data/facet.ts","src/compile/data/formatparse.ts","src/compile/data/nonpositivefilter.ts","src/compile/data/nullfilter.ts","src/compile/data/optimize.ts","src/compile/data/optimizers.ts","src/compile/data/parse.ts","src/compile/data/source.ts","src/compile/data/stack.ts","src/compile/data/timeunit.ts","src/compile/data/transforms.ts","src/compile/facet.ts","src/compile/layer.ts","src/compile/layout/header.ts","src/compile/layoutsize/assemble.ts","src/compile/layoutsize/parse.ts","src/compile/legend/assemble.ts","src/compile/legend/component.ts","src/compile/legend/encode.ts","src/compile/legend/parse.ts","src/compile/legend/rules.ts","src/compile/mark/area.ts","src/compile/mark/bar.ts","src/compile/mark/init.ts","src/compile/mark/line.ts","src/compile/mark/mark.ts","src/compile/mark/mixins.ts","src/compile/mark/point.ts","src/compile/mark/rect.ts","src/compile/mark/rule.ts","src/compile/mark/text.ts","src/compile/mark/tick.ts","src/compile/mark/valueref.ts","src/compile/model.ts","src/compile/repeat.ts","src/compile/repeater.ts","src/compile/resolve.ts","src/compile/scale/assemble.ts","src/compile/scale/component.ts","src/compile/scale/domain.ts","src/compile/scale/parse.ts","src/compile/scale/properties.ts","src/compile/scale/range.ts","src/compile/scale/type.ts","src/compile/selection/interval.ts","src/compile/selection/multi.ts","src/compile/selection/selection.ts","src/compile/selection/single.ts","src/compile/selection/transforms/inputs.ts","src/compile/selection/transforms/nearest.ts","src/compile/selection/transforms/project.ts","src/compile/selection/transforms/scales.ts","src/compile/selection/transforms/toggle.ts","src/compile/selection/transforms/transforms.ts","src/compile/selection/transforms/translate.ts","src/compile/selection/transforms/zoom.ts","src/compile/split.ts","src/compile/unit.ts","src/compositemark/boxplot.ts","src/compositemark/errorbar.ts","src/compositemark/index.ts","src/config.ts","src/data.ts","src/datetime.ts","src/encoding.ts","src/fielddef.ts","src/filter.ts","src/guide.ts","src/index.ts","src/legend.ts","src/log.ts","src/logical.ts","src/mark.ts","src/scale.ts","src/selection.ts","src/sort.ts","src/spec.ts","src/stack.ts","src/timeunit.ts","src/title.ts","src/toplevelprops.ts","src/transform.ts","src/type.ts","src/util.ts","src/validate.ts","src/vega.schema.ts"],"names":["f","exports","module","define","amd","window","global","self","this","vl","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","json","JSON","obj","opts","cmp","space","Array","join","cycles","replacer","key","value","node","b","aobj","bobj","seen","stringify","parent","level","indent","colonSeparator","toJSON","undefined","isArray","out","item","push","indexOf","TypeError","keys","objectKeys","sort","keyValue","splice","","x","toString","Object","has","prototype","hasOwnProperty","parse","at","ch","text","escapee","\"","\\","/","error","m","name","message","next","c","charAt","number","string","isFinite","hex","uffff","parseInt","String","fromCharCode","white","word","array","object","source","reviver","result","walk","holder","k","v","quote","escapable","lastIndex","test","replace","meta","charCodeAt","slice","str","partial","mind","gap","rep","apply","\b","\t","\n","\f","\r","__extends","__assign","__rest","__decorate","__param","__metadata","__awaiter","__generator","__exportStar","__values","__read","__spread","__await","__asyncGenerator","__asyncDelegator","__asyncValues","factory","createExporter","previous","id","root","exporter","extendStatics","setPrototypeOf","__proto__","d","p","__","constructor","create","assign","arguments","getOwnPropertySymbols","decorators","target","desc","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","paramIndex","decorator","metadataKey","metadataValue","metadata","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","rejected","done","then","body","verb","op","_","y","label","ops","pop","trys","g","sent","throw","return","Symbol","iterator","ar","concat","q","resume","settle","fulfill","shift","asyncIterator","vega","isMarkType","type","MARKS","find","endChar","pushChar","popChar","count","parseMerge","output","start","COMMA","LBRACK","LBRACE","RBRACK","RBRACE","substring","trim","parseSelector","parseBetween","parseStream","stream","GT","map","between","j","filter","DEFAULT_SOURCE","throttle","markname","lastIndexOf","parseThrottle","NAME","COLON","ILLEGAL","marktype","consume","debounce","split","VIEW","DEFAULT_MARKS","*","arc","area","group","image","line","path","rect","rule","shape","symbol","trail","selector","marks","accessorFields","fn","fields","$","isObject","isString","log","method","input","args","console","defaultParser","isNumber","isDate","Date","accessor","fname","splitAccessPath","field","Function","empty","identity","zero","one","truthy","falsy","isFunction","NULL","repeat","reps","accessorName","logger","warn","info","debug","None","Warn","Info","Debug","compare","orders","lt","gt","idx","ord","bind","reduce","forEach","constant","delay","handler","callback","evt","tid","clearTimeout","setTimeout","extend","len","extentIndex","fastmap","size","get","set","delete","clear","clean","inherits","child","proto","isBoolean","isRegExp","merge","array0","array1","n0","n1","merged","i0","i1","pad","padchar","align","Math","ceil","peek","stringValue","toBoolean","toDate","parser","toNumber","toSet","truncate","ellipsis","max","visitArray","visitor","author","version","collaborators","homepage","description","main","types","bin","vl2png","vl2svg","vl2vg","directories","scripts","pretsc","tsc","prebuild","build","build:only","postbuild","build:examples","build:examples-only","build:toc","build:site","build:versions","build:test-gallery","check:examples","check:schema","data","link","deploy","deploy:gh","deploy:schema","prestart","poststart","preschema","schema","renameschema","presite","site","lint","posttest","test:nocompile","test:only","test:runtime","test:runtime:generate","test:debug","test:debug-examples","mocha:test","mocha:examples","codecov","watch:build","watch:tsc","watch:test","watch","repository","url","license","bugs","devDependencies","@types/chai","@types/d3","@types/highlight.js","@types/json-stable-stringify","@types/mkdirp","@types/mocha","@types/node","@types/webdriverio","ajv","browser-sync","browserify","browserify-shim","chai","cheerio","chromedriver","d3","exorcist","highlight.js","mkdirp","mocha","nodemon","nyc","source-map-support","ts-node","tsify","tslint","tslint-eslint-rules","typescript","typescript-to-json-schema","uglify-js","vega-datasets","vega-embed","vega-tooltip","watchify","wdio-chromedriver-service","wdio-dot-reporter","wdio-mocha-framework","wdio-static-server-service","webdriverio","yaml-front-matter","dependencies","json-stable-stringify","tslib","vega-event-selector","vega-util","yargs","util_1","AGGREGATE_OPS","AGGREGATE_OP_INDEX","COUNTING_OPS","isCountingAggregateOp","aggregate","contains","SUM_OPS","SHARED_DOMAIN_OPS","SHARED_DOMAIN_OP_INDEX","AXIS_PROPERTY_TYPE","grid","labelOverlap","offset","title","AXIS_PROPERTIES","VG_AXIS_PROPERTIES","channel_1","binToString","autoMaxBins","channel","ROW","COLUMN","SIZE","COLOR","OPACITY","SHAPE","getSupportedMark","X","Y","DETAIL","TOOLTIP","ORDER","point","tick","circle","square","bar","X2","Y2","TEXT","Channel","scale_1","CHANNELS","CHANNEL_INDEX","SINGLE_DEF_CHANNELS","isChannel","UNIT_CHANNELS","SCALE_CHANNELS","SCALE_CHANNEL_INDEX","isScaleChannel","NONSPATIAL_CHANNELS","SPATIAL_SCALE_CHANNELS","NONSPATIAL_SCALE_CHANNELS","LEVEL_OF_DETAIL_CHANNELS","without","STACK_BY_CHANNELS","supportMark","mark","hasScale","POSITION_SCALE_TYPE_INDEX","SCALE_TYPES","supportScaleType","scaleType","rangeType","getAxisReducer","axisType","axes","axis","combine","mainAxisReducer","gridAxisReducer","assembleAxes","axisComponents","AxisComponentPart","_super","tslib_1","Split","labelAngle","fieldDef","type_1","NOMINAL","ORDINAL","TEMPORAL","labelAlign","angle","orient","common_1","labels","model","specifiedLabelsSpec","def","config","labelsSpec","isUTCScale","getScaleComponent","ScaleType","UTC","signal","timeFormatExpression","timeUnit","format","shortTimeLabels","timeFormat","baseline","mergeAxisComponents","mergedAxisCmpts","childAxisCmpts","axisComponent","clone","length_1","mergedMain","childMain","mergedOrient","getWithExplicit","childOrient","explicit","mergeAxisComponentPart","mergedGrid","childGrid","_i","VG_AXIS_PROPERTIES_1","axis_1","prop","mergedValueWithExplicit","split_1","mergeValuesWithExplicit","v1","v2","titleMerger","defaultTieBreaker","setWithExplicit","isFalseOrNull","isVisibleAxis","some","AXIS_PARTS","part","hasAxisPart","parseGridAxis","parseAxis","parseMainAxis","isGridAxis","component_1","scale","scaleName","property","getProperty","values","gridScale","rules","axisEncoding","encoding","axisEncode","encode","update","specifiedAxis","domain","numberFormat","component","scales","getSpecifiedOrDefaultValue","minMaxExtent","minExtent","maxExtent","sizeType","getSizeSignalRef","tickCount","ticks","titleMaxLength","zindex","resolve_1","parseUnitAxis","OPPOSITE_ORIENT","bottom","top","left","right","parseLayerAxis","_a","axisCount","_b","children","parseAxisAndHeader","channelResolve","parseGuideResolve","oppositeOrient","domainAndTicks","bin_1","datetime_1","fielddef_1","hasDiscreteDomain","gridChannel","specifiedExtent","INVALID_CHANNEL_FOR_AXIS","maxLength","fieldTitle","vals","isDateTime","dt","dateTimeExpr","getName","parse_1","assemble_1","model_1","assemble_2","BaseConcatModel","spec","parentGivenName","parseData","parseSelection","_this","selection","parseMarkGroup","assembleScales","assembleScaleForModelAndChildren","assembleSelectionTopLevelSignals","signals","sg","assembleSelectionSignals","assembleLayoutSignals","assembleSelectionData","db","assembleMarks","assembleTitle","style","assembleGroupStyle","layoutSizeEncodeEntry","assembleLayoutSize","assembleGroup","Model","spec_1","concat_1","facet_1","layer_1","repeat_1","unit_1","buildModel","unitSize","repeater","isFacetSpec","FacetModel","isLayerSpec","LayerModel","isUnitSpec","UnitModel","isRepeatSpec","RepeatModel","isConcatSpec","ConcatModel","INVALID_SPEC","getStyles","getMarkConfig","markSpecificConfig","styles_1","styleConfig","specifiedFormat","QUANTITATIVE","formatExpr","timeFormatConfig","_format","timeunit_1","formatExpression","applyConfig","propsList","propsList_1","applyMarkConfig","propsList_2","markDef","formatSignalRef","expr","useBinRange","binSuffix","isScaleFieldDef","specifiedValue","defaultValue","numberFormatExpr","sortParams","orderDef","fieldRefOption","orderChannelDef","order","getTopLevelProperties","topLevelSpec","toplevelprops_1","extractTopLevelProperties","assembleTopLevelModel","topLevelProperties","vgConfig","config_1","stripAndRedirectConfig","topLevelProps","autoResize","$schema","autosize","resize","assembleRootData","buildmodel_1","optimize_1","compile","inputSpec","initConfig","normalize","optimizeDataflow","reset","baseconcat_1","isVConcat","isVConcatSpec","vconcat","hconcat","parseLayoutSize","parseConcatLayoutSize","parseAxisGroup","assembleLayout","padding","row","column","columns","bounds","addDimension","dims","mergeMeasures","parentMeasures","childMeasures","AggregateNode","dimensions","measures","duplicate","makeFromEncoding","isAggregate","forEachFieldDef","fd","meas","scaleDomain","makeFromTransform","summarize","as","_c","groupby","other","differ","remove","addDimensions","dependentFields","producedFields","assemble","DataFlowNode","makeWalkTree","walkTree","dataSource","source_1","SourceNode","data_1","isUrlData","newData","transform","formatparse_1","ParseNode","assembleFormatParse","assembleTransforms","FacetNode","datasetIndex","transforms_1","FilterNode","nullfilter_1","NullFilterNode","CalculateNode","aggregate_1","LookupNode","IdentifierNode","nonpositivefilter_1","NonPositiveFilterNode","BinNode","TimeUnitNode","stack_1","StackNode","dataflow_1","OutputNode","setSource","numChildren","source_2","assembleFacetData","dataComponent","roots","sources","sourceIndex","hasName","dataName","data_2","from","outputNodes","getSource","rangeFormula","guide","isUnitModel","legend","startField","endField","formulaAs","formula","binKey","createBinComponent","extentSignal","bins","makeBinFromEncoding","reduceFieldDef","binComponent","fieldDefBin","normalizeBin","flatten","binTrans","extent","debugName","_children","_parent","addChild","removeChild","oldChild","insertAsParentOf","swapWithParent","newParent","refCounts","_source","_name","cloneObj","isRequired","vega_schema_1","domain_1","childIndependentFieldWithStep","facet","columnField","columnName","rowField","rowName","childScaleComponent","range","isVgRangeStep","getFieldFromDomains","domains","assembleRowColumnData","crossedDataName","childChannel","aggregateChildField","parseExpression","specifier","unrecognizedParse","filter_1","logical_1","transform_1","_parse","make","calcFieldMap","transforms","isCalculate","isFilter","forEachLeave","isEqualFilter","isRangeFilter","isOneOfFilter","isFacetModel","p_1","modelParse","ancestorParse","differentParse","_filter","nonPositiveComponent","LOG","_filteredFields","aggregator","invalidValues","scaleComponent","hasContinuousDomain","hash","filteredFields","differArray","filters","_filters","cloneSubtree","copy_1","newName","FACET_SCALE_PREFIX","moveFacetDown","moveMainDownToFacet","MAIN","removeUnnecessaryNodes","every","getLeaves","append","leaves","optimizers","iterateFromLeaves","removeUnusedSubtrees","moveParseUp","removeDuplicateTimeUnits","optimizeNextFromLeaves","hasIntersection","leaf","pfields","parseRoot","facetRoot","selection_1","outputNodeRefCounts","head","requiresSelectionId","ident","parentIsLayer","isLayerModel","parseTransformArray","first","last","nullFilter","tu","rawName","RAW","raw","agg","stack","nonPosFilter","mainName","facetName","isInlineData","_data","defaultExtension","exec","dataFormat","formatType","feature","mesh","isNamedData","getStackByFields","stackBy","by","_field","vega_util_1","_stack","stackProperties","dimensionFieldDef","groupbyChannel","stackby","fieldChannel","facetby","impute","getGroupbyFields","stackField","dimensionField","timeUnitComponent","fieldExpr","selection_2","expression","calculate","secondary","counter","fromSource","fromOutputName","fromOutputNode","foreign","asName","NO_FIELDS_NEEDS_AS","lookup","default","SELECTION_ID","insert","newNode","lookupCounter","val","equal","oneOf","isBin","isTimeUnit","isSummarize","isLookup","invalidTransformIgnored","encoding_1","header_1","parse_2","repeater_1","replaceRepeaterInFacet","initFacet","normalizedFacet","emptyFieldDef","incompatibleChannel","channelHasField","parseChildrenLayoutSize","parseHeader","mergeChildAxis","header","layoutHeaders","facetFieldDef","makeHeaderComponent","sizeSignal","layoutSize","headerChannel","layoutHeader","mainAxis","headerType","getHeaderType","assembleScalesForModel","getLayoutBandMixins","bandMixins","bandType","headerComponent","columnDistinctSignal","prefix","getCardinalityAggregateForChild","field_1","hasRow","hasColumn","aggregateMixins","cross","cardinalityAggregateForChild","getMapping","ModelWithField","parse_3","parentGivenSize","width","height","initSize","layer","parseLayerLayoutSize","assembleLayerSelectionMarks","HEADER_CHANNELS","HEADER_TYPES","getTitleGroup","textOrient","role","fill","fontWeight","getHeaderGroup","fontSize","hasAxes","sizeChannel","sizeSignals","stepSignal","sizeExpr","cardinality","paddingOuter","paddingInner","layoutSizeCmpt","parseNonUnitLayoutSizeForChannel","mergedSize","childSize","scaleResolve","renameLayoutSize","defaultUnitSize","cell","textXRangeStep","rangeStep","defaultScaleConfig","parseRepeatLayoutSize","sizeTypeToMerge","parseUnitLayoutSize","layoutSizeComponent","assembleLegends","legendComponentIndex","legends","legendByDomain","domainHash","mergedLegendComponent","mergeLegendComponent","legendCmpt","LegendComponent","mark_1","mixins","symbols","symbolsSpec","BAR","TICK","CIRCLE","SQUARE","POINT","LINE","AREA","filled","FILL_STROKE_CONFIG","colorMixins","color","stroke","shapeDef","isValueDef","parseLegend","parseUnitLegend","parseNonUnitLegend","legendComponent","parseLegendForChannel","getLegendDefWithScale","opacity","legend_1","LEGEND_PROPERTIES","legendEncoding","legendEncode","specifiedLegend","mergedLegend","childLegend","VG_LEGEND_PROPERTIES_1","VG_LEGEND_PROPERTIES","split_2","makeImplicit","isBinScale","vgMark","encodeEntry","pointPosition","pointPosition2","nonPosition","markDefProperties","sizeDef","xDef","xScaleName","xScale","isFieldDef","binnedPosition","binSpacing","BAND","bandPosition","centeredBandPosition","ref","mid","defaultSizeRef","yDef","yScaleName","yScale","yScaleType","discreteBandSize","band","continuousBandSize","scaleRange","BAR_WITH_POINT_SCALE_AND_RANGESTEP_NULL","defaultOpacity","stacked","filledConfig","RULE","specifiedOrient","RECT","yIsRange","y2","xIsRange","x2","xScaleType","xIsContinuous","isContinuous","yIsContinuous","xIsTemporal","yIsTemporal","unclearOrientContinuous","unclearOrientDiscreteOrEmpty","normalizeMarkDef","orientOverridden","initEncoding","opacityConfig","vgChannel","parseMarkDef","init_1","parsePathMark","details","detailFields","clip","scaleClip","getPathSort","pathMarks","markCompiler","FACETED_PATH_PREFIX","requestDataName","dimensionChannel","sort_1","isSortField","parseNonPathMark","channelDef","getFieldDef","area_1","bar_1","line_1","point_1","rect_1","rule_1","text_1","tick_1","opt","defaultRef","wrapCondition","cDef","midPoint","refFn","condition","valueRef","conditionValueRef","predicate","stackable","util","props","valueIfDefined","centeredBandPositionMixins","fieldRef","cannotUseSizeFieldWithBandSize","cannotApplySizeToNonOrientedMark","defaultPosRef","centerChannel","spacing","baseChannel","stackable2","fixedShape","shapeMixins","x2Def","scaleTypeNotWorkWithMark","y2Def","xDefault","textDef","defaultSize","bandSize","vgSizeChannel","vgThicknessChannel","thickness","binMidSignal","zeroOrMinX","zeroOrMinY","zeroOrMaxX","zeroOrMaxY","TIME","suffix","aFieldDef","a2fieldDef","side","sizeRef","mult","title_1","assemble_3","NameMap","nameMap","rename","oldName","isRepeatModel","isConcatModel","correctDataNames","lookupDataSource","scaleNameMap","layoutSizeNameMap","parseScale","renameTopLevelLayoutSize","assembleHeaderMarks","headerMarks","HEADER_CHANNELS_1","HEADER_CHANNELS_2","HEADER_TYPES_1","_d","headerGroup","extractTitleConfig","nonMark","layout","hasDescendantWithFieldOnChannel","varName","fullName","fieldName","getSizeName","oldSizeName","renameScale","originalScaleName","localScaleComponent","getSelectionComponent","origName","sel","selectionNotFound","init","acc","cd","repeatValues","_initChildren","row_1","column_1","name_1","childRepeat","replaceRepeaterInFieldDef","isRepeatRef","noSuchRepeatedValue","replaceRepeater","mapping","replaceRepeaterInEncoding","defaultScaleResolve","independentScaleMeansIndependentGuide","domainRaw","otherScaleProps","assembleScaleRange","isRawSelectionDomain","selectionScaleDomain","isDataRefDomain","mergeDomains","r0","r1","isVgSignalRef","ScaleComponent","typeWithExplicit","parseScaleDomain","parseUnitScaleDomain","parseNonUnitScaleDomain","specifiedScales","localScaleComponents","specifiedScale","specifiedDomain","parseDomainForChannel","localScaleCmpt","isSelectionDomain","SELECTION_DOMAIN","childComponent","normalizeUnaggregatedDomain","scaleConfig","canUseUnaggregatedDomain","valid","reason","useUnaggregatedDomain","parseSingleChannelDomain","conflictedDomain","domainSort","unaggregatedDomainWithLogScale","unaggregateDomainWithNonSharedDomainOp","unaggregateDomainHasNoEffectForRawField","uniqueDomains","unique","sorts","sort_2","MORE_THAN_ONE_SORT","onlySimpleSorts","domainSortDropped","filteredSorts","allData","parseScaleCore","parseUnitScaleCore","parseNonUnitScaleCore","scaleComponents","isConditionalDef","specifiedScaleType","sType","scaleTypeWithExplicitIndex","scaleType_1","childScaleType","scaleCompatible","scaleTypeTieBreaker","childScale","properties_1","range_1","NON_TYPE_DOMAIN_RANGE_VEGA_SCALE_PROPERTIES_1","NON_TYPE_DOMAIN_RANGE_VEGA_SCALE_PROPERTIES","parseScaleProperty","parseScaleRange","tieBreakByComparing","st1","st2","scaleTypePrecedence","parseUnitScaleProperty","parseNonUnitScaleProperty","mergedScaleCmpt","supportedByScaleType","scaleTypeSupportProperty","channelIncompatability","channelScalePropertyIncompatability","scalePropertyNotWorkWithScaleType","copyKeyFromObject","getDefaultValue","scaleCmpt","nice","round","valueWithExplicit","childValueWithExplicit","smallestUnit","pointPadding","bandPaddingInner","bandPaddingOuter","hasCustomDomain","parseUnitScaleRange","specifiedSize","xyRangeSteps","getXYRangeStep","rangeWithExplicit","parseRangeForChannel","xRange","yRange","noRangeStep","RANGE_PROPERTIES_1","RANGE_PROPERTIES","parseScheme","rangeStepDropped","defaultRange","scheme","isExtendedScheme","sizeRangeMin","sizeRangeMax","minOpacity","maxOpacity","minBandSize","minStrokeWidth","minFontSize","minSize","maxBandSize","minXYRangeStep","maxStrokeWidth","maxFontSize","maxSize","pointStep","min","defaultType","specifiedRangeStep","discreteToContinuousType","discreteChannelCannotEncode","isDiscreteByDefault","invalidFieldType","fieldDefMatchScaleType","specifiedType","Type","scale_2","BIN_LINEAR","BIN_ORDINAL","POW","SQRT","QUANTILE","QUANTIZE","LINEAR","defaultScaleType","scaleTypeNotWorkWithFieldDef","scaleTypeNotWorkWithChannel","channelSignals","selCmpt","vname","channelSignalName","dname","hasScales","scales_1","scaleStr","coord","on","events","SCALE_TRIGGER","cb","log_1","BRUSH","interval","intervals","tupleTriggers","scaleTriggers","translate","filterExpr_1","project","cs","toNum","TUPLE","unitName","modifyExpr","spatialProjections","xi","yi","store","STORE","fillOpacity","vgStroke","enter","nearest_1","multi","proj","datum","encodings","force","assembleUnitSelectionMarks","selMarks","forEachSelection","selCompiler","forEachTransform","txCompiler","selections","name_3","compiler","single_1","multi_1","interval_1","getFacetModel","vega_event_selector_1","MODIFY","parseUnitSelection","selDefs","selCmpts","selectionConfig","selDef","cfg","assembleUnitSelectionSignals","facetModel","name_2","unshift","assembleTopLevelSignals","needsUnit","topLevelSignals","assembleUnitSelectionData","dfnode","stores","predicateStr","logicalExpr","tunode","selDomain","identifier","single","hasSignal","inputBindings","sgname","nearest","index","isPathgroup","exists","cellDef","strokeWidth","isVoronoi","channels","timeUnits","tuField","cannotProjectOnChannelWithoutField","projection","scaleBindings","bound","toggle","tpl","inputs_1","project_1","toggle_1","translate_1","zoom_1","compilers","zoom","inputs","onDelta","anchor","ANCHOR","delta","DELTA","sizeSg","sign","base","sx","sy","propertyOf","mergeConflictingProperty","implicit","copyKeyFromSplit","makeExplicit","diff","tieBreaker","vlEncoding","mark_2","specifiedAxes","specifiedLegends","isMarkDef","normalizeEncoding","initScales","initAxes","initLegend","_axis","axisSpec","_legend","toSpec","excludeConfig","excludeData","isBoxPlotDef","filterUnsupportedChannels","newEncoding","supportedChannels","BOXPLOT","boxOrient","boxContinousAxis","continuousAxisChannelDef","continuousAxis","continuousAxisWithoutAggregate","boxParams","kIQRScalar","isMinMax","postAggregateCalculates","encodingWithoutContinuousAxis","encoding_2","transformedField","field_2","BOXPLOT_STYLES","VL_ONLY_BOXPLOT_CONFIG_PROPERTY_INDEX","box","normalizeBoxPlot","outerSpec","nonPositionEncodingWithoutColorSize","sizeMixins","continuousAxisScaleAndAxis","_e","ERRORBAR","normalizeErrorBar","encodingWithoutSize","encodingWithoutX2Y2","encodingWithoutX_X2_Y_Y2","add","normalizer","normalizerRegistry","boxplot_1","errorbar_1","COMPOSITE_MARK_STYLES","VL_ONLY_COMPOSITE_MARK_SPECIFIC_CONFIG_PROPERTY_INDEX","redirectConfig","toProp","propConfig","compositemark_1","index_1","guide_1","defaultCellConfig","defaultConfig","countTitle","defaultMarkConfig","defaultBarConfig","defaultTickConfig","boxWhisker","boxMid","domainColor","tickColor","axisX","axisY","axisLeft","axisRight","axisTop","axisBottom","axisBand","defaultLegendConfig","mergeDeep","MARK_STYLES","PRIMITIVE_MARKS","VL_ONLY_CONFIG_PROPERTIES","VL_ONLY_ALL_MARK_SPECIFIC_CONFIG_PROPERTY_INDEX","VL_ONLY_MARK_SPECIFIC_CONFIG_PROPERTY_INDEX","VL_ONLY_CONFIG_PROPERTIES_1","VL_ONLY_GUIDE_CONFIG_1","VL_ONLY_GUIDE_CONFIG","VL_ONLY_GUIDE_CONFIG_2","VL_ONLY_MARK_CONFIG_PROPERTIES_1","VL_ONLY_MARK_CONFIG_PROPERTIES","MARK_STYLES_1","VL_ONLY_MARK_CONFIG_PROPERTIES_2","vlOnlyMarkSpecificConfigs","_f","vlOnlyMarkSpecificConfigs_1","normalizeQuarter","invalidTimeUnit","normalizeMonth","lowerM","toLowerCase","monthIndex","MONTHS","shortM","substr","shortMonthIndex","SHORT_MONTHS","normalizeDay","lowerD","dayIndex","DAYS","shortD","shortDayIndex","SHORT_DAYS","SUNDAY_YEAR","year","quarter","month","date","day","hours","minutes","seconds","milliseconds","units","droppedDay","utc","hasConditionFieldDef","normalizedEncoding","fieldDefs","normalizeFieldDef","isRanged","arr","isDiscrete","isCount","fieldDefWithoutAggregate","invalidAggregate","fullType","getFullName","invalidFieldTypeForCountAggregate","invalidFieldTypeForBin","newType","emptyOrInvalidFieldType","channelCompatibility","compatible","warning","maxbins","facetChannelShouldBeDiscrete","COMPATIBLE","nofn","toUpperCase","isSelectionFilter","in","valueExpr","isSingleTimeUnit","datetime","filterOp","lower","upper","compositeMark","compile_1","validate","current","LocalLogger","warns","infos","debugs","runLocalLogger","wrap","local","ancestor","markOrFacet","when","original","actual","CANNOT_UNION_CUSTOM_DOMAIN_WITH_FIELD_DOMAIN","cannotUseScalePropertyWithNonColor","CANNOT_USE_RANGE_WITH_POSITION","positionChannel","propName","UNABLE_TO_MERGE_DOMAINS","cannotStackRangedMark","cannotStackNonLinearScale","cannotStackNonSummativeAggregate","dayReplacedWithDate","fullTimeUnit","isLogicalOr","or","isLogicalAnd","and","isLogicalNot","not","subop","Mark","PRIMITIVE_MARK_INDEX","isPrimitiveMark","STROKE_CONFIG","FILL_CONFIG","DISCRETE_DOMAIN_INDEX","isContinuousToContinuous","CONTINUOUS_TO_CONTINUOUS_INDEX","SEQUENTIAL","THRESHOLD","SCALE_CATEGORY_INDEX","linear","pow","sqrt","bin-linear","time","sequential","ordinal","bin-ordinal","getScaleCategory","scaleType1","scaleType2","SCALE_PRECEDENCE_INDEX","CONTINUOUS_TO_CONTINUOUS_SCALES","CONTINUOUS_DOMAIN_SCALES","CONTINUOUS_DOMAIN_INDEX","DISCRETE_DOMAIN_SCALES","BIN_SCALES_INDEX","TIME_SCALE_TYPES","facetSpacing","shapes","SCALE_PROPERTIES","isHConcatSpec","normalizeFacet","normalizeLayer","normalizeRepeat","normalizeVConcat","normalizeHConcat","normalizeFacetedUnit","normalizeNonFacetUnit","subspec","rest","isNonFacetUnitSpecWithPrimitiveMark","normalizeRangedUnit","overlayConfig","overlay","overlayWithLine","overlayWithPoint","normalizeOverlay","hasX","hasY","hasX2","hasY2","normalizedSpec","stackProps","overlayEncoding","stackFieldChannel","accumulate","dict","pureFieldDef","fieldDefIndex","isStacked","STACKABLE_MARKS","STACK_BY_DEFAULT_MARKS","stackConfig","sc","hasXField","hasYField","xIsAggregate","fieldChannelAggregate","fieldChannelScale","stackOffset","containsTimeUnit","TimeUnit","SECONDS","isUTCTimeUnit","YEAR","MONTH","DAY","DATE","HOURS","MINUTES","MILLISECONDS","YEARMONTH","YEARMONTHDATE","YEARMONTHDATEHOURS","YEARMONTHDATEHOURSMINUTES","YEARMONTHDATEHOURSMINUTESSECONDS","MONTHDATE","HOURSMINUTES","HOURSMINUTESSECONDS","MINUTESSECONDS","SECONDSMILLISECONDS","QUARTER","YEARQUARTER","QUARTERMONTH","YEARQUARTERMONTH","UTCYEAR","UTCMONTH","UTCDAY","UTCDATE","UTCHOURS","UTCMINUTES","UTCSECONDS","UTCMILLISECONDS","UTCYEARMONTH","UTCYEARMONTHDATE","UTCYEARMONTHDATEHOURS","UTCYEARMONTHDATEHOURSMINUTES","UTCYEARMONTHDATEHOURSMINUTESSECONDS","UTCMONTHDATE","UTCHOURSMINUTES","UTCHOURSMINUTESSECONDS","UTCMINUTESSECONDS","UTCSECONDSMILLISECONDS","UTCQUARTER","UTCYEARQUARTER","UTCQUARTERMONTH","UTCYEARQUARTERMONTH","SINGLE_TIMEUNITS","SINGLE_TIMEUNIT_INDEX","convert","unit","singleUnit","setFullYear","getFullYear","setMonth","floor","getMonth","setDate","getDate","setHours","getHours","setMinutes","getMinutes","setSeconds","getSeconds","setMilliseconds","getMilliseconds","MULTI_TIMEUNITS","MULTI_TIMEUNIT_INDEX","isMultiTimeUnit","TIMEUNITS","func","dateExpr","dateComponents","hasYear","timeComponents","dateTimeComponents","titleConfig","titleMarkConfig","TOP_LEVEL_PROPERTIES","excludedItems","dest","src","src_1","deepMerge_","vega_util_2","pick","copy","omit","union","arrays","results","values_1","_vals","alphanumericS","match","DEFAULT_REQUIRED_CHANNEL_MAP","DEFAULT_SUPPORTED_CHANNEL_TYPE","getEncodingMappingError","requiredChannelMap","supportedChannelMap","requiredChannels","isDataRefUnionedDomain","isFieldRefUnionDomain","isSignalRefDomain"],"mappings":"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","file":"build/vega-lite.min.js.map","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","var json = typeof JSON !== 'undefined' ? JSON : require('jsonify');\n\nmodule.exports = function (obj, opts) {\n    if (!opts) opts = {};\n    if (typeof opts === 'function') opts = { cmp: opts };\n    var space = opts.space || '';\n    if (typeof space === 'number') space = Array(space+1).join(' ');\n    var cycles = (typeof opts.cycles === 'boolean') ? opts.cycles : false;\n    var replacer = opts.replacer || function(key, value) { return value; };\n\n    var cmp = opts.cmp && (function (f) {\n        return function (node) {\n            return function (a, b) {\n                var aobj = { key: a, value: node[a] };\n                var bobj = { key: b, value: node[b] };\n                return f(aobj, bobj);\n            };\n        };\n    })(opts.cmp);\n\n    var seen = [];\n    return (function stringify (parent, key, node, level) {\n        var indent = space ? ('\\n' + new Array(level + 1).join(space)) : '';\n        var colonSeparator = space ? ': ' : ':';\n\n        if (node && node.toJSON && typeof node.toJSON === 'function') {\n            node = node.toJSON();\n        }\n\n        node = replacer.call(parent, key, node);\n\n        if (node === undefined) {\n            return;\n        }\n        if (typeof node !== 'object' || node === null) {\n            return json.stringify(node);\n        }\n        if (isArray(node)) {\n            var out = [];\n            for (var i = 0; i < node.length; i++) {\n                var item = stringify(node, i, node[i], level+1) || json.stringify(null);\n                out.push(indent + space + item);\n            }\n            return '[' + out.join(',') + indent + ']';\n        }\n        else {\n            if (seen.indexOf(node) !== -1) {\n                if (cycles) return json.stringify('__cycle__');\n                throw new TypeError('Converting circular structure to JSON');\n            }\n            else seen.push(node);\n\n            var keys = objectKeys(node).sort(cmp && cmp(node));\n            var out = [];\n            for (var i = 0; i < keys.length; i++) {\n                var key = keys[i];\n                var value = stringify(node, key, node[key], level+1);\n\n                if(!value) continue;\n\n                var keyValue = json.stringify(key)\n                    + colonSeparator\n                    + value;\n                ;\n                out.push(indent + space + keyValue);\n            }\n            seen.splice(seen.indexOf(node), 1);\n            return '{' + out.join(',') + indent + '}';\n        }\n    })({ '': obj }, '', obj, 0);\n};\n\nvar isArray = Array.isArray || function (x) {\n    return {}.toString.call(x) === '[object Array]';\n};\n\nvar objectKeys = Object.keys || function (obj) {\n    var has = Object.prototype.hasOwnProperty || function () { return true };\n    var keys = [];\n    for (var key in obj) {\n        if (has.call(obj, key)) keys.push(key);\n    }\n    return keys;\n};\n","exports.parse = require('./lib/parse');\nexports.stringify = require('./lib/stringify');\n","var at, // The index of the current character\n    ch, // The current character\n    escapee = {\n        '\"':  '\"',\n        '\\\\': '\\\\',\n        '/':  '/',\n        b:    '\\b',\n        f:    '\\f',\n        n:    '\\n',\n        r:    '\\r',\n        t:    '\\t'\n    },\n    text,\n\n    error = function (m) {\n        // Call error when something is wrong.\n        throw {\n            name:    'SyntaxError',\n            message: m,\n            at:      at,\n            text:    text\n        };\n    },\n    \n    next = function (c) {\n        // If a c parameter is provided, verify that it matches the current character.\n        if (c && c !== ch) {\n            error(\"Expected '\" + c + \"' instead of '\" + ch + \"'\");\n        }\n        \n        // Get the next character. When there are no more characters,\n        // return the empty string.\n        \n        ch = text.charAt(at);\n        at += 1;\n        return ch;\n    },\n    \n    number = function () {\n        // Parse a number value.\n        var number,\n            string = '';\n        \n        if (ch === '-') {\n            string = '-';\n            next('-');\n        }\n        while (ch >= '0' && ch <= '9') {\n            string += ch;\n            next();\n        }\n        if (ch === '.') {\n            string += '.';\n            while (next() && ch >= '0' && ch <= '9') {\n                string += ch;\n            }\n        }\n        if (ch === 'e' || ch === 'E') {\n            string += ch;\n            next();\n            if (ch === '-' || ch === '+') {\n                string += ch;\n                next();\n            }\n            while (ch >= '0' && ch <= '9') {\n                string += ch;\n                next();\n            }\n        }\n        number = +string;\n        if (!isFinite(number)) {\n            error(\"Bad number\");\n        } else {\n            return number;\n        }\n    },\n    \n    string = function () {\n        // Parse a string value.\n        var hex,\n            i,\n            string = '',\n            uffff;\n        \n        // When parsing for string values, we must look for \" and \\ characters.\n        if (ch === '\"') {\n            while (next()) {\n                if (ch === '\"') {\n                    next();\n                    return string;\n                } else if (ch === '\\\\') {\n                    next();\n                    if (ch === 'u') {\n                        uffff = 0;\n                        for (i = 0; i < 4; i += 1) {\n                            hex = parseInt(next(), 16);\n                            if (!isFinite(hex)) {\n                                break;\n                            }\n                            uffff = uffff * 16 + hex;\n                        }\n                        string += String.fromCharCode(uffff);\n                    } else if (typeof escapee[ch] === 'string') {\n                        string += escapee[ch];\n                    } else {\n                        break;\n                    }\n                } else {\n                    string += ch;\n                }\n            }\n        }\n        error(\"Bad string\");\n    },\n\n    white = function () {\n\n// Skip whitespace.\n\n        while (ch && ch <= ' ') {\n            next();\n        }\n    },\n\n    word = function () {\n\n// true, false, or null.\n\n        switch (ch) {\n        case 't':\n            next('t');\n            next('r');\n            next('u');\n            next('e');\n            return true;\n        case 'f':\n            next('f');\n            next('a');\n            next('l');\n            next('s');\n            next('e');\n            return false;\n        case 'n':\n            next('n');\n            next('u');\n            next('l');\n            next('l');\n            return null;\n        }\n        error(\"Unexpected '\" + ch + \"'\");\n    },\n\n    value,  // Place holder for the value function.\n\n    array = function () {\n\n// Parse an array value.\n\n        var array = [];\n\n        if (ch === '[') {\n            next('[');\n            white();\n            if (ch === ']') {\n                next(']');\n                return array;   // empty array\n            }\n            while (ch) {\n                array.push(value());\n                white();\n                if (ch === ']') {\n                    next(']');\n                    return array;\n                }\n                next(',');\n                white();\n            }\n        }\n        error(\"Bad array\");\n    },\n\n    object = function () {\n\n// Parse an object value.\n\n        var key,\n            object = {};\n\n        if (ch === '{') {\n            next('{');\n            white();\n            if (ch === '}') {\n                next('}');\n                return object;   // empty object\n            }\n            while (ch) {\n                key = string();\n                white();\n                next(':');\n                if (Object.hasOwnProperty.call(object, key)) {\n                    error('Duplicate key \"' + key + '\"');\n                }\n                object[key] = value();\n                white();\n                if (ch === '}') {\n                    next('}');\n                    return object;\n                }\n                next(',');\n                white();\n            }\n        }\n        error(\"Bad object\");\n    };\n\nvalue = function () {\n\n// Parse a JSON value. It could be an object, an array, a string, a number,\n// or a word.\n\n    white();\n    switch (ch) {\n    case '{':\n        return object();\n    case '[':\n        return array();\n    case '\"':\n        return string();\n    case '-':\n        return number();\n    default:\n        return ch >= '0' && ch <= '9' ? number() : word();\n    }\n};\n\n// Return the json_parse function. It will have access to all of the above\n// functions and variables.\n\nmodule.exports = function (source, reviver) {\n    var result;\n    \n    text = source;\n    at = 0;\n    ch = ' ';\n    result = value();\n    white();\n    if (ch) {\n        error(\"Syntax error\");\n    }\n\n    // If there is a reviver function, we recursively walk the new structure,\n    // passing each name/value pair to the reviver function for possible\n    // transformation, starting with a temporary root object that holds the result\n    // in an empty key. If there is not a reviver function, we simply return the\n    // result.\n\n    return typeof reviver === 'function' ? (function walk(holder, key) {\n        var k, v, value = holder[key];\n        if (value && typeof value === 'object') {\n            for (k in value) {\n                if (Object.prototype.hasOwnProperty.call(value, k)) {\n                    v = walk(value, k);\n                    if (v !== undefined) {\n                        value[k] = v;\n                    } else {\n                        delete value[k];\n                    }\n                }\n            }\n        }\n        return reviver.call(holder, key, value);\n    }({'': result}, '')) : result;\n};\n","var cx = /[\\u0000\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\n    escapable = /[\\\\\\\"\\x00-\\x1f\\x7f-\\x9f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\n    gap,\n    indent,\n    meta = {    // table of character substitutions\n        '\\b': '\\\\b',\n        '\\t': '\\\\t',\n        '\\n': '\\\\n',\n        '\\f': '\\\\f',\n        '\\r': '\\\\r',\n        '\"' : '\\\\\"',\n        '\\\\': '\\\\\\\\'\n    },\n    rep;\n\nfunction quote(string) {\n    // If the string contains no control characters, no quote characters, and no\n    // backslash characters, then we can safely slap some quotes around it.\n    // Otherwise we must also replace the offending characters with safe escape\n    // sequences.\n    \n    escapable.lastIndex = 0;\n    return escapable.test(string) ? '\"' + string.replace(escapable, function (a) {\n        var c = meta[a];\n        return typeof c === 'string' ? c :\n            '\\\\u' + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);\n    }) + '\"' : '\"' + string + '\"';\n}\n\nfunction str(key, holder) {\n    // Produce a string from holder[key].\n    var i,          // The loop counter.\n        k,          // The member key.\n        v,          // The member value.\n        length,\n        mind = gap,\n        partial,\n        value = holder[key];\n    \n    // If the value has a toJSON method, call it to obtain a replacement value.\n    if (value && typeof value === 'object' &&\n            typeof value.toJSON === 'function') {\n        value = value.toJSON(key);\n    }\n    \n    // If we were called with a replacer function, then call the replacer to\n    // obtain a replacement value.\n    if (typeof rep === 'function') {\n        value = rep.call(holder, key, value);\n    }\n    \n    // What happens next depends on the value's type.\n    switch (typeof value) {\n        case 'string':\n            return quote(value);\n        \n        case 'number':\n            // JSON numbers must be finite. Encode non-finite numbers as null.\n            return isFinite(value) ? String(value) : 'null';\n        \n        case 'boolean':\n        case 'null':\n            // If the value is a boolean or null, convert it to a string. Note:\n            // typeof null does not produce 'null'. The case is included here in\n            // the remote chance that this gets fixed someday.\n            return String(value);\n            \n        case 'object':\n            if (!value) return 'null';\n            gap += indent;\n            partial = [];\n            \n            // Array.isArray\n            if (Object.prototype.toString.apply(value) === '[object Array]') {\n                length = value.length;\n                for (i = 0; i < length; i += 1) {\n                    partial[i] = str(i, value) || 'null';\n                }\n                \n                // Join all of the elements together, separated with commas, and\n                // wrap them in brackets.\n                v = partial.length === 0 ? '[]' : gap ?\n                    '[\\n' + gap + partial.join(',\\n' + gap) + '\\n' + mind + ']' :\n                    '[' + partial.join(',') + ']';\n                gap = mind;\n                return v;\n            }\n            \n            // If the replacer is an array, use it to select the members to be\n            // stringified.\n            if (rep && typeof rep === 'object') {\n                length = rep.length;\n                for (i = 0; i < length; i += 1) {\n                    k = rep[i];\n                    if (typeof k === 'string') {\n                        v = str(k, value);\n                        if (v) {\n                            partial.push(quote(k) + (gap ? ': ' : ':') + v);\n                        }\n                    }\n                }\n            }\n            else {\n                // Otherwise, iterate through all of the keys in the object.\n                for (k in value) {\n                    if (Object.prototype.hasOwnProperty.call(value, k)) {\n                        v = str(k, value);\n                        if (v) {\n                            partial.push(quote(k) + (gap ? ': ' : ':') + v);\n                        }\n                    }\n                }\n            }\n            \n        // Join all of the member texts together, separated with commas,\n        // and wrap them in braces.\n\n        v = partial.length === 0 ? '{}' : gap ?\n            '{\\n' + gap + partial.join(',\\n' + gap) + '\\n' + mind + '}' :\n            '{' + partial.join(',') + '}';\n        gap = mind;\n        return v;\n    }\n}\n\nmodule.exports = function (value, replacer, space) {\n    var i;\n    gap = '';\n    indent = '';\n    \n    // If the space parameter is a number, make an indent string containing that\n    // many spaces.\n    if (typeof space === 'number') {\n        for (i = 0; i < space; i += 1) {\n            indent += ' ';\n        }\n    }\n    // If the space parameter is a string, it will be used as the indent string.\n    else if (typeof space === 'string') {\n        indent = space;\n    }\n\n    // If there is a replacer, it must be a function or an array.\n    // Otherwise, throw an error.\n    rep = replacer;\n    if (replacer && typeof replacer !== 'function'\n    && (typeof replacer !== 'object' || typeof replacer.length !== 'number')) {\n        throw new Error('JSON.stringify');\n    }\n    \n    // Make a fake root object containing our value under the key of ''.\n    // Return the result of stringifying the value.\n    return str('', {'': value});\n};\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global global, define, System, Reflect, Promise */\r\nvar __extends;\r\nvar __assign;\r\nvar __rest;\r\nvar __decorate;\r\nvar __param;\r\nvar __metadata;\r\nvar __awaiter;\r\nvar __generator;\r\nvar __exportStar;\r\nvar __values;\r\nvar __read;\r\nvar __spread;\r\nvar __await;\r\nvar __asyncGenerator;\r\nvar __asyncDelegator;\r\nvar __asyncValues;\r\n(function (factory) {\r\n    var root = typeof global === \"object\" ? global : typeof self === \"object\" ? self : typeof this === \"object\" ? this : {};\r\n    if (typeof define === \"function\" && define.amd) {\r\n        define(\"tslib\", [\"exports\"], function (exports) { factory(createExporter(root, createExporter(exports))); });\r\n    }\r\n    else if (typeof module === \"object\" && typeof module.exports === \"object\") {\r\n        factory(createExporter(root, createExporter(module.exports)));\r\n    }\r\n    else {\r\n        factory(createExporter(root));\r\n    }\r\n    function createExporter(exports, previous) {\r\n        return function (id, v) { return exports[id] = previous ? previous(id, v) : v; };\r\n    }\r\n})\r\n(function (exporter) {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\n    __extends = function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n\r\n    __assign = Object.assign || function (t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n\r\n    __rest = function (s, e) {\r\n        var t = {};\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n            t[p] = s[p];\r\n        if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n                t[p[i]] = s[p[i]];\r\n        return t;\r\n    };\r\n\r\n    __decorate = function (decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    };\r\n\r\n    __param = function (paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    };\r\n\r\n    __metadata = function (metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    };\r\n\r\n    __awaiter = function (thisArg, _arguments, P, generator) {\r\n        return new (P || (P = Promise))(function (resolve, reject) {\r\n            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n            function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n            function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n        });\r\n    };\r\n\r\n    __generator = function (thisArg, body) {\r\n        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n        function verb(n) { return function (v) { return step([n, v]); }; }\r\n        function step(op) {\r\n            if (f) throw new TypeError(\"Generator is already executing.\");\r\n            while (_) try {\r\n                if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n                if (y = 0, t) op = [0, t.value];\r\n                switch (op[0]) {\r\n                    case 0: case 1: t = op; break;\r\n                    case 4: _.label++; return { value: op[1], done: false };\r\n                    case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                    case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                    default:\r\n                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                        if (t[2]) _.ops.pop();\r\n                        _.trys.pop(); continue;\r\n                }\r\n                op = body.call(thisArg, _);\r\n            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n        }\r\n    };\r\n\r\n    __exportStar = function (m, exports) {\r\n        for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n    };\r\n\r\n    __values = function (o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    };\r\n\r\n    __read = function (o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    };\r\n\r\n    __spread = function () {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    };\r\n\r\n    __await = function (v) {\r\n        return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n    };\r\n\r\n    __asyncGenerator = function (thisArg, _arguments, generator) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n        return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n        function fulfill(value) { resume(\"next\", value); }\r\n        function reject(value) { resume(\"throw\", value); }\r\n        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n    };\r\n\r\n    __asyncDelegator = function (o) {\r\n        var i, p;\r\n        return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n        function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n    };\r\n\r\n    __asyncValues = function (o) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var m = o[Symbol.asyncIterator];\r\n        return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n    };\r\n\r\n    exporter(\"__extends\", __extends);\r\n    exporter(\"__assign\", __assign);\r\n    exporter(\"__rest\", __rest);\r\n    exporter(\"__decorate\", __decorate);\r\n    exporter(\"__param\", __param);\r\n    exporter(\"__metadata\", __metadata);\r\n    exporter(\"__awaiter\", __awaiter);\r\n    exporter(\"__generator\", __generator);\r\n    exporter(\"__exportStar\", __exportStar);\r\n    exporter(\"__values\", __values);\r\n    exporter(\"__read\", __read);\r\n    exporter(\"__spread\", __spread);\r\n    exporter(\"__await\", __await);\r\n    exporter(\"__asyncGenerator\", __asyncGenerator);\r\n    exporter(\"__asyncDelegator\", __asyncDelegator);\r\n    exporter(\"__asyncValues\", __asyncValues);\r\n});","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.vega = global.vega || {})));\n}(this, (function (exports) { 'use strict';\n\n/**\n * Parse an event selector string.\n * Returns an array of event stream definitions.\n */\nvar eventSelector = function(selector, source, marks) {\n  DEFAULT_SOURCE = source || VIEW;\n  MARKS = marks || DEFAULT_MARKS;\n  return parseMerge(selector.trim()).map(parseSelector);\n};\n\nvar VIEW    = 'view';\nvar LBRACK  = '[';\nvar RBRACK  = ']';\nvar LBRACE  = '{';\nvar RBRACE  = '}';\nvar COLON   = ':';\nvar COMMA   = ',';\nvar NAME    = '@';\nvar GT      = '>';\nvar ILLEGAL = /[[\\]{}]/;\nvar DEFAULT_SOURCE;\nvar MARKS;\nvar DEFAULT_MARKS = {\n      '*': 1,\n      arc: 1,\n      area: 1,\n      group: 1,\n      image: 1,\n      line: 1,\n      path: 1,\n      rect: 1,\n      rule: 1,\n      shape: 1,\n      symbol: 1,\n      text: 1,\n      trail: 1\n    };\n\nfunction isMarkType(type) {\n  return MARKS.hasOwnProperty(type);\n}\n\nfunction find(s, i, endChar, pushChar, popChar) {\n  var count = 0,\n      n = s.length,\n      c;\n  for (; i<n; ++i) {\n    c = s[i];\n    if (!count && c === endChar) return i;\n    else if (popChar && popChar.indexOf(c) >= 0) --count;\n    else if (pushChar && pushChar.indexOf(c) >= 0) ++count;\n  }\n  return i;\n}\n\nfunction parseMerge(s) {\n  var output = [],\n      start = 0,\n      n = s.length,\n      i = 0;\n\n  while (i < n) {\n    i = find(s, i, COMMA, LBRACK + LBRACE, RBRACK + RBRACE);\n    output.push(s.substring(start, i).trim());\n    start = ++i;\n  }\n\n  if (output.length === 0) {\n    throw 'Empty event selector: ' + s;\n  }\n  return output;\n}\n\nfunction parseSelector(s) {\n  return s[0] === '['\n    ? parseBetween(s)\n    : parseStream(s);\n}\n\nfunction parseBetween(s) {\n  var n = s.length,\n      i = 1,\n      b, stream;\n\n  i = find(s, i, RBRACK, LBRACK, RBRACK);\n  if (i === n) {\n    throw 'Empty between selector: ' + s;\n  }\n\n  b = parseMerge(s.substring(1, i));\n  if (b.length !== 2) {\n    throw 'Between selector must have two elements: ' + s;\n  }\n\n  s = s.slice(i + 1).trim();\n  if (s[0] !== GT) {\n    throw 'Expected \\'>\\' after between selector: ' + s;\n  }\n\n  b = b.map(parseSelector);\n\n  stream = parseSelector(s.slice(1).trim());\n  if (stream.between) {\n    return {\n      between: b,\n      stream: stream\n    };\n  } else {\n    stream.between = b;\n  }\n\n  return stream;\n}\n\nfunction parseStream(s) {\n  var stream = {source: DEFAULT_SOURCE},\n      source = [],\n      throttle = [0, 0],\n      markname = 0,\n      start = 0,\n      n = s.length,\n      i = 0, j,\n      filter;\n\n  // extract throttle from end\n  if (s[n-1] === RBRACE) {\n    i = s.lastIndexOf(LBRACE);\n    if (i >= 0) {\n      try {\n        throttle = parseThrottle(s.substring(i+1, n-1));\n      } catch (e) {\n        throw 'Invalid throttle specification: ' + s;\n      }\n      s = s.slice(0, i).trim();\n      n = s.length;\n    } else throw 'Unmatched right brace: ' + s;\n    i = 0;\n  }\n\n  if (!n) throw s;\n\n  // set name flag based on first char\n  if (s[0] === NAME) markname = ++i;\n\n  // extract first part of multi-part stream selector\n  j = find(s, i, COLON);\n  if (j < n) {\n    source.push(s.substring(start, j).trim());\n    start = i = ++j;\n  }\n\n  // extract remaining part of stream selector\n  i = find(s, i, LBRACK);\n  if (i === n) {\n    source.push(s.substring(start, n).trim());\n  } else {\n    source.push(s.substring(start, i).trim());\n    filter = [];\n    start = ++i;\n    if (start === n) throw 'Unmatched left bracket: ' + s;\n  }\n\n  // extract filters\n  while (i < n) {\n    i = find(s, i, RBRACK);\n    if (i === n) throw 'Unmatched left bracket: ' + s;\n    filter.push(s.substring(start, i).trim());\n    if (i < n-1 && s[++i] !== LBRACK) throw 'Expected left bracket: ' + s;\n    start = ++i;\n  }\n\n  // marshall event stream specification\n  if (!(n = source.length) || ILLEGAL.test(source[n-1])) {\n    throw 'Invalid event selector: ' + s;\n  }\n\n  if (n > 1) {\n    stream.type = source[1];\n    if (markname) {\n      stream.markname = source[0].slice(1);\n    } else if (isMarkType(source[0])) {\n      stream.marktype = source[0];\n    } else {\n      stream.source = source[0];\n    }\n  } else {\n    stream.type = source[0];\n  }\n  if (stream.type.slice(-1) === '!') {\n    stream.consume = true;\n    stream.type = stream.type.slice(0, -1);\n  }\n  if (filter != null) stream.filter = filter;\n  if (throttle[0]) stream.throttle = throttle[0];\n  if (throttle[1]) stream.debounce = throttle[1];\n\n  return stream;\n}\n\nfunction parseThrottle(s) {\n  var a = s.split(COMMA);\n  if (!s.length || a.length > 2) throw s;\n  return a.map(function(_) {\n    var x = +_;\n    if (x !== x) throw s;\n    return x;\n  });\n}\n\nexports.selector = eventSelector;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.vega = global.vega || {})));\n}(this, (function (exports) { 'use strict';\n\nvar accessor = function(fn, fields, name) {\n  fn.fields = fields || [];\n  fn.fname = name;\n  return fn;\n};\n\nfunction accessorName(fn) {\n  return fn == null ? null : fn.fname;\n}\n\nfunction accessorFields(fn) {\n  return fn == null ? null : fn.fields;\n}\n\nvar error = function(message) {\n  throw Error(message);\n};\n\nvar splitAccessPath = function(p) {\n  var path = [],\n      q = null,\n      b = 0,\n      n = p.length,\n      s = '',\n      i, j, c;\n\n  p = p + '';\n\n  function push() {\n    path.push(s + p.substring(i, j));\n    s = '';\n    i = j + 1;\n  }\n\n  for (i=j=0; j<n; ++j) {\n    c = p[j];\n    if (c === '\\\\') {\n      s += p.substring(i, j);\n      i = ++j;\n    } else if (c === q) {\n      push();\n      q = null;\n      b = -1;\n    } else if (q) {\n      continue;\n    } else if (i === b && c === '\"') {\n      i = j + 1;\n      q = c;\n    } else if (i === b && c === \"'\") {\n      i = j + 1;\n      q = c;\n    } else if (c === '.' && !b) {\n      if (j > i) {\n        push();\n      } else {\n        i = j + 1;\n      }\n    } else if (c === '[') {\n      if (j > i) push();\n      b = i = j + 1;\n    } else if (c === ']') {\n      if (!b) error('Access path missing open bracket: ' + p);\n      if (b > 0) push();\n      b = 0;\n      i = j + 1;\n    }\n  }\n\n  if (b) error('Access path missing closing bracket: ' + p);\n  if (q) error('Access path missing closing quote: ' + p);\n\n  if (j > i) {\n    j++;\n    push();\n  }\n\n  return path;\n};\n\nvar isArray = Array.isArray;\n\nvar isObject = function(_) {\n  return _ === Object(_);\n};\n\nvar isString = function(_) {\n  return typeof _ === 'string';\n};\n\nfunction $(x) {\n  return isArray(x) ? '[' + x.map($) + ']'\n    : isObject(x) || isString(x) ?\n      // Output valid JSON and JS source strings.\n      // See http://timelessrepo.com/json-isnt-a-javascript-subset\n      JSON.stringify(x).replace('\\u2028','\\\\u2028').replace('\\u2029', '\\\\u2029')\n    : x;\n}\n\nvar field = function(field, name) {\n  var path = splitAccessPath(field),\n      code = 'return _[' + path.map($).join('][') + '];';\n\n  return accessor(\n    Function('_', code),\n    [(field = path.length===1 ? path[0] : field)],\n    name || field\n  );\n};\n\nvar empty = [];\n\nvar id = field('id');\n\nvar identity = accessor(function(_) { return _; }, empty, 'identity');\n\nvar zero = accessor(function() { return 0; }, empty, 'zero');\n\nvar one = accessor(function() { return 1; }, empty, 'one');\n\nvar truthy = accessor(function() { return true; }, empty, 'true');\n\nvar falsy = accessor(function() { return false; }, empty, 'false');\n\nfunction log(method, level, input) {\n  var args = [level].concat([].slice.call(input));\n  console[method].apply(console, args); // eslint-disable-line no-console\n}\n\nvar None  = 0;\nvar Error$1 = 1;\nvar Warn  = 2;\nvar Info  = 3;\nvar Debug = 4;\n\nvar logger = function(_) {\n  var level = _ || None;\n  return {\n    level: function(_) {\n      if (arguments.length) {\n        level = +_;\n        return this;\n      } else {\n        return level;\n      }\n    },\n    error: function() {\n      if (level >= Error$1) log('error', 'ERROR', arguments);\n      return this;\n    },\n    warn: function() {\n      if (level >= Warn) log('warn', 'WARN', arguments);\n      return this;\n    },\n    info: function() {\n      if (level >= Info) log('log', 'INFO', arguments);\n      return this;\n    },\n    debug: function() {\n      if (level >= Debug) log('log', 'DEBUG', arguments);\n      return this;\n    }\n  }\n};\n\nvar array = function(_) {\n  return _ != null ? (isArray(_) ? _ : [_]) : [];\n};\n\nvar isFunction = function(_) {\n  return typeof _ === 'function';\n};\n\nvar compare = function(fields, orders) {\n  var idx = [],\n      cmp = (fields = array(fields)).map(function(f, i) {\n        if (f == null) {\n          return null;\n        } else {\n          idx.push(i);\n          return isFunction(f) ? f\n            : splitAccessPath(f).map($).join('][');\n        }\n      }),\n      n = idx.length - 1,\n      ord = array(orders),\n      code = 'var u,v;return ',\n      i, j, f, u, v, d, t, lt, gt;\n\n  if (n < 0) return null;\n\n  for (j=0; j<=n; ++j) {\n    i = idx[j];\n    f = cmp[i];\n\n    if (isFunction(f)) {\n      d = 'f' + i;\n      u = '(u=this.' + d + '(a))';\n      v = '(v=this.' + d + '(b))';\n      (t = t || {})[d] = f;\n    } else {\n      u = '(u=a['+f+'])';\n      v = '(v=b['+f+'])';\n    }\n\n    d = '((v=v instanceof Date?+v:v),(u=u instanceof Date?+u:u))';\n\n    if (ord[i] !== 'descending') {\n      gt = 1;\n      lt = -1;\n    } else {\n      gt = -1;\n      lt = 1;\n    }\n\n    code += '(' + u+'<'+v+'||u==null)&&v!=null?' + lt\n      + ':(u>v||v==null)&&u!=null?' + gt\n      + ':'+d+'!==u&&v===v?' + lt\n      + ':v!==v&&u===u?' + gt\n      + (i < n ? ':' : ':0');\n  }\n\n  f = Function('a', 'b', code + ';');\n  if (t) f = f.bind(t);\n\n  fields = fields.reduce(function(map, field) {\n    if (isFunction(field)) {\n      (accessorFields(field) || []).forEach(function(_) { map[_] = 1; });\n    } else if (field != null) {\n      map[field + ''] = 1;\n    }\n    return map;\n  }, {});\n\n  return accessor(f, Object.keys(fields));\n};\n\nvar constant = function(_) {\n  return isFunction(_) ? _ : function() { return _; };\n};\n\nvar debounce = function(delay, handler) {\n  var tid, evt;\n\n  function callback() {\n    handler(evt);\n    tid = evt = null;\n  }\n\n  return function(e) {\n    evt = e;\n    if (tid) clearTimeout(tid);\n    tid = setTimeout(callback, delay);\n  };\n};\n\nvar extend = function(_) {\n  for (var x, k, i=1, len=arguments.length; i<len; ++i) {\n    x = arguments[i];\n    for (k in x) { _[k] = x[k]; }\n  }\n  return _;\n};\n\nvar extentIndex = function(array, f) {\n  var i = -1,\n      n = array.length,\n      a, b, c, u, v;\n\n  if (f == null) {\n    while (++i < n) {\n      b = array[i];\n      if (b != null && b >= b) {\n        a = c = b;\n        break;\n      }\n    }\n    u = v = i;\n    while (++i < n) {\n      b = array[i];\n      if (b != null) {\n        if (a > b) {\n          a = b;\n          u = i;\n        }\n        if (c < b) {\n          c = b;\n          v = i;\n        }\n      }\n    }\n  } else {\n    while (++i < n) {\n      b = f(array[i], i, array);\n      if (b != null && b >= b) {\n        a = c = b;\n        break;\n      }\n    }\n    u = v = i;\n    while (++i < n) {\n      b = f(array[i], i, array);\n      if (b != null) {\n        if (a > b) {\n          a = b;\n          u = i;\n        }\n        if (c < b) {\n          c = b;\n          v = i;\n        }\n      }\n    }\n  }\n\n  return [u, v];\n};\n\nvar NULL = {};\n\nvar fastmap = function(input) {\n  var obj = {},\n      map,\n      test;\n\n  function has(key) {\n    return obj.hasOwnProperty(key) && obj[key] !== NULL;\n  }\n\n  map = {\n    size: 0,\n    empty: 0,\n    object: obj,\n    has: has,\n    get: function(key) {\n      return has(key) ? obj[key] : undefined;\n    },\n    set: function(key, value) {\n      if (!has(key)) {\n        ++map.size;\n        if (obj[key] === NULL) --map.empty;\n      }\n      obj[key] = value;\n      return this;\n    },\n    delete: function(key) {\n      if (has(key)) {\n        --map.size;\n        ++map.empty;\n        obj[key] = NULL;\n      }\n      return this;\n    },\n    clear: function() {\n      map.size = map.empty = 0;\n      map.object = obj = {};\n    },\n    test: function(_) {\n      if (arguments.length) {\n        test = _;\n        return map;\n      } else {\n        return test;\n      }\n    },\n    clean: function() {\n      var next = {},\n          size = 0,\n          key, value;\n      for (key in obj) {\n        value = obj[key];\n        if (value !== NULL && (!test || !test(value))) {\n          next[key] = value;\n          ++size;\n        }\n      }\n      map.size = size;\n      map.empty = 0;\n      map.object = (obj = next);\n    }\n  };\n\n  if (input) Object.keys(input).forEach(function(key) {\n    map.set(key, input[key]);\n  });\n\n  return map;\n};\n\nvar inherits = function(child, parent) {\n  var proto = (child.prototype = Object.create(parent.prototype));\n  proto.constructor = child;\n  return proto;\n};\n\nvar isBoolean = function(_) {\n  return typeof _ === 'boolean';\n};\n\nvar isDate = function(_) {\n  return Object.prototype.toString.call(_) === '[object Date]';\n};\n\nvar isNumber = function(_) {\n  return typeof _ === 'number';\n};\n\nvar isRegExp = function(_) {\n  return Object.prototype.toString.call(_) === '[object RegExp]';\n};\n\nvar key = function(fields) {\n  fields = fields ? array(fields) : fields;\n  var fn = !(fields && fields.length)\n    ? function() { return ''; }\n    : Function('_', 'return \\'\\'+' +\n        fields.map(function(f) {\n          return '_[' + splitAccessPath(f).map($).join('][') + ']';\n        }).join('+\\'|\\'+') + ';');\n  return accessor(fn, fields, 'key');\n};\n\nvar merge = function(compare, array0, array1, output) {\n  var n0 = array0.length,\n      n1 = array1.length;\n\n  if (!n1) return array0;\n  if (!n0) return array1;\n\n  var merged = output || new array0.constructor(n0 + n1),\n      i0 = 0, i1 = 0, i = 0;\n\n  for (; i0<n0 && i1<n1; ++i) {\n    merged[i] = compare(array0[i0], array1[i1]) > 0\n       ? array1[i1++]\n       : array0[i0++];\n  }\n\n  for (; i0<n0; ++i0, ++i) {\n    merged[i] = array0[i0];\n  }\n\n  for (; i1<n1; ++i1, ++i) {\n    merged[i] = array1[i1];\n  }\n\n  return merged;\n};\n\nvar repeat = function(str, reps) {\n  var s = '';\n  while (--reps >= 0) s += str;\n  return s;\n};\n\nvar pad = function(str, length, padchar, align) {\n  var c = padchar || ' ',\n      s = str + '',\n      n = length - s.length;\n\n  return n <= 0 ? s\n    : align === 'left' ? repeat(c, n) + s\n    : align === 'center' ? repeat(c, ~~(n/2)) + s + repeat(c, Math.ceil(n/2))\n    : s + repeat(c, n);\n};\n\nvar peek = function(array) {\n  return array[array.length - 1];\n};\n\nvar toBoolean = function(_) {\n  return _ == null || _ === '' ? null : !_ || _ === 'false' || _ === '0' ? false : !!_;\n};\n\nfunction defaultParser(_) {\n  return isNumber(_) ? _ : isDate(_) ? _ : Date.parse(_);\n}\n\nvar toDate = function(_, parser) {\n  parser = parser || defaultParser;\n  return _ == null || _ === '' ? null : parser(_);\n};\n\nvar toNumber = function(_) {\n  return _ == null || _ === '' ? null : +_;\n};\n\nvar toString = function(_) {\n  return _ == null || _ === '' ? null : _ + '';\n};\n\nvar toSet = function(_) {\n  for (var s={}, i=0, n=_.length; i<n; ++i) s[_[i]] = 1;\n  return s;\n};\n\nvar truncate = function(str, length, align, ellipsis) {\n  var e = ellipsis != null ? ellipsis : '\\u2026',\n      s = str + '',\n      n = s.length,\n      l = Math.max(0, length - e.length);\n\n  return n <= length ? s\n    : align === 'left' ? e + s.slice(n - l)\n    : align === 'center' ? s.slice(0, Math.ceil(l/2)) + e + s.slice(n - ~~(l/2))\n    : s.slice(0, l) + e;\n};\n\nvar visitArray = function(array, filter, visitor) {\n  if (array) {\n    var i = 0, n = array.length, t;\n    if (filter) {\n      for (; i<n; ++i) {\n        if (t = filter(array[i])) visitor(t, i, array);\n      }\n    } else {\n      array.forEach(visitor);\n    }\n  }\n};\n\nexports.accessor = accessor;\nexports.accessorName = accessorName;\nexports.accessorFields = accessorFields;\nexports.id = id;\nexports.identity = identity;\nexports.zero = zero;\nexports.one = one;\nexports.truthy = truthy;\nexports.falsy = falsy;\nexports.logger = logger;\nexports.None = None;\nexports.Error = Error$1;\nexports.Warn = Warn;\nexports.Info = Info;\nexports.Debug = Debug;\nexports.array = array;\nexports.compare = compare;\nexports.constant = constant;\nexports.debounce = debounce;\nexports.error = error;\nexports.extend = extend;\nexports.extentIndex = extentIndex;\nexports.fastmap = fastmap;\nexports.field = field;\nexports.inherits = inherits;\nexports.isArray = isArray;\nexports.isBoolean = isBoolean;\nexports.isDate = isDate;\nexports.isFunction = isFunction;\nexports.isNumber = isNumber;\nexports.isObject = isObject;\nexports.isRegExp = isRegExp;\nexports.isString = isString;\nexports.key = key;\nexports.merge = merge;\nexports.pad = pad;\nexports.peek = peek;\nexports.repeat = repeat;\nexports.splitAccessPath = splitAccessPath;\nexports.stringValue = $;\nexports.toBoolean = toBoolean;\nexports.toDate = toDate;\nexports.toNumber = toNumber;\nexports.toString = toString;\nexports.toSet = toSet;\nexports.truncate = truncate;\nexports.visitArray = visitArray;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","module.exports={\n  \"name\": \"vega-lite\",\n  \"author\": \"Jeffrey Heer, Dominik Moritz, Kanit \\\"Ham\\\" Wongsuphasawat\",\n  \"version\": \"2.0.0-beta.14\",\n  \"collaborators\": [\n    \"Kanit Wongsuphasawat <kanitw@gmail.com> (http://kanitw.yellowpigz.com)\",\n    \"Dominik Moritz <domoritz@cs.washington.edu> (https://www.domoritz.de)\",\n    \"Jeffrey Heer <jheer@uw.edu> (http://jheer.org)\"\n  ],\n  \"homepage\": \"https://vega.github.io/vega-lite/\",\n  \"description\": \"Vega-lite provides a higher-level grammar for visual analysis, comparable to ggplot or Tableau, that generates complete Vega specifications.\",\n  \"main\": \"build/src/index.js\",\n  \"types\": \"typings/vega-lite.d.ts\",\n  \"bin\": {\n    \"vl2png\": \"./bin/vl2png\",\n    \"vl2svg\": \"./bin/vl2svg\",\n    \"vl2vg\": \"./bin/vl2vg\"\n  },\n  \"directories\": {\n    \"test\": \"test\"\n  },\n  \"scripts\": {\n    \"pretsc\": \"mkdir -p build && rm -rf build/*/** && cp package.json build/\",\n    \"tsc\": \"tsc\",\n    \"prebuild\": \"mkdir -p build/site build/test-gallery\",\n    \"build\": \"npm run build:only\",\n    \"build:only\": \"npm run tsc && cp package.json build && browserify src/index.ts -p tsify -d -s vl | exorcist build/vega-lite.js.map > build/vega-lite.js\",\n    \"postbuild\": \"node node_modules/uglify-js/bin/uglifyjs build/vega-lite.js -cm --source-map content=build/vega-lite.js.map,filename=build/vega-lite.min.js.map -o build/vega-lite.min.js && npm run schema\",\n    \"build:examples\": \"npm run data && npm run build:only && npm run build:examples-only\",\n    \"build:examples-only\": \"TZ=America/Los_Angeles ./scripts/build-examples.sh && rm -rf examples/specs/normalized/* && scripts/build-normalized-examples\",\n    \"build:toc\": \"bundle exec jekyll build -q && scripts/generate-toc\",\n    \"build:site\": \"browserify site/static/main.ts -p [tsify -p site] -d | exorcist build/site/main.js.map > build/site/main.js\",\n    \"build:versions\": \"scripts/update-version.sh\",\n    \"build:test-gallery\": \"browserify test-gallery/main.ts -p [tsify -p test-gallery] -d > build/test-gallery/main.js\",\n    \"check:examples\": \"scripts/check-examples.sh\",\n    \"check:schema\": \"scripts/check-schema.sh\",\n    \"clean\": \"rm -rf build && rm -f vega-lite.* & find -E src test site examples -regex '.*\\\\.(js|js.map|d.ts|vg.json)' -delete & rm -rf data\",\n    \"data\": \"rsync -r node_modules/vega-datasets/data/* data\",\n    \"link\": \"npm link && npm link vega-lite\",\n\n    \"deploy\": \"scripts/deploy.sh\",\n    \"deploy:gh\": \"scripts/deploy-gh.sh\",\n    \"deploy:schema\": \"scripts/deploy-schema.sh\",\n\n    \"prestart\": \"npm run data && npm run build && scripts/index-examples\",\n    \"start\": \"nodemon -x 'npm run build:test-gallery' & browser-sync start --server --files 'build/test-gallery/main.js' --index 'test-gallery/index.html'\",\n    \"poststart\": \"rm examples/all-examples.json\",\n\n    \"preschema\": \"npm run prebuild\",\n    \"schema\": \"typescript-to-json-schema --path tsconfig.json --type TopLevelExtendedSpec > build/vega-lite-schema.json && npm run renameschema && cp build/vega-lite-schema.json _data/\",\n    \"renameschema\": \"scripts/rename-schema.sh\",\n    \"presite\": \"npm run build && npm run data && npm run build:site && npm run build:toc && npm run build:versions\",\n    \"site\": \"bundle exec jekyll serve\",\n\n    \"lint\": \"tslint --project tsconfig.json -c tslint.json --type-check\",\n    \"test\": \"npm run build:only && npm run test:only && npm run test:runtime && npm run lint\",\n    \"posttest\": \"npm run schema && npm run data && npm run mocha:examples\",\n    \"test:nocompile\": \"npm run test:only && npm run test:runtime && npm run lint && npm run mocha:examples\",\n    \"test:only\": \"nyc --reporter=html --reporter=text-summary npm run mocha:test\",\n    \"test:runtime\": \"TZ=America/Los_Angeles wdio wdio.conf.js\",\n    \"test:runtime:generate\": \"rm -Rf test-runtime/resources && VL_GENERATE_TESTS=true npm run test:runtime\",\n    \"test:debug\": \"npm run tsc && mocha --recursive --debug-brk --inspect build/test\",\n    \"test:debug-examples\": \"npm run tsc && npm run schema && mocha --recursive --debug-brk --inspect build/examples\",\n    \"mocha:test\": \"mocha --require source-map-support/register --reporter dot --recursive build/test\",\n    \"mocha:examples\": \"mocha --require source-map-support/register --reporter dot --recursive build/examples\",\n\n    \"codecov\": \"nyc report --reporter=json && codecov -f coverage/*.json\",\n    \"watch:build\": \"watchify src/index.ts -p tsify -v -d -s vl -o 'exorcist build/vega-lite.js.map > build/vega-lite.js'\",\n    \"watch:tsc\": \"npm run tsc -- -w\",\n    \"watch:test\": \"nodemon -x 'npm test'\",\n    \"watch\": \"nodemon -x 'npm run build && npm run test:nocompile' # already ran schema in build\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/vega/vega-lite.git\"\n  },\n  \"license\": \"BSD-3-Clause\",\n  \"bugs\": {\n    \"url\": \"https://github.com/vega/vega-lite/issues\"\n  },\n  \"devDependencies\": {\n    \"@types/chai\": \"^4.0.2\",\n    \"@types/d3\": \"^4.10.0\",\n    \"@types/highlight.js\": \"^9.1.9\",\n    \"@types/json-stable-stringify\": \"^1.0.31\",\n    \"@types/mkdirp\": \"^0.5.0\",\n    \"@types/mocha\": \"^2.2.41\",\n    \"@types/node\": \"^8.0.19\",\n    \"@types/webdriverio\": \"^4.8.4\",\n    \"ajv\": \"5.2.2\",\n    \"browser-sync\": \"^2.18.13\",\n    \"browserify\": \"^14.4.0\",\n    \"browserify-shim\": \"^3.8.14\",\n    \"chai\": \"^4.1.0\",\n    \"cheerio\": \"^1.0.0-rc.2\",\n    \"chromedriver\": \"^2.30.1\",\n    \"codecov\": \"^2.3.0\",\n    \"d3\": \"^4.10.0\",\n    \"exorcist\": \"^0.4.0\",\n    \"highlight.js\": \"^9.12.0\",\n    \"mkdirp\": \"^0.5.1\",\n    \"mocha\": \"^3.5.0\",\n    \"nodemon\": \"^1.11.0\",\n    \"nyc\": \"^11.1.0\",\n    \"source-map-support\": \"^0.4.15\",\n    \"ts-node\": \"^3.2.1\",\n    \"tsify\": \"^3.0.1\",\n    \"tslint\": \"5.4.3\",\n    \"tslint-eslint-rules\": \"^4.1.1\",\n    \"typescript\": \"^2.4.2\",\n    \"typescript-to-json-schema\": \"vega/typescript-to-json-schema#v0.8.0\",\n    \"uglify-js\": \"^3.0.27\",\n    \"vega\": \"^3.0.0\",\n    \"vega-datasets\": \"vega/vega-datasets#gh-pages\",\n    \"vega-embed\": \"^3.0.0-beta.20\",\n    \"vega-tooltip\": \"^0.4.2\",\n    \"watchify\": \"^3.9.0\",\n    \"wdio-chromedriver-service\": \"^0.1.0\",\n    \"wdio-dot-reporter\": \"0.0.8\",\n    \"wdio-mocha-framework\": \"^0.5.10\",\n    \"wdio-static-server-service\": \"^1.0.1\",\n    \"webdriverio\": \"^4.8.0\",\n    \"yaml-front-matter\": \"^3.4.0\"\n  },\n  \"dependencies\": {\n    \"json-stable-stringify\": \"^1.0.1\",\n    \"tslib\": \"^1.7.1\",\n    \"vega-event-selector\": \"^2.0.0\",\n    \"vega-util\": \"^1.5.0\",\n    \"yargs\": \"^8.0.2\"\n  }\n}\n","import {contains, toSet} from './util';\n\n\nexport type AggregateOp = 'argmax' | 'argmin' | 'average' | 'count'\n  | 'distinct' | 'max' | 'mean' | 'median' | 'min' | 'missing' | 'modeskew'\n  | 'q1' | 'q3' | 'ci0' | 'ci1' | 'stdev' | 'stdevp' | 'sum' | 'valid' | 'values' | 'variance'\n  | 'variancep';\n\nexport const AGGREGATE_OPS: AggregateOp[] = [\n    'values',\n    'count',\n    'valid',\n    'missing',\n    'distinct',\n    'sum',\n    'mean',\n    'average',\n    'variance',\n    'variancep',\n    'stdev',\n    'stdevp',\n    'median',\n    'q1',\n    'q3',\n    'ci0',\n    'ci1',\n    'min',\n    'max',\n    'argmin',\n    'argmax',\n];\n\nexport const AGGREGATE_OP_INDEX = toSet(AGGREGATE_OPS);\n\nexport const COUNTING_OPS: AggregateOp[] = ['count', 'valid', 'missing', 'distinct'];\n\nexport function isCountingAggregateOp(aggregate: string): boolean {\n  return aggregate && contains(COUNTING_OPS, aggregate);\n}\n\n/** Additive-based aggregation operations.  These can be applied to stack. */\nexport const SUM_OPS: AggregateOp[] = [\n    'count',\n    'sum',\n    'distinct',\n    'valid',\n    'missing'\n];\n\n/**\n * Aggregation operators that always produce values within the range [domainMin, domainMax].\n */\nexport const SHARED_DOMAIN_OPS: AggregateOp[] = [\n    'mean',\n    'average',\n    'median',\n    'q1',\n    'q3',\n    'min',\n    'max',\n];\n\nexport const SHARED_DOMAIN_OP_INDEX = toSet(SHARED_DOMAIN_OPS);\n","import {DateTime} from './datetime';\nimport {Guide, GuideEncodingEntry, VlOnlyGuideConfig} from './guide';\nimport {AxisOrient, VgAxis, VgAxisBase, VgAxisConfig, VgAxisEncode} from './vega.schema';\n\n\n\nexport interface AxisConfig extends VgAxisConfig, VlOnlyGuideConfig {}\n\nexport interface Axis extends VgAxisBase, Guide {\n  /**\n   * The padding, in pixels, between axis and text labels.\n   */\n  labelPadding?: number;\n\n  /**\n   * The orientation of the axis. One of `\"top\"`, `\"bottom\"`, `\"left\"` or `\"right\"`. The orientation can be used to further specialize the axis type (e.g., a y axis oriented for the right edge of the chart).\n   *\n   * __Default value:__ x-axis is placed on the bottom, y-axis is placed on the left, `column`'s x-axis is placed on the top, `row`'s y-axis is placed on the right.\n   */\n  orient?: AxisOrient;\n\n  /**\n   * The offset, in pixels, by which to displace the axis from the edge of the enclosing group or data rectangle.\n   *\n   * __Default value:__ derived from  [axis config](config.html#facet-scale-config)'s `offset` (`0` by default)\n   */\n  offset?: number;\n\n  /**\n   * The anchor position of the axis in pixels. For x-axis with top or bottom orientation, this sets the axis group x coordinate. For y-axis with left or right orientation, this sets the axis group y coordinate.\n   *\n   * __Default value__: `0`\n   */\n  position?: number;\n\n  /**\n   * A desired number of ticks, for axes visualizing quantitative scales. The resulting number may be different so that values are \"nice\" (multiples of 2, 5, 10) and lie within the underlying scale's range.\n   * @minimum 0\n   * @TJS-type integer\n   */\n  tickCount?: number;\n\n  /**\n   * Explicitly set the visible axis tick values.\n   */\n  values?: number[] | DateTime[];\n\n  /**\n   * A non-positive integer indicating z-index of the axis.\n   * If zindex is 0, axes should be drawn behind all chart elements.\n   * To put them in front, use `\"zindex = 1\"`.\n   *\n   * __Default value:__ `0` (Behind the marks.)\n   *\n   * @TJS-type integer\n   * @minimum 0\n   */\n  zindex?: number;\n\n  /**\n   * Optional mark definitions for custom axis encoding.\n   */\n  encoding?: AxisEncoding;\n}\n\n/**\n * A dictionary listing whether a certain axis property is applicable for only main axes or only grid axes.\n * (Properties not listed are applicable for both)\n */\nexport const AXIS_PROPERTY_TYPE: {\n  // Using Mapped Type to declare type (https://www.typescriptlang.org/docs/handbook/advanced-types.html#mapped-types)\n  [k in keyof Axis]: 'main' | 'grid'\n} = {\n  grid: 'grid',\n  labelOverlap: 'main',\n  offset: 'main',\n  title: 'main'\n};\n\nexport interface AxisEncoding {\n  /**\n   * Custom encoding for the axis container.\n   */\n  axis?: GuideEncodingEntry;\n\n  /**\n   * Custom encoding for the axis domain rule mark.\n   */\n  domain?: GuideEncodingEntry;\n\n  /**\n   * Custom encoding for axis gridline rule marks.\n   */\n  grid?: GuideEncodingEntry;\n\n  /**\n   * Custom encoding for axis label text marks.\n   */\n  labels?: GuideEncodingEntry;\n\n  /**\n   * Custom encoding for axis tick rule marks.\n   */\n  ticks?: GuideEncodingEntry;\n\n  /**\n   * Custom encoding for the axis title text mark.\n   */\n  title?: GuideEncodingEntry;\n}\n\nexport const AXIS_PROPERTIES:(keyof (VgAxis|Axis))[] = [\n  'domain', 'format', 'grid', 'labelPadding', 'labels', 'labelOverlap', 'maxExtent', 'minExtent', 'offset', 'orient', 'position', 'tickCount', 'tickExtra', 'ticks', 'tickSize', 'title', 'titlePadding', 'values', 'zindex'\n];\n\nexport const VG_AXIS_PROPERTIES: (keyof VgAxis)[] = [].concat(AXIS_PROPERTIES, ['gridScale']);\n\nexport interface AxisConfigMixins {\n  /** Generic axis config. */\n  axis?: AxisConfig;\n\n  /**\n   * X-axis specific config.\n   */\n  axisX?: VgAxisConfig;\n\n  /**\n   * Y-axis specific config.\n   */\n  axisY?: VgAxisConfig;\n\n  /**\n   * Specific axis config for y-axis along the left edge of the chart.\n   */\n  axisLeft?: VgAxisConfig;\n\n  /**\n   * Specific axis config for y-axis along the right edge of the chart.\n   */\n  axisRight?: VgAxisConfig;\n\n  /**\n   * Specific axis config for x-axis along the top edge of the chart.\n   */\n  axisTop?: VgAxisConfig;\n\n  /**\n   * Specific axis config for x-axis along the bottom edge of the chart.\n   */\n  axisBottom?: VgAxisConfig;\n\n  /**\n   * Specific axis config for axes with \"band\" scales.\n   */\n  axisBand?: VgAxisConfig;\n}\n","import {Channel, COLOR, COLUMN, OPACITY, ROW, SHAPE, SIZE} from './channel';\nimport {isBoolean, keys} from './util';\n\n\nexport interface BaseBin {\n  /**\n   * The number base to use for automatic bin determination (default is base 10).\n   *\n   * __Default value:__ `10`\n   *\n   */\n  base?: number;\n  /**\n   * An exact step size to use between bins.\n   *\n   * __Note:__ If provided, options such as maxbins will be ignored.\n   */\n  step?: number;\n  /**\n   * An array of allowable step sizes to choose from.\n   * @minItems 1\n   */\n  steps?: number[];\n  /**\n   * A minimum allowable step size (particularly useful for integer values).\n   */\n  minstep?: number;\n  /**\n   * Scale factors indicating allowable subdivisions. The default value is [5, 2], which indicates that for base 10 numbers (the default base), the method may consider dividing bin sizes by 5 and/or 2. For example, for an initial step size of 10, the method can check if bin sizes of 2 (= 10/5), 5 (= 10/2), or 1 (= 10/(5*2)) might also satisfy the given constraints.\n   *\n   * __Default value:__ `[5, 2]`\n   *\n   * @minItems 1\n   */\n  divide?: number[];\n  /**\n   * Maximum number of bins.\n   *\n   * __Default value:__ `6` for `row`, `column` and `shape` channels; `10` for other channels\n   *\n   * @minimum 2\n   */\n  maxbins?: number;\n  /**\n   * If true (the default), attempts to make the bin boundaries use human-friendly boundaries, such as multiples of ten.\n   */\n  nice?: boolean;\n}\n\n/**\n * Binning properties or boolean flag for determining whether to bin data or not.\n */\nexport interface Bin extends BaseBin {\n  /**\n   * A two-element (`[min, max]`) array indicating the range of desired bin values.\n   * @minItems 2\n   * @maxItems 2\n   */\n  extent?: number[];  // VgBinTransform uses a different extent so we need to pull this out.\n}\n\nexport function binToString(bin: Bin | boolean) {\n  if (isBoolean(bin)) {\n    return 'bin';\n  }\n  return 'bin' + keys(bin).map(p => `_${p}_${bin[p]}`).join('');\n}\n\nexport function autoMaxBins(channel: Channel): number {\n  switch (channel) {\n    case ROW:\n    case COLUMN:\n    case SIZE:\n    case COLOR:\n    case OPACITY:\n      // Facets and Size shouldn't have too many bins\n      // We choose 6 like shape to simplify the rule\n    case SHAPE:\n      return 6; // Vega's \"shape\" has 6 distinct values\n    default:\n      return 10;\n  }\n}\n","/*\n * Constants and utilities for encoding channels (Visual variables)\n * such as 'x', 'y', 'color'.\n */\n\nimport {RangeType} from './compile/scale/type';\nimport {Encoding} from './encoding';\nimport {Facet} from './facet';\nimport {Mark} from './mark';\nimport {SCALE_TYPES, ScaleType} from './scale';\nimport {contains, toSet, without} from './util';\n\n\nexport namespace Channel {\n  // Facet\n  export const ROW: 'row' = 'row';\n  export const COLUMN: 'column' = 'column';\n\n  // Position\n  export const X: 'x' = 'x';\n  export const Y: 'y' = 'y';\n  export const X2: 'x2' = 'x2';\n  export const Y2: 'y2' = 'y2';\n\n  // Mark property with scale\n  export const COLOR: 'color' = 'color';\n  export const SHAPE: 'shape' = 'shape';\n  export const SIZE: 'size' = 'size';\n  export const OPACITY: 'opacity' = 'opacity';\n\n  // Non-scale channel\n  export const TEXT: 'text' = 'text';\n  export const ORDER: 'order' = 'order';\n  export const DETAIL: 'detail' = 'detail';\n  export const TOOLTIP: 'tooltip' = 'tooltip';\n}\n\nexport type Channel = keyof Encoding<any> | keyof Facet<any>;\n\nexport const X = Channel.X;\nexport const Y = Channel.Y;\nexport const X2 = Channel.X2;\nexport const Y2 = Channel.Y2;\nexport const ROW = Channel.ROW;\nexport const COLUMN = Channel.COLUMN;\nexport const SHAPE = Channel.SHAPE;\nexport const SIZE = Channel.SIZE;\nexport const COLOR = Channel.COLOR;\nexport const TEXT = Channel.TEXT;\nexport const DETAIL = Channel.DETAIL;\nexport const ORDER = Channel.ORDER;\nexport const OPACITY = Channel.OPACITY;\nexport const TOOLTIP = Channel.TOOLTIP;\n\n\nexport const CHANNELS = [X, Y, X2, Y2, ROW, COLUMN, SIZE, SHAPE, COLOR, ORDER, OPACITY, TEXT, DETAIL, TOOLTIP];\nconst CHANNEL_INDEX = toSet(CHANNELS);\n\n/**\n * Channels cannot have an array of channelDef.\n * model.fieldDef, getFieldDef only work for these channels.\n *\n * (The only two channels that can have an array of channelDefs are \"detail\" and \"order\".\n * Since there can be multiple fieldDefs for detail and order, getFieldDef/model.fieldDef\n * are not applicable for them.  Similarly, selection projecttion won't work with \"detail\" and \"order\".)\n */\nexport const SINGLE_DEF_CHANNELS = [X, Y, X2, Y2, ROW, COLUMN, SIZE, SHAPE, COLOR, OPACITY, TEXT, TOOLTIP];\n\n// export type SingleDefChannel = typeof SINGLE_DEF_CHANNELS[0];\n// FIXME somehow the typeof above leads to the following error when running npm run schema\n// UnknownNodeError: Unknown node \"SingleDefChannel\" (ts.SyntaxKind = 171) at /Users/kanitw/Documents/_code/_idl/_visrec/vega-lite/src/selection.ts(17,14)\nexport type SingleDefChannel = 'x' | 'y' | 'x2' | 'y2' | 'row' | 'column' | 'size' | 'shape' | 'color' | 'opacity' | 'text' | 'tooltip';\n\nexport function isChannel(str: string): str is Channel {\n  return !!CHANNEL_INDEX[str];\n}\n\n// CHANNELS without COLUMN, ROW\nexport const UNIT_CHANNELS = [X, Y, X2, Y2, SIZE, SHAPE, COLOR, ORDER, OPACITY, TEXT, DETAIL, TOOLTIP];\n\n/** List of channels with scales */\nexport const SCALE_CHANNELS = [X, Y, SIZE, SHAPE, COLOR, OPACITY];\nexport type ScaleChannel = typeof SCALE_CHANNELS[0];\n\nconst SCALE_CHANNEL_INDEX = toSet(SCALE_CHANNELS);\n\nexport function isScaleChannel(channel: Channel): channel is ScaleChannel {\n  return !!SCALE_CHANNEL_INDEX[channel];\n}\n\n// UNIT_CHANNELS without X, Y, X2, Y2;\nexport const NONSPATIAL_CHANNELS = [SIZE, SHAPE, COLOR, ORDER, OPACITY, TEXT, DETAIL, TOOLTIP];\n\n// X and Y;\nexport const SPATIAL_SCALE_CHANNELS = [X, Y];\nexport type SpatialScaleChannel = typeof SPATIAL_SCALE_CHANNELS[0];\n\n// SCALE_CHANNELS without X, Y;\nexport const NONSPATIAL_SCALE_CHANNELS = [SIZE, SHAPE, COLOR, OPACITY];\nexport type NonspatialScaleChannel = typeof NONSPATIAL_SCALE_CHANNELS[0];\n\nexport const LEVEL_OF_DETAIL_CHANNELS = without(NONSPATIAL_CHANNELS, ['order'] as Channel[]);\n\n/** Channels that can serve as groupings for stacked charts. */\nexport const STACK_BY_CHANNELS = [COLOR, DETAIL, ORDER, OPACITY, SIZE];\nexport type StackByChannel = typeof STACK_BY_CHANNELS[0];\n\nexport interface SupportedMark {\n  point?: boolean;\n  tick?: boolean;\n  rule?: boolean;\n  circle?: boolean;\n  square?: boolean;\n  bar?: boolean;\n  rect?: boolean;\n  line?: boolean;\n  area?: boolean;\n  text?: boolean;\n  tooltip?: boolean;\n}\n\n/**\n * Return whether a channel supports a particular mark type.\n * @param channel  channel name\n * @param mark the mark type\n * @return whether the mark supports the channel\n */\nexport function supportMark(channel: Channel, mark: Mark) {\n  return mark in getSupportedMark(channel);\n}\n\n/**\n * Return a dictionary showing whether a channel supports mark type.\n * @param channel\n * @return A dictionary mapping mark types to boolean values.\n */\nexport function getSupportedMark(channel: Channel): SupportedMark {\n  switch (channel) {\n    case X:\n    case Y:\n    case COLOR:\n    case DETAIL:\n    case TOOLTIP:\n    case ORDER:    // TODO: revise (order might not support rect, which is not stackable?)\n    case OPACITY:\n    case ROW:\n    case COLUMN:\n      return { // all marks\n        point: true, tick: true, rule: true, circle: true, square: true,\n        bar: true, rect: true, line: true, area: true, text: true\n      };\n    case X2:\n    case Y2:\n      return {\n        rule: true, bar: true, rect: true, area: true\n      };\n    case SIZE:\n      return {\n        point: true, tick: true, rule: true, circle: true, square: true,\n        bar: true, text: true, line: true\n      };\n    case SHAPE:\n      return {point: true};\n    case TEXT:\n      return {text: true};\n  }\n}\n\nexport function hasScale(channel: Channel) {\n  return !contains([DETAIL, TEXT, ORDER, TOOLTIP], channel);\n}\n\n// Position does not work with ordinal (lookup) scale and sequential (which is only for color)\nconst POSITION_SCALE_TYPE_INDEX = toSet(without(SCALE_TYPES, ['ordinal', 'sequential'] as ScaleType[]));\n\nexport function supportScaleType(channel: Channel, scaleType: ScaleType): boolean {\n  switch (channel) {\n    case ROW:\n    case COLUMN:\n      return scaleType === 'band'; // row / column currently supports band only\n    case X:\n    case Y:\n    case SIZE: // TODO: size and opacity can support ordinal with more modification\n    case OPACITY:\n      // Although it generally doesn't make sense to use band with size and opacity,\n      // it can also work since we use band: 0.5 to get midpoint.\n      return scaleType in POSITION_SCALE_TYPE_INDEX;\n    case COLOR:\n      return scaleType !== 'band';    // band does not make sense with color\n    case SHAPE:\n      return scaleType === 'ordinal'; // shape = lookup only\n  }\n  /* istanbul ignore next: it should never reach here */\n  return false;\n}\n\nexport function rangeType(channel: Channel): RangeType {\n  switch (channel) {\n    case X:\n    case Y:\n    case SIZE:\n    case OPACITY:\n    // X2 and Y2 use X and Y scales, so they similarly have continuous range.\n    case X2:\n    case Y2:\n      return 'continuous';\n\n    case ROW:\n    case COLUMN:\n    case SHAPE:\n    // TEXT and TOOLTIP have no scale but have discrete output\n    case TEXT:\n    case TOOLTIP:\n      return 'discrete';\n\n    // Color can be either continuous or discrete, depending on scale type.\n    case COLOR:\n      return 'flexible';\n\n    // No scale, no range type.\n    case DETAIL:\n    case ORDER:\n      return undefined;\n  }\n  /* istanbul ignore next: should never reach here. */\n  throw new Error('getSupportedRole not implemented for ' + channel);\n}\n","import {VgAxis} from '../../vega.schema';\nimport {AxisComponent, AxisComponentIndex} from './component';\n\n\n\nconst mainAxisReducer = getAxisReducer('main');\nconst gridAxisReducer = getAxisReducer('grid');\n\nfunction getAxisReducer(axisType: 'main' | 'grid') {\n  return (axes: VgAxis[], axis: AxisComponent) => {\n    if (axis[axisType]) {\n      // Need to cast here so it's not longer partial type.\n      axes.push(axis[axisType].combine() as VgAxis);\n    }\n    return axes;\n  };\n}\n\nexport function assembleAxes(axisComponents: AxisComponentIndex): VgAxis[] {\n  return [].concat(\n    axisComponents.x ? [].concat(\n      axisComponents.x.reduce(mainAxisReducer, []),\n      axisComponents.x.reduce(gridAxisReducer, [])\n    ) : [],\n    axisComponents.y ? [].concat(\n      axisComponents.y.reduce(mainAxisReducer, []),\n      axisComponents.y.reduce(gridAxisReducer, []),\n    ) : []\n  );\n}\n\n","import {Axis} from '../../axis';\nimport {VgAxis} from '../../vega.schema';\nimport {Split} from '../split';\n\nexport class AxisComponentPart extends Split<Partial<VgAxis>> {}\n\nexport interface AxisComponent {\n  main?: AxisComponentPart;\n  grid?: AxisComponentPart;\n}\n\nexport interface AxisComponentIndex {\n  x?: AxisComponent[];\n  y?: AxisComponent[];\n}\n\nexport interface AxisIndex {\n  x?: Axis;\n  y?: Axis;\n}\n","import {Axis} from '../../axis';\nimport {Channel, SpatialScaleChannel, X} from '../../channel';\nimport {FieldDef} from '../../fielddef';\nimport {ScaleType} from '../../scale';\nimport {NOMINAL, ORDINAL, TEMPORAL} from '../../type';\nimport {contains, extend, keys} from '../../util';\nimport {AxisOrient, VgAxis} from '../../vega.schema';\nimport {timeFormatExpression} from '../common';\nimport {Split} from '../split';\nimport {UnitModel} from '../unit';\n\nexport function labels(model: UnitModel, channel: SpatialScaleChannel, specifiedLabelsSpec: any, def: Split<Partial<VgAxis>>) {\n  const fieldDef = model.fieldDef(channel) ||\n    (\n      channel === 'x' ? model.fieldDef('x2') :\n      channel === 'y' ? model.fieldDef('y2') :\n      undefined\n    );\n  const axis = model.axis(channel);\n  const config = model.config;\n\n  let labelsSpec: any = {};\n\n  // Text\n  if (fieldDef.type === TEMPORAL) {\n    const isUTCScale = model.getScaleComponent(channel).get('type') === ScaleType.UTC;\n\n    labelsSpec.text =  {\n      signal: timeFormatExpression('datum.value', fieldDef.timeUnit, axis.format, config.axis.shortTimeLabels, config.timeFormat, isUTCScale)\n    };\n  }\n\n  // Label Angle\n  const angle = labelAngle(axis, channel, fieldDef);\n  if (angle) {\n    labelsSpec.angle = {value: angle};\n  }\n\n  if (labelsSpec.angle && channel === 'x') {\n    const align = labelAlign(angle, def.get('orient'));\n    if (align) {\n      labelsSpec.align = {value: align};\n    }\n\n    // Auto set baseline if x is rotated by 90, or -90\n    if (contains([90, 270], angle)) {\n      labelsSpec.baseline = {value: 'middle'};\n    }\n  }\n\n  labelsSpec = {\n    ...labelsSpec,\n    ...specifiedLabelsSpec\n  };\n\n  return keys(labelsSpec).length === 0 ? undefined : labelsSpec;\n}\nexport function labelAngle(axis: Axis, channel: Channel, fieldDef: FieldDef<string>) {\n  if (axis.labelAngle !== undefined) {\n    // Make angle within [0,360)\n    return ((axis.labelAngle % 360) + 360) % 360;\n  } else {\n    // auto rotate for X\n    if (channel === X && (contains([NOMINAL, ORDINAL], fieldDef.type) || !!fieldDef.bin || fieldDef.type === TEMPORAL)) {\n      return 270;\n    }\n  }\n  return undefined;\n}\nexport function labelAlign(angle: number, orient: AxisOrient) {\n  if (angle && angle > 0) {\n    if (angle > 180) {\n      return orient === 'top' ? 'left' : 'right';\n    }  else if (angle < 180) {\n      return orient === 'top' ? 'right': 'left';\n    }\n  }\n  return undefined;\n}\n\n","import {Axis, AXIS_PROPERTIES, AXIS_PROPERTY_TYPE, AxisEncoding, VG_AXIS_PROPERTIES} from '../../axis';\nimport {SPATIAL_SCALE_CHANNELS, SpatialScaleChannel} from '../../channel';\nimport {keys, some} from '../../util';\nimport {AxisOrient} from '../../vega.schema';\nimport {VgAxis, VgAxisEncode} from '../../vega.schema';\nimport {getSpecifiedOrDefaultValue, numberFormat, titleMerger} from '../common';\nimport {LayerModel} from '../layer';\nimport {parseGuideResolve} from '../resolve';\nimport {defaultTieBreaker, Explicit, mergeValuesWithExplicit} from '../split';\nimport {UnitModel} from '../unit';\nimport {AxisComponent, AxisComponentIndex, AxisComponentPart} from './component';\nimport * as encode from './encode';\nimport * as rules from './rules';\n\ntype AxisPart = keyof AxisEncoding;\nconst AXIS_PARTS: AxisPart[] = ['domain', 'grid', 'labels', 'ticks', 'title'];\n\nexport function parseUnitAxis(model: UnitModel): AxisComponentIndex {\n  return SPATIAL_SCALE_CHANNELS.reduce(function(axis, channel) {\n    if (model.axis(channel)) {\n      const axisComponent: AxisComponent = {};\n      // TODO: support multiple axis\n      const main = parseMainAxis(channel, model);\n      if (main && isVisibleAxis(main)) {\n        axisComponent.main = main;\n      }\n\n      const grid = parseGridAxis(channel, model);\n      if (grid && isVisibleAxis(grid)) {\n        axisComponent.grid = grid;\n      }\n\n      axis[channel] = [axisComponent];\n    }\n    return axis;\n  }, {} as AxisComponentIndex);\n}\n\nconst OPPOSITE_ORIENT: {[K in AxisOrient]: AxisOrient} = {\n  bottom: 'top',\n  top: 'bottom',\n  left: 'right',\n  right: 'left'\n};\n\nexport function parseLayerAxis(model: LayerModel) {\n  const {axes, resolve} = model.component;\n  const axisCount: {\n    // Using Mapped Type to declare type (https://www.typescriptlang.org/docs/handbook/advanced-types.html#mapped-types)\n    [k in AxisOrient]: number\n  } = {top: 0, bottom: 0, right: 0, left: 0};\n\n  for (const child of model.children) {\n    child.parseAxisAndHeader();\n\n    keys(child.component.axes).forEach((channel: SpatialScaleChannel) => {\n      const channelResolve = model.component.resolve[channel];\n      channelResolve.axis = parseGuideResolve(model.component.resolve, channel);\n      if (channelResolve.axis === 'shared') {\n        // If the resolve says shared (and has not been overridden)\n        // We will try to merge and see if there is a conflict\n\n        axes[channel] = mergeAxisComponents(axes[channel], child.component.axes[channel]);\n\n        if (!axes[channel]) {\n          // If merge returns nothing, there is a conflict so we cannot make the axis shared.\n          // Thus, mark axis as independent and remove the axis component.\n          channelResolve.axis = 'independent';\n          delete axes[channel];\n        }\n      }\n    });\n  }\n\n  // Move axes to layer's axis component and merge shared axes\n  ['x', 'y'].forEach((channel: SpatialScaleChannel) => {\n    for (const child of model.children) {\n      if (!child.component.axes[channel]) {\n        // skip if the child does not have a particular axis\n        continue;\n      }\n\n      if (resolve[channel].axis === 'independent') {\n        // If axes are independent, concat the axisComponent array.\n        axes[channel] = (axes[channel] || []).concat(child.component.axes[channel]);\n\n        // Automatically adjust orient\n        child.component.axes[channel].forEach(axisComponent => {\n          const {value: orient, explicit} = axisComponent.main.getWithExplicit('orient');\n          if (axisCount[orient] > 0 && !explicit) {\n            // Change axis orient if the number do not match\n            const oppositeOrient = OPPOSITE_ORIENT[orient];\n            if (axisCount[orient] > axisCount[oppositeOrient]) {\n              axisComponent.main.set('orient', oppositeOrient,  false);\n            }\n          }\n          axisCount[orient]++;\n\n          // TODO(https://github.com/vega/vega-lite/issues/2634): automaticaly add extra offset?\n        });\n      }\n\n      // After merging, make sure to remove axes from child\n      delete child.component.axes[channel];\n    }\n  });\n}\n\nfunction mergeAxisComponents(mergedAxisCmpts: AxisComponent[], childAxisCmpts: AxisComponent[]): AxisComponent[] {\n  if (mergedAxisCmpts) {\n    if (mergedAxisCmpts.length !== childAxisCmpts.length) {\n      return undefined; // Cannot merge axis component with different number of axes.\n    }\n    const length = mergedAxisCmpts.length;\n    for (let i = 0; i < length ; i++) {\n      const mergedMain = mergedAxisCmpts[i].main;\n      const childMain = childAxisCmpts[i].main;\n\n      if ((!!mergedMain) !== (!!childMain)) {\n        return undefined;\n      } else if (mergedMain && childMain) {\n        const mergedOrient = mergedMain.getWithExplicit('orient');\n        const childOrient = childMain.getWithExplicit('orient');\n\n        if (mergedOrient.explicit && childOrient.explicit && mergedOrient.value !== childOrient.value) {\n          // TODO: throw warning if resolve is explicit (We don't have info about explicit/implicit resolve yet.)\n          // Cannot merge due to inconsistent orient\n          return undefined;\n        } else {\n          mergedAxisCmpts[i].main = mergeAxisComponentPart(mergedMain, childMain);\n        }\n      }\n\n      const mergedGrid = mergedAxisCmpts[i].grid;\n      const childGrid = childAxisCmpts[i].grid;\n      if ((!!mergedGrid) !== (!!childGrid)) {\n        return undefined;\n      } else if (mergedGrid && childGrid) {\n        mergedAxisCmpts[i].grid = mergeAxisComponentPart(mergedGrid, childGrid);\n      }\n    }\n  } else {\n    // For first one, return a copy of the child\n    return childAxisCmpts.map(axisComponent => ({\n      ...(axisComponent.main ? {main: axisComponent.main.clone()} : {}),\n      ...(axisComponent.grid ? {grid: axisComponent.grid.clone()} : {})\n    }));\n  }\n  return mergedAxisCmpts;\n}\n\nfunction mergeAxisComponentPart(merged: AxisComponentPart, child: AxisComponentPart): AxisComponentPart {\n  for (const prop of VG_AXIS_PROPERTIES) {\n    const mergedValueWithExplicit = mergeValuesWithExplicit<VgAxis, any>(\n      merged.getWithExplicit(prop),\n      child.getWithExplicit(prop),\n      prop, 'axis',\n\n      // Tie breaker function\n      (v1: Explicit<any>, v2: Explicit<any>) => {\n        switch (prop) {\n          case 'title':\n            return titleMerger(v1, v2);\n          case 'gridScale':\n            return {\n              explicit: v1.explicit, // keep the old explicit\n              value: v1.value || v2.value\n            };\n        }\n        return defaultTieBreaker<VgAxis, any>(v1, v2, prop, 'axis');\n      }\n    );\n    merged.setWithExplicit(prop, mergedValueWithExplicit);\n  }\n  return merged;\n}\n\nfunction isFalseOrNull(v: boolean | null) {\n  return v === false || v === null;\n}\n\n/**\n * Return if an axis is visible (shows at least one part of the axis).\n */\nfunction isVisibleAxis(axis: AxisComponentPart) {\n  return some(AXIS_PARTS, (part) => hasAxisPart(axis, part));\n}\n\nfunction hasAxisPart(axis: AxisComponentPart, part: AxisPart) {\n  // FIXME(https://github.com/vega/vega-lite/issues/2552) this method can be wrong if users use a Vega theme.\n\n  if (part === 'axis') {\n    return true;\n  }\n\n  if (part === 'grid' || part === 'title') {\n    return !!axis.get(part);\n  }\n  // Other parts are enabled by default, so they should not be false or null.\n  return !isFalseOrNull(axis.get(part));\n}\n\n/**\n * Make an inner axis for showing grid for shared axis.\n */\nexport function parseGridAxis(channel: SpatialScaleChannel, model: UnitModel): AxisComponentPart {\n  // FIXME: support adding ticks for grid axis that are inner axes of faceted plots.\n  return parseAxis(channel, model, true);\n}\n\nexport function parseMainAxis(channel: SpatialScaleChannel, model: UnitModel): AxisComponentPart {\n  return parseAxis(channel, model, false);\n}\n\nfunction parseAxis(channel: SpatialScaleChannel, model: UnitModel, isGridAxis: boolean): AxisComponentPart {\n  const axis = model.axis(channel);\n\n  const axisComponent = new AxisComponentPart(\n    {},\n    {scale: model.scaleName(channel)} // implicit\n  );\n\n  // 1.2. Add properties\n  AXIS_PROPERTIES.forEach(function(property) {\n    const value = getProperty(property, axis, channel, model, isGridAxis);\n    if (value !== undefined) {\n      const explicit = property === 'values' ?\n        !!axis.values :  // specified axis.values is already respected, but may get transformed.\n        value === axis[property];\n\n      axisComponent.set(property, value, explicit);\n    }\n  });\n\n  // Special case for gridScale since gridScale is not a Vega-Lite Axis property.\n  const gridScale = rules.gridScale(model, channel, isGridAxis);\n  if (gridScale !== undefined) {\n    axisComponent.set('gridScale', gridScale, false);\n  }\n\n  // 2) Add guide encode definition groups\n\n  const axisEncoding = axis.encoding || {};\n  const axisEncode = AXIS_PARTS.reduce((e: VgAxisEncode, part) => {\n    if (!hasAxisPart(axisComponent, part)) {\n      // No need to create encode for a disabled part.\n      return e;\n    }\n\n    const value = part === 'labels' ?\n      encode.labels(model, channel, axisEncoding.labels || {}, axisComponent) :\n      axisEncoding[part] || {};\n\n    if (value !== undefined && keys(value).length > 0) {\n      e[part] = {update: value};\n    }\n    return e;\n  }, {} as VgAxisEncode);\n\n  // FIXME: By having encode as one property, we won't have fine grained encode merging.\n  if (keys(axisEncode).length > 0) {\n    axisComponent.set('encode', axisEncode, !!axis.encoding || !!axis.labelAngle);\n  }\n\n  return axisComponent;\n}\n\nfunction getProperty<K extends keyof (Axis|VgAxis)>(property: K, specifiedAxis: Axis, channel: SpatialScaleChannel, model: UnitModel, isGridAxis: boolean): VgAxis[K] {\n  const fieldDef = model.fieldDef(channel);\n\n  if ((isGridAxis && AXIS_PROPERTY_TYPE[property] === 'main') ||\n      (!isGridAxis && AXIS_PROPERTY_TYPE[property] === 'grid')) {\n    // Do not apply unapplicable properties\n    return undefined;\n  }\n\n  switch (property) {\n    case 'domain':\n      return rules.domain(property, specifiedAxis, isGridAxis, channel);\n    case 'format':\n      return numberFormat(fieldDef, specifiedAxis.format, model.config);\n    case 'grid': {\n      const scaleType = model.component.scales[channel].get('type');\n      return getSpecifiedOrDefaultValue(specifiedAxis.grid, rules.grid(scaleType, fieldDef));\n    }\n    case 'labels':\n      return isGridAxis ? false : specifiedAxis.labels;\n    case 'labelOverlap': {\n      const scaleType = model.component.scales[channel].get('type');\n      return rules.labelOverlap(fieldDef, specifiedAxis, channel, scaleType);\n    }\n    case 'minExtent': {\n      const scaleType = model.component.scales[channel].get('type');\n      return rules.minMaxExtent(specifiedAxis.minExtent, isGridAxis);\n    }\n    case 'maxExtent': {\n      const scaleType = model.component.scales[channel].get('type');\n      return rules.minMaxExtent(specifiedAxis.maxExtent, isGridAxis);\n    }\n    case 'orient':\n      return getSpecifiedOrDefaultValue(specifiedAxis.orient, rules.orient(channel));\n    case 'tickCount': {\n      const scaleType = model.component.scales[channel].get('type');\n      const sizeType = channel === 'x' ? 'width' : channel === 'y' ? 'height' : undefined;\n      const size = sizeType ? model.getSizeSignalRef(sizeType)\n       : undefined;\n      return getSpecifiedOrDefaultValue(specifiedAxis.tickCount, rules.tickCount(channel, fieldDef, scaleType, size));\n    }\n    case 'ticks':\n      return rules.ticks(property, specifiedAxis, isGridAxis, channel);\n    case 'title':\n      return getSpecifiedOrDefaultValue(specifiedAxis.title, rules.title(specifiedAxis.titleMaxLength, fieldDef, model.config));\n    case 'values':\n      return rules.values(specifiedAxis, model, fieldDef);\n    case 'zindex':\n      return getSpecifiedOrDefaultValue(specifiedAxis.zindex, rules.zindex(isGridAxis));\n  }\n  // Otherwise, return specified property.\n  return specifiedAxis[property];\n}\n","import {Axis} from '../../axis';\nimport {binToString} from '../../bin';\nimport {Channel, SpatialScaleChannel, X, Y} from '../../channel';\nimport {Config} from '../../config';\nimport {DateTime, dateTimeExpr, isDateTime} from '../../datetime';\nimport {FieldDef, title as fieldDefTitle} from '../../fielddef';\nimport * as log from '../../log';\nimport {getScaleCategory, hasContinuousDomain, hasDiscreteDomain, ScaleType} from '../../scale';\nimport {truncate} from '../../util';\nimport {VgAxis, VgSignalRef} from '../../vega.schema';\nimport {numberFormat} from '../common';\nimport {UnitModel} from '../unit';\nimport {labelAngle} from './encode';\n\n\nexport function domainAndTicks(property: 'domain' | 'ticks', specifiedAxis: Axis, isGridAxis: boolean, channel: Channel) {\n  if (isGridAxis) {\n    return false;\n  }\n  return specifiedAxis[property];\n}\n\nexport const domain = domainAndTicks;\nexport const ticks = domainAndTicks;\n\n// TODO: we need to refactor this method after we take care of config refactoring\n/**\n * Default rules for whether to show a grid should be shown for a channel.\n * If `grid` is unspecified, the default value is `true` for ordinal scales that are not binned\n */\nexport function grid(scaleType: ScaleType, fieldDef: FieldDef<string>) {\n  return !hasDiscreteDomain(scaleType) && !fieldDef.bin;\n}\n\nexport function gridScale(model: UnitModel, channel: Channel, isGridAxis: boolean) {\n  if (isGridAxis) {\n    const gridChannel: Channel = channel === 'x' ? 'y' : 'x';\n    if (model.getScaleComponent(gridChannel)) {\n      return model.scaleName(gridChannel);\n    }\n  }\n  return undefined;\n}\n\n\nexport function labelOverlap(fieldDef: FieldDef<string>, specifiedAxis: Axis, channel: Channel, scaleType: ScaleType) {\n  // do not prevent overlap for nominal data because there is no way to infer what the missing labels are\n  if ((channel === 'x' || channel === 'y') && fieldDef.type !== 'nominal') {\n    if (scaleType === 'log') {\n      return 'greedy';\n    }\n    return true;\n  }\n\n  return undefined;\n}\n\nexport function minMaxExtent(specifiedExtent: number, isGridAxis: boolean) {\n  if (isGridAxis) {\n    // Always return 0 to make sure that `config.axis*.minExtent` and `config.axis*.maxExtent`\n    // would not affect gridAxis\n    return 0;\n  } else {\n    return specifiedExtent;\n  }\n}\n\nexport function orient(channel: Channel) {\n  switch (channel) {\n    case X:\n      return 'bottom';\n    case Y:\n      return 'left';\n  }\n  /* istanbul ignore next: This should never happen. */\n  throw new Error(log.message.INVALID_CHANNEL_FOR_AXIS);\n}\n\nexport function tickCount(channel: Channel, fieldDef: FieldDef<string>, scaleType: ScaleType, size: VgSignalRef) {\n\n  if (!fieldDef.bin && !hasDiscreteDomain(scaleType) && scaleType !== 'log') {\n    // Vega's default tickCount often lead to a lot of label occlusion on X without 90 degree rotation\n    // Thus, we set it to 5 for width = 200\n    // and set the same value for y for consistency.\n\n    return {signal: `ceil(${size.signal}/40)`};\n  }\n\n  return undefined;\n}\n\nexport function title(maxLength: number, fieldDef: FieldDef<string>, config: Config) {\n  // if not defined, automatically determine axis title from field def\n  const fieldTitle = fieldDefTitle(fieldDef, config);\n  return maxLength ? truncate(fieldTitle, maxLength) : fieldTitle;\n}\n\nexport function values(specifiedAxis: Axis, model: UnitModel, fieldDef: FieldDef<string>) {\n  const vals = specifiedAxis.values;\n  if (specifiedAxis.values && isDateTime(vals[0])) {\n    return (vals as DateTime[]).map((dt) => {\n      // normalize = true as end user won't put 0 = January\n      return {signal: dateTimeExpr(dt, true)};\n    });\n  }\n  if (!vals && fieldDef.bin) {\n    const signal = model.getName(`${binToString(fieldDef.bin)}_${fieldDef.field}_bins`);\n    return {signal: `sequence(${signal}.start, ${signal}.stop + ${signal}.step, ${signal}.step)`};\n  }\n  return vals;\n}\n\nexport function zindex(isGridAxis: boolean) {\n  if (isGridAxis) {\n    // if grid is true, need to put layer on the back so that grid is behind marks\n    return 0;\n  }\n  return 1; // otherwise return undefined and use Vega's default.\n}\n","import {Config} from '../config';\nimport {ResolveMapping} from '../resolve';\nimport {BaseSpec} from '../spec';\nimport {keys} from '../util';\nimport {VgData, VgScale, VgSignal} from '../vega.schema';\nimport {parseData} from './data/parse';\nimport {assembleLayoutSignals} from './layoutsize/assemble';\nimport {Model} from './model';\nimport {assembleScaleForModelAndChildren} from './scale/assemble';\n\nexport abstract class BaseConcatModel extends Model {\n  constructor(spec: BaseSpec, parent: Model, parentGivenName: string, config: Config, resolve: ResolveMapping) {\n    super(spec, parent, parentGivenName, config, resolve);\n  }\n\n  public parseData() {\n    this.component.data = parseData(this);\n    this.children.forEach((child) => {\n      child.parseData();\n    });\n  }\n  public parseSelection() {\n    // Merge selections up the hierarchy so that they may be referenced\n    // across unit specs. Persist their definitions within each child\n    // to assemble signals which remain within output Vega unit groups.\n    this.component.selection = {};\n    for (const child of this.children) {\n      child.parseSelection();\n      keys(child.component.selection).forEach((key) => {\n        this.component.selection[key] = child.component.selection[key];\n      });\n    }\n  }\n\n  public parseMarkGroup() {\n    for (const child of this.children) {\n      child.parseMarkGroup();\n    }\n  }\n\n  public parseAxisAndHeader() {\n    for (const child of this.children) {\n      child.parseAxisAndHeader();\n    }\n\n    // TODO(#2415): support shared axes\n  }\n\n  public assembleScales(): VgScale[] {\n    return assembleScaleForModelAndChildren(this);\n  }\n\n  public assembleSelectionTopLevelSignals(signals: any[]): VgSignal[] {\n    return this.children.reduce((sg, child) => child.assembleSelectionTopLevelSignals(sg), signals);\n  }\n\n  public assembleSelectionSignals(): VgSignal[] {\n    this.children.forEach((child) => child.assembleSelectionSignals());\n    return [];\n  }\n\n  public assembleLayoutSignals(): VgSignal[] {\n    return this.children.reduce((signals, child) => {\n      return signals.concat(child.assembleLayoutSignals());\n    }, assembleLayoutSignals(this));\n  }\n\n  public assembleSelectionData(data: VgData[]): VgData[] {\n    return this.children.reduce((db, child) => child.assembleSelectionData(db), []);\n  }\n\n  public assembleMarks(): any[] {\n    // only children have marks\n    return this.children.map(child => {\n      const title = child.assembleTitle();\n      const style = child.assembleGroupStyle();\n      const layoutSizeEncodeEntry = child.assembleLayoutSize();\n      return {\n        type: 'group',\n        name: child.getName('group'),\n        ...(title ? {title} : {}),\n        ...(style ? {style} : {}),\n        ...(layoutSizeEncodeEntry ? {\n          encode: {\n            update: layoutSizeEncodeEntry\n          }\n        } : {}),\n        ...child.assembleGroup()\n      };\n    });\n  }\n}\n","import {Config} from '../config';\nimport * as log from '../log';\nimport {isConcatSpec, isFacetSpec, isLayerSpec, isRepeatSpec, isUnitSpec, LayoutSizeMixins, Spec} from '../spec';\nimport {ConcatModel} from './concat';\nimport {FacetModel} from './facet';\nimport {LayerModel} from './layer';\nimport {Model} from './model';\nimport {RepeatModel} from './repeat';\nimport {RepeaterValue} from './repeater';\nimport {UnitModel} from './unit';\n\nexport function buildModel(spec: Spec, parent: Model, parentGivenName: string,\n  unitSize: LayoutSizeMixins, repeater: RepeaterValue, config: Config): Model {\n  if (isFacetSpec(spec)) {\n    return new FacetModel(spec, parent, parentGivenName, repeater, config);\n  }\n\n  if (isLayerSpec(spec)) {\n    return new LayerModel(spec, parent, parentGivenName, unitSize, repeater, config);\n  }\n\n  if (isUnitSpec(spec)) {\n    return new UnitModel(spec, parent, parentGivenName, unitSize, repeater, config);\n  }\n\n  if (isRepeatSpec(spec)) {\n    return new RepeatModel(spec, parent, parentGivenName, repeater, config);\n  }\n\n  if (isConcatSpec(spec)) {\n    return new ConcatModel(spec, parent, parentGivenName, repeater, config);\n  }\n\n  throw new Error(log.message.INVALID_SPEC);\n}\n","import {Channel, TEXT} from '../channel';\nimport {CellConfig, Config} from '../config';\nimport {field, FieldDef, FieldRefOption, isScaleFieldDef, OrderFieldDef} from '../fielddef';\nimport * as log from '../log';\nimport {Mark, MarkConfig, MarkDef, TextConfig} from '../mark';\nimport {ScaleType} from '../scale';\nimport {TimeUnit} from '../timeunit';\nimport {formatExpression} from '../timeunit';\nimport {QUANTITATIVE} from '../type';\nimport {isArray} from '../util';\nimport {VgEncodeEntry, VgMarkConfig, VgSort} from '../vega.schema';\nimport {Explicit} from './split';\nimport {UnitModel} from './unit';\n\n\nexport function applyConfig(e: VgEncodeEntry,\n    config: CellConfig | MarkConfig | TextConfig, // TODO(#1842): consolidate MarkConfig | TextConfig?\n    propsList: string[]) {\n  for (const property of propsList) {\n    const value = config[property];\n    if (value !== undefined) {\n      e[property] = {value: value};\n    }\n  }\n  return e;\n}\n\nexport function applyMarkConfig(e: VgEncodeEntry, model: UnitModel, propsList: (keyof MarkConfig)[]) {\n  for (const property of propsList) {\n    const value = getMarkConfig(property, model.markDef, model.config);\n    if (value !== undefined) {\n      e[property] = {value: value};\n    }\n  }\n  return e;\n}\n\nexport function getStyles(mark: MarkDef): string[] {\n  if (mark.style) {\n    return isArray(mark.style) ? mark.style : [mark.style];\n  }\n  return [mark.type];\n}\n\n/**\n * Return value mark specific config property if exists.\n * Otherwise, return general mark specific config.\n */\nexport function getMarkConfig<P extends keyof MarkConfig>(prop: P, mark: MarkDef, config: Config): MarkConfig[P] {\n  // By default, read from mark config first!\n  let value = config.mark[prop];\n\n  // Then read mark specific config, which has higher precedence\n  const markSpecificConfig = config[mark.type];\n  if (markSpecificConfig[prop] !== undefined) {\n    value = markSpecificConfig[prop];\n  }\n\n  const styles = getStyles(mark);\n  for (const style of styles) {\n    const styleConfig = config.style[style];\n\n    // MarkConfig extends VgMarkConfig so a prop may not be a valid property for style\n    // However here we also check if it is defined, so it is okay to cast here\n    const p = prop as keyof VgMarkConfig;\n    if (styleConfig && styleConfig[p] !== undefined) {\n      value = styleConfig[p];\n    }\n  }\n\n  return value;\n}\n\nexport function formatSignalRef(fieldDef: FieldDef<string>, specifiedFormat: string, expr: 'datum' | 'parent', config: Config, useBinRange?: boolean) {\n  if (fieldDef.type === 'quantitative') {\n    const format = numberFormat(fieldDef, specifiedFormat, config);\n    if (fieldDef.bin) {\n      if (useBinRange) {\n        // For bin range, no need to apply format as the formula that creates range already include format\n        return {signal: field(fieldDef, {expr, binSuffix: 'range'})};\n      } else {\n        return {\n          signal: `${formatExpr(field(fieldDef, {expr, binSuffix: 'start'}), format)} + '-' + ${formatExpr(field(fieldDef, {expr, binSuffix: 'end'}), format)}`\n        };\n      }\n    } else {\n      return {\n        signal: `${formatExpr(field(fieldDef, {expr}), format)}`\n      };\n    }\n  } else if (fieldDef.type === 'temporal') {\n    const isUTCScale = isScaleFieldDef(fieldDef) && fieldDef['scale'] && fieldDef['scale'].type === ScaleType.UTC;\n    return {\n      signal: timeFormatExpression(field(fieldDef, {expr}), fieldDef.timeUnit, specifiedFormat, config.text.shortTimeLabels, config.timeFormat, isUTCScale)\n    };\n  } else {\n    return {signal: `''+${field(fieldDef, {expr})}`};\n  }\n}\n\nexport function getSpecifiedOrDefaultValue<T>(specifiedValue: T, defaultValue: T | {signal: string}) {\n  if (specifiedValue !== undefined) {\n    return specifiedValue;\n  }\n  return defaultValue;\n}\n\n/**\n * Returns number format for a fieldDef\n *\n * @param format explicitly specified format\n */\nexport function numberFormat(fieldDef: FieldDef<string>, specifiedFormat: string, config: Config) {\n  if (fieldDef.type === QUANTITATIVE) {\n    // add number format for quantitative type only\n\n    // Specified format in axis/legend has higher precedence than fieldDef.format\n    if (specifiedFormat) {\n      return specifiedFormat;\n    }\n\n    // TODO: need to make this work correctly for numeric ordinal / nominal type\n    return config.numberFormat;\n  }\n  return undefined;\n}\n\nfunction formatExpr(field: string, format: string) {\n  return `format(${field}, '${format || ''}')`;\n}\n\nexport function numberFormatExpr(field: string, specifiedFormat: string, config: Config) {\n  return formatExpr(field, specifiedFormat || config.numberFormat);\n}\n\n/**\n * Returns the time expression used for axis/legend labels or text mark for a temporal field\n */\nexport function timeFormatExpression(field: string, timeUnit: TimeUnit, format: string, shortTimeLabels: boolean, timeFormatConfig: string, isUTCScale: boolean): string {\n  if (!timeUnit || format) {\n    // If there is not time unit, or if user explicitly specify format for axis/legend/text.\n    const _format = format || timeFormatConfig; // only use config.timeFormat if there is no timeUnit.\n    if (isUTCScale) {\n      return `utcFormat(${field}, '${_format}')`;\n    } else {\n      return `timeFormat(${field}, '${_format}')`;\n    }\n  } else {\n    return formatExpression(timeUnit, field, shortTimeLabels, isUTCScale);\n  }\n}\n\n/**\n * Return Vega sort parameters (tuple of field and order).\n */\nexport function sortParams(orderDef: OrderFieldDef<string> | OrderFieldDef<string>[], fieldRefOption?: FieldRefOption): VgSort {\n  return (isArray(orderDef) ? orderDef : [orderDef]).reduce((s, orderChannelDef) => {\n    s.field.push(field(orderChannelDef, {binSuffix: 'start', ...fieldRefOption}));\n    s.order.push(orderChannelDef.sort || 'ascending');\n    return s;\n  }, {field:[], order: []});\n}\n\nexport function titleMerger(v1: Explicit<string>, v2: Explicit<string>) {\n  return {\n    explicit: v1.explicit, // keep the old explicit\n    value: v1.value === v2.value ?\n      v1.value : // if title is the same just use one of them\n      v1.value + ', ' + v2.value // join title with comma if different\n  };\n}\n","/**\n * Module for compiling Vega-lite spec into Vega spec.\n */\nimport {Config, initConfig, stripAndRedirectConfig} from '../config';\nimport * as log from '../log';\nimport {normalize, TopLevel, TopLevelExtendedSpec} from '../spec';\nimport {extractTopLevelProperties, TopLevelProperties} from '../toplevelprops';\nimport {buildModel} from './buildmodel';\nimport {assembleRootData} from './data/assemble';\nimport {optimizeDataflow} from './data/optimize';\nimport {Model} from './model';\n\nexport function compile(inputSpec: TopLevelExtendedSpec, logger?: log.LoggerInterface) {\n  if (logger) {\n    // set the singleton logger to the provided logger\n    log.set(logger);\n  }\n\n  try {\n    // 1. initialize config\n    const config = initConfig(inputSpec.config);\n\n    // 2. Convert input spec into a normalized form\n    // (Decompose all extended unit specs into composition of unit spec.)\n    const spec = normalize(inputSpec, config);\n\n    // 3. Instantiate the models with default config by doing a top-down traversal.\n    // This allows us to pass properties that child models derive from their parents via their constructors.\n    const model = buildModel(spec, null, '', undefined, undefined, config);\n\n    // 4. Parse parts of each model to produce components that can be merged\n    // and assembled easily as a part of a model.\n    // In this phase, we do a bottom-up traversal over the whole tree to\n    // parse for each type of components once (e.g., data, layout, mark, scale).\n    // By doing bottom-up traversal, we start parsing components of unit specs and\n    // then merge child components of parent composite specs.\n    //\n    // Please see inside model.parse() for order of different components parsed.\n    model.parse();\n\n    // 5. Optimize the datafow.\n    optimizeDataflow(model.component.data);\n\n    // 6. Assemble a Vega Spec from the parsed components.\n    return assembleTopLevelModel(model, getTopLevelProperties(inputSpec, config));\n  } finally {\n    // Reset the singleton logger if a logger is provided\n    if (logger) {\n      log.reset();\n    }\n  }\n}\n\n\nfunction getTopLevelProperties(topLevelSpec: TopLevel<any>, config: Config) {\n  return {\n    ...extractTopLevelProperties(config),\n    ...extractTopLevelProperties(topLevelSpec),\n  };\n}\n\n/*\n * Assemble the top-level model.\n *\n * Note: this couldn't be `model.assemble()` since the top-level model\n * needs some special treatment to generate top-level properties.\n */\nfunction assembleTopLevelModel(model: Model, topLevelProperties: TopLevelProperties) {\n  // TODO: change type to become VgSpec\n\n  // Config with Vega-Lite only config removed.\n  const vgConfig = model.config ? stripAndRedirectConfig(model.config) : undefined;\n\n  // autoResize has to be put under autosize\n  const {autoResize, ...topLevelProps} = topLevelProperties;\n  const title = model.assembleTitle();\n\n  const style = model.assembleGroupStyle();\n\n  const output = {\n    $schema: 'https://vega.github.io/schema/vega/v3.0.json',\n    ...(model.description ? {description: model.description} : {}),\n    // By using Vega layout, we don't support custom autosize\n    autosize: topLevelProperties.autoResize ? {type: 'pad', resize: true} : 'pad',\n    ...topLevelProps,\n    ...(title? {title} : {}),\n    ...(style? {style} : {}),\n    data: [].concat(\n      model.assembleSelectionData([]),\n      // only assemble data in the root\n      assembleRootData(model.component.data)\n    ),\n    ...model.assembleGroup([\n      ...model.assembleLayoutSignals(),\n      ...model.assembleSelectionTopLevelSignals([])\n    ]),\n    ...(vgConfig ? {config: vgConfig} : {})\n  };\n\n  return {\n    spec: output\n    // TODO: add warning / errors here\n  };\n}\n","import {Config} from '../config';\nimport {ConcatSpec, isVConcatSpec} from '../spec';\nimport {VgLayout} from '../vega.schema';\nimport {BaseConcatModel} from './baseconcat';\nimport {buildModel} from './buildmodel';\nimport {parseConcatLayoutSize} from './layoutsize/parse';\nimport {Model} from './model';\nimport {RepeaterValue} from './repeater';\n\nexport class ConcatModel extends BaseConcatModel {\n  public readonly type: 'concat' = 'concat';\n\n  public readonly children: Model[];\n\n  public readonly isVConcat: boolean;\n\n  constructor(spec: ConcatSpec, parent: Model, parentGivenName: string, repeater: RepeaterValue, config: Config) {\n    super(spec, parent, parentGivenName, config, spec.resolve);\n\n    this.isVConcat = isVConcatSpec(spec);\n\n    this.children = (isVConcatSpec(spec) ? spec.vconcat : spec.hconcat).map((child, i) => {\n      return buildModel(child, this, this.getName('concat_' + i), undefined, repeater, config);\n    });\n  }\n\n  public parseLayoutSize() {\n    parseConcatLayoutSize(this);\n  }\n\n\n  public parseAxisGroup(): void {\n    return null;\n  }\n\n  public assembleLayout(): VgLayout {\n    // TODO: allow customization\n    return {\n      padding: {row: 10, column: 10},\n      offset: 10,\n      ...(this.isVConcat ? {columns: 1} : {}),\n      bounds: 'full',\n      align: 'all'\n    };\n  }\n}\n","import {AggregateOp} from '../../aggregate';\nimport {isScaleChannel} from '../../channel';\nimport {forEach} from '../../encoding';\nimport {field, FieldDef} from '../../fielddef';\nimport * as log from '../../log';\nimport {Summarize, SummarizeTransform} from '../../transform';\nimport {ORDINAL} from '../../type';\nimport {Dict, differ, duplicate, extend, keys, StringSet} from '../../util';\nimport {VgAggregateTransform} from '../../vega.schema';\nimport {Model} from '../model';\nimport {UnitModel} from './../unit';\nimport {DataFlowNode} from './dataflow';\n\n\nfunction addDimension(dims: {[field: string]: boolean}, fieldDef: FieldDef<string>) {\n  if (fieldDef.bin) {\n    dims[field(fieldDef, {binSuffix: 'start'})] = true;\n    dims[field(fieldDef, {binSuffix: 'end'})] = true;\n\n    // We need the range only when the user explicitly forces a binned field to be ordinal (range used in axis and legend labels).\n    // We could check whether the axis or legend exists but that seems overkill. In axes and legends, we check hasDiscreteDomain(scaleType).\n    if (fieldDef.type === ORDINAL) {\n      dims[field(fieldDef, {binSuffix: 'range'})] = true;\n    }\n  } else {\n    dims[field(fieldDef)] = true;\n  }\n  return dims;\n}\n\nfunction mergeMeasures(parentMeasures: Dict<Dict<string>>, childMeasures: Dict<Dict<string>>) {\n  for (const f in childMeasures) {\n    if (childMeasures.hasOwnProperty(f)) {\n      // when we merge a measure, we either have to add an aggregation operator or even a new field\n      const ops = childMeasures[f];\n      for (const op in ops) {\n        if (ops.hasOwnProperty(op)) {\n          if (f in parentMeasures) {\n            // add operator to existing measure field\n            parentMeasures[f][op] = ops[op];\n          } else {\n            parentMeasures[f] = {op: ops[op]};\n          }\n        }\n      }\n    }\n  }\n}\n\nexport class AggregateNode extends DataFlowNode {\n  public clone() {\n    return new AggregateNode(extend({}, this.dimensions), duplicate(this.measures));\n  }\n\n  /**\n   * @param dimensions string set for dimensions\n   * @param measures dictionary mapping field name => dict of aggregation functions and names to use\n   */\n  constructor(private dimensions: StringSet, private measures: Dict<Dict<string>>) {\n    super();\n  }\n\n  public static makeFromEncoding(model: UnitModel): AggregateNode {\n    let isAggregate = false;\n    model.forEachFieldDef(fd => {\n      if (fd.aggregate) {\n        isAggregate = true;\n      }\n    });\n\n    const meas = {};\n    const dims = {};\n\n    if (!isAggregate) {\n      // no need to create this node if the model has no aggregation\n      return null;\n    }\n\n    model.forEachFieldDef((fieldDef, channel) => {\n      if (fieldDef.aggregate) {\n        if (fieldDef.aggregate === 'count') {\n          meas['*'] = meas['*'] || {};\n          meas['*']['count'] = field(fieldDef, {aggregate: 'count'});\n        } else {\n          meas[fieldDef.field] = meas[fieldDef.field] || {};\n          meas[fieldDef.field][fieldDef.aggregate] = field(fieldDef);\n\n          // For scale channel with domain === 'unaggregated', add min/max so we can use their union as unaggregated domain\n          if (isScaleChannel(channel) && model.scaleDomain(channel) === 'unaggregated') {\n            meas[fieldDef.field]['min'] = field(fieldDef, {aggregate: 'min'});\n            meas[fieldDef.field]['max'] = field(fieldDef, {aggregate: 'max'});\n          }\n        }\n      } else {\n        addDimension(dims, fieldDef);\n      }\n    });\n\n    if ((keys(dims).length + keys(meas).length) === 0) {\n      return null;\n    }\n\n    return new AggregateNode(dims, meas);\n  }\n\n  public static makeFromTransform(model: Model, t: SummarizeTransform): AggregateNode {\n    const dims = {};\n    const meas = {};\n    for(const s of t.summarize) {\n      if (s.aggregate) {\n        if (s.aggregate === 'count') {\n          meas['*'] = meas['*'] || {};\n          meas['*']['count'] = s.as || field(s);\n        } else {\n          meas[s.field] = meas[s.field] || {};\n          meas[s.field][s.aggregate] = s.as || field(s);\n        }\n      }\n    }\n\n    for(const s of t.groupby) {\n      dims[s] = true;\n    }\n\n    if ((keys(dims).length + keys(meas).length)  === 0) {\n      return null;\n    }\n\n    return new AggregateNode(dims, meas);\n  }\n\n  public merge(other: AggregateNode) {\n    if (!differ(this.dimensions, other.dimensions)) {\n      mergeMeasures(this.measures, other.measures);\n      other.remove();\n    } else {\n      log.debug('different dimensions, cannot merge');\n    }\n  }\n\n  public addDimensions(fields: string[]) {\n    fields.forEach(f => this.dimensions[f] = true);\n  }\n\n  public dependentFields() {\n    const out = {};\n\n    keys(this.dimensions).forEach(f => out[f] = true);\n    keys(this.measures).forEach(m => out[m] = true);\n\n    return out;\n  }\n\n  public producedFields() {\n    const out = {};\n\n    keys(this.measures).forEach(field => {\n      keys(this.measures[field]).forEach(op => {\n        out[`${op}_${field}`] = true;\n      });\n    });\n\n    return out;\n  }\n\n  public assemble(): VgAggregateTransform {\n    const ops: AggregateOp[] = [];\n    const fields: string[] = [];\n    const as: string[] = [];\n    keys(this.measures).forEach(field => {\n      keys(this.measures[field]).forEach((op: AggregateOp) => {\n        as.push(this.measures[field][op]);\n        ops.push(op);\n        fields.push(field);\n      });\n    });\n\n    const result: VgAggregateTransform = {\n      type: 'aggregate',\n      groupby: keys(this.dimensions),\n      ops,\n      fields,\n      as\n    };\n\n    return result;\n  }\n}\n","import {isUrlData, MAIN} from '../../data';\nimport {every, flatten, vals} from '../../util';\nimport {VgData} from '../../vega.schema';\nimport {DataComponent} from './';\nimport {AggregateNode} from './aggregate';\nimport {BinNode} from './bin';\nimport {DataFlowNode, OutputNode} from './dataflow';\nimport {FacetNode} from './facet';\nimport {ParseNode} from './formatparse';\nimport {NonPositiveFilterNode} from './nonpositivefilter';\nimport {NullFilterNode} from './nullfilter';\nimport {SourceNode} from './source';\nimport {StackNode} from './stack';\nimport {TimeUnitNode} from './timeunit';\nimport {CalculateNode, FilterNode, IdentifierNode, LookupNode} from './transforms';\n\n/**\n * Print debug information for dataflow tree.\n */\nfunction debug(node: DataFlowNode) {\n  console.log(`${(node.constructor as any).name}${node.debugName ? ` (${node.debugName})` : ''} -> ${\n    (node.children.map(c => {\n      return `${(c.constructor as any).name}${c.debugName ? ` (${c.debugName})` : ''}`;\n    }))\n  }`);\n  console.log(node);\n  node.children.forEach(debug);\n}\n\nfunction makeWalkTree(data: VgData[]) {\n  // to name datasources\n  let datasetIndex = 0;\n\n  /**\n   * Recursively walk down the tree.\n   */\n  function walkTree(node: DataFlowNode, dataSource: VgData) {\n    if (node instanceof SourceNode) {\n      // If the source is a named data source or a data source with values, we need\n      // to put it in a different data source. Otherwise, Vega may override the data.\n      if (!isUrlData(node.data)) {\n        data.push(dataSource);\n        const newData: VgData = {\n          name: null,\n          source: dataSource.name,\n          transform: []\n        };\n        dataSource = newData;\n      }\n    }\n\n    if (node instanceof ParseNode) {\n      if (node.parent instanceof SourceNode && !dataSource.source)  {\n        // If node's parent is a root source and the data source does not refer to another data source, use normal format parse\n        dataSource.format = {\n          ...dataSource.format || {},\n          parse: node.assembleFormatParse()\n        };\n      } else {\n        // Otherwise use Vega expression to parse\n        dataSource.transform = dataSource.transform.concat(node.assembleTransforms());\n      }\n    }\n\n    if (node instanceof FacetNode) {\n      if (!dataSource.name) {\n        dataSource.name = `data_${datasetIndex++}`;\n      }\n\n      if (!dataSource.source || dataSource.transform.length > 0) {\n        data.push(dataSource);\n        node.data = dataSource.name;\n      } else {\n        node.data = dataSource.source;\n      }\n\n      node.assemble().forEach(d => data.push(d));\n\n      // break here because the rest of the tree has to be taken care of by the facet.\n      return;\n    }\n\n    if (node instanceof FilterNode ||\n      node instanceof NullFilterNode ||\n      node instanceof CalculateNode ||\n      node instanceof AggregateNode ||\n      node instanceof LookupNode ||\n      node instanceof IdentifierNode) {\n      dataSource.transform.push(node.assemble());\n    }\n\n    if (node instanceof NonPositiveFilterNode ||\n      node instanceof BinNode ||\n      node instanceof TimeUnitNode ||\n      node instanceof StackNode) {\n      dataSource.transform = dataSource.transform.concat(node.assemble());\n    }\n\n    if (node instanceof AggregateNode) {\n      if (!dataSource.name) {\n        dataSource.name = `data_${datasetIndex++}`;\n      }\n    }\n\n    if (node instanceof OutputNode) {\n      if (dataSource.source && dataSource.transform.length === 0) {\n        node.setSource(dataSource.source);\n      } else if (node.parent instanceof OutputNode) {\n        // Note that an output node may be required but we still do not assemble a\n        // separate data source for it.\n        node.setSource(dataSource.name);\n      } else {\n        if (!dataSource.name) {\n          dataSource.name = `data_${datasetIndex++}`;\n        }\n\n        // Here we set the name of the datasource we generated. From now on\n        // other assemblers can use it.\n        node.setSource(dataSource.name);\n\n        // if this node has more than one child, we will add a datasource automatically\n        if (node.numChildren() === 1) {\n          data.push(dataSource);\n          const newData: VgData = {\n            name: null,\n            source: dataSource.name,\n            transform: []\n          };\n          dataSource = newData;\n        }\n      }\n    }\n\n    switch (node.numChildren()) {\n      case 0:\n        // done\n        if (node instanceof OutputNode && (!dataSource.source || dataSource.transform.length > 0)) {\n          // do not push empty datasources that are simply references\n          data.push(dataSource);\n        }\n        break;\n      case 1:\n        walkTree(node.children[0], dataSource);\n        break;\n      default:\n        if (!dataSource.name) {\n          dataSource.name = `data_${datasetIndex++}`;\n        }\n\n        let source = dataSource.name;\n        if (!dataSource.source || dataSource.transform.length > 0) {\n          data.push(dataSource);\n        } else {\n          source = dataSource.source;\n        }\n\n        node.children.forEach(child => {\n          const newData: VgData = {\n            name: null,\n            source: source,\n            transform: []\n          };\n          walkTree(child, newData);\n        });\n        break;\n    }\n  }\n\n  return walkTree;\n}\n\n/**\n * Assemble data sources that are derived from faceted data.\n */\nexport function assembleFacetData(root: FacetNode): VgData[] {\n  const data: VgData[] = [];\n  const walkTree = makeWalkTree(data);\n\n  root.children.forEach(child => walkTree(child, {\n    source: root.name,\n    name: null,\n    transform: []\n  }));\n\n  return data;\n}\n\n/**\n * Create Vega Data array from a given compiled model and append all of them to the given array\n *\n * @param  model\n * @param  data array\n * @return modified data array\n */\nexport function assembleRootData(dataComponent: DataComponent): VgData[] {\n  const roots: SourceNode[] = vals(dataComponent.sources);\n  const data: VgData[] = [];\n\n  // roots.forEach(debug);\n\n  const walkTree = makeWalkTree(data);\n\n  let sourceIndex = 0;\n\n  roots.forEach(root => {\n    // assign a name if the source does not have a name yet\n    if (!root.hasName()) {\n      root.dataName = `source_${sourceIndex++}`;\n    }\n\n    const newData: VgData = root.assemble();\n\n    walkTree(root, newData);\n  });\n\n  // remove empty transform arrays for cleaner output\n  data.forEach(d => {\n    if (d.transform.length === 0) {\n      delete d.transform;\n    }\n  });\n\n  // move sources without transforms (the ones that are potentially used in lookups) to the beginning\n  data.sort((a, b) => (a.transform || []).length === 0 ? -1 : ((b.transform || []).length === 0 ? 1 : 0));\n\n  // now fix the from references in lookup transforms\n  for (const d of data) {\n    for (const t of d.transform || []) {\n      if (t.type === 'lookup') {\n        t.from = dataComponent.outputNodes[t.from].getSource();\n      }\n    }\n  }\n\n  return data;\n}\n","import {autoMaxBins, Bin, binToString} from '../../bin';\nimport {Channel} from '../../channel';\nimport {Config} from '../../config';\nimport {field, FieldDef, normalizeBin} from '../../fielddef';\nimport {hasDiscreteDomain} from '../../scale';\nimport {BinTransform, Transform} from '../../transform';\nimport {Dict, duplicate, extend, flatten, hash, isBoolean, keys, StringSet, vals} from '../../util';\nimport {VgBinTransform, VgTransform} from '../../vega.schema';\nimport {numberFormatExpr} from '../common';\nimport {isUnitModel, Model, ModelWithField} from '../model';\nimport {UnitModel} from '../unit';\nimport {DataFlowNode} from './dataflow';\n\nfunction rangeFormula(model: ModelWithField, fieldDef: FieldDef<string>, channel: Channel, config: Config) {\n    const discreteDomain = model.hasDiscreteDomain(channel);\n\n    if (discreteDomain) {\n      // read format from axis or legend, if there is no format then use config.numberFormat\n\n      const guide = isUnitModel(model) ? (model.axis(channel) || model.legend(channel) || {}) : {};\n\n      const startField = field(fieldDef, {expr: 'datum', binSuffix: 'start'});\n      const endField = field(fieldDef, {expr: 'datum', binSuffix: 'end'});\n\n      return {\n        formulaAs: field(fieldDef, {binSuffix: 'range'}),\n        formula: `${numberFormatExpr(startField, guide.format, config)} + \" - \" + ${numberFormatExpr(endField, guide.format, config)}`\n      };\n    }\n    return {};\n}\n\nfunction binKey(bin: Bin, field: string) {\n  return `${binToString(bin)}_${field}`;\n}\n\nfunction createBinComponent(bin: Bin, t: FieldDef<string>|BinTransform, model: Model, key:string) {\n  return {\n    bin: bin,\n    field: t.field,\n    as: [field(t, {binSuffix: 'start'}), field(t, {binSuffix: 'end'})],\n    signal: model.getName(`${key}_bins`),\n    extentSignal: model.getName(key + '_extent')\n  };\n}\n\nexport interface BinComponent {\n  bin: Bin;\n  field: string;\n  extentSignal: string;\n  signal: string;\n  as: string[];\n\n  // Range Formula\n\n  formula?: string;\n  formulaAs?: string;\n}\n\nexport class BinNode extends DataFlowNode {\n  public clone() {\n    return new BinNode(duplicate(this.bins));\n  }\n\n  constructor(private bins: Dict<BinComponent>) {\n    super();\n  }\n\n  public static makeBinFromEncoding(model: ModelWithField) {\n    const bins = model.reduceFieldDef((binComponent: Dict<BinComponent>, fieldDef, channel) => {\n      const fieldDefBin = fieldDef.bin;\n      if (fieldDefBin) {\n        const bin = normalizeBin(fieldDefBin, undefined) || {};\n        const key = binKey(bin, fieldDef.field);\n        if (!(key in binComponent)) {\n          binComponent[key] =  createBinComponent(bin, fieldDef, model, key);\n        }\n        binComponent[key] = {\n          ...binComponent[key],\n          ...rangeFormula(model, fieldDef, channel, model.config)\n        };\n      }\n      return binComponent;\n    }, {});\n\n    if (keys(bins).length === 0) {\n      return null;\n    }\n\n    return new BinNode(bins);\n  }\n\n  public static makeFromTransform(model: Model, t: BinTransform) {\n    const bins: Dict<BinComponent> = {};\n\n    const bin = normalizeBin(t.bin, undefined) || {};\n    const key = binKey(bin, t.field);\n    return new BinNode({\n      [key]: createBinComponent(bin, t, model, key)\n    });\n}\n\n  public merge(other: BinNode) {\n    this.bins = extend(other.bins);\n    other.remove();\n  }\n\n  public producedFields() {\n    const out = {};\n\n    vals(this.bins).forEach(c => {\n      c.as.forEach(f => out[f] = true);\n    });\n\n    return out;\n  }\n\n  public dependentFields() {\n    const out = {};\n\n    vals(this.bins).forEach(c => {\n      out[c.field] = true;\n    });\n\n    return out;\n  }\n\n  public assemble(): VgTransform[] {\n    return flatten(vals(this.bins).map(bin => {\n      const transform: VgTransform[] = [];\n\n      const binTrans: VgBinTransform = {\n          type: 'bin',\n          field: bin.field,\n          as: bin.as,\n          signal: bin.signal,\n          ...bin.bin\n      };\n\n      if (!bin.bin.extent) {\n        transform.push({\n          type: 'extent',\n          field: bin.field,\n          signal: bin.extentSignal\n        });\n        binTrans.extent = {signal: bin.extentSignal};\n      }\n\n      transform.push(binTrans);\n\n      if (bin.formula) {\n        transform.push({\n          type: 'formula',\n          expr: bin.formula,\n          as: bin.formulaAs\n        });\n      }\n\n      return transform;\n    }));\n  }\n}\n","import {isFunction} from 'util';\nimport {DataSourceType} from '../../data';\nimport {Dict, StringSet} from '../../util';\n\n\n/**\n * A node in the dataflow tree.\n */\nexport class DataFlowNode {\n  private _children: DataFlowNode[] = [];\n\n  private _parent: DataFlowNode = null;\n\n  constructor(public readonly debugName?: string) { }\n\n  /**\n   * Clone this node with a deep copy but don't clone links to children or parents.\n   */\n  public clone(): DataFlowNode {\n    throw new Error('Cannot clone node');\n  }\n\n  /**\n   * Set of fields that are being created by this node.\n   */\n  public producedFields(): StringSet {\n    return {};\n  }\n\n  public dependentFields(): StringSet {\n    return {};\n  }\n\n  get parent() {\n    return this._parent;\n  }\n\n  /**\n   * Set the parent of the node and also add this not to the parent's children.\n   */\n  set parent(parent: DataFlowNode) {\n    this._parent = parent;\n    parent.addChild(this);\n  }\n\n  get children() {\n    return this._children;\n  }\n\n  public numChildren() {\n    return this._children.length;\n  }\n\n  public addChild(child: DataFlowNode) {\n    this._children.push(child);\n  }\n\n  public removeChild(oldChild: DataFlowNode) {\n    this._children.splice(this._children.indexOf(oldChild), 1);\n  }\n\n  /**\n   * Remove node from the dataflow.\n   */\n  public remove() {\n    for (const child of this._children) {\n      child.parent = this._parent;\n    }\n    this._parent.removeChild(this);\n  }\n\n  /**\n   * Insert another node as a parent of this node.\n   */\n  public insertAsParentOf(other: DataFlowNode) {\n    const parent = other.parent;\n    parent.removeChild(this);\n    this.parent = parent;\n    other.parent = this;\n  }\n\n  public swapWithParent() {\n    const parent = this._parent;\n    const newParent = parent.parent;\n\n    // reconnect the children\n    for (const child of this._children) {\n      child.parent = parent;\n    }\n\n    // remove old links\n    this._children = [];  // equivalent to removing every child link one by one\n    parent.removeChild(this);\n    parent.parent.removeChild(parent);\n\n\n    // swap two nodes\n    this.parent = newParent;\n    parent.parent = this;\n  }\n}\n\nexport class OutputNode extends DataFlowNode {\n  private _source: string;\n\n  private _name: string;\n\n  public clone(): this {\n    const cloneObj = new (<any>this.constructor);\n    cloneObj.debugName = 'clone_' + this.debugName;\n    cloneObj._source = this._source;\n    cloneObj._name = 'clone_' + this._name;\n    cloneObj.type = this.type;\n    cloneObj.refCounts = this.refCounts;\n    cloneObj.refCounts[cloneObj._name] = 0;\n    return cloneObj;\n  }\n\n  /**\n   * @param source The name of the source. Will change in assemble.\n   * @param type The type of the output node.\n   * @param refCounts A global ref counter map.\n   */\n  constructor(source: string, public readonly type: DataSourceType, private readonly refCounts: Dict<number>) {\n    super(source);\n\n    this._source = this._name = source;\n\n    if (this.refCounts && !(this._name in this.refCounts)) {\n      this.refCounts[this._name] = 0;\n    }\n  }\n\n  /**\n   * Request the datasource name and increase the ref counter.\n   *\n   * During the parsing phase, this will return the simple name such as 'main' or 'raw'.\n   * It is crucial to request the name from an output node to mark it as a required node.\n   * If nobody ever requests the name, this datasource will not be instantiated in the assemble phase.\n   *\n   * In the assemble phase, this will return the correct name.\n   */\n  public getSource() {\n    this.refCounts[this._name]++;\n    return this._source;\n  }\n\n  public isRequired(): boolean {\n    return !!this.refCounts[this._name];\n  }\n\n  public setSource(source: string) {\n    this._source = source;\n  }\n}\n","import {AggregateOp} from '../../aggregate';\nimport {COLUMN, ROW, ScaleChannel} from '../../channel';\nimport {hasDiscreteDomain} from '../../scale';\nimport {isVgRangeStep, VgAggregateTransform, VgData, VgTransform} from '../../vega.schema';\nimport {FacetModel} from '../facet';\nimport {getFieldFromDomains} from '../scale/domain';\nimport {DataFlowNode, OutputNode} from './dataflow';\n\n/**\n * A node that helps us track what fields we are faceting by.\n */\nexport class FacetNode extends DataFlowNode {\n  private readonly columnField: string;\n  private readonly columnName: string;\n\n  private readonly childIndependentFieldWithStep: {\n    x?: string,\n    y?: string\n  } = {};\n\n  private readonly rowField: string;\n  private readonly rowName: string;\n\n  /**\n   * @param model The facet model.\n   * @param name The name that this facet source will have.\n   * @param data The source data for this facet data.\n   */\n  public constructor(public readonly model: FacetModel, public readonly name: string, public data: string) {\n    super();\n\n    if (model.facet.column) {\n      this.columnField = model.field(COLUMN);\n      this.columnName = model.getName('column_domain');\n    }\n\n    if (model.facet.row) {\n      this.rowField = model.field(ROW);\n      this.rowName = model.getName('row_domain');\n    }\n\n    for (const channel of ['x', 'y'] as ScaleChannel[]) {\n      const childScaleComponent = model.child.component.scales[channel];\n      if (childScaleComponent && !childScaleComponent.merged) {\n        const type = childScaleComponent.get('type');\n        const range = childScaleComponent.get('range');\n\n        if (hasDiscreteDomain(type) && isVgRangeStep(range)) {\n          const field = getFieldFromDomains(childScaleComponent.domains);\n          if (field) {\n            this.childIndependentFieldWithStep[channel] = field;\n          } else {\n            throw new Error('We do not yet support calculation of size for faceted union domain.');\n          }\n        }\n      }\n    }\n  }\n\n  get fields() {\n    const fields: string[] = [];\n    if (this.columnField) {\n      fields.push(this.columnField);\n    }\n    if (this.rowField) {\n      fields.push(this.rowField);\n    }\n    return fields;\n  }\n\n  /**\n   * The name to reference this source is its name.\n   */\n  public getSource() {\n    return this.name;\n  }\n\n  private assembleRowColumnData(channel: 'row' | 'column', crossedDataName: string): VgData {\n    const childChannel = channel === 'row' ? 'y' : 'x';\n\n    let aggregateChildField: Partial<VgAggregateTransform> = {};\n\n    if (this.childIndependentFieldWithStep[childChannel]) {\n      if (crossedDataName) {\n        aggregateChildField = {\n          // If there is a crossed data, calculate max\n          fields: [`distinct_${this.childIndependentFieldWithStep[childChannel]}`],\n          ops: ['max'],\n          // Although it is technically a max, just name it distinct so it's easier to refer to it\n          as: [`distinct_${this.childIndependentFieldWithStep[childChannel]}`]\n        };\n      } else {\n        aggregateChildField = {\n          // If there is no crossed data, just calculate distinct\n          fields: [this.childIndependentFieldWithStep[childChannel]],\n          ops: ['distinct']\n        };\n      }\n    }\n\n    return {\n      name: channel === 'row' ? this.rowName : this.columnName,\n      // Use data from the crossed one if it exist\n      source: crossedDataName || this.data,\n      transform: [{\n        type: 'aggregate',\n        groupby: [channel === 'row' ? this.rowField : this.columnField],\n        ...aggregateChildField\n      }]\n    };\n  }\n\n  public assemble() {\n    const data: VgData[] = [];\n    let crossedDataName = null;\n\n    if (this.columnName && this.rowName && (this.childIndependentFieldWithStep.x || this.childIndependentFieldWithStep.y)) {\n      // Need to create a cross dataset to correctly calculate cardinality\n      crossedDataName = `cross_${this.columnName}_${this.rowName}`;\n\n      const fields = [].concat(\n        this.childIndependentFieldWithStep.x ? [this.childIndependentFieldWithStep.x] : [],\n        this.childIndependentFieldWithStep.y ? [this.childIndependentFieldWithStep.y] : [],\n      );\n      const ops = fields.map((): AggregateOp => 'distinct');\n\n      data.push({\n        name: crossedDataName,\n        source: this.data,\n        transform: [{\n          type: 'aggregate',\n          groupby: [this.columnField, this.rowField],\n          fields: fields,\n          ops\n        }]\n      });\n    }\n\n    if (this.columnName) {\n      data.push(this.assembleRowColumnData('column', crossedDataName));\n    }\n\n    if (this.rowName) {\n      data.push(this.assembleRowColumnData('row', crossedDataName));\n    }\n\n    return data;\n  }\n}\n","import {isCountingAggregateOp} from '../../aggregate';\nimport {DateTime, isDateTime} from '../../datetime';\nimport {FieldDef, isCount} from '../../fielddef';\nimport {Filter, isEqualFilter, isOneOfFilter, isRangeFilter} from '../../filter';\nimport * as log from '../../log';\nimport {forEachLeave} from '../../logical';\nimport {CalculateTransform, FilterTransform, isCalculate, isFilter, Transform} from '../../transform';\nimport {QUANTITATIVE, TEMPORAL} from '../../type';\nimport {Dict, duplicate, extend, isArray, isNumber, isString, keys, stringValue, toSet} from '../../util';\nimport {VgFormulaTransform} from '../../vega.schema';\nimport {isFacetModel, isUnitModel, Model, ModelWithField} from '../model';\nimport {DataFlowNode} from './dataflow';\n\n\nfunction parseExpression(field: string, parse: string): string {\n  const f = `datum[${stringValue(field)}]`;\n  if (parse === 'number') {\n    return `toNumber(${f})`;\n  } else if (parse === 'boolean') {\n    return `toBoolean(${f})`;\n  } else if (parse === 'string') {\n    return `toString(${f})`;\n  } else if (parse === 'date') {\n    return `toDate(${f})`;\n  } else if (parse.indexOf('date:') === 0) {\n    const specifier = parse.slice(5, parse.length);\n    return `timeParse(${f},${specifier})`;\n  } else if (parse.indexOf('utc:') === 0) {\n    const specifier = parse.slice(4, parse.length);\n    return `utcParse(${f},${specifier})`;\n  } else {\n    log.warn(log.message.unrecognizedParse(parse));\n    return null;\n  }\n}\n\nexport class ParseNode extends DataFlowNode {\n  private _parse: Dict<string> = {};\n\n  public clone() {\n    return new ParseNode(duplicate(this.parse));\n  }\n\n  constructor(parse: Dict<string>) {\n    super();\n\n    this._parse = parse;\n  }\n\n  public static make(model: Model) {\n    const parse = {};\n    const calcFieldMap = {};\n\n    (model.transforms || []).forEach((transform: Transform) => {\n      if (isCalculate(transform)) {\n        calcFieldMap[transform.as] = true;\n      } else if (isFilter(transform)) {\n        forEachLeave(transform.filter, (filter) => {\n          if (isEqualFilter(filter) || isRangeFilter(filter) || isOneOfFilter(filter)) {\n            if (filter.timeUnit) {\n              parse[filter.field] = 'date';\n            }\n          }\n        });\n      }\n    }, {});\n\n    if (isUnitModel(model) || isFacetModel(model)) {\n      // Parse encoded fields\n      model.forEachFieldDef(fieldDef => {\n        if (fieldDef.type === TEMPORAL) {\n          parse[fieldDef.field] = 'date';\n        } else if (fieldDef.type === QUANTITATIVE) {\n          if (calcFieldMap[fieldDef.field] || isCountingAggregateOp(fieldDef.aggregate)) {\n            return;\n          }\n          parse[fieldDef.field] = 'number';\n        }\n      });\n    }\n\n    // Custom parse should override inferred parse\n    const data = model.data;\n    if (data && data.format && data.format.parse) {\n      const p = data.format.parse;\n      keys(p).forEach(field => {\n        parse[field] = p[field];\n      });\n    }\n\n    // We should not parse what has already been parsed in a parent\n    const modelParse = model.component.data.ancestorParse;\n    keys(modelParse).forEach(field => {\n      if (parse[field] !== modelParse[field]) {\n        log.warn(log.message.differentParse(field, parse[field], modelParse[field]));\n      } else {\n        delete parse[field];\n      }\n    });\n\n    if (keys(parse).length === 0) {\n      return null;\n    }\n\n    return new ParseNode(parse);\n  }\n\n  public get parse() {\n    return this._parse;\n  }\n\n  public merge(other: ParseNode) {\n    this._parse = extend(this._parse, other.parse);\n    other.remove();\n  }\n  public assembleFormatParse() {\n    return this._parse;\n  }\n\n  // format parse depends and produces all fields in its parse\n  public producedFields() {\n    return toSet(keys(this.parse));\n  }\n\n  public dependentFields() {\n    return toSet(keys(this.parse));\n  }\n\n  public assembleTransforms(): VgFormulaTransform[] {\n    return keys(this._parse).map(field => {\n      const expr = parseExpression(field, this._parse[field]);\n      if (!expr) {\n        return null;\n      }\n\n      const formula: VgFormulaTransform = {\n        type: 'formula',\n        expr,\n        as: field\n      };\n      return formula;\n    }).filter(t => t !== null);\n  }\n}\n","import {SCALE_CHANNELS} from '../../channel';\nimport {ScaleType} from '../../scale';\nimport {Dict, duplicate, extend, keys, stringValue} from '../../util';\nimport {VgFilterTransform, VgTransform} from '../../vega.schema';\nimport {UnitModel} from './../unit';\nimport {DataFlowNode} from './dataflow';\n\n\nexport class NonPositiveFilterNode extends DataFlowNode {\n  private _filter: Dict<boolean>;\n\n  public clone() {\n    return new NonPositiveFilterNode(extend({}, this._filter));\n  }\n\n  constructor(filter: Dict<boolean>) {\n    super();\n\n    this._filter = filter;\n  }\n\n  public static make(model: UnitModel) {\n    const filter = SCALE_CHANNELS.reduce(function(nonPositiveComponent, channel) {\n      const scale = model.getScaleComponent(channel);\n      if (!scale || !model.field(channel)) {\n        // don't set anything\n        return nonPositiveComponent;\n      }\n      nonPositiveComponent[model.field(channel)] = scale.get('type') === ScaleType.LOG;\n      return nonPositiveComponent;\n    }, {});\n\n    if (!keys(filter).length) {\n      return null;\n    }\n\n    return new NonPositiveFilterNode(filter);\n  }\n\n  get filter() {\n    return this._filter;\n  }\n\n  public assemble(): VgTransform[] {\n    return keys(this._filter).filter((field) => {\n      // Only filter fields (keys) with value = true\n      return this._filter[field];\n    }).map(function(field) {\n      return {\n        type: 'filter',\n        expr: `datum[${stringValue(field)}] > 0`\n      } as VgFilterTransform;\n    });\n  }\n}\n","import {isCountingAggregateOp} from '../../aggregate';\nimport {isScaleChannel} from '../../channel';\nimport {FieldDef, isContinuous, isDiscrete} from '../../fielddef';\nimport {hasContinuousDomain} from '../../scale';\nimport {QUANTITATIVE, TEMPORAL} from '../../type';\nimport {contains, Dict, differ, differArray, duplicate, extend, hash, keys, stringValue} from '../../util';\nimport {VgFilterTransform} from '../../vega.schema';\nimport {ModelWithField} from '../model';\nimport {Model} from './../model';\nimport {DataFlowNode} from './dataflow';\n\nexport class NullFilterNode extends DataFlowNode {\n  private _filteredFields: Dict<FieldDef<string>>;\n\n  public clone() {\n    return new NullFilterNode(duplicate(this._filteredFields));\n  }\n\n  constructor(fields: Dict<FieldDef<string>>) {\n    super();\n\n    this._filteredFields = fields;\n  }\n\n  public static make(model: ModelWithField) {\n    const fields = model.reduceFieldDef((aggregator: Dict<FieldDef<string>>, fieldDef, channel) => {\n      if (model.config.invalidValues === 'filter' && !fieldDef.aggregate && fieldDef.field) {\n        // Vega's aggregate operator already handle invalid values, so we only have to consider non-aggregate field here.\n\n        const scaleComponent = isScaleChannel(channel) && model.getScaleComponent(channel);\n        if (scaleComponent) {\n          const scaleType = scaleComponent.get('type');\n\n          // only automatically filter null for continuous domain since discrete domain scales can handle invalid values.\n          if (hasContinuousDomain(scaleType)) {\n            aggregator[fieldDef.field] = fieldDef;\n          }\n        }\n      }\n      return aggregator;\n    }, {} as Dict<FieldDef<string>>);\n\n    if (keys(fields).length === 0) {\n      return null;\n    }\n\n    return new NullFilterNode(fields);\n  }\n\n  get filteredFields() {\n      return this._filteredFields;\n  }\n\n  public merge(other: NullFilterNode) {\n    const t = keys(this._filteredFields).map(k => k + ' ' + hash(this._filteredFields[k]));\n    const o = keys(other.filteredFields).map(k => k + ' ' + hash(other.filteredFields[k]));\n\n    if (!differArray(t, o)) {\n      this._filteredFields = extend(this._filteredFields, other._filteredFields);\n      other.remove();\n    }\n  }\n\n  public assemble(): VgFilterTransform {\n    const filters = keys(this._filteredFields).reduce((_filters, field) => {\n      const fieldDef = this._filteredFields[field];\n      if (fieldDef !== null) {\n        _filters.push(`datum[${stringValue(fieldDef.field)}] !== null`);\n        if (contains([QUANTITATIVE, TEMPORAL], fieldDef.type)) {\n          // TODO(https://github.com/vega/vega-lite/issues/1436):\n          // We can be even smarter and add NaN filter for N,O that are numbers\n          // based on the `parse` property once we have it.\n          _filters.push(`!isNaN(datum[${stringValue(fieldDef.field)}])`);\n        }\n      }\n      return _filters;\n    }, []);\n\n    return filters.length > 0 ?\n      {\n        type: 'filter',\n        expr: filters.join(' && ')\n      } : null;\n  }\n}\n","import {MAIN} from '../../data';\nimport {every, flatten, keys, vals} from '../../util';\nimport {AggregateNode} from './aggregate';\nimport {DataFlowNode, OutputNode} from './dataflow';\nimport {FacetNode} from './facet';\nimport {DataComponent} from './index';\nimport {NonPositiveFilterNode} from './nonpositivefilter';\nimport {NullFilterNode} from './nullfilter';\nimport * as optimizers from './optimizers';\nimport {SourceNode} from './source';\nimport {StackNode} from './stack';\n\nexport const FACET_SCALE_PREFIX = 'scale_';\n\n/**\n * Clones the subtree and ignores output nodes except for the leafs, which are renamed.\n */\nfunction cloneSubtree(facet: FacetNode) {\n  function clone(node: DataFlowNode): DataFlowNode[] {\n    if (!(node instanceof FacetNode)) {\n      const copy = node.clone();\n\n      if (copy instanceof OutputNode) {\n        const newName = FACET_SCALE_PREFIX + copy.getSource();\n        copy.setSource(newName);\n\n        facet.model.component.data.outputNodes[newName] = copy;\n      } else if (copy instanceof AggregateNode || copy instanceof StackNode) {\n        copy.addDimensions(facet.fields);\n      }\n      flatten(node.children.map(clone)).forEach((n: DataFlowNode) => n.parent = copy);\n\n      return [copy];\n    }\n\n    return flatten(node.children.map(clone));\n  }\n  return clone;\n}\n\n/**\n * Move facet nodes down to the next fork or output node. Also pull the main output with the facet node.\n * After moving down the facet node, make a copy of the subtree and make it a child of the main output.\n */\nfunction moveFacetDown(node: DataFlowNode) {\n  if (node instanceof FacetNode) {\n    if (node.numChildren() === 1 && !(node.children[0] instanceof OutputNode)) {\n      // move down until we hit a fork or output node\n\n      const child = node.children[0];\n\n      if (child instanceof AggregateNode || child instanceof StackNode) {\n        child.addDimensions(node.fields);\n      }\n\n      child.swapWithParent();\n      moveFacetDown(node);\n    } else {\n      // move main to facet\n      moveMainDownToFacet(node.model.component.data.main);\n\n      // replicate the subtree and place it before the facet's main node\n      const copy: DataFlowNode[] = flatten(node.children.map(cloneSubtree(node)));\n      copy.forEach(c => c.parent = node.model.component.data.main);\n    }\n  } else {\n    node.children.forEach(moveFacetDown);\n  }\n}\n\nfunction moveMainDownToFacet(node: DataFlowNode) {\n  if (node instanceof OutputNode && node.type === MAIN) {\n    if (node.numChildren() === 1) {\n      const child = node.children[0];\n\n      if (!(child instanceof FacetNode)) {\n        child.swapWithParent();\n        moveMainDownToFacet(node);\n      }\n    }\n  }\n}\n\n/**\n * Start optimization path from the root. Useful for removing nodes.\n */\nfunction removeUnnecessaryNodes(node: DataFlowNode) {\n  // remove empty non positive filter\n  if (node instanceof NonPositiveFilterNode && every(vals(node.filter), b => b === false)) {\n    node.remove();\n  }\n\n  // remove empty null filter nodes\n  if (node instanceof NullFilterNode && every(vals(node.filteredFields), f => f === null)) {\n    node.remove();\n  }\n\n  // remove output nodes that are not required\n  if (node instanceof OutputNode && !node.isRequired()) {\n    node.remove();\n  }\n\n  node.children.forEach(removeUnnecessaryNodes);\n}\n\n/**\n * Return all leaf nodes.\n */\nfunction getLeaves(roots: DataFlowNode[]) {\n  const leaves: DataFlowNode[] = [];\n  function append(node: DataFlowNode) {\n    if (node.numChildren() === 0) {\n      leaves.push(node);\n    } else {\n      node.children.forEach(append);\n    }\n  }\n\n  roots.forEach(append);\n  return leaves;\n}\n\n/**\n * Optimizes the dataflow of the passed in data component.\n */\nexport function optimizeDataflow(dataComponent: DataComponent) {\n  let roots: SourceNode[] = vals(dataComponent.sources);\n\n  roots.forEach(removeUnnecessaryNodes);\n\n  // remove source nodes that don't have any children because they also don't have output nodes\n  roots = roots.filter(r => r.numChildren() > 0);\n  getLeaves(roots).forEach(optimizers.iterateFromLeaves(optimizers.removeUnusedSubtrees));\n  roots = roots.filter(r => r.numChildren() > 0);\n\n  getLeaves(roots).forEach(optimizers.iterateFromLeaves(optimizers.moveParseUp));\n  getLeaves(roots).forEach(optimizers.removeDuplicateTimeUnits);\n\n  roots.forEach(moveFacetDown);\n\n  keys(dataComponent.sources).forEach(s => {\n    if (dataComponent.sources[s].numChildren() === 0) {\n      delete dataComponent.sources[s];\n    }\n  });\n}\n","import {hasIntersection, keys} from '../../util';\nimport {AggregateNode} from './aggregate';\nimport {BinNode} from './bin';\nimport {DataFlowNode, OutputNode} from './dataflow';\nimport {FacetNode} from './facet';\nimport {ParseNode} from './formatparse';\nimport {NullFilterNode} from './nullfilter';\nimport {SourceNode} from './source';\nimport {StackNode} from './stack';\nimport {TimeUnitNode} from './timeunit';\nimport {CalculateNode, FilterNode, LookupNode} from './transforms';\n\n\n/**\n * Start optimization path at the leaves. Useful for merging up or removing things.\n *\n * If the callback returns true, the recursion continues.\n */\nexport function iterateFromLeaves(f: (node: DataFlowNode) => boolean) {\n  function optimizeNextFromLeaves(node: DataFlowNode) {\n    if (node instanceof SourceNode) {\n      return;\n    }\n\n    const next = node.parent;\n    if (f(node)) {\n      optimizeNextFromLeaves(next);\n    }\n  }\n\n  return optimizeNextFromLeaves;\n}\n\n/**\n * Move parse nodes up to forks.\n */\nexport function moveParseUp(node: DataFlowNode) {\n  const parent = node.parent;\n\n  // move parse up by merging or swapping\n  if (node instanceof ParseNode) {\n    if (parent instanceof SourceNode) {\n      return false;\n    }\n\n    if (parent.numChildren() > 1) {\n      // don't move parse further up but continue with parent.\n      return true;\n    }\n\n    if (parent instanceof ParseNode) {\n      parent.merge(node);\n    } else {\n      // don't swap with nodes that produce something that the parse node depends on (e.g. lookup)\n      if (hasIntersection(parent.producedFields(), node.dependentFields())) {\n        return true;\n      }\n\n      node.swapWithParent();\n    }\n  }\n\n  return true;\n}\n\n/**\n * Repeatedly remove leaf nodes that are not output nodes.\n * The reason is that we don't need subtrees that don't have any output nodes.\n */\nexport function removeUnusedSubtrees(node: DataFlowNode) {\n  const parent = node.parent;\n\n  if (node instanceof OutputNode || node.numChildren() > 0) {\n    // no need to continue with parent because it is output node or will have children (there was a fork)\n    return false;\n  } else {\n    node.remove();\n  }\n  return true;\n}\n\n/**\n * Removes duplicate time unit nodes (as determined by the name of the\n * output field) that may be generated due to selections projected over\n * time units.\n */\nexport function removeDuplicateTimeUnits(leaf: DataFlowNode) {\n  let fields = {};\n  return iterateFromLeaves((node: DataFlowNode) => {\n    if (node instanceof TimeUnitNode) {\n      const pfields = node.producedFields();\n      const dupe = keys(pfields).every((k) => !!fields[k]);\n\n      if (dupe) {\n        node.remove();\n      } else {\n        fields = {...fields, ...pfields};\n      }\n    }\n\n    return true;\n  })(leaf);\n}\n","import {MAIN, RAW} from '../../data';\nimport {Dict} from '../../util';\nimport {FacetModel} from '../facet';\nimport {LayerModel} from '../layer';\nimport {isFacetModel, isLayerModel, isUnitModel, Model, ModelWithField} from '../model';\nimport {requiresSelectionId} from '../selection/selection';\nimport {UnitModel} from '../unit';\nimport {AggregateNode} from './aggregate';\nimport {BinNode} from './bin';\nimport {DataFlowNode, OutputNode} from './dataflow';\nimport {FacetNode} from './facet';\nimport {ParseNode} from './formatparse';\nimport {DataComponent} from './index';\nimport {NonPositiveFilterNode} from './nonpositivefilter';\nimport {NullFilterNode} from './nullfilter';\nimport {SourceNode} from './source';\nimport {StackNode} from './stack';\nimport {TimeUnitNode} from './timeunit';\nimport {IdentifierNode, parseTransformArray} from './transforms';\n\n\nfunction parseRoot(model: Model, sources: Dict<SourceNode>): DataFlowNode {\n  if (model.data || !model.parent) {\n    // if the model defines a data source or is the root, create a source node\n    const source = new SourceNode(model.data);\n    const hash = source.hash();\n    if (hash in sources) {\n      // use a reference if we already have a source\n      return sources[hash];\n    } else {\n      // otherwise add a new one\n      sources[hash] = source;\n      return source;\n    }\n  } else {\n    // If we don't have a source defined (overriding parent's data), use the parent's facet root or main.\n    return model.parent.component.data.facetRoot ? model.parent.component.data.facetRoot : model.parent.component.data.main;\n  }\n}\n\n/*\nDescription of the dataflow (http://asciiflow.com/):\n\n     +--------+\n     | Source |\n     +---+----+\n         |\n         v\n     Transforms\n(Filter, Calculate, ...)\n         |\n         v\n     FormatParse\n         |\n         v\n     Null Filter\n         |\n         v\n      Binning\n         |\n         v\n      Timeunit\n         |\n         v\n      +--+--+\n      | Raw |\n      +-----+\n         |\n         v\n     Aggregate\n         |\n         v\n       Stack\n         |\n         v\n      >0 Filter\n         |\n         v\n     Path Order\n         |\n         v\n   +----------+\n   |   Main   |\n   +----------+\n         |\n         v\n     +-------+\n     | Facet |----> \"column\", \"column-layout\", and \"row\"\n     +-------+\n         |\n         v\n  ...Child data...\n\n*/\n\nexport function parseData(model: Model): DataComponent {\n  const root = parseRoot(model, model.component.data.sources);\n\n  const outputNodes = model.component.data.outputNodes;\n  const outputNodeRefCounts = model.component.data.outputNodeRefCounts;\n\n  // the current head of the tree that we are appending to\n  let head = root;\n\n  // Default discrete selections require an identifier transform to\n  // uniquely identify data points as the _id field is volatile. Add\n  // this transform at the head of our pipeline such that the identifier\n  // field is available for all subsequent datasets. Additional identifier\n  // transforms will be necessary when new tuples are constructed\n  // (e.g., post-aggregation).\n  if (requiresSelectionId(model) && !model.parent) {\n    const ident = new IdentifierNode();\n    ident.parent = head;\n    head = ident;\n  }\n\n  // HACK: This is equivalent for merging bin extent for union scale.\n  // FIXME(https://github.com/vega/vega-lite/issues/2270): Correctly merge extent / bin node for shared bin scale\n  const parentIsLayer = model.parent && isLayerModel(model.parent);\n  if (isUnitModel(model) || isFacetModel(model)) {\n    if (parentIsLayer) {\n      const bin = BinNode.makeBinFromEncoding(model);\n      if (bin) {\n        bin.parent = head;\n        head = bin;\n      }\n    }\n  }\n\n  if (model.transforms.length > 0) {\n    const {first, last} = parseTransformArray(model);\n    first.parent = head;\n    head = last;\n  }\n\n  const parse = ParseNode.make(model);\n  if (parse) {\n    parse.parent = head;\n    head = parse;\n  }\n\n  if (isUnitModel(model) || isFacetModel(model)) {\n    const nullFilter = NullFilterNode.make(model);\n    if (nullFilter) {\n      nullFilter.parent = head;\n      head = nullFilter;\n    }\n\n    if (!parentIsLayer) {\n      const bin = BinNode.makeBinFromEncoding(model);\n      if (bin) {\n        bin.parent = head;\n        head = bin;\n      }\n    }\n\n    const tu = TimeUnitNode.makeFromEncoding(model);\n    if (tu) {\n      tu.parent = head;\n      head = tu;\n    }\n  }\n\n  // add an output node pre aggregation\n  const rawName = model.getName(RAW);\n  const raw = new OutputNode(rawName, RAW, outputNodeRefCounts);\n  outputNodes[rawName] = raw;\n  raw.parent = head;\n  head = raw;\n\n  if (isUnitModel(model)) {\n    const agg = AggregateNode.makeFromEncoding(model);\n    if (agg) {\n      agg.parent = head;\n      head = agg;\n\n      if (requiresSelectionId(model)) {\n        const ident = new IdentifierNode();\n        ident.parent = head;\n        head = ident;\n      }\n    }\n\n    const stack = StackNode.make(model);\n    if (stack) {\n      stack.parent = head;\n      head = stack;\n    }\n\n    const nonPosFilter = NonPositiveFilterNode.make(model);\n    if (nonPosFilter) {\n      nonPosFilter.parent = head;\n      head = nonPosFilter;\n    }\n  }\n\n  // output node for marks\n  const mainName = model.getName(MAIN);\n  const main = new OutputNode(mainName, MAIN, outputNodeRefCounts);\n  outputNodes[mainName] = main;\n  main.parent = head;\n  head = main;\n\n  // add facet marker\n  let facetRoot = null;\n  if (isFacetModel(model)) {\n    const facetName = model.getName('facet');\n    facetRoot = new FacetNode(model, facetName, main.getSource());\n    outputNodes[facetName] = facetRoot;\n    facetRoot.parent = head;\n    head = facetRoot;\n  }\n\n  // add the format parse from this model so that children don't parse the same field again\n  const ancestorParse = {...model.component.data.ancestorParse, ...(parse ? parse.parse : {})};\n\n  return {\n    ...model.component.data,\n    outputNodes,\n    outputNodeRefCounts,\n    raw,\n    main,\n    facetRoot,\n    ancestorParse\n  };\n}\n","import {Data, DataFormat, isInlineData, isNamedData, isUrlData} from '../../data';\nimport {contains, hash} from '../../util';\nimport {VgData} from '../../vega.schema';\nimport {Model} from './../model';\nimport {DataFlowNode} from './dataflow';\nimport {LookupNode} from './transforms';\n\n\nexport class SourceNode extends DataFlowNode {\n  private _data: Partial<VgData>;\n\n  private _name: string;\n\n  constructor(data: Data) {\n    super();\n\n    data = data || {name: 'source'};\n\n    if (isInlineData(data)) {\n      this._data = {\n        values: data.values\n      };\n    } else if (isUrlData(data)) {\n      // Extract extension from URL using snippet from\n      // http://stackoverflow.com/questions/680929/how-to-extract-extension-from-filename-string-in-javascript\n      let defaultExtension = /(?:\\.([^.]+))?$/.exec(data.url)[1];\n      if (!contains(['json', 'csv', 'tsv', 'topojson'], defaultExtension)) {\n        defaultExtension = 'json';\n      }\n      const dataFormat = data.format || {};\n\n      // For backward compatibility for former `data.formatType` property\n      const formatType: DataFormat = dataFormat.type || data['formatType'];\n      const {property, feature, mesh} = dataFormat;\n\n      const format = {\n        type: formatType ? formatType : defaultExtension,\n        ...(property ? {property} : {}),\n        ...(feature ? {feature} : {}),\n        ...(mesh ? {mesh} : {}),\n      };\n\n      this._data = {\n        url: data.url,\n        format\n      };\n    } else if (isNamedData(data)) {\n      this._name = data.name;\n      this._data = {};\n    }\n  }\n\n  get data() {\n    return this._data;\n  }\n\n  public hasName(): boolean {\n    return !!this._name;\n  }\n\n  get dataName() {\n    return this._name;\n  }\n\n  set dataName(name: string) {\n    this._name = name;\n  }\n\n  set parent(parent: DataFlowNode) {\n    throw new Error('Source nodes have to be roots.');\n  }\n\n  public remove() {\n    throw new Error('Source nodes are roots and cannot be removed.');\n  }\n\n  /**\n   * Return a unique identifir for this data source.\n   */\n  public hash() {\n    if (isInlineData(this._data)) {\n      return hash(this._data);\n    } else if (isUrlData(this._data)) {\n      return `${this._data.url} ${hash(this._data.format)}`;\n    } else {\n      return this._name;\n    }\n  }\n\n  public assemble(): VgData {\n    return {\n      name: this._name,\n      ...this._data,\n      transform: []\n    };\n  }\n}\n","import {isArray} from 'vega-util';\nimport {isScaleChannel} from '../../channel';\nimport {field, FieldDef} from '../../fielddef';\nimport {hasDiscreteDomain} from '../../scale';\nimport {StackOffset} from '../../stack';\nimport {contains, duplicate, stringValue} from '../../util';\nimport {VgSort, VgTransform} from '../../vega.schema';\nimport {sortParams} from '../common';\nimport {UnitModel} from './../unit';\nimport {DataFlowNode} from './dataflow';\n\n\nfunction getStackByFields(model: UnitModel): string[] {\n  return model.stack.stackBy.reduce((fields, by) => {\n    const channel = by.channel;\n    const fieldDef = by.fieldDef;\n\n    const scale = isScaleChannel(channel) ? model.getScaleComponent(channel) : undefined;\n    const _field = field(fieldDef, {\n      binSuffix: scale && hasDiscreteDomain(scale.get('type')) ? 'range' : 'start'\n    });\n    if (_field) {\n      fields.push(_field);\n    }\n    return fields;\n  }, [] as string[]);\n}\n\nexport interface StackComponent {\n  /**\n   * Faceted field.\n   */\n  facetby: string[];\n\n  dimensionFieldDef: FieldDef<string>;\n\n  /**\n   * Stack measure's field\n   */\n  field: string;\n\n  /**\n   * Level of detail fields for each level in the stacked charts such as color or detail.\n   */\n  stackby: string[];\n\n  /**\n   * Field that determines order of levels in the stacked charts.\n   */\n  sort: VgSort;\n\n  /** Mode for stacking marks. */\n  offset: StackOffset;\n\n  /**\n   * Whether to impute the data before stacking.\n   */\n  impute: boolean;\n}\n\nexport class StackNode extends DataFlowNode {\n  private _stack: StackComponent;\n\n  public clone() {\n    return new StackNode(duplicate(this._stack));\n  }\n\n  constructor(stack: StackComponent) {\n    super();\n\n    this._stack = stack;\n  }\n\n  public static make(model: UnitModel) {\n\n    const stackProperties = model.stack;\n\n    if (!stackProperties) {\n      return null;\n    }\n\n    let dimensionFieldDef: FieldDef<string>;\n    if (stackProperties.groupbyChannel) {\n      dimensionFieldDef = model.fieldDef(stackProperties.groupbyChannel);\n    }\n\n    const stackby = getStackByFields(model);\n    const orderDef = model.encoding.order;\n\n    let sort: VgSort;\n    if (orderDef) {\n      sort = sortParams(orderDef);\n    } else {\n      // default = descending by stackFields\n      // FIXME is the default here correct for binned fields?\n      sort = stackby.reduce((s, field) => {\n        s.field.push(field);\n        s.order.push('descending');\n        return s;\n      }, {field:[], order: []});\n    }\n\n    return new StackNode({\n      dimensionFieldDef,\n      field: model.field(stackProperties.fieldChannel),\n      facetby: [],\n      stackby,\n      sort,\n      offset: stackProperties.offset,\n      impute: stackProperties.impute,\n    });\n  }\n\n  get stack(): StackComponent {\n    return this._stack;\n  }\n\n  public addDimensions(fields: string[]) {\n    this._stack.facetby = this._stack.facetby.concat(fields);\n  }\n\n  public dependentFields() {\n    const out = {};\n\n    out[this._stack.field] = true;\n\n    this.getGroupbyFields().forEach(f => out[f] = true);\n    this._stack.facetby.forEach(f => out[f] = true);\n    const field = this._stack.sort.field;\n    isArray(field) ? field.forEach(f => out[f] = true) : out[field] = true;\n\n    return out;\n  }\n\n  public producedFields() {\n    const out = {};\n\n    out[this._stack.field + '_start'] = true;\n    out[this._stack.field + '_end'] = true;\n\n    return out;\n  }\n\n  private getGroupbyFields() {\n    const {dimensionFieldDef, impute} = this._stack;\n    if (dimensionFieldDef) {\n      if (dimensionFieldDef.bin) {\n        if (impute) {\n          // For binned group by field with impute, we calculate bin_mid\n          // as we cannot impute two fields simultaneously\n          return [field(dimensionFieldDef, {binSuffix: 'mid'})];\n        }\n        return [\n          // For binned group by field without impute, we need both bin_start and bin_end\n          field(dimensionFieldDef, {binSuffix: 'start'}),\n          field(dimensionFieldDef, {binSuffix: 'end'})\n        ];\n      }\n      return [field(dimensionFieldDef)];\n    }\n    return [];\n  }\n\n  public assemble(): VgTransform[] {\n    const transform: VgTransform[] = [];\n\n    const {facetby, field: stackField, dimensionFieldDef, impute, offset, sort, stackby} = this._stack;\n\n    // Impute\n    if (impute && dimensionFieldDef) {\n      const dimensionField = dimensionFieldDef ? field(dimensionFieldDef, {binSuffix: 'mid'}): undefined;\n\n      if (dimensionFieldDef.bin) {\n        // As we can only impute one field at a time, we need to calculate\n        // mid point for a binned field\n        transform.push({\n          type: 'formula',\n          expr: '(' +\n            field(dimensionFieldDef, {expr: 'datum', binSuffix: 'start'}) +\n            '+' +\n            field(dimensionFieldDef, {expr: 'datum', binSuffix: 'end'}) +\n            ')/2',\n          as: dimensionField\n        });\n      }\n\n      transform.push({\n        type: 'impute',\n        field: stackField,\n        groupby: stackby,\n        key: dimensionField,\n        method: 'value',\n        value: 0\n      });\n    }\n\n    // Stack\n    transform.push({\n      type: 'stack',\n      groupby: this.getGroupbyFields().concat(facetby),\n      field: stackField,\n      sort,\n      as: [\n        stackField + '_start',\n        stackField + '_end'\n      ],\n      offset\n    });\n\n    return transform;\n  }\n}\n","import {field} from '../../fielddef';\nimport {fieldExpr, TimeUnit} from '../../timeunit';\nimport {TimeUnitTransform} from '../../transform';\nimport {TEMPORAL} from '../../type';\nimport {Dict, duplicate, extend, keys, vals} from '../../util';\nimport {VgFormulaTransform} from '../../vega.schema';\nimport {Model, ModelWithField} from '../model';\nimport {DataFlowNode} from './dataflow';\n\n\nexport interface TimeUnitComponent {\n  as: string;\n  timeUnit: TimeUnit;\n  field: string;\n}\n\nexport class TimeUnitNode extends DataFlowNode {\n  public clone() {\n    return new TimeUnitNode(duplicate(this.formula));\n  }\n\n  constructor(private formula: Dict<TimeUnitComponent>) {\n    super();\n  }\n\n  public static makeFromEncoding(model: ModelWithField) {\n    const formula = model.reduceFieldDef((timeUnitComponent: TimeUnitComponent, fieldDef) => {\n      if (fieldDef.type === TEMPORAL && fieldDef.timeUnit) {\n        const f = field(fieldDef);\n        timeUnitComponent[f] = {\n          as: f,\n          timeUnit: fieldDef.timeUnit,\n          field: fieldDef.field\n        };\n      }\n      return timeUnitComponent;\n    }, {} as Dict<TimeUnitComponent>);\n\n    if (keys(formula).length === 0) {\n      return null;\n    }\n\n    return new TimeUnitNode(formula);\n  }\n\n  public static makeFromTransform(model: Model, t: TimeUnitTransform) {\n    return new TimeUnitNode({\n      [t.field]: {\n        as: t.as,\n        timeUnit: t.timeUnit,\n        field: t.field\n      }\n    });\n  }\n\n  public merge(other: TimeUnitNode) {\n    this.formula = extend(this.formula, other.formula);\n    other.remove();\n  }\n\n  public producedFields() {\n    const out = {};\n\n    vals(this.formula).forEach(f => {\n      out[f.as] = true;\n    });\n\n    return out;\n  }\n\n  public dependentFields() {\n    const out = {};\n\n    vals(this.formula).forEach(f => {\n      out[f.field] = true;\n    });\n\n    return out;\n  }\n\n  public assemble() {\n    return vals(this.formula).map(c => {\n      return {\n        type: 'formula',\n        as: c.as,\n        expr: fieldExpr(c.timeUnit, c.field)\n      } as VgFormulaTransform;\n    });\n  }\n}\n","import {isArray, isNumber, isString} from 'vega-util';\nimport {DateTime, isDateTime} from '../../datetime';\nimport {expression, Filter, isEqualFilter, isOneOfFilter, isRangeFilter} from '../../filter';\nimport * as log from '../../log';\nimport {LogicalOperand} from '../../logical';\nimport {SELECTION_ID} from '../../selection';\nimport {\n  CalculateTransform,\n  FilterTransform,\n  isBin,\n  isCalculate,\n  isFilter,\n  isLookup,\n  isSummarize,\n  isTimeUnit,\n  LookupTransform,\n} from '../../transform';\nimport {duplicate, keys, StringSet, toSet} from '../../util';\nimport {VgFilterTransform, VgFormulaTransform, VgIdentifierTransform, VgLookupTransform} from '../../vega.schema';\nimport {Model} from '../model';\nimport {ModelWithField} from '../model';\nimport {requiresSelectionId} from '../selection/selection';\nimport {AggregateNode} from './aggregate';\nimport {BinNode} from './bin';\nimport {DataFlowNode, OutputNode} from './dataflow';\nimport {FacetNode} from './facet';\nimport {ParseNode} from './formatparse';\nimport {SourceNode} from './source';\nimport {TimeUnitNode} from './timeunit';\n\n\nexport class FilterNode extends DataFlowNode {\n  private expr: string;\n  public clone() {\n    return new FilterNode(this.model, duplicate(this.filter));\n  }\n\n  constructor(private readonly model: Model, private filter: LogicalOperand<Filter>) {\n    super();\n    this.expr = expression(this.model, this.filter, this);\n  }\n\n  public assemble(): VgFilterTransform {\n    return {\n      type: 'filter',\n      expr: this.expr\n    };\n  }\n}\n\n/**\n * We don't know what a calculate node depends on so we should never move it beyond anything that produces fields.\n */\nexport class CalculateNode extends DataFlowNode {\n  public clone() {\n    return new CalculateNode(duplicate(this.transform));\n  }\n\n  constructor(private transform: CalculateTransform) {\n    super();\n  }\n\n  public producedFields() {\n    const out = {};\n    out[this.transform.as] = true;\n    return out;\n  }\n\n  public assemble(): VgFormulaTransform {\n    return {\n      type: 'formula',\n      expr: this.transform.calculate,\n      as: this.transform.as\n    };\n  }\n}\n\nexport class LookupNode extends DataFlowNode {\n  constructor(public readonly transform: LookupTransform, public readonly secondary: string) {\n    super();\n  }\n\n  public static make(model: Model, transform: LookupTransform, counter: number) {\n    const sources = model.component.data.sources;\n    const s = new SourceNode(transform.from.data);\n    let fromSource = sources[s.hash()];\n    if (!fromSource) {\n      sources[s.hash()] = s;\n      fromSource = s;\n    }\n\n    const fromOutputName = model.getName(`lookup_${counter}`);\n    const fromOutputNode = new OutputNode(fromOutputName, 'lookup', model.component.data.outputNodeRefCounts);\n    fromOutputNode.parent = fromSource;\n\n    model.component.data.outputNodes[fromOutputName] = fromOutputNode;\n\n    return new LookupNode(transform, fromOutputNode.getSource());\n  }\n\n  public producedFields(): StringSet {\n    return toSet(this.transform.from.fields || ((this.transform.as instanceof Array) ? this.transform.as : [this.transform.as]));\n  }\n\n  public assemble(): VgLookupTransform {\n    let foreign: Partial<VgLookupTransform>;\n\n    if (this.transform.from.fields) {\n      // lookup a few fields and add create a flat output\n      foreign = {\n        values: this.transform.from.fields,\n        ... this.transform.as ? {as: ((this.transform.as instanceof Array) ? this.transform.as : [this.transform.as])} : {}\n      };\n    } else {\n      // lookup full record and nest it\n      let asName = this.transform.as;\n      if (!isString(asName)) {\n        log.warn(log.message.NO_FIELDS_NEEDS_AS);\n        asName = '_lookup';\n      }\n\n      foreign = {\n        as: [asName]\n      };\n    }\n\n    return {\n      type: 'lookup',\n      from: this.secondary,\n      key: this.transform.from.key,\n      fields: [this.transform.lookup],\n      ...foreign,\n      ...(this.transform.default ? {default: this.transform.default} : {})\n    };\n  }\n}\n\nexport class IdentifierNode extends DataFlowNode {\n  public clone() {\n    return new IdentifierNode();\n  }\n\n  constructor() {\n    super();\n  }\n\n  public producedFields() {\n    return {[SELECTION_ID]: true};\n  }\n\n  public assemble(): VgIdentifierTransform {\n    return {type: 'identifier', as: SELECTION_ID};\n  }\n}\n\n/**\n * Parses a transforms array into a chain of connected dataflow nodes.\n */\nexport function parseTransformArray(model: Model) {\n  let first: DataFlowNode = null;\n  let node: DataFlowNode;\n  let previous: DataFlowNode;\n  let lookupCounter = 0;\n\n  function insert(newNode: DataFlowNode) {\n    if (!first) {\n      // A parent may be inserted during node construction\n      // (e.g., selection FilterNodes may add a TimeUnitNode).\n      first = newNode.parent || newNode;\n    } else if (newNode.parent) {\n      previous.insertAsParentOf(newNode);\n    } else {\n      newNode.parent = previous;\n    }\n\n    previous = newNode;\n  }\n\n  model.transforms.forEach(t => {\n    if (isCalculate(t)) {\n      node = new CalculateNode(t);\n    } else if (isFilter(t)) {\n      // Automatically add a parse node for filters with filter objects\n      const parse = {};\n      const filter = t.filter;\n      let val: string | number | boolean | DateTime = null;\n      // For EqualFilter, just use the equal property.\n      // For RangeFilter and OneOfFilter, all array members should have\n      // the same type, so we only use the first one.\n      if (isEqualFilter(filter)) {\n        val = filter.equal;\n      } else if (isRangeFilter(filter)) {\n        val = filter.range[0];\n      } else if (isOneOfFilter(filter)) {\n        val = (filter.oneOf || filter['in'])[0];\n      } // else -- for filter expression, we can't infer anything\n\n      if (val) {\n        if (isDateTime(val)) {\n          parse[filter['field']] = 'date';\n        } else if (isNumber(val)) {\n          parse[filter['field']] = 'number';\n        } else if (isString(val)) {\n          parse[filter['field']] = 'string';\n        }\n      }\n\n      if (keys(parse).length > 0) {\n        const parseNode = new ParseNode(parse);\n        insert(parseNode);\n      }\n\n      node = new FilterNode(model, t.filter);\n    } else if (isBin(t)) {\n      node = BinNode.makeFromTransform(model, t);\n    } else if (isTimeUnit(t)) {\n      node = TimeUnitNode.makeFromTransform(model, t);\n    } else if (isSummarize(t)) {\n      node = AggregateNode.makeFromTransform(model, t);\n\n      if (requiresSelectionId(model)) {\n        insert(node);\n        node = new IdentifierNode();\n      }\n    } else if (isLookup(t)) {\n      node = LookupNode.make(model, t, lookupCounter++);\n    } else {\n      log.warn(log.message.invalidTransformIgnored(t));\n      return;\n    }\n\n    insert(node);\n  });\n\n  const last = node;\n\n  return {first, last};\n}\n","import {AggregateOp} from '../aggregate';\nimport {Channel, COLUMN, ROW, ScaleChannel} from '../channel';\nimport {Config} from '../config';\nimport {reduce} from '../encoding';\nimport {Facet} from '../facet';\nimport {field, FieldDef, normalize, title as fieldDefTitle} from '../fielddef';\nimport * as log from '../log';\nimport {hasDiscreteDomain} from '../scale';\nimport {FacetSpec} from '../spec';\nimport {contains} from '../util';\nimport {isVgRangeStep, RowCol, VgAxis, VgData, VgLayout, VgMarkGroup, VgScale, VgSignal} from '../vega.schema';\nimport {buildModel} from './buildmodel';\nimport {assembleFacetData} from './data/assemble';\nimport {parseData} from './data/parse';\nimport {getHeaderType, HeaderChannel, HeaderComponent} from './layout/header';\nimport {parseChildrenLayoutSize} from './layoutsize/parse';\nimport {labels} from './legend/encode';\nimport {Model, ModelWithField} from './model';\nimport {RepeaterValue, replaceRepeaterInFacet} from './repeater';\nimport {parseGuideResolve} from './resolve';\nimport {assembleScalesForModel} from './scale/assemble';\nimport {getFieldFromDomains} from './scale/domain';\n\nexport class FacetModel extends ModelWithField {\n  public readonly type: 'facet' = 'facet';\n  public readonly facet: Facet<string>;\n\n  public readonly child: Model;\n\n  public readonly children: Model[];\n\n  constructor(spec: FacetSpec, parent: Model, parentGivenName: string, repeater: RepeaterValue, config: Config) {\n    super(spec, parent, parentGivenName, config, spec.resolve);\n\n\n    this.child = buildModel(spec.spec, this, this.getName('child'), undefined, repeater, config);\n    this.children = [this.child];\n\n    const facet: Facet<string> = replaceRepeaterInFacet(spec.facet, repeater);\n\n    this.facet = this.initFacet(facet);\n  }\n\n  private initFacet(facet: Facet<string>): Facet<string> {\n    // clone to prevent side effect to the original spec\n    return reduce(facet, function(normalizedFacet, fieldDef: FieldDef<string>, channel: Channel) {\n      if (!contains([ROW, COLUMN], channel)) {\n        // Drop unsupported channel\n        log.warn(log.message.incompatibleChannel(channel, 'facet'));\n        return normalizedFacet;\n      }\n\n      if (fieldDef.field === undefined) {\n        log.warn(log.message.emptyFieldDef(fieldDef, channel));\n        return normalizedFacet;\n      }\n\n      // Convert type to full, lowercase type, or augment the fieldDef with a default type if missing.\n      normalizedFacet[channel] = normalize(fieldDef, channel);\n      return normalizedFacet;\n    }, {});\n  }\n\n  public channelHasField(channel: Channel): boolean {\n    return !!this.facet[channel];\n  }\n\n  public hasDiscreteDomain(channel: Channel) {\n    return true;\n  }\n\n  public fieldDef(channel: Channel): FieldDef<string> {\n    return this.facet[channel];\n  }\n\n  public parseData() {\n    this.component.data = parseData(this);\n    this.child.parseData();\n  }\n\n  public parseLayoutSize() {\n    parseChildrenLayoutSize(this);\n  }\n\n  public parseSelection() {\n    // As a facet has a single child, the selection components are the same.\n    // The child maintains its selections to assemble signals, which remain\n    // within its unit.\n    this.child.parseSelection();\n    this.component.selection = this.child.component.selection;\n  }\n\n  public parseMarkGroup() {\n    this.child.parseMarkGroup();\n  }\n\n  public parseAxisAndHeader() {\n    this.child.parseAxisAndHeader();\n\n    this.parseHeader('column');\n    this.parseHeader('row');\n\n    this.mergeChildAxis('x');\n    this.mergeChildAxis('y');\n  }\n\n  private parseHeader(channel: HeaderChannel) {\n\n    if (this.channelHasField(channel)) {\n      const fieldDef = this.facet[channel];\n      const header = fieldDef.header || {};\n      let title = header.title !== undefined ?  header.title : fieldDefTitle(fieldDef, this.config);\n\n      if (this.child.component.layoutHeaders[channel].title) {\n        // merge title with child to produce \"Title / Subtitle / Sub-subtitle\"\n        title += ' / ' + this.child.component.layoutHeaders[channel].title;\n        this.child.component.layoutHeaders[channel].title = null;\n      }\n\n      this.component.layoutHeaders[channel] = {\n        title,\n        facetFieldDef: fieldDef,\n        // TODO: support adding label to footer as well\n        header: [this.makeHeaderComponent(channel, true)]\n      };\n    }\n  }\n\n  private makeHeaderComponent(channel: HeaderChannel, labels: boolean): HeaderComponent {\n    const sizeType = channel === 'row' ? 'height' : 'width';\n\n    return {\n      labels,\n      sizeSignal: this.child.component.layoutSize.get(sizeType) ? this.child.getSizeSignalRef(sizeType) : undefined,\n      axes: []\n    };\n  }\n\n  private mergeChildAxis(channel: 'x' | 'y') {\n    const {child} = this;\n    if (child.component.axes[channel]) {\n      const {layoutHeaders, resolve} = this.component;\n      const channelResolve = resolve[channel];\n      channelResolve.axis = parseGuideResolve(resolve, channel);\n\n      if (channelResolve.axis === 'shared') {\n        // For shared axis, move the axes to facet's header or footer\n        const headerChannel = channel === 'x' ? 'column' : 'row';\n\n        const layoutHeader = layoutHeaders[headerChannel];\n        for (const axisComponent of child.component.axes[channel]) {\n          const mainAxis = axisComponent.main;\n          const headerType = getHeaderType(mainAxis.get('orient'));\n          layoutHeader[headerType] = layoutHeader[headerType] ||\n            [this.makeHeaderComponent(headerChannel, false)];\n\n          // LayoutHeader no longer keep track of property precedence, thus let's combine.\n          layoutHeader[headerType][0].axes.push(mainAxis.combine() as VgAxis);\n          delete axisComponent.main;\n        }\n      } else {\n        // Otherwise do nothing for independent axes\n      }\n    }\n  }\n\n  public assembleScales(): VgScale[] {\n    return assembleScalesForModel(this);\n  }\n\n  public assembleSelectionTopLevelSignals(signals: any[]): VgSignal[] {\n    return this.child.assembleSelectionTopLevelSignals(signals);\n  }\n\n  public assembleSelectionSignals(): VgSignal[] {\n    this.child.assembleSelectionSignals();\n    return [];\n  }\n\n  public assembleSelectionData(data: VgData[]): VgData[] {\n    return this.child.assembleSelectionData(data);\n  }\n\n  private getLayoutBandMixins(headerType: 'header' | 'footer'): {\n    headerBand?: RowCol<number>,\n    footerBand?: RowCol<number>\n  } {\n    const bandMixins = {};\n\n    const bandType = headerType === 'header' ? 'headerBand' : 'footerBand';\n\n    for (const channel of ['row', 'column'] as ('row' | 'column')[]) {\n      const layoutHeaderComponent = this.component.layoutHeaders[channel];\n      const headerComponent = layoutHeaderComponent[headerType];\n      if (headerComponent && headerComponent[0]) {\n        const sizeType = channel === 'row' ? 'height' : 'width';\n\n        if (!this.child.component.layoutSize.get(sizeType)) {\n          // If facet child does not have size signal, then apply headerBand\n          bandMixins[bandType] = bandMixins[bandType] || {};\n          bandMixins[bandType][channel] = 0.5;\n        }\n      }\n    }\n    return bandMixins;\n  }\n\n  public assembleLayout(): VgLayout {\n    const columns = this.channelHasField('column') ? this.columnDistinctSignal() : 1;\n\n    // TODO: determine default align based on shared / independent scales\n\n    return {\n      padding: {row: 10, column: 10},\n      ...this.getLayoutBandMixins('header'),\n      ...this.getLayoutBandMixins('footer'),\n\n      // TODO: support offset for rowHeader/rowFooter/rowTitle/columnHeader/columnFooter/columnTitle\n      offset: 10,\n      columns,\n      bounds: 'full',\n      align: 'all'\n    };\n  }\n\n  public assembleLayoutSignals(): VgSignal[] {\n    // FIXME(https://github.com/vega/vega-lite/issues/1193): this can be incorrect if we have independent scales.\n    return this.child.assembleLayoutSignals();\n  }\n\n  private columnDistinctSignal() {\n    if (this.parent && (this.parent instanceof FacetModel)) {\n      // For nested facet, we will add columns to group mark instead\n      // See discussion in https://github.com/vega/vega/issues/952\n      // and https://github.com/vega/vega-view/releases/tag/v1.2.6\n      return undefined;\n    } else {\n      // In facetNode.assemble(), the name is always this.getName('column') + '_layout'.\n      const facetLayoutDataName = this.getName('column_domain');\n      return {signal: `length(data('${facetLayoutDataName}'))`};\n    }\n  }\n\n  public assembleGroup(signals: VgSignal[]) {\n    if (this.parent && (this.parent instanceof FacetModel)) {\n      // Provide number of columns for layout.\n      // See discussion in https://github.com/vega/vega/issues/952\n      // and https://github.com/vega/vega-view/releases/tag/v1.2.6\n      return {\n        ...(this.channelHasField('column') ? {\n          encode: {\n            update: {\n              // TODO(https://github.com/vega/vega-lite/issues/2759):\n              // Correct the signal for facet of concat of facet_column\n              columns: {field: field(this.facet.column, {binSuffix: 'start', prefix: 'distinct'})}\n            }\n          }\n        } : {}),\n        ...super.assembleGroup(signals)\n      };\n    }\n    return super.assembleGroup(signals);\n  }\n\n  /**\n   * Aggregate cardinality for calculating size\n   */\n  private getCardinalityAggregateForChild() {\n    const fields: string[] = [];\n    const ops: AggregateOp[] = [];\n    if (this.child instanceof FacetModel) {\n      if (this.child.channelHasField('column')) {\n        fields.push(field(this.child.facet.column));\n        ops.push('distinct');\n      }\n    } else {\n      for (const channel of ['x', 'y'] as ScaleChannel[]) {\n        const childScaleComponent = this.child.component.scales[channel];\n        if (childScaleComponent && !childScaleComponent.merged) {\n          const type = childScaleComponent.get('type');\n          const range = childScaleComponent.get('range');\n\n          if (hasDiscreteDomain(type) && isVgRangeStep(range)) {\n            const field = getFieldFromDomains(childScaleComponent.domains);\n            if (field) {\n              fields.push(field);\n              ops.push('distinct');\n            } else {\n              throw new Error('We do not yet support calculation of size for faceted union domain.');\n            }\n          }\n        }\n      }\n    }\n    return fields.length ? {fields, ops} : undefined;\n  }\n\n  public assembleMarks(): VgMarkGroup[] {\n    const {child, facet} = this;\n    const facetRoot = this.component.data.facetRoot;\n    const data = assembleFacetData(facetRoot);\n\n    // If we facet by two dimensions, we need to add a cross operator to the aggregation\n    // so that we create all groups\n    const hasRow = this.channelHasField(ROW);\n    const hasColumn = this.channelHasField(COLUMN);\n    const layoutSizeEncodeEntry = child.assembleLayoutSize();\n\n    const aggregateMixins: any = {};\n    if (hasRow && hasColumn) {\n      aggregateMixins.aggregate = {cross: true};\n    }\n    const cardinalityAggregateForChild = this.getCardinalityAggregateForChild();\n    if (cardinalityAggregateForChild) {\n      aggregateMixins.aggregate = {\n        ...aggregateMixins.aggregate,\n        ...cardinalityAggregateForChild\n      };\n    }\n\n    const title = child.assembleTitle();\n\n    const markGroup = {\n      name: this.getName('cell'),\n      type: 'group',\n      ...(title? {title} : {}),\n      from: {\n        facet: {\n          name: facetRoot.name,\n          data: facetRoot.data,\n          groupby: [].concat(\n            hasRow ? [this.field(ROW)] : [],\n            hasColumn ? [this.field(COLUMN)] : []\n          ),\n          ...aggregateMixins\n        }\n      },\n      sort: {\n        field: [].concat(\n          hasRow ? [this.field(ROW, {expr: 'datum'})] : [],\n          hasColumn ? [this.field(COLUMN, {expr: 'datum'})] : []\n        ),\n        order: [].concat(\n          hasRow ? [ (facet.row.header && facet.row.header.sort) || 'ascending'] : [],\n          hasColumn ? [ (facet.column.header && facet.column.header.sort) || 'ascending'] : []\n        )\n      },\n      ...(data.length > 0 ? {data: data} : {}),\n      ...(layoutSizeEncodeEntry ? {encode: {update: layoutSizeEncodeEntry}} : {}),\n      ...child.assembleGroup()\n    };\n\n    return [markGroup];\n  }\n\n  protected getMapping() {\n    return this.facet;\n  }\n}\n","import {Config} from '../config';\nimport * as log from '../log';\nimport {isLayerSpec, isUnitSpec, LayerSpec, LayoutSizeMixins} from '../spec';\nimport {flatten, keys} from '../util';\nimport {VgData, VgLayout, VgScale, VgSignal, VgTitle} from '../vega.schema';\nimport {parseLayerAxis} from './axis/parse';\nimport {parseData} from './data/parse';\nimport {assembleLayoutSignals} from './layoutsize/assemble';\nimport {parseLayerLayoutSize} from './layoutsize/parse';\nimport {Model} from './model';\nimport {RepeaterValue} from './repeater';\nimport {assembleScaleForModelAndChildren} from './scale/assemble';\nimport {assembleLayerSelectionMarks} from './selection/selection';\nimport {UnitModel} from './unit';\n\n\nexport class LayerModel extends Model {\n  public readonly type: 'layer' = 'layer';\n\n  // HACK: This should be (LayerModel | UnitModel)[], but setting the correct type leads to weird error.\n  // So I'm just putting generic Model for now.\n  public readonly children: Model[];\n\n\n\n  constructor(spec: LayerSpec, parent: Model, parentGivenName: string,\n    parentGivenSize: LayoutSizeMixins, repeater: RepeaterValue, config: Config) {\n\n    super(spec, parent, parentGivenName, config, spec.resolve);\n\n    const layoutSize = {\n      ...parentGivenSize,\n      ...(spec.width ? {width: spec.width} : {}),\n      ...(spec.height ? {height: spec.height} : {})\n    };\n\n    this.initSize(layoutSize);\n\n    this.children = spec.layer.map((layer, i) => {\n      if (isLayerSpec(layer)) {\n        return new LayerModel(layer, this, this.getName('layer_'+i), layoutSize, repeater, config);\n      }\n\n      if (isUnitSpec(layer)) {\n        return new UnitModel(layer, this, this.getName('layer_'+i), layoutSize, repeater, config);\n      }\n\n      throw new Error(log.message.INVALID_SPEC);\n    });\n  }\n\n  public parseData() {\n    this.component.data = parseData(this);\n    for (const child of this.children) {\n      child.parseData();\n    }\n  }\n\n  public parseLayoutSize() {\n    parseLayerLayoutSize(this);\n  }\n\n  public parseSelection() {\n    // Merge selections up the hierarchy so that they may be referenced\n    // across unit specs. Persist their definitions within each child\n    // to assemble signals which remain within output Vega unit groups.\n    this.component.selection = {};\n    for (const child of this.children) {\n      child.parseSelection();\n      keys(child.component.selection).forEach((key) => {\n        this.component.selection[key] = child.component.selection[key];\n      });\n    }\n  }\n\n  public parseMarkGroup() {\n    for (const child of this.children) {\n      child.parseMarkGroup();\n    }\n  }\n\n  public parseAxisAndHeader() {\n    parseLayerAxis(this);\n  }\n\n  public assembleSelectionTopLevelSignals(signals: any[]): VgSignal[] {\n    return this.children.reduce((sg, child) => child.assembleSelectionTopLevelSignals(sg), signals);\n  }\n\n  // TODO: Support same named selections across children.\n  public assembleSelectionSignals(): VgSignal[] {\n    return this.children.reduce((signals, child) => {\n      return signals.concat(child.assembleSelectionSignals());\n    }, []);\n  }\n\n\n  public assembleLayoutSignals(): VgSignal[] {\n    return this.children.reduce((signals, child) => {\n      return signals.concat(child.assembleLayoutSignals());\n    }, assembleLayoutSignals(this));\n  }\n\n  public assembleSelectionData(data: VgData[]): VgData[] {\n    return this.children.reduce((db, child) => child.assembleSelectionData(db), []);\n  }\n\n  public assembleTitle(): VgTitle {\n    let title = super.assembleTitle();\n    if (title) {\n      return title;\n    }\n    // If title does not provide layer, look into children\n    for (const child of this.children) {\n      title = child.assembleTitle();\n      if (title) {\n        return title;\n      }\n    }\n    return undefined;\n  }\n\n  public assembleScales(): VgScale[] {\n    return assembleScaleForModelAndChildren(this);\n  }\n\n  public assembleLayout(): VgLayout {\n    return null;\n  }\n\n  public assembleMarks(): any[] {\n    return assembleLayerSelectionMarks(this, flatten(this.children.map((child) => {\n      return child.assembleMarks();\n    })));\n  }\n}\n","/**\n * Utility for generating row / column headers\n */\nimport {FacetFieldDef} from '../../facet';\nimport {field} from '../../fielddef';\nimport {contains} from '../../util';\nimport {AxisOrient, Orient, VgAxis, VgEncodeEntry, VgMarkGroup, VgValueRef} from '../../vega.schema';\nimport {formatSignalRef} from '../common';\nimport {FacetModel} from '../facet';\nimport {Model} from '../model';\n\nexport type HeaderChannel = 'row' | 'column';\nexport const HEADER_CHANNELS: HeaderChannel[] = ['row', 'column'];\n\nexport type HeaderType = 'header' | 'footer';\nexport const HEADER_TYPES: HeaderType[] = ['header', 'footer'];\n\n/**\n * A component that represents all header, footers and title of a Vega group with layout directive.\n */\nexport interface LayoutHeaderComponent {\n  title?: string;\n\n  // TODO: repeat and concat can have multiple header / footer.\n  // Need to redesign this part a bit.\n\n  facetFieldDef?: FacetFieldDef<string>;\n\n  /**\n   * An array of header components for headers.\n   * For facet, there should be only one header component, which is data-driven.\n   * For repeat and concat, there can be multiple header components that explicitly list different axes.\n   */\n  header?: HeaderComponent[];\n\n  /**\n   * An array of header components for footers.\n   * For facet, there should be only one header component, which is data-driven.\n   * For repeat and concat, there can be multiple header components that explicitly list different axes.\n   */\n  footer?: HeaderComponent[];\n}\n\n/**\n * A component that represents one group of row/column-header/footer.\n */\nexport interface HeaderComponent {\n\n  labels: boolean;\n\n  sizeSignal: {signal: string};\n\n  axes: VgAxis[];\n}\n\nexport function getHeaderType(orient: AxisOrient) {\n  if (orient === 'top' || orient === 'left') {\n    return 'header';\n  }\n  return 'footer';\n}\n\nexport function getTitleGroup(model: Model, channel: HeaderChannel) {\n  const title = model.component.layoutHeaders[channel].title;\n  const textOrient = channel === 'row' ? 'vertical' : undefined;\n\n  return {\n    name:  model.getName(`${channel}_title`),\n    role: `${channel}-title`,\n    type: 'group',\n    marks: [{\n      type: 'text',\n      role: `${channel}-title-text`,\n      encode: {\n        update: {\n          // TODO: add title align\n          align: {value: 'center'},\n          text: {value: title},\n          fill: {value: 'black'},\n          fontWeight: {value: 'bold'},\n          ...(textOrient === 'vertical' ? {angle: {value: 270}} : {}),\n        }\n      }\n    }]\n  };\n}\n\nexport function getHeaderGroup(model: Model, channel: HeaderChannel, headerType: HeaderType, layoutHeader: LayoutHeaderComponent, header: HeaderComponent) {\n  if (header) {\n    let title = null;\n    if (layoutHeader.facetFieldDef && header.labels) {\n      const {facetFieldDef} = layoutHeader;\n      const format = facetFieldDef.header ? facetFieldDef.header.format : undefined;\n\n      title = {\n        text: formatSignalRef(facetFieldDef, format, 'parent', model.config, true),\n        offset: 10,\n        orient: channel === 'row' ? 'left' : 'top',\n        encode: {\n          update: {\n            fontWeight: {value: 'normal'},\n            angle: {value: 0},\n            fontSize: {value: 10}, // default label font size\n            ... (channel === 'row' ? {\n              align: {value: 'right'},\n              baseline: {value: 'middle'}\n            } : {})\n          }\n        }\n      };\n    }\n\n    const axes = header.axes;\n\n    const hasAxes = axes && axes.length > 0;\n    if (title || hasAxes) {\n      const sizeChannel = channel === 'row' ? 'height' : 'width';\n\n      return {\n        name: model.getName(`${channel}_${headerType}`),\n        type: 'group',\n        role: `${channel}-${headerType}`,\n        ...(layoutHeader.facetFieldDef ? {\n          from: {data: model.getName(channel + '_domain')},\n          sort: {\n            field: field(layoutHeader.facetFieldDef, {expr: 'datum'}),\n            order: (layoutHeader.facetFieldDef.header && layoutHeader.facetFieldDef.header.sort) || 'ascending'\n          }\n        } : {}),\n        ...(title ? {title} : {}),\n        ...(header.sizeSignal ? {\n          encode: {\n            update: {\n              [sizeChannel]: header.sizeSignal\n            }\n          }\n        }: {}),\n        ...(hasAxes ? {axes} : {})\n      };\n    }\n  }\n  return null;\n}\n","import {Channel, COLUMN, ROW, X, Y} from '../../channel';\nimport {MAIN} from '../../data';\nimport {hasDiscreteDomain, scaleCompatible} from '../../scale';\nimport {extend, isArray, keys, StringSet} from '../../util';\nimport {isVgRangeStep, VgData, VgFormulaTransform, VgRangeStep, VgSignal, VgTransform} from '../../vega.schema';\nimport {FacetModel} from '../facet';\nimport {LayerModel} from '../layer';\nimport {isFacetModel, Model, ModelWithField} from '../model';\nimport {ScaleComponent} from '../scale/component';\nimport {UnitModel} from '../unit';\n\nexport function assembleLayoutSignals(model: Model): VgSignal[] {\n  return [].concat(\n    sizeSignals(model, 'width'),\n    sizeSignals(model, 'height')\n  );\n}\n\nexport function sizeSignals(model: Model, sizeType: 'width' | 'height'): VgSignal[] {\n  const channel = sizeType==='width' ? 'x' : 'y';\n  const size = model.component.layoutSize.get(sizeType);\n  if (!size || size === 'merged') {\n    return [];\n  }\n\n  // Read size signal name from name map, just in case it is the top-level size signal that got renamed.\n  const name = model.getSizeSignalRef(sizeType).signal;\n\n  if (size === 'range-step') {\n    const scaleComponent = model.getScaleComponent(channel);\n\n    if (scaleComponent) {\n      const type = scaleComponent.get('type');\n      const range = scaleComponent.get('range');\n\n      if (hasDiscreteDomain(type) && isVgRangeStep(range)) {\n        const scaleName = model.scaleName(channel);\n\n        if (isFacetModel(model.parent)) {\n          // If parent is facet and this is an independent scale, return only signal signal\n          // as the width/height will be calculated using the cardinality from\n          // facet's aggregate rather than reading from scale domain\n          const parentChannelResolve = model.parent.component.resolve[channel];\n          if (parentChannelResolve.scale === 'independent') {\n            return [stepSignal(scaleName, range)];\n          }\n        }\n\n        return [\n          stepSignal(scaleName, range),\n          {\n            name,\n            update: sizeExpr(scaleName, scaleComponent, `domain('${scaleName}').length`)\n          }\n        ];\n      }\n    }\n    /* istanbul ignore next: Condition should not happen -- only for warning in development. */\n    throw new Error('layout size is range step although there is no rangeStep.');\n  } else {\n    return [{\n      name,\n      update: `${size}`\n    }];\n  }\n}\n\nfunction stepSignal(scaleName: string, range: VgRangeStep) {\n  return {\n    name: scaleName + '_step',\n    value: range.step,\n  };\n}\n\nexport function sizeExpr(scaleName: string, scaleComponent: ScaleComponent, cardinality: string) {\n  const type = scaleComponent.get('type');\n  const padding = scaleComponent.get('padding');\n  let paddingOuter = scaleComponent.get('paddingOuter');\n  paddingOuter = paddingOuter !== undefined ? paddingOuter : padding;\n\n  let paddingInner = scaleComponent.get('paddingInner');\n  paddingInner = type === 'band' ?\n    // only band has real paddingInner\n    (paddingInner !== undefined ? paddingInner : padding) :\n    // For point, as calculated in https://github.com/vega/vega-scale/blob/master/src/band.js#L128,\n    // it's equivalent to have paddingInner = 1 since there is only n-1 steps between n points.\n    1;\n  return `bandspace(${cardinality}, ${paddingInner}, ${paddingOuter}) * ${scaleName}_step`;\n}\n\n\n","import {defaultScaleConfig, hasDiscreteDomain} from '../../scale';\nimport {isVgRangeStep} from '../../vega.schema';\nimport {ConcatModel} from '../concat';\nimport {LayerModel} from '../layer';\nimport {Model} from '../model';\nimport {RepeatModel} from '../repeat';\nimport {defaultTieBreaker, Explicit, makeImplicit, mergeValuesWithExplicit, Split} from '../split';\nimport {UnitModel} from '../unit';\nimport {LayoutSize, LayoutSizeComponent, LayoutSizeIndex} from './component';\n\nexport function parseLayerLayoutSize(model: Model) {\n  parseChildrenLayoutSize(model);\n\n  const layoutSizeCmpt = model.component.layoutSize;\n  layoutSizeCmpt.setWithExplicit('width', parseNonUnitLayoutSizeForChannel(model, 'width'));\n  layoutSizeCmpt.setWithExplicit('height', parseNonUnitLayoutSizeForChannel(model, 'height'));\n}\n\nexport const parseRepeatLayoutSize = parseLayerLayoutSize;\n\nexport function parseConcatLayoutSize(model: ConcatModel) {\n  parseChildrenLayoutSize(model);\n  const layoutSizeCmpt = model.component.layoutSize;\n\n  const sizeTypeToMerge = model.isVConcat ? 'width' : 'height';\n  layoutSizeCmpt.setWithExplicit(sizeTypeToMerge, parseNonUnitLayoutSizeForChannel(model, sizeTypeToMerge));\n}\n\nexport function parseChildrenLayoutSize(model: Model) {\n  for (const child of model.children) {\n    child.parseLayoutSize();\n  }\n}\n\nfunction parseNonUnitLayoutSizeForChannel(model: Model, sizeType: 'width' | 'height'): Explicit<LayoutSize> {\n  const channel = sizeType === 'width' ? 'x' : 'y';\n  const resolve = model.component.resolve;\n\n  let mergedSize: Explicit<LayoutSize>;\n  // Try to merge layout size\n  for (const child of model.children) {\n    const childSize = child.component.layoutSize.getWithExplicit(sizeType);\n    const scaleResolve = resolve[channel] ? resolve[channel].scale : undefined;\n    if (scaleResolve === 'independent' && childSize.value === 'range-step') {\n      // Do not merge independent scales with range-step as their size depends\n      // on the scale domains, which can be different between scales.\n      mergedSize = undefined;\n      break;\n    }\n\n    if (mergedSize) {\n      if (scaleResolve === 'independent' && mergedSize.value !== childSize.value) {\n        // For independent scale, only merge if all the sizes are the same.\n        // If the values are different, abandon the merge!\n        mergedSize = undefined;\n        break;\n      }\n      mergedSize = mergeValuesWithExplicit<LayoutSizeIndex, LayoutSize>(\n        mergedSize, childSize, sizeType, '', defaultTieBreaker\n      );\n    } else {\n      mergedSize = childSize;\n    }\n  }\n\n  if (mergedSize) {\n    // If merged, rename size and set size of all children.\n    for (const child of model.children) {\n      model.renameLayoutSize(child.getName(sizeType), model.getName(sizeType));\n      child.component.layoutSize.set(sizeType, 'merged', false);\n    }\n    return mergedSize;\n  } else {\n    // Otherwise, there is no merged size.\n    return {\n      explicit: false,\n      value: undefined\n    };\n  }\n}\n\nexport function parseUnitLayoutSize(model: UnitModel) {\n  const layoutSizeComponent = model.component.layoutSize;\n  if (!layoutSizeComponent.explicit.width) {\n    const width = defaultUnitSize(model, 'width');\n    layoutSizeComponent.set('width', width, false);\n  }\n\n  if (!layoutSizeComponent.explicit.height) {\n    const height = defaultUnitSize(model, 'height');\n    layoutSizeComponent.set('height', height, false);\n  }\n}\n\nfunction defaultUnitSize(model: UnitModel, sizeType: 'width' | 'height'): LayoutSize {\n  const channel = sizeType === 'width' ? 'x' : 'y';\n  const config = model.config;\n  const scaleComponent = model.getScaleComponent(channel);\n\n  if (scaleComponent) {\n    const scaleType = scaleComponent.get('type');\n    const range = scaleComponent.get('range');\n\n    if (hasDiscreteDomain(scaleType) && isVgRangeStep(range)) {\n      // For discrete domain with range.step, use dynamic width/height\n      return 'range-step';\n    } else {\n      // FIXME(https://github.com/vega/vega-lite/issues/1975): revise config.cell name\n      // Otherwise, read this from cell config\n      return config.cell[sizeType];\n    }\n  } else {\n    // No scale - set default size\n    if (sizeType === 'width' && model.mark() === 'text') {\n      // width for text mark without x-field is a bit wider than typical range step\n      return config.scale.textXRangeStep;\n    }\n\n    // Set width/height equal to rangeStep config or if rangeStep is null, use value from default scale config.\n    return config.scale.rangeStep || defaultScaleConfig.rangeStep;\n  }\n\n}\n","import * as stringify from 'json-stable-stringify';\nimport {NonspatialScaleChannel} from '../../channel';\nimport {flatten, keys, vals} from '../../util';\nimport {VgLegend} from '../../vega.schema';\nimport {Model} from '../model';\nimport {LegendComponent, LegendComponentIndex} from './component';\nimport {mergeLegendComponent} from './parse';\n\nexport function assembleLegends(model: Model): VgLegend[] {\n\n  const legendComponentIndex = model.component.legends;\n  const legendByDomain: {[domainHash: string]: LegendComponent[]} = {};\n  keys(legendComponentIndex).forEach((channel: NonspatialScaleChannel) => {\n    const scaleComponent = model.getScaleComponent(channel);\n    const domainHash = stringify(scaleComponent.domains);\n    if (legendByDomain[domainHash]) {\n      for (const mergedLegendComponent of legendByDomain[domainHash]) {\n        const merged = mergeLegendComponent(mergedLegendComponent, legendComponentIndex[channel]);\n        if (!merged) {\n          // If cannot merge, need to add this legend separately\n          legendByDomain[domainHash].push(legendComponentIndex[channel]);\n        }\n      }\n\n    } else {\n      legendByDomain[domainHash] = [legendComponentIndex[channel].clone()];\n    }\n  });\n\n  return flatten(vals(legendByDomain)).map((legendCmpt: LegendComponent) => legendCmpt.combine());\n}\n","import {Legend} from '../..//legend';\nimport {NonspatialScaleChannel} from '../../channel';\nimport {VgLegend} from '../../vega.schema';\nimport {Split} from '../split';\n\n\nexport class LegendComponent extends Split<Partial<VgLegend>> {}\n\n// Using Mapped Type to declare type (https://www.typescriptlang.org/docs/handbook/advanced-types.html#mapped-types)\nexport type LegendComponentIndex = {[P in NonspatialScaleChannel]?: LegendComponent};\n\nexport type LegendIndex = {[P in NonspatialScaleChannel]?: Legend};\n","import {Channel, COLOR, NonspatialScaleChannel, SHAPE} from '../../channel';\nimport {FieldDef, isFieldDef, isValueDef} from '../../fielddef';\nimport {AREA, BAR, CIRCLE, FILL_STROKE_CONFIG, LINE, POINT, SQUARE, TEXT, TICK} from '../../mark';\nimport {ScaleType} from '../../scale';\nimport {TEMPORAL} from '../../type';\nimport {extend, keys, without} from '../../util';\nimport {VgValueRef} from '../../vega.schema';\nimport {applyMarkConfig, timeFormatExpression} from '../common';\nimport * as mixins from '../mark/mixins';\nimport {UnitModel} from '../unit';\n\n\nexport function symbols(fieldDef: FieldDef<string>, symbolsSpec: any, model: UnitModel, channel: Channel) {\n  let symbols:any = {};\n  const mark = model.mark();\n\n  switch (mark) {\n    case BAR:\n    case TICK:\n    case TEXT:\n      symbols.shape = {value: 'square'};\n      break;\n    case CIRCLE:\n    case SQUARE:\n      symbols.shape = {value: mark};\n      break;\n    case POINT:\n    case LINE:\n    case AREA:\n      // use default circle\n      break;\n  }\n\n  const cfg = model.config;\n  const filled = model.markDef.filled;\n\n  let config = channel === COLOR ?\n      /* For color's legend, do not set fill (when filled) or stroke (when unfilled) property from config because the legend's `fill` or `stroke` scale should have precedence */\n      without(FILL_STROKE_CONFIG, [ filled ? 'fill' : 'stroke', 'strokeDash', 'strokeDashOffset']) :\n      /* For other legend, no need to omit. */\n      FILL_STROKE_CONFIG;\n\n  config = without(config, ['strokeDash', 'strokeDashOffset']);\n\n  applyMarkConfig(symbols, model, config);\n\n  if (channel !== COLOR) {\n    const colorMixins = mixins.color(model);\n\n    // If there are field for fill or stroke, remove them as we already apply channels.\n    if (colorMixins.fill && (colorMixins.fill['field'] || colorMixins.fill['value'] === 'transparent')) {\n      delete colorMixins.fill;\n    }\n    if (colorMixins.stroke && (colorMixins.stroke['field'] || colorMixins.stroke['value'] === 'transparent')) {\n      delete colorMixins.stroke;\n    }\n    extend(symbols, colorMixins);\n  }\n\n  if (channel !== SHAPE) {\n    const shapeDef = model.encoding.shape;\n    if (isValueDef(shapeDef)) {\n      symbols.shape = {value: shapeDef.value};\n    }\n  }\n\n  symbols = extend(symbols, symbolsSpec || {});\n\n  return keys(symbols).length > 0 ? symbols : undefined;\n}\n\nexport function labels(fieldDef: FieldDef<string>, labelsSpec: any, model: UnitModel, channel: NonspatialScaleChannel) {\n  const legend = model.legend(channel);\n  const config = model.config;\n\n  let labels:any = {};\n\n  if (fieldDef.type === TEMPORAL) {\n    const isUTCScale = model.getScaleComponent(channel).get('type') === ScaleType.UTC;\n    labelsSpec = extend({\n      text: {\n        signal: timeFormatExpression('datum.value', fieldDef.timeUnit, legend.format, config.legend.shortTimeLabels, config.timeFormat, isUTCScale)\n      }\n    }, labelsSpec || {});\n  }\n\n  labels = extend(labels, labelsSpec || {});\n\n  return keys(labels).length > 0 ? labels : undefined;\n}\n\n","import {Channel, COLOR, NonspatialScaleChannel, OPACITY, SHAPE, SIZE} from '../../channel';\nimport {title as fieldDefTitle} from '../../fielddef';\nimport {Legend, LEGEND_PROPERTIES, VG_LEGEND_PROPERTIES} from '../../legend';\nimport {ResolveMode} from '../../resolve';\nimport {Dict, keys} from '../../util';\nimport {VgLegend, VgLegendEncode} from '../../vega.schema';\nimport {getSpecifiedOrDefaultValue, numberFormat, titleMerger} from '../common';\nimport {isUnitModel, Model} from '../model';\nimport {parseGuideResolve} from '../resolve';\nimport {Explicit, makeImplicit} from '../split';\nimport {defaultTieBreaker, mergeValuesWithExplicit} from '../split';\nimport {UnitModel} from '../unit';\nimport {LegendComponent, LegendComponentIndex} from './component';\nimport * as encode from './encode';\nimport * as rules from './rules';\n\n\nexport function parseLegend(model: Model) {\n  if (isUnitModel(model)) {\n    model.component.legends = parseUnitLegend(model);\n  } else {\n    model.component.legends = parseNonUnitLegend(model);\n  }\n}\n\nfunction parseUnitLegend(model: UnitModel): LegendComponentIndex {\n  return [COLOR, SIZE, SHAPE, OPACITY].reduce(function(legendComponent, channel) {\n    if (model.legend(channel)) {\n      legendComponent[channel] = parseLegendForChannel(model, channel);\n    }\n    return legendComponent;\n  }, {});\n}\n\nfunction getLegendDefWithScale(model: UnitModel, channel: Channel): VgLegend {\n  // For binned field with continuous scale, use a special scale so we can overrride the mark props and labels\n  switch (channel) {\n    case COLOR:\n      const scale = model.scaleName(COLOR);\n      return model.markDef.filled ? {fill: scale} : {stroke: scale};\n    case SIZE:\n      return {size: model.scaleName(SIZE)};\n    case SHAPE:\n      return {shape: model.scaleName(SHAPE)};\n    case OPACITY:\n      return {opacity: model.scaleName(OPACITY)};\n  }\n  return null;\n}\n\nexport function parseLegendForChannel(model: UnitModel, channel: NonspatialScaleChannel): LegendComponent {\n  const fieldDef = model.fieldDef(channel);\n  const legend = model.legend(channel);\n\n  const legendCmpt = new LegendComponent({}, getLegendDefWithScale(model, channel));\n\n  LEGEND_PROPERTIES.forEach(function(property) {\n    const value = getProperty(property, legend, channel, model);\n    if (value !== undefined) {\n      const explicit = property === 'values' ?\n        !!legend.values :  // specified legend.values is already respected, but may get transformed.\n        value === legend[property];\n      legendCmpt.set(property, value, explicit);\n    }\n  });\n\n  // 2) Add mark property definition groups\n  const legendEncoding = legend.encoding || {};\n  const legendEncode = ['labels', 'legend', 'title', 'symbols'].reduce((e: VgLegendEncode, part) => {\n    const value = encode[part] ?\n      encode[part](fieldDef, legendEncoding[part], model, channel) : // apply rule\n      legendEncoding[part]; // no rule -- just default values\n    if (value !== undefined && keys(value).length > 0) {\n      e[part] = {update: value};\n    }\n    return e;\n  }, {} as VgLegendEncode);\n\n  if (keys(legendEncode).length > 0) {\n    legendCmpt.set('encode', legendEncode, !!legend.encoding);\n  }\n\n  return legendCmpt;\n}\n\nfunction getProperty(property: keyof (Legend | VgLegend), specifiedLegend: Legend, channel: NonspatialScaleChannel, model: UnitModel) {\n  const fieldDef = model.fieldDef(channel);\n\n  switch (property) {\n    case 'format':\n      return numberFormat(fieldDef, specifiedLegend.format, model.config);\n    case 'title':\n      return getSpecifiedOrDefaultValue(specifiedLegend.title, fieldDefTitle(fieldDef, model.config));\n    case 'values':\n      return rules.values(specifiedLegend);\n    case 'type':\n      return getSpecifiedOrDefaultValue(specifiedLegend.type, rules.type(fieldDef.type, channel, model.getScaleComponent(channel).get('type')));\n  }\n\n  // Otherwise, return specified property.\n  return specifiedLegend[property];\n}\n\nfunction parseNonUnitLegend(model: Model) {\n  const {legends, resolve} = model.component;\n\n  for (const child of model.children) {\n    parseLegend(child);\n\n    keys(child.component.legends).forEach((channel: NonspatialScaleChannel) => {\n      const channelResolve = model.component.resolve[channel];\n      channelResolve.legend = parseGuideResolve(model.component.resolve, channel);\n\n      if (channelResolve.legend === 'shared') {\n        // If the resolve says shared (and has not been overridden)\n        // We will try to merge and see if there is a conflict\n\n        legends[channel] = mergeLegendComponent(legends[channel], child.component.legends[channel]);\n\n        if (!legends[channel]) {\n          // If merge returns nothing, there is a conflict so we cannot make the legend shared.\n          // Thus, mark legend as independent and remove the legend component.\n          channelResolve.legend = 'independent';\n          delete legends[channel];\n        }\n      }\n    });\n  }\n\n  keys(legends).forEach((channel: NonspatialScaleChannel) => {\n    for (const child of model.children) {\n      if (!child.component.legends[channel]) {\n        // skip if the child does not have a particular legend\n        continue;\n      }\n\n      if (resolve[channel].legend === 'shared') {\n        // After merging shared legend, make sure to remove legend from child\n        delete child.component.legends[channel];\n      }\n    }\n  });\n  return legends;\n}\n\nexport function mergeLegendComponent(mergedLegend: LegendComponent, childLegend: LegendComponent) {\n  if (!mergedLegend) {\n    return childLegend.clone();\n  }\n  const mergedOrient = mergedLegend.getWithExplicit('orient');\n  const childOrient = childLegend.getWithExplicit('orient');\n\n\n  if (mergedOrient.explicit && childOrient.explicit && mergedOrient.value !== childOrient.value) {\n    // TODO: throw warning if resolve is explicit (We don't have info about explicit/implicit resolve yet.)\n    // Cannot merge due to inconsistent orient\n    return undefined;\n  }\n  // Otherwise, let's merge\n  for (const prop of VG_LEGEND_PROPERTIES) {\n    const mergedValueWithExplicit = mergeValuesWithExplicit<VgLegend, any>(\n      mergedLegend.getWithExplicit(prop),\n      childLegend.getWithExplicit(prop),\n      prop, 'legend',\n\n      // Tie breaker function\n      (v1: Explicit<any>, v2: Explicit<any>): any => {\n        switch (prop) {\n          case 'title':\n            return titleMerger(v1, v2);\n          case 'type':\n            // There are only two types. If we have different types, then prefer symbol over gradient.\n            return makeImplicit('symbol');\n        }\n        return defaultTieBreaker<VgLegend, any>(v1, v2, prop, 'legend');\n      }\n    );\n    mergedLegend.setWithExplicit(prop, mergedValueWithExplicit);\n  }\n  return mergedLegend;\n}\n","import {Channel, COLOR} from '../../channel';\nimport {Config} from '../../config';\nimport {DateTime, dateTimeExpr, isDateTime} from '../../datetime';\nimport {FieldDef} from '../../fielddef';\nimport {title as fieldTitle} from '../../fielddef';\nimport {Legend} from '../../legend';\nimport {isBinScale, ScaleType} from '../../scale';\nimport {Type} from '../../type';\nimport {contains} from '../../util';\n\nexport function values(legend: Legend) {\n  const vals = legend.values;\n  if (vals && isDateTime(vals[0])) {\n    return (vals as DateTime[]).map((dt) => {\n      // normalize = true as end user won't put 0 = January\n      return {signal: dateTimeExpr(dt, true)};\n    });\n  }\n  return vals;\n}\n\nexport function type(type: Type, channel: Channel, scaleType: ScaleType): 'gradient' {\n  if (\n      channel === COLOR && (\n        (type === 'quantitative' && !isBinScale(scaleType)) ||\n        (type === 'temporal' && contains<ScaleType>(['time', 'utc'], scaleType))\n      )\n    ) {\n    return 'gradient';\n  }\n  return undefined;\n}\n","import {UnitModel} from '../unit';\nimport {MarkCompiler} from './base';\nimport * as mixins from './mixins';\n\n\nexport const area: MarkCompiler = {\n  vgMark: 'area',\n  encodeEntry: (model: UnitModel) => {\n    return {\n      ...mixins.pointPosition('x', model, 'zeroOrMin'),\n      ...mixins.pointPosition('y', model, 'zeroOrMin'),\n      ...mixins.pointPosition2(model, 'zeroOrMin'),\n\n      ...mixins.color(model),\n      ...mixins.text(model, 'tooltip'),\n      ...mixins.nonPosition('opacity', model),\n      ...mixins.markDefProperties(model.markDef, ['orient', 'interpolate', 'tension']),\n    };\n  }\n};\n","import {isNumber} from 'vega-util';\nimport {X, Y} from '../../channel';\nimport {Config} from '../../config';\nimport {isFieldDef} from '../../fielddef';\nimport * as log from '../../log';\nimport {Scale, ScaleType} from '../../scale';\nimport {StackProperties} from '../../stack';\nimport {VgValueRef} from '../../vega.schema';\nimport {isVgRangeStep, VgEncodeEntry} from '../../vega.schema';\nimport {ScaleComponent} from '../scale/component';\nimport {Split} from '../split';\nimport {UnitModel} from '../unit';\nimport {MarkCompiler} from './base';\nimport * as mixins from './mixins';\nimport * as ref from './valueref';\n\n\nexport const bar: MarkCompiler = {\n  vgMark: 'rect',\n  encodeEntry: (model: UnitModel) => {\n    const stack = model.stack;\n    return {\n      ...x(model, stack),\n      ...y(model, stack),\n      ...mixins.color(model),\n      ...mixins.text(model, 'tooltip'),\n      ...mixins.nonPosition('opacity', model)\n    };\n  }\n};\n\nfunction x(model: UnitModel, stack: StackProperties): VgEncodeEntry {\n  const {config, width} = model;\n  const orient = model.markDef.orient;\n  const sizeDef = model.encoding.size;\n\n  const xDef = model.encoding.x;\n  const xScaleName = model.scaleName(X);\n  const xScale = model.getScaleComponent(X);\n  // x, x2, and width -- we must specify two of these in all conditions\n  if (orient === 'horizontal') {\n    return {\n      ...mixins.pointPosition('x', model, 'zeroOrMin'),\n      ...mixins.pointPosition2(model, 'zeroOrMin'),\n    };\n  } else { // vertical\n    if (isFieldDef(xDef)) {\n      if (xDef.bin && !sizeDef) {\n        return mixins.binnedPosition(xDef, 'x', model.scaleName('x'), config.bar.binSpacing);\n      } else {\n        const xScaleType = xScale.get('type');\n\n        if (xScaleType === ScaleType.BAND) {\n          return mixins.bandPosition(xDef, 'x', model);\n        }\n      }\n    }\n    // sized bin, normal point-ordinal axis, quantitative x-axis, or no x\n\n    return mixins.centeredBandPosition('x', model,\n      {...ref.mid(width)},\n      defaultSizeRef(xScaleName, xScale, config)\n    );\n  }\n}\n\nfunction y(model: UnitModel, stack: StackProperties) {\n  const {config, encoding, height} = model;\n  const orient = model.markDef.orient;\n  const sizeDef = encoding.size;\n\n  const yDef = encoding.y;\n  const yScaleName = model.scaleName(Y);\n  const yScale = model.getScaleComponent(Y);\n  // y, y2 & height -- we must specify two of these in all conditions\n  if (orient === 'vertical') {\n    return {\n      ...mixins.pointPosition('y', model, 'zeroOrMin'),\n      ...mixins.pointPosition2(model, 'zeroOrMin'),\n    };\n  } else {\n    if (isFieldDef(yDef)) {\n      const yScaleType = yScale.get('type');\n      if (yDef.bin && !sizeDef) {\n        return mixins.binnedPosition(yDef, 'y', model.scaleName('y'), config.bar.binSpacing);\n      } else if (yScaleType === ScaleType.BAND) {\n        return mixins.bandPosition(yDef, 'y', model);\n      }\n    }\n    return mixins.centeredBandPosition('y', model, ref.mid(height),\n      defaultSizeRef(yScaleName, yScale, config)\n    );\n  }\n}\n\nfunction defaultSizeRef(scaleName: string, scale: ScaleComponent, config: Config): VgValueRef {\n  if (config.bar.discreteBandSize) {\n    return {value: config.bar.discreteBandSize};\n  }\n\n  if (scale) {\n    const scaleType = scale.get('type');\n    if (scaleType === ScaleType.POINT) {\n      const scaleRange = scale.get('range');\n      if (isVgRangeStep(scaleRange) && isNumber(scaleRange.step)) {\n        return {value: scaleRange.step - 1};\n      }\n      log.warn(log.message.BAR_WITH_POINT_SCALE_AND_RANGESTEP_NULL);\n    } else if (scaleType === ScaleType.BAND) {\n      return ref.band(scaleName);\n    } else { // non-ordinal scale\n      return {value: config.bar.continuousBandSize};\n    }\n  }\n  if (config.scale.rangeStep && config.scale.rangeStep !== null) {\n    return {value: config.scale.rangeStep - 1};\n  }\n  // TODO: this should depends on cell's width / height?\n  return {value: 20};\n}\n\n","import {Channel} from '../../channel';\nimport {Config} from '../../config';\nimport {Encoding, isAggregate} from '../../encoding';\nimport {FieldDef, isContinuous, isFieldDef} from '../../fielddef';\nimport * as log from '../../log';\nimport {AREA, BAR, CIRCLE, isMarkDef, LINE, Mark, MarkDef, POINT, RECT, RULE, SQUARE, TEXT, TICK} from '../../mark';\nimport {hasDiscreteDomain, Scale} from '../../scale';\nimport {StackProperties} from '../../stack';\nimport {TEMPORAL} from '../../type';\nimport {contains, Dict} from '../../util';\nimport {getMarkConfig} from '../common';\nimport {ScaleComponentIndex, ScaleIndex} from '../scale/component';\nimport {Orient} from './../../vega.schema';\n\n\nexport function normalizeMarkDef(markDef: MarkDef, encoding: Encoding<string>, scales: ScaleComponentIndex, config: Config) {\n  const specifiedOrient = markDef.orient || getMarkConfig('orient', markDef, config);\n  markDef.orient = orient(markDef.type, encoding, scales, specifiedOrient);\n  if (specifiedOrient !== undefined && specifiedOrient !== markDef.orient) {\n    log.warn(log.message.orientOverridden(markDef.orient,specifiedOrient));\n  }\n\n  const specifiedFilled = markDef.filled;\n  if (specifiedFilled === undefined) {\n    markDef.filled = filled(markDef, config);\n  }\n}\n\n/**\n * Initialize encoding's value with some special default values\n */\nexport function initEncoding(mark: MarkDef, encoding: Encoding<string>, stacked: StackProperties, config: Config): Encoding<string> {\n  const opacityConfig = getMarkConfig('opacity', mark, config);\n  if (!encoding.opacity && opacityConfig === undefined) {\n    const opacity = defaultOpacity(mark.type, encoding, stacked);\n    if (opacity !== undefined) {\n      encoding.opacity = {value: opacity};\n    }\n  }\n\n  return encoding;\n}\n\n\nfunction defaultOpacity(mark: Mark, encoding: Encoding<string>, stacked: StackProperties) {\n  if (contains([POINT, TICK, CIRCLE, SQUARE], mark)) {\n    // point-based marks\n    if (!isAggregate(encoding)) {\n      return 0.7;\n    }\n  }\n  return undefined;\n}\n\nfunction filled(markDef: MarkDef, config: Config) {\n  const filledConfig = getMarkConfig('filled', markDef, config);\n  const mark = markDef.type;\n  return filledConfig !== undefined ? filledConfig : mark !== POINT && mark !== LINE && mark !== RULE;\n}\n\nfunction orient(mark: Mark, encoding: Encoding<string>, scales: ScaleComponentIndex, specifiedOrient: Orient): Orient {\n  switch (mark) {\n    case POINT:\n    case CIRCLE:\n    case SQUARE:\n    case TEXT:\n    case RECT:\n      // orient is meaningless for these marks.\n      return undefined;\n  }\n\n  const yIsRange = encoding.y && encoding.y2;\n  const xIsRange = encoding.x && encoding.x2;\n\n  switch (mark) {\n    case TICK:\n      const xScaleType = scales.x ? scales.x.get('type') : null;\n      const yScaleType = scales.y ? scales.y.get('type') : null;\n\n      // Tick is opposite to bar, line, area and never have ranged mark.\n      if (!hasDiscreteDomain(xScaleType) && (\n            !encoding.y ||\n            hasDiscreteDomain(yScaleType) ||\n            (isFieldDef(encoding.y) && encoding.y.bin)\n        )) {\n        return 'vertical';\n      }\n      // y:Q or Ambiguous case, return horizontal\n      return 'horizontal';\n\n    case RULE:\n    case BAR:\n    case AREA:\n      // If there are range for both x and y, y (vertical) has higher precedence.\n      if (yIsRange) {\n        return 'vertical';\n      } else if (xIsRange) {\n        return 'horizontal';\n      } else if (mark === RULE) {\n        if (encoding.x && !encoding.y) {\n          return 'vertical';\n        } else if (encoding.y && !encoding.x) {\n          return 'horizontal';\n        }\n      }\n\n      /* tslint:disable */\n    case LINE: // intentional fall through\n      /* tslint:enable */\n      const xIsContinuous = isFieldDef(encoding.x) && isContinuous(encoding.x);\n      const yIsContinuous = isFieldDef(encoding.y) && isContinuous(encoding.y);\n      if (xIsContinuous && !yIsContinuous) {\n        return 'horizontal';\n      } else if (!xIsContinuous && yIsContinuous) {\n        return 'vertical';\n      } else if (xIsContinuous && yIsContinuous) {\n        const xDef = encoding.x as FieldDef<string>; // we can cast here since they are surely fieldDef\n        const yDef = encoding.y as FieldDef<string>;\n\n        const xIsTemporal = xDef.type === TEMPORAL;\n        const yIsTemporal = yDef.type === TEMPORAL;\n\n        // temporal without timeUnit is considered continuous, but better serves as dimension\n        if (xIsTemporal && !yIsTemporal) {\n          return 'vertical';\n        } else if (!xIsTemporal && yIsTemporal) {\n          return 'horizontal';\n        }\n\n        if (!xDef.aggregate && yDef.aggregate) {\n          return 'vertical';\n        } else if (xDef.aggregate && !yDef.aggregate) {\n          return 'horizontal';\n        }\n\n        if (specifiedOrient) {\n          // When ambiguous, use user specified one.\n          return specifiedOrient;\n        }\n\n        if (!(mark === LINE && encoding.order)) {\n          // Except for connected scatterplot, we should log warning for unclear orientation of QxQ plots.\n          log.warn(log.message.unclearOrientContinuous(mark));\n        }\n        return 'vertical';\n      } else {\n        // For Discrete x Discrete case, return undefined.\n        log.warn(log.message.unclearOrientDiscreteOrEmpty(mark));\n        return undefined;\n      }\n  }\n  return 'vertical';\n}\n","import {UnitModel} from '../unit';\nimport {MarkCompiler} from './base';\nimport * as mixins from './mixins';\n\n\nexport const line: MarkCompiler = {\n  vgMark: 'line',\n  encodeEntry: (model: UnitModel) => {\n    return {\n      ...mixins.pointPosition('x', model, 'zeroOrMin'),\n      ...mixins.pointPosition('y', model, 'zeroOrMin'),\n      ...mixins.color(model),\n      ...mixins.text(model, 'tooltip'),\n      ...mixins.nonPosition('opacity', model),\n      ...mixins.nonPosition('size', model, {\n        vgChannel: 'strokeWidth'  // VL's line size is strokeWidth\n      }),\n      ...mixins.markDefProperties(model.markDef, ['interpolate', 'tension'])\n    };\n  }\n};\n","import {isArray} from 'vega-util';\nimport {LEVEL_OF_DETAIL_CHANNELS} from '../../channel';\nimport {X, Y} from '../../channel';\nimport {MAIN} from '../../data';\nimport {isAggregate} from '../../encoding';\nimport {field, getFieldDef} from '../../fielddef';\nimport {AREA, LINE} from '../../mark';\nimport {isSelectionDomain} from '../../scale';\nimport {isSortField} from '../../sort';\nimport {contains} from '../../util';\nimport {getStyles, sortParams} from '../common';\nimport {FacetModel} from '../facet';\nimport {isUnitModel, Model} from '../model';\nimport {UnitModel} from '../unit';\nimport {area} from './area';\nimport {bar} from './bar';\nimport {MarkCompiler} from './base';\nimport {normalizeMarkDef} from './init';\nimport {line} from './line';\nimport {circle, point, square} from './point';\nimport {rect} from './rect';\nimport {rule} from './rule';\nimport {text} from './text';\nimport {tick} from './tick';\n\n\nconst markCompiler: {[type: string]: MarkCompiler} = {\n  area: area,\n  bar: bar,\n  line: line,\n  point: point,\n  text: text,\n  tick: tick,\n  rect: rect,\n  rule: rule,\n  circle: circle,\n  square: square\n};\n\nexport function parseMarkDef(model: Model) {\n  if (isUnitModel(model)) {\n    normalizeMarkDef(model.markDef, model.encoding, model.component.scales, model.config);\n  } else {\n    for (const child of model.children) {\n      parseMarkDef(child);\n    }\n  }\n}\n\nexport function parseMarkGroup(model: UnitModel): any[] {\n  if (contains([LINE, AREA], model.mark())) {\n    return parsePathMark(model);\n  } else {\n    return parseNonPathMark(model);\n  }\n}\n\nconst FACETED_PATH_PREFIX = 'faceted_path_';\n\nfunction parsePathMark(model: UnitModel) {\n  const mark = model.mark();\n  // FIXME: replace this with more general case for composition\n  const details = detailFields(model);\n\n  const clip = model.markDef.clip !== undefined ? !!model.markDef.clip : scaleClip(model);\n  const style = getStyles(model.markDef);\n  const sort = getPathSort(model);\n\n  const pathMarks: any = [\n    {\n      name: model.getName('marks'),\n      type: markCompiler[mark].vgMark,\n      ...(clip ? {clip: true} : {}),\n      ...(style? {style} : {}),\n      ...(sort? {sort} : {}),\n      // If has subfacet for line/area group, need to use faceted data from below.\n      // FIXME: support sorting path order (in connected scatterplot)\n      from: {data: (details.length > 0 ? FACETED_PATH_PREFIX : '') + model.requestDataName(MAIN)},\n      encode: {update: markCompiler[mark].encodeEntry(model)}\n    }\n  ];\n\n  if (details.length > 0) { // have level of details - need to facet line into subgroups\n    // TODO: for non-stacked plot, map order to zindex. (Maybe rename order for layer to zindex?)\n\n    return [{\n      name: model.getName('pathgroup'),\n      type: 'group',\n      from: {\n        facet: {\n          name: FACETED_PATH_PREFIX + model.requestDataName(MAIN),\n          data: model.requestDataName(MAIN),\n          groupby: details,\n        }\n      },\n      encode: {\n        update: {\n          width: {field: {group: 'width'}},\n          height: {field: {group: 'height'}}\n        }\n      },\n      marks: pathMarks\n    }];\n  } else {\n    return pathMarks;\n  }\n}\n\nexport function getPathSort(model: UnitModel) {\n  if (model.mark() === 'line' && model.channelHasField('order')) {\n    // For only line, sort by the order field if it is specified.\n    return sortParams(model.encoding.order, {expr: 'datum'});\n  } else {\n    // For both line and area, we sort values based on dimension by default\n    const dimensionChannel: 'x' | 'y' = model.markDef.orient === 'horizontal' ? 'y' : 'x';\n    const s = model.sort(dimensionChannel);\n    const sortField = isSortField(s) ?\n      field({\n        // FIXME: this op might not already exist?\n        // FIXME: what if dimensionChannel (x or y) contains custom domain?\n        aggregate: isAggregate(model.encoding) ? s.op : undefined,\n        field: s.field\n      }, {expr: 'datum'}) :\n      model.field(dimensionChannel, {\n        // For stack with imputation, we only have bin_mid\n        binSuffix: model.stack && model.stack.impute ? 'mid' : 'start',\n        expr: 'datum'\n      });\n\n    return {\n      field: sortField,\n      order: 'descending'\n    };\n  }\n}\n\nfunction parseNonPathMark(model: UnitModel) {\n  const mark = model.mark();\n\n  const style = getStyles(model.markDef);\n  const clip = model.markDef.clip !== undefined ? !!model.markDef.clip : scaleClip(model);\n\n  const marks: any[] = []; // TODO: vgMarks\n\n  // TODO: for non-stacked plot, map order to zindex. (Maybe rename order for layer to zindex?)\n\n  marks.push({\n    name: model.getName('marks'),\n    type: markCompiler[mark].vgMark,\n    ...(clip ? {clip: true} : {}),\n    ...(style? {style} : {}),\n    from: {data: model.requestDataName(MAIN)},\n    encode: {update: markCompiler[mark].encodeEntry(model)}\n  });\n\n  return marks;\n}\n\n/**\n * Returns list of detail (group-by) fields\n * that the model's spec contains.\n */\nfunction detailFields(model: UnitModel): string[] {\n  return LEVEL_OF_DETAIL_CHANNELS.reduce(function(details, channel) {\n    const {encoding} = model;\n    if (channel === 'detail' || channel === 'order') {\n      const channelDef = encoding[channel];\n      if (channelDef) {\n        (isArray(channelDef) ? channelDef : [channelDef]).forEach((fieldDef) => {\n          if (!fieldDef.aggregate) {\n            details.push(field(fieldDef, {binSuffix: 'start'}));\n          }\n        });\n      }\n    } else {\n      const fieldDef = getFieldDef<string>(encoding[channel]);\n      if (fieldDef && !fieldDef.aggregate) {\n        details.push(field(fieldDef, {binSuffix: 'start'}));\n      }\n    }\n    return details;\n  }, []);\n}\n\n/**\n * If scales are bound to interval selections, we want to automatically clip\n * marks to account for panning/zooming interactions. We identify bound scales\n * by the domainRaw property, which gets added during scale parsing.\n */\nfunction scaleClip(model: UnitModel) {\n  const xScale = model.getScaleComponent('x');\n  const yScale = model.getScaleComponent('y');\n  return (xScale && xScale.get('domainRaw')) ||\n    (yScale && yScale.get('domainRaw')) ? true : false;\n}\n","import {NONSPATIAL_SCALE_CHANNELS} from '../../channel';\nimport {ChannelDef, Condition, ConditionalValueDef, FieldDef, getFieldDef, isValueDef} from '../../fielddef';\nimport * as log from '../../log';\nimport {MarkDef} from '../../mark';\nimport * as util from '../../util';\nimport {VgEncodeEntry, VgValueRef} from '../../vega.schema';\nimport {getMarkConfig} from '../common';\nimport {predicate} from '../selection/selection';\nimport {UnitModel} from '../unit';\nimport * as ref from './valueref';\n\n\nexport function color(model: UnitModel) {\n  const config = model.config;\n  const filled = model.markDef.filled;\n\n  const e = nonPosition('color', model, {\n    vgChannel: filled ? 'fill' : 'stroke',\n    defaultValue: getMarkConfig('color', model.markDef, config) as string\n  });\n\n  // If there is no fill, always fill symbols\n  // with transparent fills https://github.com/vega/vega-lite/issues/1316\n  if (!e.fill && util.contains(['bar', 'point', 'circle', 'square'], model.mark())) {\n    e.fill = {value: 'transparent'};\n  }\n  return e;\n}\n\nexport function markDefProperties(mark: MarkDef, props: (keyof MarkDef)[]) {\n  return props.reduce((m, prop) => {\n    if (mark[prop]) {\n      m[prop] = {value: mark[prop]};\n    }\n    return m;\n  }, {});\n}\n\nexport function valueIfDefined(prop: string, value: string | number | boolean): VgEncodeEntry {\n  if (value !== undefined) {\n    return {[prop]: {value: value}};\n  }\n  return undefined;\n}\n\n/**\n * Return mixins for non-positional channels with scales.  (Text doesn't have scale.)\n */\nexport function nonPosition(channel: typeof NONSPATIAL_SCALE_CHANNELS[0], model: UnitModel, opt: {defaultValue?: number | string | boolean, vgChannel?: string, defaultRef?: VgValueRef} = {}): VgEncodeEntry {\n  // TODO: refactor how we refer to scale as discussed in https://github.com/vega/vega-lite/pull/1613\n\n  const {defaultValue, vgChannel} = opt;\n  const defaultRef = opt.defaultRef || (defaultValue !== undefined ? {value: defaultValue} : undefined);\n\n  const channelDef = model.encoding[channel];\n\n  return wrapCondition(model, channelDef, vgChannel || channel, (cDef) => {\n    return ref.midPoint(\n      channel, cDef, model.scaleName(channel),\n      model.getScaleComponent(channel),\n      null, // No need to provide stack for non-position as it does not affect mid point\n      defaultRef\n    );\n  });\n}\n\n/**\n * Return a mixin that include a Vega production rule for a Vega-Lite conditional channel definition.\n * or a simple mixin if channel def has no condition.\n */\nfunction wrapCondition(\n    model: UnitModel, channelDef: ChannelDef<string>, vgChannel: string,\n    refFn: (cDef: ChannelDef<string>) => VgValueRef\n  ): VgEncodeEntry {\n  const condition = channelDef && channelDef.condition;\n  const valueRef = refFn(channelDef);\n  if (condition) {\n    const conditionValueRef = refFn(condition);\n    return {\n      [vgChannel]: [\n        {test: predicate(model, condition.selection), ...conditionValueRef},\n        ...(valueRef !== undefined ? [valueRef] : [])\n      ]\n    };\n  } else {\n    return valueRef !== undefined ? {[vgChannel]: valueRef} : {};\n  }\n}\n\nexport function text(model: UnitModel, channel: 'text' | 'tooltip' = 'text') {\n  const channelDef = model.encoding[channel];\n  return wrapCondition(model, channelDef, channel, (cDef) => ref.text(cDef, model.config));\n}\n\nexport function bandPosition(fieldDef: FieldDef<string>, channel: 'x'|'y', model: UnitModel) {\n  const scaleName = model.scaleName(channel);\n  const sizeChannel = channel === 'x' ? 'width' : 'height';\n\n  if (model.encoding.size) {\n    const orient = model.markDef.orient;\n    if (orient) {\n      const centeredBandPositionMixins = {\n        // Use xc/yc and place the mark at the middle of the band\n        // This way we never have to deal with size's condition for x/y position.\n        [channel+'c']: ref.fieldRef(fieldDef, scaleName, {}, {band: 0.5})\n      };\n\n      if (getFieldDef(model.encoding.size)) {\n        log.warn(log.message.cannotUseSizeFieldWithBandSize(channel));\n        // TODO: apply size to band and set scale range to some values between 0-1.\n        // return {\n        //   ...centeredBandPositionMixins,\n        //   ...bandSize('size', model, {vgChannel: sizeChannel})\n        // };\n      } else if (isValueDef(model.encoding.size)) {\n        return {\n          ...centeredBandPositionMixins,\n          ...nonPosition('size', model, {vgChannel: sizeChannel})\n        };\n      }\n    } else {\n      log.warn(log.message.cannotApplySizeToNonOrientedMark(model.markDef.type));\n    }\n  }\n  return {\n    [channel]: ref.fieldRef(fieldDef, scaleName, {}),\n    [sizeChannel]: ref.band(scaleName)\n  };\n}\n\nexport function centeredBandPosition(channel: 'x' | 'y', model: UnitModel, defaultPosRef: VgValueRef, defaultSizeRef: VgValueRef) {\n  const centerChannel: 'xc' | 'yc' = channel === 'x' ? 'xc' : 'yc';\n  const sizeChannel = channel === 'x' ? 'width' : 'height';\n  return {\n    ...pointPosition(channel, model, defaultPosRef, centerChannel),\n    ...nonPosition('size', model, {defaultRef: defaultSizeRef, vgChannel: sizeChannel})\n  };\n}\n\nexport function binnedPosition(fieldDef: FieldDef<string>, channel: 'x'|'y', scaleName: string, spacing: number) {\n  if (channel === 'x') {\n    return {\n      x2: ref.bin(fieldDef, scaleName, 'start', spacing),\n      x: ref.bin(fieldDef, scaleName, 'end')\n    };\n  } else {\n    return {\n      y2: ref.bin(fieldDef, scaleName, 'start'),\n      y: ref.bin(fieldDef, scaleName, 'end', spacing)\n    };\n  }\n}\n\n/**\n * Return mixins for point (non-band) position channels.\n */\nexport function pointPosition(channel: 'x'|'y', model: UnitModel, defaultRef: VgValueRef | 'zeroOrMin' | 'zeroOrMax', vgChannel?: 'x'|'y'|'xc'|'yc') {\n  // TODO: refactor how refer to scale as discussed in https://github.com/vega/vega-lite/pull/1613\n\n  const {encoding, stack} = model;\n  const valueRef = ref.stackable(channel, encoding[channel], model.scaleName(channel), model.getScaleComponent(channel), stack, defaultRef);\n\n  return {\n    [vgChannel || channel]: valueRef\n  };\n}\n\n/**\n * Return mixins for x2, y2.\n * If channel is not specified, return one channel based on orientation.\n */\nexport function pointPosition2(model: UnitModel, defaultRef: 'zeroOrMin' | 'zeroOrMax', channel?: 'x2' | 'y2') {\n  const {encoding, markDef, stack} = model;\n  channel = channel || (markDef.orient === 'horizontal' ? 'x2' : 'y2');\n  const baseChannel = channel === 'x2' ? 'x' : 'y';\n\n  const valueRef = ref.stackable2(channel, encoding[baseChannel], encoding[channel], model.scaleName(baseChannel), model.getScaleComponent(baseChannel), stack, defaultRef);\n  return {[channel]: valueRef};\n}\n","import {Config} from '../../config';\nimport {VgEncodeEntry} from '../../vega.schema';\nimport {getMarkConfig} from '../common';\nimport {UnitModel} from '../unit';\nimport {MarkCompiler} from './base';\nimport * as mixins from './mixins';\nimport * as ref from './valueref';\n\n\nfunction encodeEntry(model: UnitModel, fixedShape?: 'circle' | 'square') {\n  const {config, width, height} = model;\n\n  return {\n    ...mixins.pointPosition('x', model, ref.mid(width)),\n    ...mixins.pointPosition('y', model, ref.mid(height)),\n\n    ...mixins.color(model),\n    ...mixins.text(model, 'tooltip'),\n    ...mixins.nonPosition('size', model),\n    ...shapeMixins(model, config, fixedShape),\n    ...mixins.nonPosition('opacity', model),\n  };\n}\n\nexport function shapeMixins(model: UnitModel, config: Config, fixedShape?: 'circle' | 'square'): VgEncodeEntry {\n  if (fixedShape) {\n    return {shape: {value: fixedShape}};\n  }\n  return mixins.nonPosition('shape', model, {defaultValue: getMarkConfig('shape', model.markDef, config) as string});\n}\n\nexport const point: MarkCompiler = {\n  vgMark: 'symbol',\n  encodeEntry: (model: UnitModel) => {\n    return encodeEntry(model);\n  }\n};\n\nexport const circle: MarkCompiler = {\n  vgMark: 'symbol',\n  encodeEntry: (model: UnitModel) => {\n    return encodeEntry(model, 'circle');\n  }\n};\n\nexport const square: MarkCompiler = {\n  vgMark: 'symbol',\n  encodeEntry: (model: UnitModel) => {\n    return encodeEntry(model, 'square');\n  }\n};\n","import {X, Y} from '../../channel';\nimport {isFieldDef} from '../../fielddef';\nimport * as log from '../../log';\nimport {RECT} from '../../mark';\nimport {hasDiscreteDomain, ScaleType} from '../../scale';\nimport {UnitModel} from '../unit';\nimport {MarkCompiler} from './base';\nimport * as mixins from './mixins';\n\n\nexport const rect: MarkCompiler = {\n  vgMark: 'rect',\n  encodeEntry: (model: UnitModel) => {\n    return {\n      ...x(model),\n      ...y(model),\n      ...mixins.color(model),\n      ...mixins.text(model, 'tooltip'),\n      ...mixins.nonPosition('opacity', model),\n    };\n  }\n};\n\nfunction x(model: UnitModel) {\n  const xDef = model.encoding.x;\n  const x2Def = model.encoding.x2;\n  const xScale = model.getScaleComponent(X);\n  const xScaleType = xScale ? xScale.get('type') : undefined;\n\n  if (isFieldDef(xDef) && xDef.bin && !x2Def) {\n    return mixins.binnedPosition(xDef, 'x', model.scaleName('x'), 0);\n  } else if (isFieldDef(xDef) && xScale && hasDiscreteDomain(xScaleType)) {\n    /* istanbul ignore else */\n    if (xScaleType === ScaleType.BAND) {\n      return mixins.bandPosition(xDef, 'x', model);\n    } else {\n      // We don't support rect mark with point/ordinal scale\n      throw new Error(log.message.scaleTypeNotWorkWithMark(RECT, xScaleType));\n    }\n  } else { // continuous scale or no scale\n    return {\n      ...mixins.pointPosition('x', model, 'zeroOrMax'),\n      ...mixins.pointPosition2(model, 'zeroOrMin', 'x2')\n    };\n  }\n}\n\nfunction y(model: UnitModel) {\n  const yDef = model.encoding.y;\n  const y2Def = model.encoding.y2;\n  const yScale = model.getScaleComponent(Y);\n  const yScaleType = yScale ? yScale.get('type') : undefined;\n\n  if (isFieldDef(yDef) && yDef.bin && !y2Def) {\n    return mixins.binnedPosition(yDef, 'y', model.scaleName('y'), 0);\n  } else if (isFieldDef(yDef) && yScale && hasDiscreteDomain(yScaleType)) {\n    /* istanbul ignore else */\n    if (yScaleType === ScaleType.BAND) {\n      return mixins.bandPosition(yDef, 'y', model);\n    } else {\n      // We don't support rect mark with point/ordinal scale\n      throw new Error(log.message.scaleTypeNotWorkWithMark(RECT, yScaleType));\n    }\n  } else { // continuous scale or no scale\n    return {\n      ...mixins.pointPosition('y', model, 'zeroOrMax'),\n      ...mixins.pointPosition2(model, 'zeroOrMin', 'y2')\n    };\n  }\n}\n","import {UnitModel} from '../unit';\nimport {MarkCompiler} from './base';\nimport * as mixins from './mixins';\nimport * as ref from './valueref';\n\n\nexport const rule: MarkCompiler = {\n  vgMark: 'rule',\n  encodeEntry: (model: UnitModel) => {\n    const {config, markDef, width, height} = model;\n    const orient = markDef.orient;\n\n    return {\n      ...mixins.pointPosition('x', model, orient === 'horizontal' ? 'zeroOrMin' : ref.mid(width)),\n      ...mixins.pointPosition('y', model, orient === 'vertical' ? 'zeroOrMin' : ref.mid(height)),\n      ...mixins.pointPosition2(model, 'zeroOrMax'),\n\n      ...mixins.color(model),\n      ...mixins.text(model, 'tooltip'),\n      ...mixins.nonPosition('opacity', model),\n      ...mixins.nonPosition('size', model, {\n        vgChannel: 'strokeWidth'  // VL's rule size is strokeWidth\n      })\n    };\n  }\n};\n","import {X} from '../../channel';\nimport {Config} from '../../config';\nimport {channelHasField, Encoding} from '../../encoding';\nimport {ChannelDef, isFieldDef} from '../../fielddef';\nimport {MarkDef} from '../../mark';\nimport {QUANTITATIVE} from '../../type';\nimport {VgValueRef} from '../../vega.schema';\nimport {getMarkConfig} from '../common';\nimport {UnitModel} from '../unit';\nimport {MarkCompiler} from './base';\nimport * as mixins from './mixins';\nimport * as ref from './valueref';\n\n\nexport const text: MarkCompiler = {\n  vgMark: 'text',\n\n  encodeEntry: (model: UnitModel) => {\n    const {config, encoding, height} = model;\n    const textDef = encoding.text;\n\n    return {\n      ...mixins.pointPosition('x', model, xDefault(config, textDef)),\n      ...mixins.pointPosition('y', model, ref.mid(height)),\n      ...mixins.text(model),\n      ...mixins.color(model),\n      ...mixins.text(model, 'tooltip'),\n      ...mixins.nonPosition('opacity', model),\n      ...mixins.nonPosition('size', model, {\n        vgChannel: 'fontSize'  // VL's text size is fontSize\n      }),\n      ...mixins.valueIfDefined('align', align(model.markDef, encoding, config))\n    };\n  }\n};\n\nfunction xDefault(config: Config, textDef: ChannelDef<string>): VgValueRef {\n  if (isFieldDef(textDef) && textDef.type === QUANTITATIVE) {\n    return {field: {group: 'width'}, offset: -5};\n  }\n  // TODO: allow this to fit (Be consistent with ref.midX())\n  return {value: config.scale.textXRangeStep / 2};\n}\n\nfunction align(markDef: MarkDef, encoding: Encoding<string>, config: Config) {\n  const alignConfig = getMarkConfig('align', markDef, config);\n  if (alignConfig === undefined) {\n    return channelHasField(encoding, X) ? 'center' : 'right';\n  }\n  // If there is a config, Vega-parser will process this already.\n  return undefined;\n}\n","import {isVgRangeStep} from '../../vega.schema';\nimport {UnitModel} from '../unit';\nimport {MarkCompiler} from './base';\nimport * as mixins from './mixins';\nimport * as ref from './valueref';\n\n\nexport const tick: MarkCompiler = {\n  vgMark: 'rect',\n\n  encodeEntry: (model: UnitModel) => {\n    const {config, markDef, width, height} = model;\n    const orient = markDef.orient;\n\n    const vgSizeChannel = orient === 'horizontal' ? 'width' : 'height';\n    const vgThicknessChannel = orient === 'horizontal' ? 'height' : 'width';\n\n    return {\n      ...mixins.pointPosition('x', model, ref.mid(width), 'xc'),\n      ...mixins.pointPosition('y', model, ref.mid(height), 'yc'),\n\n      // size / thickness => width / height\n      ...mixins.nonPosition('size', model, {\n        defaultValue: defaultSize(model),\n        vgChannel: vgSizeChannel\n      }),\n      [vgThicknessChannel]: {value: config.tick.thickness},\n\n      ...mixins.color(model),\n      ...mixins.nonPosition('opacity', model),\n    };\n  }\n};\n\nfunction defaultSize(model: UnitModel): number {\n  const {config} = model;\n  const orient = model.markDef.orient;\n  const scale = model.getScaleComponent(orient === 'horizontal' ? 'x' : 'y');\n\n  if (config.tick.bandSize !== undefined) {\n    return config.tick.bandSize;\n  } else {\n    const scaleRange = scale ? scale.get('range') : undefined;\n    const rangeStep = scaleRange && isVgRangeStep(scaleRange) ?\n      scaleRange.step :\n      config.scale.rangeStep;\n    if (typeof rangeStep !== 'number') {\n      // FIXME consolidate this log\n      throw new Error('Function does not handle non-numeric rangeStep');\n    }\n    return rangeStep / 1.5;\n  }\n}\n","/**\n * Utility files for producing Vega ValueRef for marks\n */\n\nimport {isNumber} from 'vega-util';\nimport {Channel, ScaleChannel, X, X2, Y, Y2} from '../../channel';\nimport {Config} from '../../config';\nimport {ChannelDef, Conditional, field, FieldDef, FieldRefOption, isFieldDef, isValueDef, TextFieldDef, ValueDef} from '../../fielddef';\nimport {hasDiscreteDomain, ScaleType} from '../../scale';\nimport {StackProperties} from '../../stack';\nimport {contains} from '../../util';\nimport {isVgSignalRef, VgScale, VgSignalRef, VgValueRef} from '../../vega.schema';\nimport {formatSignalRef, numberFormat} from '../common';\nimport {ScaleComponent} from '../scale/component';\n\n\n// TODO: we need to find a way to refactor these so that scaleName is a part of scale\n// but that's complicated.  For now, this is a huge step moving forward.\n\n/**\n * @return Vega ValueRef for stackable x or y\n */\nexport function stackable(channel: 'x' | 'y', channelDef: ChannelDef<string>, scaleName: string, scale: ScaleComponent,\n    stack: StackProperties, defaultRef: VgValueRef | 'zeroOrMin' | 'zeroOrMax'): VgValueRef {\n  if (isFieldDef(channelDef) && stack && channel === stack.fieldChannel) {\n    // x or y use stack_end so that stacked line's point mark use stack_end too.\n    return fieldRef(channelDef, scaleName, {suffix: 'end'});\n  }\n  return midPoint(channel, channelDef, scaleName, scale, stack, defaultRef);\n}\n\n/**\n * @return Vega ValueRef for stackable x2 or y2\n */\nexport function stackable2(channel: 'x2' | 'y2', aFieldDef: ChannelDef<string>, a2fieldDef: ChannelDef<string>, scaleName: string, scale: ScaleComponent,\n    stack: StackProperties, defaultRef: VgValueRef | 'zeroOrMin' | 'zeroOrMax'): VgValueRef {\n  if (isFieldDef(aFieldDef) && stack &&\n      // If fieldChannel is X and channel is X2 (or Y and Y2)\n      channel.charAt(0) === stack.fieldChannel.charAt(0)\n      ) {\n    return fieldRef(aFieldDef, scaleName, {suffix: 'start'});\n  }\n  return midPoint(channel, a2fieldDef, scaleName, scale, stack, defaultRef);\n}\n\n/**\n * Value Ref for binned fields\n */\nexport function bin(fieldDef: FieldDef<string>, scaleName: string, side: 'start' | 'end',  offset?: number) {\n  return fieldRef(fieldDef, scaleName, {binSuffix: side}, offset ? {offset} : {});\n}\n\nexport function fieldRef(\n    fieldDef: FieldDef<string>, scaleName: string, opt: FieldRefOption,\n    mixins?: {offset?: number | VgValueRef, band?: number|boolean}\n  ): VgValueRef {\n  const ref: VgValueRef = {\n    scale: scaleName,\n    field: field(fieldDef, opt),\n  };\n  if (mixins) {\n    return {\n      ...ref,\n      ...mixins\n    };\n  }\n  return ref;\n}\n\nexport function band(scaleName: string, band: number|boolean = true): VgValueRef {\n  return {\n    scale: scaleName,\n    band: band\n  };\n}\n\n/**\n * Signal that returns the middle of a bin. Should only be used with x and y.\n */\nfunction binMidSignal(fieldDef: FieldDef<string>, scaleName: string) {\n  return {\n    signal: `(` +\n      `scale(\"${scaleName}\", ${field(fieldDef, {binSuffix: 'start', expr: 'datum'})})` +\n      ` + ` +\n      `scale(\"${scaleName}\", ${field(fieldDef, {binSuffix: 'end', expr: 'datum'})})`+\n    `)/2`\n  };\n}\n\n/**\n * @returns {VgValueRef} Value Ref for xc / yc or mid point for other channels.\n */\nexport function midPoint(channel: Channel, channelDef: ChannelDef<string>, scaleName: string, scale: ScaleComponent, stack: StackProperties,\n  defaultRef: VgValueRef | 'zeroOrMin' | 'zeroOrMax',): VgValueRef {\n  // TODO: datum support\n\n  if (channelDef) {\n    /* istanbul ignore else */\n\n    if (isFieldDef(channelDef)) {\n      if (channelDef.bin) {\n        // Use middle only for x an y to place marks in the center between start and end of the bin range.\n        // We do not use the mid point for other channels (e.g. size) so that properties of legends and marks match.\n        if (contains(['x', 'y'], channel)) {\n          if (stack && stack.impute) {\n            // For stack, we computed bin_mid so we can impute.\n            return fieldRef(channelDef, scaleName, {binSuffix: 'mid'});\n          }\n          // For non-stack, we can just calculate bin mid on the fly using signal.\n          return binMidSignal(channelDef, scaleName);\n        }\n        return fieldRef(channelDef, scaleName, {binSuffix: 'start'});\n      }\n\n      const scaleType = scale.get('type');\n      if (hasDiscreteDomain(scaleType)) {\n        if (scaleType === 'band') {\n          // For band, to get mid point, need to offset by half of the band\n          return fieldRef(channelDef, scaleName, {binSuffix: 'range'}, {band: 0.5});\n        }\n        return fieldRef(channelDef, scaleName, {binSuffix: 'range'});\n      } else {\n        return fieldRef(channelDef, scaleName, {}); // no need for bin suffix\n      }\n    } else if (isValueDef(channelDef)) {\n      return {value: channelDef.value};\n    } else {\n      throw new Error('FieldDef without field or value.'); // FIXME add this to log.message\n    }\n  }\n\n  if (defaultRef === 'zeroOrMin') {\n    /* istanbul ignore else */\n    if (channel === X || channel === X2) {\n      return zeroOrMinX(scaleName, scale);\n    } else if (channel === Y || channel === Y2) {\n      return zeroOrMinY(scaleName, scale);\n    } else {\n      throw new Error(`Unsupported channel ${channel} for base function`); // FIXME add this to log.message\n    }\n  } else if (defaultRef === 'zeroOrMax') {\n    /* istanbul ignore else */\n    if (channel === X || channel === X2) {\n      return zeroOrMaxX(scaleName, scale);\n    } else if (channel === Y || channel === Y2) {\n      return zeroOrMaxY(scaleName, scale);\n    } else {\n      throw new Error(`Unsupported channel ${channel} for base function`); // FIXME add this to log.message\n    }\n  }\n  return defaultRef;\n}\n\nexport function text(textDef: Conditional<TextFieldDef<string>, ValueDef<any>>, config: Config): VgValueRef {\n  // text\n  if (textDef) {\n    if (isFieldDef(textDef)) {\n      return formatSignalRef(textDef, textDef.format, 'datum', config);\n    } else if (isValueDef(textDef)) {\n      return {value: textDef.value};\n    }\n  }\n  return undefined;\n}\n\nexport function mid(sizeRef: VgSignalRef): VgValueRef {\n  return {...sizeRef, mult: 0.5};\n}\n\nfunction zeroOrMinX(scaleName: string, scale: ScaleComponent): VgValueRef {\n  if (scaleName) {\n    // Log / Time / UTC scale do not support zero\n    if (!contains([ScaleType.LOG, ScaleType.TIME, ScaleType.UTC], scale.get('type')) &&\n      scale.get('zero') !== false) {\n\n      return {\n        scale: scaleName,\n        value: 0\n      };\n    }\n  }\n  // Put the mark on the x-axis\n  return {value: 0};\n}\n\n/**\n * @returns {VgValueRef} base value if scale exists and return max value if scale does not exist\n */\nfunction zeroOrMaxX(scaleName: string, scale: ScaleComponent): VgValueRef {\n  if (scaleName) {\n    // Log / Time / UTC scale do not support zero\n    if (!contains([ScaleType.LOG, ScaleType.TIME, ScaleType.UTC], scale.get('type')) &&\n      scale.get('zero') !== false) {\n\n      return {\n        scale: scaleName,\n        value: 0\n      };\n    }\n  }\n  return {field: {group: 'width'}};\n}\n\nfunction zeroOrMinY(scaleName: string, scale: ScaleComponent): VgValueRef {\n  if (scaleName) {\n    // Log / Time / UTC scale do not support zero\n    if (!contains([ScaleType.LOG, ScaleType.TIME, ScaleType.UTC], scale.get('type')) &&\n      scale.get('zero') !== false) {\n\n      return {\n        scale: scaleName,\n        value: 0\n      };\n    }\n  }\n  // Put the mark on the y-axis\n  return {field: {group: 'height'}};\n}\n\n/**\n * @returns {VgValueRef} base value if scale exists and return max value if scale does not exist\n */\nfunction zeroOrMaxY(scaleName: string, scale: ScaleComponent): VgValueRef {\n  if (scaleName) {\n    // Log / Time / UTC scale do not support zero\n    if (!contains([ScaleType.LOG, ScaleType.TIME, ScaleType.UTC], scale.get('type')) &&\n      scale.get('zero') !== false) {\n\n      return {\n        scale: scaleName,\n        value: 0\n      };\n    }\n  }\n  // Put the mark on the y-axis\n  return {value: 0};\n}\n","import {Channel, isChannel, isScaleChannel, ScaleChannel, SingleDefChannel} from '../channel';\nimport {Config} from '../config';\nimport {Data, DataSourceType} from '../data';\nimport {forEach, reduce} from '../encoding';\nimport {ChannelDef, field, FieldDef, FieldRefOption, getFieldDef, title} from '../fielddef';\nimport * as log from '../log';\nimport {ResolveMapping} from '../resolve';\nimport {hasDiscreteDomain} from '../scale';\nimport {BaseSpec} from '../spec';\nimport {extractTitleConfig, Title} from '../title';\nimport {Transform} from '../transform';\nimport {Dict, extend, keys, varName} from '../util';\nimport {\n  isVgRangeStep,\n  VgAxis,\n  VgData,\n  VgEncodeEntry,\n  VgLayout,\n  VgLegend,\n  VgMarkGroup,\n  VgScale,\n  VgSignal,\n  VgSignalRef,\n  VgTitle,\n} from '../vega.schema';\nimport {assembleAxes} from './axis/assemble';\nimport {AxisComponentIndex} from './axis/component';\nimport {ConcatModel} from './concat';\nimport {DataComponent} from './data/index';\nimport {FacetModel} from './facet';\nimport {LayerModel} from './layer';\nimport {getHeaderGroup, getTitleGroup, HEADER_CHANNELS, HEADER_TYPES, LayoutHeaderComponent} from './layout/header';\nimport {sizeExpr} from './layoutsize/assemble';\nimport {LayoutSizeComponent, LayoutSizeIndex} from './layoutsize/component';\nimport {assembleLegends} from './legend/assemble';\nimport {LegendComponentIndex} from './legend/component';\nimport {parseLegend} from './legend/parse';\nimport {parseMarkDef} from './mark/mark';\nimport {RepeatModel} from './repeat';\nimport {ScaleComponent, ScaleComponentIndex} from './scale/component';\nimport {getFieldFromDomains} from './scale/domain';\nimport {parseScale} from './scale/parse';\nimport {SelectionComponent} from './selection/selection';\nimport {Split} from './split';\nimport {UnitModel} from './unit';\n\n\n/**\n * Composable Components that are intermediate results of the parsing phase of the\n * compilations.  The components represents parts of the specification in a form that\n * can be easily merged (during parsing for composite specs).\n * In addition, these components are easily transformed into Vega specifications\n * during the \"assemble\" phase, which is the last phase of the compilation step.\n */\nexport interface Component {\n  data: DataComponent;\n\n  layoutSize: LayoutSizeComponent;\n\n  layoutHeaders: {\n    row?: LayoutHeaderComponent,\n    column?: LayoutHeaderComponent\n  };\n\n  mark: VgMarkGroup[];\n  scales: ScaleComponentIndex;\n  selection: Dict<SelectionComponent>;\n\n  /** Dictionary mapping channel to VgAxis definition */\n  axes: AxisComponentIndex;\n\n  /** Dictionary mapping channel to VgLegend definition */\n  legends: LegendComponentIndex;\n\n  resolve: ResolveMapping;\n}\n\nexport interface NameMapInterface {\n  rename(oldname: string, newName: string): void;\n  has(name: string): boolean;\n  get(name: string): string;\n}\n\nexport class NameMap implements NameMapInterface {\n  private nameMap: Dict<string>;\n\n  constructor() {\n    this.nameMap = {};\n  }\n\n  public rename(oldName: string, newName: string) {\n    this.nameMap[oldName] = newName;\n  }\n\n\n  public has(name: string): boolean {\n    return this.nameMap[name] !== undefined;\n  }\n\n  public get(name: string): string {\n    // If the name appears in the _nameMap, we need to read its new name.\n    // We have to loop over the dict just in case the new name also gets renamed.\n    while (this.nameMap[name] && name !== this.nameMap[name]) {\n      name = this.nameMap[name];\n    }\n\n    return name;\n  }\n}\n\n/*\n  We use type guards instead of `instanceof` as `instanceof` makes\n  different parts of the compiler depend on the actual implementation of\n  the model classes, which in turn depend on different parts of the compiler.\n  Thus, `instanceof` leads to circular dependency problems.\n\n  On the other hand, type guards only make different parts of the compiler\n  depend on the type of the model classes, but not the actual implementation.\n*/\n\nexport function isUnitModel(model: Model): model is UnitModel {\n  return model && model.type === 'unit';\n}\n\nexport function isFacetModel(model: Model): model is FacetModel {\n  return model && model.type === 'facet';\n}\n\nexport function isRepeatModel(model: Model): model is RepeatModel {\n  return model && model.type === 'repeat';\n}\n\nexport function isConcatModel(model: Model): model is ConcatModel {\n  return model && model.type === 'concat';\n}\n\nexport function isLayerModel(model: Model): model is LayerModel {\n  return model && model.type === 'layer';\n}\n\nexport abstract class Model {\n\n  public abstract readonly type: 'unit' | 'facet' | 'layer' | 'concat' | 'repeat';\n  public readonly parent: Model;\n  public readonly name: string;\n\n  public readonly title: Title;\n  public readonly description: string;\n\n  public readonly data: Data;\n  public readonly transforms: Transform[];\n\n  /** Name map for scales, which can be renamed by a model's parent. */\n  protected scaleNameMap: NameMapInterface;\n\n  /** Name map for size, which can be renamed by a model's parent. */\n  protected layoutSizeNameMap: NameMapInterface;\n\n\n  public readonly config: Config;\n\n  public readonly component: Component;\n\n  public abstract readonly children: Model[] = [];\n\n  constructor(spec: BaseSpec, parent: Model, parentGivenName: string, config: Config, resolve: ResolveMapping) {\n    this.parent = parent;\n    this.config = config;\n\n    // If name is not provided, always use parent's givenName to avoid name conflicts.\n    this.name = spec.name || parentGivenName;\n    this.title = spec.title;\n\n    // Shared name maps\n    this.scaleNameMap = parent ? parent.scaleNameMap : new NameMap();\n    this.layoutSizeNameMap = parent ? parent.layoutSizeNameMap : new NameMap();\n\n    this.data = spec.data;\n\n    this.description = spec.description;\n    this.transforms = spec.transform || [];\n\n    this.component = {\n      data: {\n        sources: parent ? parent.component.data.sources : {},\n        outputNodes: parent ? parent.component.data.outputNodes : {},\n        outputNodeRefCounts: parent ? parent.component.data.outputNodeRefCounts : {},\n        ancestorParse: parent ? {...parent.component.data.ancestorParse} : {}\n      },\n      layoutSize: new Split<LayoutSizeIndex>(),\n      layoutHeaders:{row: {}, column: {}},\n      mark: null,\n      resolve: resolve || {},\n      selection: null,\n      scales: null,\n      axes: {},\n      legends: {},\n    };\n  }\n\n  public get width(): VgSignalRef {\n    return this.getSizeSignalRef('width');\n  }\n\n\n  public get height(): VgSignalRef {\n    return this.getSizeSignalRef('height');\n  }\n\n  protected initSize(size: LayoutSizeIndex) {\n    const {width, height} = size;\n    if (width) {\n      this.component.layoutSize.set('width', width, true);\n    }\n\n    if (height) {\n      this.component.layoutSize.set('height', height, true);\n    }\n  }\n\n  public parse() {\n    this.parseScale();\n    this.parseMarkDef();\n\n    this.parseLayoutSize(); // depends on scale\n    this.renameTopLevelLayoutSize();\n\n    this.parseSelection();\n    this.parseData(); // (pathorder) depends on markDef; selection filters depend on parsed selections.\n    this.parseAxisAndHeader(); // depends on scale and layout size\n    this.parseLegend(); // depends on scale, markDef\n    this.parseMarkGroup(); // depends on data name, scale, layout size, axisGroup, and children's scale, axis, legend and mark.\n  }\n\n  public abstract parseData(): void;\n\n  public abstract parseSelection(): void;\n\n\n  public parseScale() {\n    parseScale(this);\n  }\n\n  public abstract parseLayoutSize(): void;\n\n  /**\n   * Rename top-level spec's size to be just width / height, ignoring model name.\n   * This essentially merges the top-level spec's width/height signals with the width/height signals\n   * to help us reduce redundant signals declaration.\n   */\n  private renameTopLevelLayoutSize() {\n    if (this.getName('width') !== 'width') {\n      this.renameLayoutSize(this.getName('width'), 'width');\n    }\n    if (this.getName('height') !== 'height') {\n      this.renameLayoutSize(this.getName('height'), 'height');\n    }\n  }\n\n  public parseMarkDef() {\n    parseMarkDef(this);\n  }\n\n  public abstract parseMarkGroup(): void;\n\n  public abstract parseAxisAndHeader(): void;\n\n  public parseLegend() {\n    parseLegend(this);\n  }\n\n  public abstract assembleSelectionTopLevelSignals(signals: any[]): any[];\n  public abstract assembleSelectionSignals(): any[];\n\n  public abstract assembleSelectionData(data: VgData[]): VgData[];\n\n  public assembleGroupStyle(): string {\n    if (this.type === 'unit' || this.type === 'layer') {\n      return 'cell';\n    }\n    return undefined;\n  }\n\n  public assembleLayoutSize(): VgEncodeEntry {\n    if (this.type === 'unit' || this.type === 'layer') {\n      return {\n        width: this.getSizeSignalRef('width'),\n        height: this.getSizeSignalRef('height')\n      };\n    }\n    return undefined;\n  }\n\n  public abstract assembleLayout(): VgLayout;\n\n  public abstract assembleLayoutSignals(): VgSignal[];\n\n  public abstract assembleScales(): VgScale[];\n\n  public assembleHeaderMarks(): VgMarkGroup[] {\n    const {layoutHeaders} = this.component;\n    const headerMarks = [];\n\n    for (const channel of HEADER_CHANNELS) {\n      if (layoutHeaders[channel].title) {\n        headerMarks.push(getTitleGroup(this, channel));\n      }\n    }\n\n    for (const channel of HEADER_CHANNELS) {\n      const layoutHeader = layoutHeaders[channel];\n      for (const headerType of HEADER_TYPES) {\n        if (layoutHeader[headerType]) {\n          for (const header of layoutHeader[headerType]) {\n            const headerGroup = getHeaderGroup(this, channel, headerType, layoutHeader, header);\n            if (headerGroup)  {\n              headerMarks.push(headerGroup);\n            }\n          }\n        }\n      }\n    }\n    return headerMarks;\n  }\n\n  public abstract assembleMarks(): VgMarkGroup[]; // TODO: VgMarkGroup[]\n\n  public assembleAxes(): VgAxis[] {\n    return assembleAxes(this.component.axes);\n  }\n\n  public assembleLegends(): VgLegend[] {\n    return assembleLegends(this);\n  }\n\n  public assembleTitle(): VgTitle {\n    const title: VgTitle = {\n      ...extractTitleConfig(this.config.title).nonMark,\n      ...this.title\n    };\n\n    return keys(title).length > 0 ? title : undefined;\n  }\n\n  /**\n   * Assemble the mark group for this model.  We accept optional `signals` so that we can include concat top-level signals with the top-level model's local signals.\n   */\n  public assembleGroup(signals: VgSignal[] = []) {\n    const group: VgMarkGroup = {};\n\n    signals = signals.concat(this.assembleSelectionSignals());\n    if (signals.length > 0) {\n      group.signals = signals;\n    }\n\n    const layout = this.assembleLayout();\n    if (layout) {\n      group.layout = layout;\n    }\n\n    group.marks = [].concat(\n      this.assembleHeaderMarks(),\n      this.assembleMarks()\n    );\n\n    // Only include scales if this spec is top-level or if parent is facet.\n    // (Otherwise, it will be merged with upper-level's scope.)\n    const scales = (!this.parent || isFacetModel(this.parent)) ? this.assembleScales() : [];\n    if (scales.length > 0) {\n      group.scales = scales;\n    }\n\n    const axes = this.assembleAxes();\n    if (axes.length > 0) {\n      group.axes = axes;\n    }\n\n    const legends = this.assembleLegends();\n    if (legends.length > 0) {\n      group.legends = legends;\n    }\n\n    return group;\n  }\n\n  public hasDescendantWithFieldOnChannel(channel: Channel) {\n    for (const child of this.children) {\n      if (isUnitModel(child)) {\n        if (child.channelHasField(channel)) {\n          return true;\n        }\n      } else {\n        if (child.hasDescendantWithFieldOnChannel(channel)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  public getName(text: string) {\n    return varName((this.name ? this.name + '_' : '') + text);\n  }\n\n  /**\n   * Request a data source name for the given data source type and mark that data source as required. This method should be called in parse, so that all used data source can be correctly instantiated in assembleData().\n   */\n  public requestDataName(name: DataSourceType) {\n    const fullName = this.getName(name);\n\n    // Increase ref count. This is critical because otherwise we won't create a data source.\n    // We also increase the ref counts on OutputNode.getSource() calls.\n    const refCounts = this.component.data.outputNodeRefCounts;\n    refCounts[fullName] = (refCounts[fullName] || 0) + 1;\n\n    return fullName;\n  }\n\n  public getSizeSignalRef(sizeType: 'width' | 'height'): VgSignalRef {\n    if (isFacetModel(this.parent)) {\n      const channel = sizeType === 'width' ? 'x' : 'y';\n      const scaleComponent = this.component.scales[channel];\n\n      if (scaleComponent && !scaleComponent.merged) { // independent scale\n        const type = scaleComponent.get('type');\n        const range = scaleComponent.get('range');\n\n        if (hasDiscreteDomain(type) && isVgRangeStep(range)) {\n          const scaleName = scaleComponent.get('name');\n          const fieldName = getFieldFromDomains(scaleComponent.domains);\n          const fieldRef = field({aggregate: 'distinct', field: fieldName}, {expr: 'datum'});\n          return {\n            signal: sizeExpr(scaleName, scaleComponent, fieldRef)\n          };\n        }\n      }\n    }\n\n    return {\n      signal: this.layoutSizeNameMap.get(this.getName(sizeType))\n    };\n  }\n\n  /**\n   * Lookup the name of the datasource for an output node. You probably want to call this in assemble.\n   */\n  public lookupDataSource(name: string) {\n    const node = this.component.data.outputNodes[name];\n\n    if (!node) {\n      // Name not found in map so let's just return what we got.\n      // This can happen if we already have the correct name.\n      return name;\n    }\n\n    return node.getSource();\n  }\n\n  public getSizeName(oldSizeName: string): string {\n     return this.layoutSizeNameMap.get(oldSizeName);\n  }\n\n  public renameLayoutSize(oldName: string, newName: string) {\n    this.layoutSizeNameMap.rename(oldName, newName);\n  }\n\n  public renameScale(oldName: string, newName: string) {\n    this.scaleNameMap.rename(oldName, newName);\n  }\n\n  /**\n   * @return scale name for a given channel after the scale has been parsed and named.\n   */\n  public scaleName(originalScaleName: Channel | string, parse?: boolean): string {\n    if (parse) {\n      // During the parse phase always return a value\n      // No need to refer to rename map because a scale can't be renamed\n      // before it has the original name.\n      return this.getName(originalScaleName);\n    }\n\n    // If there is a scale for the channel, it should either\n    // be in the scale component or exist in the name map\n    if (\n        // If there is a scale for the channel, there should be a local scale component for it\n        (isChannel(originalScaleName) && isScaleChannel(originalScaleName) && this.component.scales[originalScaleName]) ||\n        // in the scale name map (the the scale get merged by its parent)\n        this.scaleNameMap.has(this.getName(originalScaleName))\n      ) {\n      return this.scaleNameMap.get(this.getName(originalScaleName));\n    }\n    return undefined;\n  }\n\n  /**\n   * Corrects the data references in marks after assemble.\n   */\n  public correctDataNames = (mark: VgMarkGroup) => {\n    // TODO: make this correct\n\n    // for normal data references\n    if (mark.from && mark.from.data) {\n      mark.from.data = this.lookupDataSource(mark.from.data);\n    }\n\n    // for access to facet data\n    if (mark.from && mark.from.facet && mark.from.facet.data) {\n      mark.from.facet.data = this.lookupDataSource(mark.from.facet.data);\n    }\n\n    return mark;\n  }\n\n  /**\n   * Traverse a model's hierarchy to get the scale component for a particular channel.\n   */\n  public getScaleComponent(channel: ScaleChannel): ScaleComponent {\n    /* istanbul ignore next: This is warning for debugging test */\n    if (!this.component.scales) {\n      throw new Error('getScaleComponent cannot be called before parseScale().  Make sure you have called parseScale or use parseUnitModelWithScale().');\n    }\n\n    const localScaleComponent = this.component.scales[channel];\n    if (localScaleComponent && !localScaleComponent.merged) {\n      return localScaleComponent;\n    }\n    return  (this.parent ? this.parent.getScaleComponent(channel) : undefined);\n  }\n\n  /**\n   * Traverse a model's hierarchy to get a particular selection component.\n   */\n  public getSelectionComponent(varName: string, origName: string): SelectionComponent {\n    let sel = this.component.selection[varName];\n    if (!sel && this.parent) {\n      sel = this.parent.getSelectionComponent(varName, origName);\n    }\n    if (!sel) {\n      throw new Error(log.message.selectionNotFound(origName));\n    }\n    return sel;\n  }\n}\n\n/** Abstract class for UnitModel and FacetModel.  Both of which can contain fieldDefs as a part of its own specification. */\nexport abstract class ModelWithField extends Model {\n  public abstract fieldDef(channel: SingleDefChannel): FieldDef<string>;\n\n  /** Get \"field\" reference for vega */\n  public field(channel: SingleDefChannel, opt: FieldRefOption = {}) {\n    const fieldDef = this.fieldDef(channel);\n\n\n    if (fieldDef.bin) { // bin has default suffix that depends on scaleType\n      opt = extend({\n        binSuffix: this.hasDiscreteDomain(channel) ? 'range' : 'start'\n      }, opt);\n    }\n\n    return field(fieldDef, opt);\n  }\n\n  public abstract hasDiscreteDomain(channel: Channel): boolean;\n\n\n\n  protected abstract getMapping(): {[key: string]: any};\n\n  public reduceFieldDef<T, U>(f: (acc: U, fd: FieldDef<string>, c: Channel) => U, init: T, t?: any) {\n    return reduce(this.getMapping(), (acc:U , cd: ChannelDef<string>, c: Channel) => {\n      const fieldDef = getFieldDef(cd);\n      if (fieldDef) {\n        return f(acc, fieldDef, c);\n      }\n      return acc;\n    }, init, t);\n  }\n\n  public forEachFieldDef(f: (fd: FieldDef<string>, c: Channel) => void, t?: any) {\n    forEach(this.getMapping(), (cd: ChannelDef<string>, c: Channel) => {\n      const fieldDef = getFieldDef(cd);\n      if (fieldDef) {\n        f(fieldDef, c);\n      }\n    }, t);\n  }\n  public abstract channelHasField(channel: Channel): boolean;\n}\n","import {isArray} from 'vega-util';\nimport {Config} from '../config';\nimport {Encoding} from '../encoding';\nimport {Facet} from '../facet';\nimport {Field, FieldDef, isRepeatRef} from '../fielddef';\nimport * as log from '../log';\nimport {Repeat} from '../repeat';\nimport {RepeatSpec} from '../spec';\nimport {Dict, keys} from '../util';\nimport {VgLayout} from '../vega.schema';\nimport {BaseConcatModel} from './baseconcat';\nimport {buildModel} from './buildmodel';\nimport {parseRepeatLayoutSize} from './layoutsize/parse';\nimport {Model} from './model';\nimport {RepeaterValue} from './repeater';\n\nexport class RepeatModel extends BaseConcatModel {\n  public readonly type: 'repeat' = 'repeat';\n  public readonly repeat: Repeat;\n\n  public readonly children: Model[];\n\n  constructor(spec: RepeatSpec, parent: Model, parentGivenName: string, repeatValues: RepeaterValue, config: Config) {\n    super(spec, parent, parentGivenName, config, spec.resolve);\n\n    this.repeat = spec.repeat;\n    this.children = this._initChildren(spec, this.repeat, repeatValues, config);\n  }\n\n  private _initChildren(spec: RepeatSpec, repeat: Repeat, repeater: RepeaterValue, config: Config): Model[] {\n    const children: Model[] = [];\n    const row = repeat.row || [repeater ? repeater.row : null];\n    const column = repeat.column || [repeater ? repeater.column : null];\n\n    // cross product\n    for (const rowField of row) {\n      for (const columnField of column) {\n        const name = (rowField ? '_' + rowField : '') + (columnField ? '_' + columnField : '');\n\n        const childRepeat = {\n          row: rowField,\n          column: columnField\n        };\n\n        children.push(buildModel(spec.spec, this, this.getName('child' + name), undefined, childRepeat, config));\n      }\n    }\n\n    return children;\n  }\n\n  public parseLayoutSize() {\n    parseRepeatLayoutSize(this);\n  }\n\n  public assembleLayout(): VgLayout {\n    // TODO: allow customization\n    return {\n      padding: {row: 10, column: 10},\n      offset: 10,\n      columns: this.repeat && this.repeat.column ? this.repeat.column.length : 1,\n      bounds: 'full',\n      align: 'all'\n    };\n  }\n}\n","import {isArray} from 'vega-util';\nimport {Encoding} from '../encoding';\nimport {Facet} from '../facet';\nimport {Field, FieldDef, isRepeatRef} from '../fielddef';\nimport * as log from '../log';\n\nexport type RepeaterValue = {\n  row?: string,\n  column?: string\n};\n\nexport function replaceRepeaterInFacet(facet: Facet<Field>, repeater: RepeaterValue): Facet<string> {\n  return replaceRepeater(facet, repeater) as Facet<string>;\n}\n\nexport function replaceRepeaterInEncoding(encoding: Encoding<Field>, repeater: RepeaterValue): Encoding<string> {\n  return replaceRepeater(encoding, repeater) as Encoding<string>;\n}\n\n/**\n * Replace repeater values in a field def with the concrete field name.\n */\nfunction replaceRepeaterInFieldDef(fieldDef: FieldDef<Field>, repeater: RepeaterValue): FieldDef<string> | null {\n  const field = fieldDef.field;\n  if (isRepeatRef(field)) {\n    if (field.repeat in repeater) {\n      return {\n        ...fieldDef,\n        field: repeater[field.repeat]\n      };\n    } else {\n      log.warn(log.message.noSuchRepeatedValue(field.repeat));\n      return null;\n    }\n  } else {\n    // field is not a repeat ref so we can just return the field def\n    return fieldDef as FieldDef<string>;\n  }\n}\n\ntype EncodingOrFacet<F> = Encoding<F> | Facet<F>;\n\nfunction replaceRepeater(mapping: EncodingOrFacet<Field>, repeater: RepeaterValue): EncodingOrFacet<string> {\n  const out: EncodingOrFacet<string> = {};\n  for (const channel in mapping) {\n    if (mapping.hasOwnProperty(channel)) {\n      const fieldDef: FieldDef<Field> | FieldDef<Field>[] = mapping[channel];\n\n      if (isArray(fieldDef)) {\n        out[channel] = fieldDef.map(fd => replaceRepeaterInFieldDef(fd, repeater))\n          .filter((fd: FieldDef<string> | null) => fd !== null);\n      } else {\n        const fd = replaceRepeaterInFieldDef(fieldDef, repeater);\n        if (fd !== null) {\n          out[channel] = fd;\n        }\n      }\n    }\n  }\n  return out;\n}\n","import {ScaleChannel, SPATIAL_SCALE_CHANNELS} from '../channel';\nimport * as log from '../log';\nimport {ResolveMapping, ResolveMode} from '../resolve';\nimport {contains} from '../util';\nimport {ConcatModel} from './concat';\nimport {FacetModel} from './facet';\nimport {LayerModel} from './layer';\nimport {isConcatModel, isFacetModel, isLayerModel, isRepeatModel, Model} from './model';\nimport {RepeatModel} from './repeat';\n\nexport function defaultScaleResolve(channel: ScaleChannel, model: Model): ResolveMode {\n  if (isLayerModel(model) || isFacetModel(model)) {\n    return 'shared';\n  } else if (isConcatModel(model) || isRepeatModel(model)) {\n    return contains(SPATIAL_SCALE_CHANNELS, channel) ? 'independent' : 'shared';\n  }\n  /* istanbul ignore next: should never reach here. */\n  throw new Error('invalid model type for resolve');\n}\n\nexport function parseGuideResolve(resolve: ResolveMapping, channel: ScaleChannel): ResolveMode {\n  const channelResolve = resolve[channel];\n  const guide = contains(SPATIAL_SCALE_CHANNELS, channel) ? 'axis' : 'legend';\n\n  if (channelResolve.scale === 'independent') {\n    if (channelResolve[guide] === 'shared') {\n      log.warn(log.message.independentScaleMeansIndependentGuide(channel));\n    }\n    return 'independent';\n  }\n\n  return channelResolve[guide] || 'shared';\n}\n","import {isArray} from 'vega-util';\nimport {Channel, ScaleChannel} from '../../channel';\nimport * as log from '../../log';\nimport {isSelectionDomain} from '../../scale';\nimport {keys, stringValue} from '../../util';\nimport {isDataRefDomain, isDataRefUnionedDomain, isFieldRefUnionDomain, isSignalRefDomain, isVgRangeStep, isVgSignalRef, VgDataRef, VgRange, VgScale} from '../../vega.schema';\nimport {Model} from '../model';\nimport {isRawSelectionDomain, selectionScaleDomain} from '../selection/selection';\nimport {mergeDomains} from './domain';\n\nexport function assembleScaleForModelAndChildren(model: Model) {\n  return model.children.reduce((scales, child) => {\n    return scales.concat(child.assembleScales());\n  }, assembleScalesForModel(model));\n}\n\nexport function assembleScalesForModel(model: Model): VgScale[] {\n    return keys(model.component.scales).reduce((scales: VgScale[], channel: ScaleChannel) => {\n      const scaleComponent = model.component.scales[channel];\n      if (scaleComponent.merged) {\n        // Skipped merged scales\n        return scales;\n      }\n\n      const scale = scaleComponent.combine();\n\n      // need to separate const and non const object destruction\n      let {domainRaw, range} = scale;\n      const {name, type, domainRaw: _d, range: _r, ...otherScaleProps} = scale;\n\n      range = assembleScaleRange(range, name, model, channel);\n\n      // As scale parsing occurs before selection parsing, a temporary signal\n      // is used for domainRaw. Here, we detect if this temporary signal\n      // is set, and replace it with the correct domainRaw signal.\n      // For more information, see isRawSelectionDomain in selection.ts.\n      if (domainRaw && isRawSelectionDomain(domainRaw)) {\n        domainRaw = selectionScaleDomain(model, domainRaw);\n      }\n\n      const domains = scaleComponent.domains.map(domain => {\n        // Correct references to data as the original domain's data was determined\n        // in parseScale, which happens before parseData. Thus the original data\n        // reference can be incorrect.\n\n        if (isDataRefDomain(domain)) {\n          domain.data = model.lookupDataSource(domain.data);\n        }\n        return domain;\n      });\n\n      // domains is an array that has to be merged into a single vega domain\n      const domain = mergeDomains(domains);\n\n      scales.push({\n        name,\n        type,\n        domain: domain,\n        ...(domainRaw ? {domainRaw} : {}),\n        range: range,\n        ...otherScaleProps\n      });\n\n      return scales;\n    }, [] as VgScale[]);\n}\n\nexport function assembleScaleRange(scaleRange: VgRange, scaleName: string, model: Model, channel: Channel) {\n  // add signals to x/y range\n  if (channel === 'x' || channel === 'y') {\n    if (isVgRangeStep(scaleRange)) {\n      // For x/y range step, use a signal created in layout assemble instead of a constant range step.\n      return {\n        step: {signal: scaleName + '_step'}\n      };\n    } else if (isArray(scaleRange) && scaleRange.length === 2) {\n      const r0 = scaleRange[0];\n      const r1 = scaleRange[1];\n      if (r0 === 0 && isVgSignalRef(r1)) {\n        // Replace width signal just in case it is renamed.\n        return [0, {signal: model.getSizeName(r1.signal)}];\n      } else if (isVgSignalRef(r0) && r1 === 0) {\n        // Replace height signal just in case it is renamed.\n        return [{signal: model.getSizeName(r0.signal)}, 0];\n      }\n    }\n  }\n  return scaleRange;\n}\n","import {ScaleChannel} from '../../channel';\nimport {Scale, ScaleType} from '../../scale';\nimport {VgNonUnionDomain, VgScale} from '../../vega.schema';\nimport {Explicit, Split} from '../split';\n\nexport type ScaleComponentProps = Partial<Pick<VgScale,\n  // All VgDomain property except domain.\n  // (We exclude domain as we have a special \"domains\" array that allow us merge them all at once in assemble.)\n  // TODO: also exclude domainRaw and property implement the right scaleComponent for selection domain\n  'name' | 'type' | 'domainRaw' | 'range' | 'clamp' | 'exponent' | 'interpolate' | 'nice' | 'padding' | 'paddingInner' | 'paddingOuter' | 'reverse' | 'round' | 'zero'\n>>;\n\nexport class ScaleComponent extends Split<ScaleComponentProps> {\n  public merged = false;\n\n  public domains: VgNonUnionDomain[] = [];\n\n  constructor(name: string, typeWithExplicit: Explicit<ScaleType>) {\n    super(\n      {},     // no initial explicit property\n      {name}  // name as initial implicit property\n    );\n    this.setWithExplicit('type', typeWithExplicit);\n  }\n}\n\n// Using Mapped Type to declare type (https://www.typescriptlang.org/docs/handbook/advanced-types.html#mapped-types)\nexport type ScaleComponentIndex = {[P in ScaleChannel]?: ScaleComponent};\n\nexport type ScaleIndex = {[P in ScaleChannel]?: Scale};\n","import {isString} from 'vega-util';\n\nimport {SHARED_DOMAIN_OP_INDEX} from '../../aggregate';\nimport {binToString} from '../../bin';\nimport {isScaleChannel, ScaleChannel} from '../../channel';\nimport {MAIN, RAW} from '../../data';\nimport {DateTime, dateTimeExpr, isDateTime} from '../../datetime';\nimport {FieldDef} from '../../fielddef';\nimport * as log from '../../log';\nimport {Domain, hasDiscreteDomain, isBinScale, isSelectionDomain, ScaleConfig, ScaleType} from '../../scale';\nimport {isSortField} from '../../sort';\nimport * as util from '../../util';\nimport {\n  FieldRefUnionDomain,\n  isDataRefDomain,\n  VgDataRef,\n  VgDomain,\n  VgNonUnionDomain,\n  VgSortField,\n  VgUnionSortField,\n} from '../../vega.schema';\nimport {FACET_SCALE_PREFIX} from '../data/optimize';\nimport {isFacetModel, isUnitModel, Model} from '../model';\nimport {SELECTION_DOMAIN} from '../selection/selection';\nimport {UnitModel} from '../unit';\nimport {ScaleComponentIndex} from './component';\n\nexport function parseScaleDomain(model: Model) {\n  if (isUnitModel(model)) {\n    parseUnitScaleDomain(model);\n  } else {\n    parseNonUnitScaleDomain(model);\n  }\n}\n\nfunction parseUnitScaleDomain(model: UnitModel) {\n  const scales = model.specifiedScales;\n  const localScaleComponents: ScaleComponentIndex = model.component.scales;\n\n  util.keys(localScaleComponents).forEach((channel: ScaleChannel) => {\n    const specifiedScale = scales[channel];\n    const specifiedDomain = specifiedScale ? specifiedScale.domain : undefined;\n\n    const domains = parseDomainForChannel(model, channel);\n    const localScaleCmpt = localScaleComponents[channel];\n    localScaleCmpt.domains = domains;\n\n    if (isSelectionDomain(specifiedDomain)) {\n      // As scale parsing occurs before selection parsing, we use a temporary\n      // signal here and append the scale.domain definition. This is replaced\n      // with the correct domainRaw signal during scale assembly.\n      // For more information, see isRawSelectionDomain in selection.ts.\n\n      // FIXME: replace this with a special property in the scaleComponent\n      localScaleCmpt.set('domainRaw', {\n        signal: SELECTION_DOMAIN + JSON.stringify(specifiedDomain)\n      }, true);\n    }\n  });\n}\n\nfunction parseNonUnitScaleDomain(model: Model) {\n  for (const child of model.children) {\n    parseScaleDomain(child);\n  }\n\n  const localScaleComponents: ScaleComponentIndex = model.component.scales;\n\n  util.keys(localScaleComponents).forEach((channel: ScaleChannel) => {\n    // FIXME: Arvind -- Please revise logic for merging selectionDomain / domainRaw\n\n    let domains: VgNonUnionDomain[];\n\n    for (const child of model.children) {\n      const childComponent = child.component.scales[channel];\n      if (childComponent) {\n        if (domains === undefined) {\n          domains = childComponent.domains;\n        } else {\n          domains = domains.concat(childComponent.domains);\n        }\n      }\n    }\n\n    if (isFacetModel(model)) {\n      domains.forEach((domain) => {\n        // Replace the scale domain with data output from a cloned subtree after the facet.\n        if (isDataRefDomain(domain)) {\n          // use data from cloned subtree (which is the same as data but with a prefix added once)\n          domain.data = FACET_SCALE_PREFIX + domain.data.replace(FACET_SCALE_PREFIX, '');\n        }\n      });\n    }\n\n    localScaleComponents[channel].domains = domains;\n  });\n}\n\n\n/**\n * Remove unaggregated domain if it is not applicable\n * Add unaggregated domain if domain is not specified and config.scale.useUnaggregatedDomain is true.\n */\nfunction normalizeUnaggregatedDomain(domain: Domain, fieldDef: FieldDef<string>, scaleType: ScaleType, scaleConfig: ScaleConfig) {\n  if (domain === 'unaggregated') {\n    const {valid, reason} = canUseUnaggregatedDomain(fieldDef, scaleType);\n    if(!valid) {\n      log.warn(reason);\n      return undefined;\n    }\n  } else if (domain === undefined && scaleConfig.useUnaggregatedDomain) {\n    // Apply config if domain is not specified.\n    const {valid} = canUseUnaggregatedDomain(fieldDef, scaleType);\n    if (valid) {\n      return 'unaggregated';\n    }\n  }\n\n  return domain;\n}\n\nexport function parseDomainForChannel(model: UnitModel, channel: ScaleChannel): VgNonUnionDomain[] {\n  const scaleType = model.getScaleComponent(channel).get('type');\n\n  const domain = normalizeUnaggregatedDomain(model.scaleDomain(channel), model.fieldDef(channel), scaleType, model.config.scale);\n  if (domain !== model.scaleDomain(channel)) {\n    model.specifiedScales[channel] = {\n      ...model.specifiedScales[channel],\n      domain\n    };\n  }\n\n  // If channel is either X or Y then union them with X2 & Y2 if they exist\n  if (channel === 'x' && model.channelHasField('x2')) {\n    if (model.channelHasField('x')) {\n      return parseSingleChannelDomain(scaleType, domain, model, 'x').concat(parseSingleChannelDomain(scaleType, domain, model, 'x2'));\n    } else {\n      return parseSingleChannelDomain(scaleType, domain, model, 'x2');\n    }\n  } else if (channel === 'y' && model.channelHasField('y2')) {\n    if (model.channelHasField('y')) {\n      return parseSingleChannelDomain(scaleType, domain, model, 'y').concat(parseSingleChannelDomain(scaleType, domain, model, 'y2'));\n    } else {\n      return parseSingleChannelDomain(scaleType, domain, model, 'y2');\n    }\n  }\n  return parseSingleChannelDomain(scaleType, domain, model, channel);\n}\n\nfunction parseSingleChannelDomain(scaleType: ScaleType, domain: Domain, model: UnitModel, channel: ScaleChannel | 'x2' | 'y2'): VgNonUnionDomain[] {\n  const fieldDef = model.fieldDef(channel);\n\n  if (domain && domain !== 'unaggregated' && !isSelectionDomain(domain)) { // explicit value\n    if (fieldDef.bin) {\n      log.warn(log.message.conflictedDomain(channel));\n    } else {\n      if (isDateTime(domain[0])) {\n        return (domain as DateTime[]).map((dt) => {\n          return {signal: `{data: ${dateTimeExpr(dt, true)}}`};\n        });\n      }\n      return [domain];\n    }\n  }\n\n  const stack = model.stack;\n  if (stack && channel === stack.fieldChannel) {\n    if(stack.offset === 'normalize') {\n      return [[0, 1]];\n    }\n\n    const data = model.requestDataName(MAIN);\n    return [{\n      data,\n      field: model.field(channel, {suffix: 'start'})\n    }, {\n      data,\n      field: model.field(channel, {suffix: 'end'})\n    }];\n  }\n\n  const sort = isScaleChannel(channel) ? domainSort(model, channel, scaleType) : undefined;\n\n  if (domain === 'unaggregated') {\n    const data = model.requestDataName(MAIN);\n    return [{\n      data,\n      field: model.field(channel, {aggregate: 'min'})\n    }, {\n      data,\n      field: model.field(channel, {aggregate: 'max'})\n    }];\n  } else if (fieldDef.bin) { // bin\n    if (isBinScale(scaleType)) {\n      const signal = model.getName(`${binToString(fieldDef.bin)}_${fieldDef.field}_bins`);\n      return [{signal: `sequence(${signal}.start, ${signal}.stop + ${signal}.step, ${signal}.step)`}];\n    }\n\n    if (hasDiscreteDomain(scaleType)) {\n      // ordinal bin scale takes domain from bin_range, ordered by bin_start\n      // This is useful for both axis-based scale (x/y) and legend-based scale (other channels).\n      return [{\n        data: model.requestDataName(MAIN),\n        field: model.field(channel, {binSuffix: 'range'}),\n        sort: {\n          field: model.field(channel, {binSuffix: 'start'}),\n          op: 'min' // min or max doesn't matter since same _range would have the same _start\n        }\n      }];\n    } else { // continuous scales\n      if (channel === 'x' || channel === 'y') {\n        // X/Y position have to include start and end for non-ordinal scale\n        const data = model.requestDataName(MAIN);\n        return [{\n          data,\n          field: model.field(channel, {binSuffix: 'start'})\n        }, {\n          data,\n          field: model.field(channel, {binSuffix: 'end'})\n        }];\n      } else {\n        // TODO: use bin_mid\n        return [{\n          data: model.requestDataName(MAIN),\n          field: model.field(channel, {binSuffix: 'start'})\n        }];\n      }\n    }\n  } else if (sort) {\n    return [{\n      // If sort by aggregation of a specified sort field, we need to use RAW table,\n      // so we can aggregate values for the scale independently from the main aggregation.\n      data: util.isBoolean(sort) ? model.requestDataName(MAIN) : model.requestDataName(RAW),\n      field: model.field(channel),\n      sort: sort\n    }];\n  } else {\n    return [{\n      data: model.requestDataName(MAIN),\n      field: model.field(channel)\n    }];\n  }\n}\n\n\nexport function domainSort(model: UnitModel, channel: ScaleChannel, scaleType: ScaleType): VgSortField {\n  if (!hasDiscreteDomain(scaleType)) {\n    return undefined;\n  }\n\n  const sort = model.sort(channel);\n\n  // Sorted based on an aggregate calculation over a specified sort field (only for ordinal scale)\n  if (isSortField(sort)) {\n    return sort;\n  }\n\n  if (sort === 'descending') {\n    return {\n      op: 'min',\n      field: model.field(channel),\n      order: 'descending'\n    };\n  }\n\n  if (util.contains(['ascending', undefined /* default =ascending*/], sort)) {\n    return true;\n  }\n\n  // sort === 'none'\n  return undefined;\n}\n\n\n\n/**\n * Determine if a scale can use unaggregated domain.\n * @return {Boolean} Returns true if all of the following conditons applies:\n * 1. `scale.domain` is `unaggregated`\n * 2. Aggregation function is not `count` or `sum`\n * 3. The scale is quantitative or time scale.\n */\nexport function canUseUnaggregatedDomain(fieldDef: FieldDef<string>, scaleType: ScaleType): {valid: boolean, reason?: string} {\n  if (!fieldDef.aggregate) {\n    return {\n      valid: false,\n      reason: log.message.unaggregateDomainHasNoEffectForRawField(fieldDef)\n    };\n  }\n\n  if (!SHARED_DOMAIN_OP_INDEX[fieldDef.aggregate]) {\n    return {\n      valid: false,\n      reason: log.message.unaggregateDomainWithNonSharedDomainOp(fieldDef.aggregate)\n    };\n  }\n\n  if (fieldDef.type === 'quantitative') {\n    if (scaleType === 'log') {\n      return {\n        valid: false,\n        reason: log.message.unaggregatedDomainWithLogScale(fieldDef)\n      };\n    }\n  }\n\n  return {valid: true};\n}\n\n/**\n * Converts an array of domains to a single Vega scale domain.\n */\nexport function mergeDomains(domains: VgNonUnionDomain[]): VgDomain {\n  const uniqueDomains = util.unique(domains.map(domain => {\n    // ignore sort property when computing the unique domains\n    if (isDataRefDomain(domain)) {\n      const {sort: _s, ...domainWithoutSort} = domain;\n      return domainWithoutSort;\n    }\n    return domain;\n  }), util.hash);\n\n  const sorts: VgSortField[] = util.unique(domains.map(d => {\n    if (isDataRefDomain(d)) {\n      const s = d.sort;\n      if (s !== undefined && !util.isBoolean(s)) {\n        if (s.op === 'count') {\n          // let's make sure that if op is count, we don't use a field\n          delete s.field;\n        }\n        if (s.order === 'ascending') {\n          // drop order: ascending as it is the default\n          delete s.order;\n        }\n      }\n      return s;\n    }\n    return undefined;\n  }).filter(s => s !== undefined), util.hash);\n\n  if (uniqueDomains.length === 1) {\n    const domain = domains[0];\n    if (isDataRefDomain(domain) && sorts.length > 0) {\n      let sort = sorts[0];\n      if (sorts.length > 1) {\n        log.warn(log.message.MORE_THAN_ONE_SORT);\n        sort = true;\n      }\n      return {\n        ...domain,\n        sort\n      };\n    }\n    return domain;\n  }\n\n  // only keep simple sort properties that work with unioned domains\n  const onlySimpleSorts = sorts.filter(s => {\n    if (util.isBoolean(s)) {\n      return true;\n    }\n    if (s.op === 'count') {\n      return true;\n    }\n    log.warn(log.message.domainSortDropped(s));\n    return false;\n  }) as VgUnionSortField[];\n\n  let sort: VgUnionSortField = true;\n\n  if (onlySimpleSorts.length === 1) {\n    sort = onlySimpleSorts[0];\n  } else if (onlySimpleSorts.length > 1) {\n    // ignore sort = false if we have another sort property\n    const filteredSorts = onlySimpleSorts.filter(s => s !== false);\n\n    if (filteredSorts.length > 1) {\n      log.warn(log.message.MORE_THAN_ONE_SORT);\n      sort = true;\n    } else {\n      sort = filteredSorts[0];\n    }\n  }\n\n  const allData = util.unique(domains.map(d => {\n    if (isDataRefDomain(d)) {\n      return d.data;\n    }\n    return null;\n  }), x => x);\n\n  if (allData.length === 1 && allData[0] !== null) {\n    // create a union domain of different fields with a single data source\n    const domain: FieldRefUnionDomain = {\n      data: allData[0],\n      fields: uniqueDomains.map(d => (d as VgDataRef).field),\n      sort\n    };\n\n    return domain;\n  }\n\n  return {fields: uniqueDomains, sort};\n}\n\n/**\n * Return a field if a scale single field.\n * Return `undefined` otherwise.\n *\n */\nexport function getFieldFromDomains(domains: VgNonUnionDomain[]): string {\n  const domain = mergeDomains(domains);\n  if (isDataRefDomain(domain) && isString(domain.field)) {\n    return domain.field;\n  }\n  return undefined;\n}\n","import {SCALE_CHANNELS, ScaleChannel} from '../../channel';\nimport {FieldDef, getFieldDef, isConditionalDef, isFieldDef} from '../../fielddef';\nimport {\n  NON_TYPE_DOMAIN_RANGE_VEGA_SCALE_PROPERTIES,\n  Scale,\n  scaleCompatible,\n  ScaleType,\n  scaleTypePrecedence,\n} from '../../scale';\nimport {keys} from '../../util';\nimport {VgScale} from '../../vega.schema';\nimport {isUnitModel, Model} from '../model';\nimport {defaultScaleResolve} from '../resolve';\nimport {Explicit, mergeValuesWithExplicit, tieBreakByComparing} from '../split';\nimport {UnitModel} from '../unit';\nimport {ScaleComponent, ScaleComponentIndex} from './component';\nimport {parseScaleDomain} from './domain';\nimport {parseScaleProperty} from './properties';\nimport {parseScaleRange} from './range';\nimport {scaleType} from './type';\n\nexport function parseScale(model: Model) {\n  parseScaleCore(model);\n  parseScaleDomain(model);\n  for (const prop of NON_TYPE_DOMAIN_RANGE_VEGA_SCALE_PROPERTIES) {\n    parseScaleProperty(model, prop);\n  }\n  // range depends on zero\n  parseScaleRange(model);\n}\n\nexport function parseScaleCore(model: Model) {\n  if (isUnitModel(model)) {\n    model.component.scales = parseUnitScaleCore(model);\n  } else {\n    model.component.scales = parseNonUnitScaleCore(model);\n  }\n}\n\n/**\n * Parse scales for all channels of a model.\n */\nfunction parseUnitScaleCore(model: UnitModel): ScaleComponentIndex {\n  const {encoding, config} = model;\n  const mark = model.mark();\n\n  return SCALE_CHANNELS.reduce((scaleComponents: ScaleComponentIndex, channel: ScaleChannel) => {\n    let fieldDef: FieldDef<string>;\n    let specifiedScale: Scale = {};\n\n    const channelDef = encoding[channel];\n\n    if (isFieldDef(channelDef)) {\n      fieldDef = channelDef;\n      specifiedScale = channelDef.scale || {};\n    } else if (isConditionalDef(channelDef) && isFieldDef(channelDef.condition)) {\n      fieldDef = channelDef.condition;\n      specifiedScale = channelDef.condition.scale || {};\n    } else if (channel === 'x') {\n      fieldDef = getFieldDef(encoding.x2);\n    } else if (channel === 'y') {\n      fieldDef = getFieldDef(encoding.y2);\n    }\n\n    if (fieldDef) {\n      const specifiedScaleType = specifiedScale.type;\n      const sType = scaleType(\n        specifiedScale.type, channel, fieldDef, mark,\n        specifiedScale.rangeStep, config.scale\n      );\n      scaleComponents[channel] = new ScaleComponent(\n        model.scaleName(channel + '', true),\n        {value: sType, explicit: specifiedScaleType === sType}\n      );\n    }\n    return scaleComponents;\n  }, {});\n}\n\nconst scaleTypeTieBreaker = tieBreakByComparing(\n  (st1: ScaleType, st2: ScaleType) => (scaleTypePrecedence(st1) - scaleTypePrecedence(st2))\n);\n\n\nfunction parseNonUnitScaleCore(model: Model) {\n  const scaleComponents: ScaleComponentIndex = model.component.scales = {};\n\n  const scaleTypeWithExplicitIndex: {\n    // Using Mapped Type to declare type (https://www.typescriptlang.org/docs/handbook/advanced-types.html#mapped-types)\n    [k in ScaleChannel]?: Explicit<ScaleType>\n  } = {};\n  const resolve = model.component.resolve;\n\n  // Parse each child scale and determine if a particular channel can be merged.\n  for (const child of model.children) {\n    parseScaleCore(child);\n\n    // Instead of always merging right away -- check if it is compatible to merge first!\n    keys(child.component.scales).forEach((channel: ScaleChannel) => {\n      // if resolve is undefined, set default first\n      resolve[channel] = resolve[channel] || {};\n      resolve[channel].scale = resolve[channel].scale || defaultScaleResolve(channel, model);\n\n      if (model.component.resolve[channel].scale === 'shared') {\n        const scaleType = scaleTypeWithExplicitIndex[channel];\n        const childScaleType = child.component.scales[channel].getWithExplicit('type');\n\n        if (scaleType) {\n          if (scaleCompatible(scaleType.value, childScaleType.value)) {\n            // merge scale component if type are compatible\n            scaleTypeWithExplicitIndex[channel] = mergeValuesWithExplicit<VgScale, ScaleType>(\n              scaleType, childScaleType, 'type', 'scale', scaleTypeTieBreaker\n            );\n          } else {\n            // Otherwise, update conflicting channel to be independent\n            model.component.resolve[channel].scale = 'independent';\n            // Remove from the index so they don't get merged\n            delete scaleTypeWithExplicitIndex[channel];\n          }\n        } else {\n          scaleTypeWithExplicitIndex[channel] = childScaleType;\n        }\n      }\n    });\n  }\n\n  // Merge each channel listed in the index\n  keys(scaleTypeWithExplicitIndex).forEach((channel: ScaleChannel) => {\n    // Create new merged scale component\n    const name = model.scaleName(channel, true);\n    const typeWithExplicit = scaleTypeWithExplicitIndex[channel];\n    const modelScale = scaleComponents[channel] = new ScaleComponent(name, typeWithExplicit);\n\n    // rename each child and mark them as merged\n    for (const child of model.children) {\n      const childScale = child.component.scales[channel];\n      if (childScale) {\n        child.renameScale(childScale.get('name'), name);\n        childScale.merged = true;\n      }\n    }\n  });\n\n  return scaleComponents;\n}\n","import {Channel, ScaleChannel, X, Y} from '../../channel';\nimport {FieldDef} from '../../fielddef';\nimport * as log from '../../log';\nimport {channelScalePropertyIncompatability, NiceTime, Scale, ScaleConfig, ScaleType, scaleTypeSupportProperty} from '../../scale';\nimport {smallestUnit} from '../../timeunit';\nimport * as util from '../../util';\nimport {keys} from '../../util';\nimport {VgScale} from '../../vega.schema';\nimport {isUnitModel, Model} from '../model';\nimport {Explicit, mergeValuesWithExplicit, Split, tieBreakByComparing} from '../split';\nimport {UnitModel} from '../unit';\nimport {ScaleComponent, ScaleComponentIndex, ScaleComponentProps} from './component';\nimport {parseScaleRange} from './range';\n\n\nexport function parseScaleProperty(model: Model, property: keyof (Scale | ScaleComponentProps)) {\n  if (isUnitModel(model)) {\n    parseUnitScaleProperty(model, property);\n  } else {\n    parseNonUnitScaleProperty(model, property);\n  }\n}\n\nfunction parseUnitScaleProperty(model: UnitModel, property: keyof (Scale | ScaleComponentProps)) {\n  const localScaleComponents: ScaleComponentIndex = model.component.scales;\n\n  keys(localScaleComponents).forEach((channel: ScaleChannel) => {\n    const specifiedScale = model.specifiedScales[channel];\n    const localScaleCmpt = localScaleComponents[channel];\n    const mergedScaleCmpt = model.getScaleComponent(channel);\n    const fieldDef = model.fieldDef(channel);\n    const config = model.config;\n\n    const specifiedValue = specifiedScale[property];\n    const sType = mergedScaleCmpt.get('type');\n\n    const supportedByScaleType = scaleTypeSupportProperty(sType, property);\n    const channelIncompatability = channelScalePropertyIncompatability(channel, property);\n\n    if (specifiedValue !== undefined) {\n      // If there is a specified value, check if it is compatible with scale type and channel\n      if (!supportedByScaleType) {\n        log.warn(log.message.scalePropertyNotWorkWithScaleType(sType, property, channel));\n      } else if (channelIncompatability) { // channel\n        log.warn(channelIncompatability);\n      }\n    }\n    if (supportedByScaleType && channelIncompatability === undefined) {\n      if (specifiedValue !== undefined) {\n        // copyKeyFromObject ensure type safety\n        localScaleCmpt.copyKeyFromObject(property, specifiedScale);\n      } else {\n        const value = getDefaultValue(property, specifiedScale, mergedScaleCmpt, channel, fieldDef, config.scale);\n        if (value !== undefined) {\n          localScaleCmpt.set(property, value, false);\n        }\n      }\n\n    }\n  });\n}\n\nfunction getDefaultValue(property: keyof Scale, scale: Scale, scaleCmpt: ScaleComponent, channel: Channel, fieldDef: FieldDef<string>, scaleConfig: ScaleConfig) {\n\n  // If we have default rule-base, determine default value first\n  switch (property) {\n    case 'nice':\n      return nice(scaleCmpt.get('type'), channel, fieldDef);\n    case 'padding':\n      return padding(channel, scaleCmpt.get('type'), scaleConfig);\n    case 'paddingInner':\n      return paddingInner(scaleCmpt.get('padding'), channel, scaleConfig);\n    case 'paddingOuter':\n      return paddingOuter(scaleCmpt.get('padding'), channel, scaleCmpt.get('type'), scaleCmpt.get('paddingInner'), scaleConfig);\n    case 'round':\n      return round(channel, scaleConfig);\n    case 'zero':\n      return zero(channel, fieldDef, !!scale.domain);\n  }\n  // Otherwise, use scale config\n  return scaleConfig[property];\n}\n\nexport function parseNonUnitScaleProperty(model: Model, property: keyof (Scale | ScaleComponentProps)) {\n  const localScaleComponents: ScaleComponentIndex = model.component.scales;\n\n  for (const child of model.children) {\n    if (property === 'range') {\n      parseScaleRange(child);\n    }  else {\n      parseScaleProperty(child, property);\n    }\n  }\n\n  keys(localScaleComponents).forEach((channel: ScaleChannel) => {\n    let valueWithExplicit: Explicit<any>;\n\n    for (const child of model.children) {\n      const childComponent = child.component.scales[channel];\n      if (childComponent) {\n        const childValueWithExplicit = childComponent.getWithExplicit(property);\n        valueWithExplicit = mergeValuesWithExplicit<VgScale, any>(\n          valueWithExplicit, childValueWithExplicit,\n          property,\n          'scale',\n          tieBreakByComparing<VgScale, any>((v1, v2) => {\n            switch (property) {\n              case 'range':\n                // For range step, prefer larger step\n                if (v1.step && v2.step) {\n                  return v1.step - v2.step;\n                }\n                return 0;\n              // TODO: precedence rule for other properties\n            }\n            return 0;\n          })\n        );\n      }\n    }\n    localScaleComponents[channel].setWithExplicit(property, valueWithExplicit);\n  });\n}\n\n\n\nexport function nice(scaleType: ScaleType, channel: Channel, fieldDef: FieldDef<string>): boolean | NiceTime {\n  if (util.contains([ScaleType.TIME, ScaleType.UTC], scaleType)) {\n    return smallestUnit(fieldDef.timeUnit) as any;\n  }\n  if (fieldDef.bin) {\n    return undefined;\n  }\n  return util.contains([X, Y], channel); // return true for quantitative X/Y unless binned\n}\n\nexport function padding(channel: Channel, scaleType: ScaleType, scaleConfig: ScaleConfig) {\n  if (util.contains([X, Y], channel)) {\n    if (scaleType === ScaleType.POINT) {\n      return scaleConfig.pointPadding;\n    }\n  }\n  return undefined;\n}\n\nexport function paddingInner(padding: number, channel: Channel,  scaleConfig: ScaleConfig) {\n  if (padding !== undefined) {\n    // If user has already manually specified \"padding\", no need to add default paddingInner.\n    return undefined;\n  }\n\n  if (util.contains([X, Y], channel)) {\n    // Padding is only set for X and Y by default.\n    // Basically it doesn't make sense to add padding for color and size.\n\n    // paddingOuter would only be called if it's a band scale, just return the default for bandScale.\n    return scaleConfig.bandPaddingInner;\n  }\n  return undefined;\n}\n\nexport function paddingOuter(padding: number, channel: Channel, scaleType: ScaleType, paddingInner: number, scaleConfig: ScaleConfig) {\n  if (padding !== undefined) {\n    // If user has already manually specified \"padding\", no need to add default paddingOuter.\n    return undefined;\n  }\n\n  if (util.contains([X, Y], channel)) {\n    // Padding is only set for X and Y by default.\n    // Basically it doesn't make sense to add padding for color and size.\n    if (scaleType === ScaleType.BAND) {\n      if (scaleConfig.bandPaddingOuter !== undefined) {\n        return scaleConfig.bandPaddingOuter;\n      }\n      /* By default, paddingOuter is paddingInner / 2. The reason is that\n          size (width/height) = step * (cardinality - paddingInner + 2 * paddingOuter).\n          and we want the width/height to be integer by default.\n          Note that step (by default) and cardinality are integers.) */\n      return paddingInner / 2;\n    }\n  }\n  return undefined;\n}\n\nexport function round(channel: Channel, scaleConfig: ScaleConfig) {\n  if (util.contains(['x', 'y'], channel)) {\n    return scaleConfig.round;\n  }\n  return undefined;\n}\n\nexport function zero(channel: Channel, fieldDef: FieldDef<string>, hasCustomDomain: boolean) {\n  // By default, return true only for the following cases:\n\n  // 1) using quantitative field with size\n  // While this can be either ratio or interval fields, our assumption is that\n  // ratio are more common.\n  if (channel === 'size' && fieldDef.type === 'quantitative') {\n    return true;\n  }\n\n  // 2) non-binned, quantitative x-scale or y-scale if no custom domain is provided.\n  // (For binning, we should not include zero by default because binning are calculated without zero.\n  // Similar, if users explicitly provide a domain range, we should not augment zero as that will be unexpected.)\n  if (!hasCustomDomain && !fieldDef.bin && util.contains([X, Y], channel)) {\n    return true;\n  }\n  return false;\n}\n","import {isNumber} from 'vega-util';\nimport {Channel, COLOR, OPACITY, SCALE_CHANNELS, ScaleChannel, SHAPE, SIZE, X, Y} from '../../channel';\nimport {Config} from '../../config';\nimport * as log from '../../log';\nimport {Mark} from '../../mark';\nimport {channelScalePropertyIncompatability, isExtendedScheme, Range, Scale, ScaleConfig, ScaleType, scaleTypeSupportProperty, Scheme} from '../../scale';\nimport {Type} from '../../type';\nimport * as util from '../../util';\nimport {isVgRangeStep, VgRange, VgRangeScheme, VgSignalRef} from '../../vega.schema';\nimport {LayoutSize} from '../layoutsize/component';\nimport {isUnitModel, Model} from '../model';\nimport {Explicit, makeImplicit, Split} from '../split';\nimport {UnitModel} from '../unit';\nimport {ScaleComponent, ScaleComponentIndex} from './component';\nimport {parseNonUnitScaleProperty} from './properties';\n\n\nexport type RangeMixins = {range: Range} | {rangeStep: number} | {scheme: Scheme};\n\nexport const RANGE_PROPERTIES: (keyof Scale)[] = ['range', 'rangeStep', 'scheme'];\n\n\nexport function parseScaleRange(model: Model) {\n  if (isUnitModel(model)) {\n    parseUnitScaleRange(model);\n  } else {\n    parseNonUnitScaleProperty(model, 'range');\n  }\n}\n\nfunction parseUnitScaleRange(model: UnitModel) {\n  const  localScaleComponents: ScaleComponentIndex = model.component.scales;\n\n  // use SCALE_CHANNELS instead of scales[channel] to ensure that x, y come first!\n  SCALE_CHANNELS.forEach((channel: ScaleChannel) => {\n    const localScaleCmpt = localScaleComponents[channel];\n    if (!localScaleCmpt) {\n      return;\n    }\n\n    const specifiedScale = model.specifiedScales[channel];\n    const fieldDef = model.fieldDef(channel);\n\n    // Read if there is a specified width/height\n    const sizeType = channel === 'x' ? 'width' : channel === 'y' ? 'height' : undefined;\n    const specifiedSize = sizeType ? model.component.layoutSize.get(sizeType) : undefined;\n\n    const xyRangeSteps = getXYRangeStep(model);\n\n    const rangeWithExplicit = parseRangeForChannel(\n      channel, localScaleCmpt.get('type'), fieldDef.type, specifiedScale, model.config,\n      localScaleCmpt.get('zero'), model.mark(), specifiedSize, model.getName(sizeType), xyRangeSteps\n    );\n\n    localScaleCmpt.setWithExplicit('range', rangeWithExplicit);\n  });\n}\n\nfunction getXYRangeStep(model: UnitModel) {\n  const xyRangeSteps: number[] = [];\n\n  const xScale = model.getScaleComponent('x');\n  const xRange = xScale && xScale.get('range');\n  if (xRange && isVgRangeStep(xRange) && isNumber(xRange.step)) {\n    xyRangeSteps.push(xRange.step);\n  }\n\n  const yScale = model.getScaleComponent('y');\n  const yRange = yScale && yScale.get('range');\n  if (yRange && isVgRangeStep(yRange) && isNumber(yRange.step)) {\n    xyRangeSteps.push(yRange.step);\n  }\n\n  return xyRangeSteps;\n}\n\n/**\n * Return mixins that includes one of the range properties (range, rangeStep, scheme).\n */\nexport function parseRangeForChannel(\n    channel: Channel, scaleType: ScaleType, type: Type, specifiedScale: Scale, config: Config,\n    zero: boolean, mark: Mark, specifiedSize: LayoutSize, sizeSignal: string, xyRangeSteps: number[]\n  ): Explicit<VgRange> {\n\n  const noRangeStep = !!specifiedSize || specifiedScale.rangeStep === null;\n\n  // Check if any of the range properties is specified.\n  // If so, check if it is compatible and make sure that we only output one of the properties\n  for (const property of RANGE_PROPERTIES) {\n    if (specifiedScale[property] !== undefined) {\n      const supportedByScaleType = scaleTypeSupportProperty(scaleType, property);\n      const channelIncompatability = channelScalePropertyIncompatability(channel, property);\n      if (!supportedByScaleType) {\n        log.warn(log.message.scalePropertyNotWorkWithScaleType(scaleType, property, channel));\n      } else if (channelIncompatability) { // channel\n        log.warn(channelIncompatability);\n      } else {\n        switch (property) {\n          case 'range':\n            return makeImplicit(specifiedScale[property]);\n          case 'scheme':\n            return makeImplicit(parseScheme(specifiedScale[property]));\n          case 'rangeStep':\n            const rangeStep = specifiedScale[property];\n            if (rangeStep !== null) {\n              if (specifiedSize === undefined) {\n                return makeImplicit({step: rangeStep});\n              } else {\n                // If top-level size is specified, we ignore specified rangeStep.\n                log.warn(log.message.rangeStepDropped(channel));\n              }\n            }\n        }\n      }\n    }\n  }\n  return {\n    explicit: false,\n    value: defaultRange(\n      channel, scaleType, type, config,\n      zero, mark, sizeSignal, xyRangeSteps, noRangeStep\n    )\n  };\n}\n\nfunction parseScheme(scheme: Scheme) {\n  if (isExtendedScheme(scheme)) {\n    const r: VgRangeScheme = {scheme: scheme.name};\n    if (scheme.count) {\n      r.count = scheme.count;\n    }\n    if (scheme.extent) {\n      r.extent = scheme.extent;\n    }\n    return r;\n  }\n  return {scheme: scheme};\n}\n\nexport function defaultRange(\n  channel: Channel, scaleType: ScaleType, type: Type, config: Config, zero: boolean, mark: Mark,\n  sizeSignal: string, xyRangeSteps: number[], noRangeStep: boolean\n): VgRange {\n  switch (channel) {\n    case X:\n    case Y:\n      if (util.contains(['point', 'band'], scaleType) && !noRangeStep) {\n        if (channel === X && mark === 'text') {\n          if (config.scale.textXRangeStep) {\n            return {step: config.scale.textXRangeStep};\n          }\n        } else {\n          if (config.scale.rangeStep) {\n            return {step: config.scale.rangeStep};\n          }\n        }\n      }\n      // If range step is null, assign temporary range signals,\n      // which will be later replaced with proper signals in assemble.\n      // We cannot set the right size signal here since parseLayoutSize() happens after parseScale().\n      return channel === X ? [0, {signal: sizeSignal}] : [{signal: sizeSignal}, 0];\n    case SIZE:\n      // TODO: support custom rangeMin, rangeMax\n      const rangeMin = sizeRangeMin(mark, zero, config);\n      const rangeMax = sizeRangeMax(mark, xyRangeSteps, config);\n      return [rangeMin, rangeMax];\n    case SHAPE:\n      return 'symbol';\n    case COLOR:\n      if (scaleType === 'ordinal') {\n        // Only nominal data uses ordinal scale by default\n        return type === 'nominal' ? 'category' : 'ordinal';\n      }\n      return mark === 'rect' ? 'heatmap' : 'ramp';\n    case OPACITY:\n      // TODO: support custom rangeMin, rangeMax\n      return [config.scale.minOpacity, config.scale.maxOpacity];\n  }\n  /* istanbul ignore next: should never reach here */\n  throw new Error(`Scale range undefined for channel ${channel}`);\n}\n\nfunction sizeRangeMin(mark: Mark, zero: boolean, config: Config) {\n  if (zero) {\n    return 0;\n  }\n  switch (mark) {\n    case 'bar':\n      return config.scale.minBandSize !== undefined ? config.scale.minBandSize : config.bar.continuousBandSize;\n    case 'tick':\n      return config.scale.minBandSize;\n    case 'line':\n    case 'rule':\n      return config.scale.minStrokeWidth;\n    case 'text':\n      return config.scale.minFontSize;\n    case 'point':\n    case 'square':\n    case 'circle':\n      if (config.scale.minSize) {\n        return config.scale.minSize;\n      }\n  }\n  /* istanbul ignore next: should never reach here */\n  // sizeRangeMin not implemented for the mark\n  throw new Error(log.message.incompatibleChannel('size', mark));\n}\n\nfunction sizeRangeMax(mark: Mark, xyRangeSteps: number[], config: Config) {\n  const scaleConfig = config.scale;\n  // TODO(#1168): make max size scale based on rangeStep / overall plot size\n  switch (mark) {\n    case 'bar':\n    case 'tick':\n      if (config.scale.maxBandSize !== undefined) {\n        return config.scale.maxBandSize;\n      }\n      return minXYRangeStep(xyRangeSteps, config.scale) - 1;\n    case 'line':\n    case 'rule':\n      return config.scale.maxStrokeWidth;\n    case 'text':\n      return config.scale.maxFontSize;\n    case 'point':\n    case 'square':\n    case 'circle':\n      if (config.scale.maxSize) {\n        return config.scale.maxSize;\n      }\n\n      // FIXME this case totally should be refactored\n      const pointStep = minXYRangeStep(xyRangeSteps, scaleConfig);\n      return (pointStep - 2) * (pointStep - 2);\n  }\n  /* istanbul ignore next: should never reach here */\n  // sizeRangeMax not implemented for the mark\n  throw new Error(log.message.incompatibleChannel('size', mark));\n}\n\n/**\n * @returns {number} Range step of x or y or minimum between the two if both are ordinal scale.\n */\nfunction minXYRangeStep(xyRangeSteps: number[], scaleConfig: ScaleConfig): number {\n  if (xyRangeSteps.length > 0) {\n    return Math.min.apply(null, xyRangeSteps);\n  }\n  if (scaleConfig.rangeStep) {\n    return scaleConfig.rangeStep;\n  }\n  return 21; // FIXME: re-evaluate the default value here.\n}\n","import {Channel, hasScale, rangeType, supportScaleType} from '../../channel';\nimport {field, FieldDef} from '../../fielddef';\nimport * as log from '../../log';\nimport {Mark} from '../../mark';\nimport {ScaleConfig, ScaleType} from '../../scale';\nimport {hasDiscreteDomain} from '../../scale';\nimport {isDiscreteByDefault} from '../../timeunit';\nimport {Type} from '../../type';\nimport * as util from '../../util';\nimport {contains} from '../../util';\n\n\nexport type RangeType = 'continuous' | 'discrete' | 'flexible' | undefined;\n\n/**\n * Determine if there is a specified scale type and if it is appropriate,\n * or determine default type if type is unspecified or inappropriate.\n */\n// NOTE: CompassQL uses this method.\nexport function scaleType(\n  specifiedType: ScaleType, channel: Channel, fieldDef: FieldDef<string>, mark: Mark,\n  specifiedRangeStep: number, scaleConfig: ScaleConfig): ScaleType {\n\n  const defaultScaleType = defaultType(channel, fieldDef, mark, specifiedRangeStep, scaleConfig);\n\n  if (!hasScale(channel)) {\n    // There is no scale for these channels\n    return null;\n  }\n  if (specifiedType !== undefined) {\n    // Check if explicitly specified scale type is supported by the channel\n    if (!supportScaleType(channel, specifiedType)) {\n      log.warn(log.message.scaleTypeNotWorkWithChannel(channel, specifiedType, defaultScaleType));\n      return defaultScaleType;\n    }\n\n    // Check if explicitly specified scale type is supported by the data type\n    if (!fieldDefMatchScaleType(specifiedType, fieldDef)) {\n      log.warn(log.message.scaleTypeNotWorkWithFieldDef(specifiedType, defaultScaleType));\n      return defaultScaleType;\n    }\n\n    return specifiedType;\n  }\n\n  return defaultScaleType;\n}\n\n/**\n * Determine appropriate default scale type.\n */\nfunction defaultType(channel: Channel, fieldDef: FieldDef<string>, mark: Mark,\n  specifiedRangeStep: number, scaleConfig: ScaleConfig): ScaleType {\n  switch (fieldDef.type) {\n    case 'nominal':\n      if (channel === 'color' || rangeType(channel) === 'discrete') {\n        return 'ordinal';\n      }\n      return discreteToContinuousType(channel, mark, specifiedRangeStep, scaleConfig);\n\n    case 'ordinal':\n      if (channel === 'color') {\n        return 'ordinal';\n      } else if (rangeType(channel) === 'discrete') {\n        if (channel !== 'text' && channel !=='tooltip') {\n          log.warn(log.message.discreteChannelCannotEncode(channel, 'ordinal'));\n        }\n        return 'ordinal';\n      }\n      return discreteToContinuousType(channel, mark, specifiedRangeStep, scaleConfig);\n\n    case 'temporal':\n      if (channel === 'color') {\n        if (isDiscreteByDefault(fieldDef.timeUnit)) {\n          // For discrete timeUnit, use ordinal scale so that legend produces correct value.\n          // (See https://github.com/vega/vega-lite/issues/2045.)\n          return 'ordinal';\n        }\n        return 'sequential';\n      } else if (rangeType(channel) === 'discrete') {\n        log.warn(log.message.discreteChannelCannotEncode(channel, 'temporal'));\n        // TODO: consider using quantize (equivalent to binning) once we have it\n        return 'ordinal';\n      }\n      if (isDiscreteByDefault(fieldDef.timeUnit)) {\n        return discreteToContinuousType(channel, mark, specifiedRangeStep, scaleConfig);\n      }\n      return 'time';\n\n    case 'quantitative':\n      if (channel === 'color') {\n        if (fieldDef.bin) {\n          return 'bin-ordinal';\n        }\n        // Use `sequential` as the default color scale for continuous data\n        // since it supports both array range and scheme range.\n        return 'sequential';\n      } else if (rangeType(channel) === 'discrete') {\n        log.warn(log.message.discreteChannelCannotEncode(channel, 'quantitative'));\n        // TODO: consider using quantize (equivalent to binning) once we have it\n        return 'ordinal';\n      }\n\n      // x and y use a linear scale because selections don't work with bin scales\n      if (fieldDef.bin && channel !== 'x' && channel !== 'y') {\n        return 'bin-linear';\n      }\n      return 'linear';\n  }\n\n  /* istanbul ignore next: should never reach this */\n  throw new Error(log.message.invalidFieldType(fieldDef.type));\n}\n\n/**\n * Determines default scale type for nominal/ordinal field.\n * @returns BAND or POINT scale based on channel, mark, and rangeStep\n */\nfunction discreteToContinuousType(\n    channel: Channel, mark: Mark,\n    specifiedRangeStep: number,\n    scaleConfig: ScaleConfig\n  ): ScaleType {\n\n  if (util.contains(['x', 'y'], channel)) {\n    if (mark === 'rect') {\n      // The rect mark should fit into a band.\n      return 'band';\n    }\n    if (mark === 'bar') {\n      return 'band';\n    }\n  }\n  // Otherwise, use ordinal point scale so we can easily get center positions of the marks.\n  return 'point';\n}\n\nexport function fieldDefMatchScaleType(specifiedType: ScaleType, fieldDef: FieldDef<string>):boolean {\n  const type: Type = fieldDef.type;\n  if (contains([Type.ORDINAL, Type.NOMINAL], type)) {\n    return specifiedType === undefined || hasDiscreteDomain(specifiedType);\n  } else if (type === Type.TEMPORAL) {\n    if (!fieldDef.timeUnit) {\n      return contains([ScaleType.TIME, ScaleType.UTC, undefined], specifiedType);\n    } else {\n      return contains([ScaleType.TIME, ScaleType.UTC, undefined], specifiedType) || hasDiscreteDomain(specifiedType);\n    }\n  } else if (type === Type.QUANTITATIVE) {\n    if (fieldDef.bin) {\n      return specifiedType === ScaleType.BIN_LINEAR || specifiedType === ScaleType.BIN_ORDINAL;\n    }\n    return contains([ScaleType.LOG, ScaleType.POW, ScaleType.SQRT, ScaleType.QUANTILE, ScaleType.QUANTIZE, ScaleType.LINEAR, undefined], specifiedType);\n  }\n\n  return true;\n}\n","import {Channel, X, Y} from '../../channel';\nimport {warn} from '../../log';\nimport {hasContinuousDomain, isBinScale} from '../../scale';\nimport {extend, keys, stringValue} from '../../util';\nimport {VgEventStream} from '../../vega.schema';\nimport {UnitModel} from '../unit';\nimport {\n  channelSignalName,\n  ProjectComponent,\n  SelectionCompiler,\n  SelectionComponent,\n  spatialProjections,\n  STORE,\n  TUPLE,\n  unitName,\n} from './selection';\nimport scales from './transforms/scales';\n\nexport const BRUSH = '_brush';\nexport const SCALE_TRIGGER = '_scale_trigger';\n\nconst interval:SelectionCompiler = {\n  predicate: 'vlInterval',\n  scaleDomain: 'vlIntervalDomain',\n\n  signals: function(model, selCmpt) {\n    const name = selCmpt.name;\n    const hasScales = scales.has(selCmpt);\n    const signals: any[] = [];\n    const intervals: any[] = [];\n    const tupleTriggers: string[] = [];\n    const scaleTriggers: any[] = [];\n\n    if (selCmpt.translate && !hasScales) {\n      const filterExpr = `!event.item || event.item.mark.name !== ${stringValue(name + BRUSH)}`;\n      events(selCmpt, function(_: any[], evt: VgEventStream) {\n        const filters = evt.between[0].filter || (evt.between[0].filter = []);\n        if (filters.indexOf(filterExpr) < 0) {\n          filters.push(filterExpr);\n        }\n      });\n    }\n\n    selCmpt.project.forEach(function(p) {\n      const channel = p.channel;\n      if (channel !== X && channel !== Y) {\n        warn('Interval selections only support x and y encoding channels.');\n        return;\n      }\n\n      const cs = channelSignals(model, selCmpt, channel);\n      const dname = channelSignalName(selCmpt, channel, 'data');\n      const vname = channelSignalName(selCmpt, channel, 'visual');\n      const scaleStr = stringValue(model.scaleName(channel));\n      const scaleType = model.getScaleComponent(channel).get('type');\n      const toNum = hasContinuousDomain(scaleType) ? '+' : '';\n\n      signals.push.apply(signals, cs);\n      tupleTriggers.push(dname);\n      intervals.push(`{encoding: ${stringValue(channel)}, ` +\n        `field: ${stringValue(p.field)}, extent: ${dname}}`);\n\n      scaleTriggers.push({\n        scaleName: model.scaleName(channel),\n        expr: `(!isArray(${dname}) || ` +\n          `(${toNum}invert(${scaleStr}, ${vname})[0] === ${toNum}${dname}[0] && ` +\n            `${toNum}invert(${scaleStr}, ${vname})[1] === ${toNum}${dname}[1]))`\n      });\n    });\n\n    // Proxy scale reactions to ensure that an infinite loop doesn't occur\n    // when an interval selection filter touches the scale.\n    if (!hasScales) {\n      signals.push({\n        name: name + SCALE_TRIGGER,\n        update: scaleTriggers.map((t) => t.expr).join(' && ') +\n          ` ? ${name + SCALE_TRIGGER} : {}`\n      });\n    }\n\n    // Only add an interval to the store if it has valid data extents. Data extents\n    // are set to null if pixel extents are equal to account for intervals over\n    // ordinal/nominal domains which, when inverted, will still produce a valid datum.\n    return signals.concat({\n      name: name + TUPLE,\n      on: [{\n        events: tupleTriggers.map((t) => ({signal: t})),\n        update: tupleTriggers.join(' && ') +\n          ` ? {unit: ${unitName(model)}, intervals: [${intervals.join(', ')}]} : null`\n      }]\n    });\n  },\n\n  modifyExpr: function(model, selCmpt) {\n    const tpl = selCmpt.name + TUPLE;\n    return tpl + ', ' +\n      (selCmpt.resolve === 'global' ? 'true' : `{unit: ${unitName(model)}}`);\n  },\n\n  marks: function(model, selCmpt, marks) {\n    const name = selCmpt.name;\n    const {xi, yi} = spatialProjections(selCmpt);\n    const tpl = name + TUPLE;\n    const store = `data(${stringValue(selCmpt.name + STORE)})`;\n\n    // Do not add a brush if we're binding to scales.\n    if (scales.has(selCmpt)) {\n      return marks;\n    }\n\n    const update = {\n      x: xi !== null ? {signal: `${name}_x[0]`} : {value: 0},\n      y: yi !== null ? {signal: `${name}_y[0]`} : {value: 0},\n      x2: xi !== null ? {signal: `${name}_x[1]`} : {field: {group: 'width'}},\n      y2: yi !== null ? {signal: `${name}_y[1]`} : {field: {group: 'height'}}\n    };\n\n    // If the selection is resolved to global, only a single interval is in\n    // the store. Wrap brush mark's encodings with a production rule to test\n    // this based on the `unit` property. Hide the brush mark if it corresponds\n    // to a unit different from the one in the store.\n    if (selCmpt.resolve === 'global') {\n      keys(update).forEach(function(key) {\n        update[key] = [{\n          test: `${store}.length && ${store}[0].unit === ${unitName(model)}`,\n          ...update[key]\n        }, {value: 0}];\n      });\n    }\n\n    // Two brush marks ensure that fill colors and other aesthetic choices do\n    // not interefere with the core marks, but that the brushed region can still\n    // be interacted with (e.g., dragging it around).\n    const {fill, fillOpacity, ...stroke} = selCmpt.mark;\n    const vgStroke = keys(stroke).reduce((def, k) => {\n      def[k] = {value: stroke[k]};\n      return def;\n    }, {});\n\n    return [{\n      name: name + BRUSH + '_bg',\n      type: 'rect',\n      clip: true,\n      encode: {\n        enter: {\n          fill: {value: fill},\n          fillOpacity: {value: fillOpacity}\n        },\n        update: update\n      }\n    } as any].concat(marks, {\n      name: name + BRUSH,\n      type: 'rect',\n      clip: true,\n      encode: {\n        enter: {\n          fill: {value: 'transparent'},\n          ...vgStroke\n        },\n        update: update\n      }\n    });\n  }\n};\nexport {interval as default};\n\n/**\n * Returns the visual and data signals for an interval selection.\n */\nfunction channelSignals(model: UnitModel, selCmpt: SelectionComponent, channel: 'x'|'y'): any {\n  const vname = channelSignalName(selCmpt, channel, 'visual');\n  const dname = channelSignalName(selCmpt, channel, 'data');\n  const hasScales = scales.has(selCmpt);\n  const scaleName = model.scaleName(channel);\n  const scaleStr = stringValue(scaleName);\n  const scale = model.getScaleComponent(channel);\n  const scaleType = scale ? scale.get('type') : undefined;\n  const size  = model.getSizeSignalRef(channel === X ? 'width' : 'height').signal;\n  const coord = `${channel}(unit)`;\n\n  const on = events(selCmpt, function(def: any[], evt: VgEventStream) {\n    return def.concat(\n      {events: evt.between[0], update: `[${coord}, ${coord}]`},           // Brush Start\n      {events: evt, update: `[${vname}[0], clamp(${coord}, 0, ${size})]`} // Brush End\n    );\n  });\n\n  // React to pan/zooms of continuous scales. Non-continuous scales\n  // (bin-linear, band, point) cannot be pan/zoomed and any other changes\n  // to their domains (e.g., filtering) should clear the brushes.\n  on.push({\n    events: {signal: selCmpt.name + SCALE_TRIGGER},\n    update: hasContinuousDomain(scaleType) && !isBinScale(scaleType) ?\n      `[scale(${scaleStr}, ${dname}[0]), scale(${scaleStr}, ${dname}[1])]` : `[0, 0]`\n  });\n\n  return hasScales ? [{name: dname, on: []}] : [{\n    name: vname, value: [], on: on\n  }, {\n    name: dname,\n    on: [{events: {signal: vname}, update: `${vname}[0] === ${vname}[1] ? null : invert(${scaleStr}, ${vname})`}]\n  }];\n}\n\nfunction events(selCmpt: SelectionComponent, cb: Function) {\n  return selCmpt.events.reduce(function(on: any[], evt: VgEventStream) {\n    if (!evt.between) {\n      warn(`${evt} is not an ordered event stream for interval selections`);\n      return on;\n    }\n    return cb(on, evt);\n  }, []);\n}\n","import {keys, stringValue} from '../../util';\nimport {SelectionCompiler, TUPLE, unitName} from './selection';\nimport nearest from './transforms/nearest';\n\n\nconst multi:SelectionCompiler = {\n  predicate: 'vlMulti',\n  scaleDomain: 'vlMultiDomain',\n\n  signals: function(model, selCmpt) {\n    const proj = selCmpt.project;\n    const datum = nearest.has(selCmpt) ?\n      '(item().isVoronoi ? datum.datum : datum)' : 'datum';\n    const bins: string[] = [];\n    const encodings = proj.map((p) => stringValue(p.channel)).filter((e) => e).join(', ');\n    const fields = proj.map((p) => stringValue(p.field)).join(', ');\n    const values = proj.map((p) => {\n      const channel = p.channel;\n      const fieldDef = model.fieldDef(channel);\n      // Binned fields should capture extents, for a range test against the raw field.\n      return (fieldDef && fieldDef.bin) ? (bins.push(p.field),\n        `[${datum}[${stringValue(model.field(channel, {binSuffix: 'start'}))}], ` +\n            `${datum}[${stringValue(model.field(channel, {binSuffix: 'end'}))}]]`) :\n        `${datum}[${stringValue(p.field)}]`;\n    }).join(', ');\n\n    // Only add a discrete selection to the store if a datum is present _and_\n    // the interaction isn't occuring on a group mark. This guards against\n    // polluting interactive state with invalid values in faceted displays\n    // as the group marks are also data-driven. We force the update to account\n    // for constant null states but varying toggles (e.g., shift-click in\n    // whitespace followed by a click in whitespace; the store should only\n    // be cleared on the second click).\n    return [{\n      name: selCmpt.name + TUPLE,\n      value: {},\n      on: [{\n        events: selCmpt.events,\n        update: `datum && item().mark.marktype !== 'group' ? ` +\n          `{unit: ${unitName(model)}, encodings: [${encodings}], ` +\n          `fields: [${fields}], values: [${values}]` +\n          (bins.length ? ', ' + bins.map((b) => `${stringValue('bin_' + b)}: 1`).join(', ') : '') +\n          '} : null',\n        force: true\n      }]\n    }];\n  },\n\n  modifyExpr: function(model, selCmpt) {\n    const tpl = selCmpt.name + TUPLE;\n    return tpl + ', ' +\n      (selCmpt.resolve === 'global' ? 'null' : `{unit: ${unitName(model)}}`);\n  }\n};\n\nexport {multi as default};\n","import {selector as parseSelector} from 'vega-event-selector';\nimport {Channel, ScaleChannel, SingleDefChannel, X, Y} from '../../channel';\nimport {warn} from '../../log';\nimport {LogicalOperand} from '../../logical';\nimport {SelectionDomain} from '../../scale';\nimport {BrushConfig, SELECTION_ID, SelectionDef, SelectionResolution, SelectionType} from '../../selection';\nimport {Dict, extend, isString, logicalExpr, stringValue, varName} from '../../util';\nimport {isSignalRefDomain, VgBinding, VgData, VgDomain, VgEventStream, VgScale, VgSignalRef} from '../../vega.schema';\nimport {DataFlowNode} from '../data/dataflow';\nimport {TimeUnitNode} from '../data/timeunit';\nimport {FacetModel} from '../facet';\nimport {LayerModel} from '../layer';\nimport {isFacetModel, isUnitModel, Model} from '../model';\nimport {UnitModel} from '../unit';\nimport intervalCompiler from './interval';\nimport multiCompiler from './multi';\nimport {SelectionComponent} from './selection';\nimport singleCompiler from './single';\nimport {forEachTransform} from './transforms/transforms';\n\n\nexport const STORE = '_store';\nexport const TUPLE  = '_tuple';\nexport const MODIFY = '_modify';\nexport const SELECTION_DOMAIN = '_selection_domain_';\n\nexport interface SelectionComponent {\n  name: string;\n  type: SelectionType;\n  events: VgEventStream;\n  // predicate?: string;\n  bind?: 'scales' | VgBinding | {[key: string]: VgBinding};\n  resolve: SelectionResolution;\n  mark?: BrushConfig;\n\n  // Transforms\n  project?: ProjectComponent[];\n  fields?: any;\n  timeUnit?: TimeUnitNode;\n  scales?: Channel[];\n  toggle?: any;\n  translate?: any;\n  zoom?: any;\n  nearest?: any;\n}\n\nexport interface ProjectComponent {\n  field?: string;\n  channel?: ScaleChannel;\n}\n\nexport interface SelectionCompiler {\n  signals: (model: UnitModel, selCmpt: SelectionComponent) => any[];\n  topLevelSignals?: (model: Model, selCmpt: SelectionComponent, signals: any[]) => any[];\n  modifyExpr: (model: UnitModel, selCmpt: SelectionComponent) => string;\n  marks?: (model: UnitModel, selCmpt:SelectionComponent, marks: any[]) => any[];\n  predicate: string;  // Vega expr string to determine inclusion in selection.\n  scaleDomain: string;  // Vega expr string to materialize a scale domain.\n}\n\nexport function parseUnitSelection(model: UnitModel, selDefs: Dict<SelectionDef>) {\n  const selCmpts: Dict<SelectionComponent> = {};\n  const selectionConfig = model.config.selection;\n\n  for (let name in selDefs) {\n    if (!selDefs.hasOwnProperty(name)) {\n      continue;\n    }\n\n    const selDef = selDefs[name];\n    const cfg = selectionConfig[selDef.type];\n\n    // Set default values from config if a property hasn't been specified,\n    // or if it is true. E.g., \"translate\": true should use the default\n    // event handlers for translate. However, true may be a valid value for\n    // a property (e.g., \"nearest\": true).\n    for (const key in cfg) {\n      // A selection should contain either `encodings` or `fields`, only use\n      // default values for these two values if neither of them is specified.\n      if ((key === 'encodings' && selDef.fields) || (key === 'fields' && selDef.encodings)) {\n        continue;\n      }\n\n      if (key === 'mark') {\n        selDef[key] = {...cfg[key], ...selDef[key]};\n      }\n\n      if (selDef[key] === undefined || selDef[key] === true) {\n        selDef[key] = cfg[key] || selDef[key];\n      }\n    }\n\n    name = varName(name);\n    const selCmpt = selCmpts[name] = extend({}, selDef, {\n      name: name,\n      events: isString(selDef.on) ? parseSelector(selDef.on, 'scope') : selDef.on,\n    }) as SelectionComponent;\n\n    forEachTransform(selCmpt, txCompiler => {\n      if (txCompiler.parse) {\n        txCompiler.parse(model, selDef, selCmpt);\n      }\n    });\n  }\n\n  return selCmpts;\n}\n\nexport function assembleUnitSelectionSignals(model: UnitModel, signals: any[]) {\n  forEachSelection(model, (selCmpt, selCompiler) => {\n    const name = selCmpt.name;\n    let modifyExpr = selCompiler.modifyExpr(model, selCmpt);\n\n    signals.push.apply(signals, selCompiler.signals(model, selCmpt));\n\n    forEachTransform(selCmpt, txCompiler => {\n      if (txCompiler.signals) {\n        signals = txCompiler.signals(model, selCmpt, signals);\n      }\n      if (txCompiler.modifyExpr) {\n        modifyExpr = txCompiler.modifyExpr(model, selCmpt, modifyExpr);\n      }\n    });\n\n    signals.push({\n      name: name + MODIFY,\n      on: [{\n        events: {signal: name + TUPLE},\n        update: `modify(${stringValue(selCmpt.name + STORE)}, ${modifyExpr})`\n      }]\n    });\n  });\n\n  const facetModel = getFacetModel(model);\n  if (signals.length && facetModel) {\n    const name = stringValue(facetModel.getName('cell'));\n    signals.unshift({\n      name: 'facet',\n      value: {},\n      on: [{\n        events: parseSelector('mousemove', 'scope'),\n        update: `isTuple(facet) ? facet : group(${name}).datum`\n      }]\n    });\n  }\n\n  return signals;\n}\n\nexport function assembleTopLevelSignals(model: UnitModel, signals: any[]) {\n  let needsUnit = false;\n  forEachSelection(model, (selCmpt, selCompiler) => {\n    if (selCompiler.topLevelSignals) {\n      signals = selCompiler.topLevelSignals(model, selCmpt, signals);\n    }\n\n    forEachTransform(selCmpt, txCompiler => {\n      if (txCompiler.topLevelSignals) {\n        signals = txCompiler.topLevelSignals(model, selCmpt, signals);\n      }\n    });\n\n    needsUnit = true;\n  });\n\n  if (needsUnit) {\n    const hasUnit = signals.filter((s) => s.name === 'unit');\n    if (!(hasUnit.length)) {\n      signals.unshift({\n        name: 'unit',\n        value: {},\n        on: [{events: 'mousemove', update: 'isTuple(group()) ? group() : unit'}]\n      });\n    }\n  }\n\n  return signals;\n}\n\nexport function assembleUnitSelectionData(model: UnitModel, data: VgData[]): VgData[] {\n  forEachSelection(model, selCmpt => {\n    const contains = data.filter((d) => d.name === selCmpt.name + STORE);\n    if (!contains.length) {\n      data.push({name: selCmpt.name + STORE});\n    }\n  });\n\n  return data;\n}\n\nexport function assembleUnitSelectionMarks(model: UnitModel, marks: any[]): any[] {\n  let selMarks = marks;\n  forEachSelection(model, (selCmpt, selCompiler) => {\n    selMarks = selCompiler.marks ? selCompiler.marks(model, selCmpt, selMarks) : selMarks;\n    forEachTransform(selCmpt, (txCompiler) => {\n      if (txCompiler.marks) {\n        selMarks = txCompiler.marks(model, selCmpt, marks, selMarks);\n      }\n    });\n  });\n\n  return selMarks;\n}\n\nexport function assembleLayerSelectionMarks(model: LayerModel, marks: any[]): any[] {\n  model.children.forEach(child => {\n    if (isUnitModel(child)) {\n      marks = assembleUnitSelectionMarks(child, marks);\n    }\n  });\n\n  return marks;\n}\n\nexport function predicate(model: Model, selections: LogicalOperand<string>, dfnode?: DataFlowNode): string {\n  const stores: string[] = [];\n  function expr(name: string): string {\n    const vname = varName(name);\n    const selCmpt = model.getSelectionComponent(vname, name);\n    const store = stringValue(vname + STORE);\n\n    if (selCmpt.timeUnit) {\n      const child = dfnode || model.component.data.raw;\n      const tunode = selCmpt.timeUnit.clone();\n      if (child.parent) {\n        tunode.insertAsParentOf(child);\n      } else {\n        child.parent = tunode;\n      }\n    }\n\n    stores.push(store);\n    return compiler(selCmpt.type).predicate + `(${store}, datum` +\n      (selCmpt.resolve === 'global' ? ')' : `, ${stringValue(selCmpt.resolve)})`);\n  }\n\n  const predicateStr = logicalExpr(selections, expr);\n  return '!(' + stores.map((s) => `length(data(${s}))`).join(' || ') +\n    `) || (${predicateStr})`;\n}\n\n// Selections are parsed _after_ scales. If a scale domain is set to\n// use a selection, the SELECTION_DOMAIN constant is used as the\n// domainRaw.signal during scale.parse and then replaced with the necessary\n// selection expression function during scale.assemble. To not pollute the\n// type signatures to account for this setup, the selection domain definition\n// is coerced to a string and appended to SELECTION_DOMAIN.\nexport function isRawSelectionDomain(domainRaw: VgSignalRef) {\n  return domainRaw.signal.indexOf(SELECTION_DOMAIN) >= 0;\n}\nexport function selectionScaleDomain(model: Model, domainRaw: VgSignalRef): VgSignalRef {\n  const selDomain = JSON.parse(domainRaw.signal.replace(SELECTION_DOMAIN, ''));\n  const name = varName(selDomain.selection);\n\n  let selCmpt = model.component.selection && model.component.selection[name];\n  if (selCmpt) {\n    warn('Use \"bind\": \"scales\" to setup a binding for scales and selections within the same view.');\n  } else {\n    selCmpt = model.getSelectionComponent(name, selDomain.selection);\n    if (!selDomain.encoding && !selDomain.field) {\n      selDomain.field = selCmpt.project[0].field;\n      if (selCmpt.project.length > 1) {\n        warn('A \"field\" or \"encoding\" must be specified when using a selection as a scale domain. ' +\n        `Using \"field\": ${stringValue(selDomain.field)}.`);\n      }\n    }\n    return {\n      signal: compiler(selCmpt.type).scaleDomain +\n        `(${stringValue(name + STORE)}, ${stringValue(selDomain.encoding || null)}, ` +\n          stringValue(selDomain.field || null) +\n          (selCmpt.resolve === 'global' ? ')' : `, ${stringValue(selCmpt.resolve)})`)\n    };\n  }\n\n  return {signal: 'null'};\n}\n\n// Utility functions\n\nfunction forEachSelection(model: Model, cb: (selCmpt: SelectionComponent, selCompiler: SelectionCompiler) => void) {\n  const selections = model.component.selection;\n  for (const name in selections) {\n    if (selections.hasOwnProperty(name)) {\n      const sel = selections[name];\n      cb(sel, compiler(sel.type));\n    }\n  }\n}\n\nfunction compiler(type: SelectionType): SelectionCompiler {\n  switch (type) {\n    case 'single':\n      return singleCompiler;\n    case 'multi':\n      return multiCompiler;\n    case 'interval':\n      return intervalCompiler;\n  }\n  return null;\n}\n\nfunction getFacetModel(model: Model): FacetModel {\n  let parent = model.parent;\n  while (parent) {\n    if (isFacetModel(parent)) {\n      break;\n    }\n    parent = parent.parent;\n  }\n\n  return parent as FacetModel;\n}\n\nexport function unitName(model: Model) {\n  let name = stringValue(model.name);\n  const facet = getFacetModel(model);\n  if (facet) {\n    name += (facet.facet.row ? ` + '_' + facet[${stringValue(facet.field('row'))}]` : '')\n      + (facet.facet.column ? ` + '_' + facet[${stringValue(facet.field('column'))}]` : '');\n  }\n  return name;\n}\n\nexport function requiresSelectionId(model: Model) {\n  let identifier = false;\n  forEachSelection(model, (selCmpt) => {\n    identifier = identifier || selCmpt.project.some((proj) => proj.field === SELECTION_ID);\n  });\n  return identifier;\n}\n\nexport function channelSignalName(selCmpt: SelectionComponent, channel: Channel, range: 'visual' | 'data') {\n  return varName(selCmpt.name + '_' + (range === 'visual' ? channel : selCmpt.fields[channel]));\n}\n\nexport function spatialProjections(selCmpt: SelectionComponent) {\n  let x:ProjectComponent = null;\n  let xi:number = null;\n  let y:ProjectComponent = null;\n  let yi: number = null;\n\n  selCmpt.project.forEach((p, i) => {\n    if (p.channel === X) {\n      x  = p;\n      xi = i;\n    } else if (p.channel === Y) {\n      y = p;\n      yi = i;\n    }\n  });\n  return {x, xi, y, yi};\n}\n","import {stringValue} from '../../util';\nimport multi from './multi';\nimport {SelectionCompiler, STORE, TUPLE, unitName} from './selection';\n\n\nconst single:SelectionCompiler = {\n  predicate: 'vlSingle',\n  scaleDomain: 'vlSingleDomain',\n\n  signals: multi.signals,\n\n  topLevelSignals: function(model, selCmpt, signals) {\n    const hasSignal = signals.filter((s) => s.name === selCmpt.name);\n    const data = `data(${stringValue(selCmpt.name + STORE)})`;\n    const values = `${data}[0].values`;\n    return hasSignal.length ? signals : signals.concat({\n      name: selCmpt.name,\n      update: `${data}.length && {` +\n        selCmpt.project.map((p, i) => `${p.field}: ${values}[${i}]`).join(', ') + '}'\n    });\n  },\n\n  modifyExpr: function(model, selCmpt) {\n    const tpl = selCmpt.name + TUPLE;\n    return tpl + ', ' +\n      (selCmpt.resolve === 'global' ? 'true' : `{unit: ${unitName(model)}}`);\n  }\n};\n\nexport {single as default};\n","import {stringValue, varName} from '../../../util';\nimport {TUPLE} from '../selection';\nimport nearest from './nearest';\nimport {TransformCompiler} from './transforms';\n\n\nconst inputBindings:TransformCompiler = {\n  has: function(selCmpt) {\n    return selCmpt.type === 'single' && selCmpt.resolve === 'global' &&\n      selCmpt.bind && selCmpt.bind !== 'scales';\n  },\n\n  topLevelSignals: function(model, selCmpt, signals) {\n    const name = selCmpt.name;\n    const proj = selCmpt.project;\n    const bind = selCmpt.bind;\n    const datum = nearest.has(selCmpt) ?\n      '(item().isVoronoi ? datum.datum : datum)' : 'datum';\n\n    proj.forEach(function(p) {\n      const sgname = varName(`${name}_${p.field}`);\n      const hasSignal = signals.filter((s) => s.name === sgname);\n      if (!hasSignal.length) {\n        signals.unshift({\n          name: sgname,\n          value: '',\n          on: [{\n            events: selCmpt.events,\n            update: `datum && item().mark.marktype !== 'group' ? ${datum}[${stringValue(p.field)}] : null`\n          }],\n          bind: bind[p.field] || bind[p.channel] || bind\n        });\n      }\n    });\n\n    return signals;\n  },\n\n  signals: function(model, selCmpt, signals) {\n    const name = selCmpt.name;\n    const proj = selCmpt.project;\n    const signal = signals.filter((s) => s.name === name + TUPLE)[0];\n    const fields = proj.map((p) => stringValue(p.field)).join(', ');\n    const values = proj.map((p) => varName(`${name}_${p.field}`));\n\n    signal.update = `${values.join(' && ')} ? {fields: [${fields}], values: [${values.join(', ')}]} : null`;\n    delete signal.value;\n    delete signal.on;\n\n    return signals;\n  }\n};\n\nexport {inputBindings as default};\n","import {spatialProjections} from '../selection';\nimport {TransformCompiler} from './transforms';\n\nconst VORONOI = 'voronoi';\n\nconst nearest:TransformCompiler = {\n  has: function(selCmpt) {\n    return selCmpt.type !== 'interval' && selCmpt.nearest;\n  },\n\n  marks: function(model, selCmpt, marks, selMarks) {\n    const {x, y} = spatialProjections(selCmpt);\n    const mark = marks[0];\n    const index = selMarks.indexOf(mark);\n    const isPathgroup = mark.name === model.getName('pathgroup');\n    const exists = ((m: any) => m.name && m.name.indexOf(VORONOI) >= 0);\n    const cellDef = {\n      name: model.getName(VORONOI),\n      type: 'path',\n      from: {data: model.getName('marks')},\n      encode: {\n        enter: {\n          fill: {value: 'transparent'},\n          strokeWidth: {value: 0.35},\n          stroke: {value: 'transparent'},\n          isVoronoi: {value: true}\n        }\n      },\n      transform: [{\n        type: 'voronoi',\n        x: (x || (!x && !y)) ? 'datum.x' : {expr: '0'},\n        y: (y || (!x && !y)) ? 'datum.y' : {expr: '0'},\n        size: [model.getSizeSignalRef('width'), model.getSizeSignalRef('height')]\n      }]\n    };\n\n    if (isPathgroup && !mark.marks.filter(exists).length) {\n      mark.marks.push(cellDef);\n      selMarks.splice(index, 1, mark);\n    } else if (!isPathgroup && !selMarks.filter(exists).length) {\n      selMarks.splice(index + 1, 0, cellDef);\n    }\n\n    return selMarks;\n  }\n};\n\nexport {nearest as default};\n","import {Channel, SingleDefChannel} from '../../../channel';\nimport * as log from '../../../log';\nimport {SelectionDef} from '../../../selection';\nimport {keys} from '../../../util';\nimport {TimeUnitComponent, TimeUnitNode} from '../../data/timeunit';\nimport {TransformCompiler} from './transforms';\n\nconst project:TransformCompiler = {\n  has: function(selDef: SelectionDef) {\n    return selDef.fields !== undefined || selDef.encodings !== undefined;\n  },\n\n  parse: function(model, selDef, selCmpt) {\n    const channels = {};\n    const timeUnits: {[key: string]: TimeUnitComponent} = {};\n\n    // TODO: find a possible channel mapping for these fields.\n    (selDef.fields || []).forEach((field) => channels[field] = null);\n\n    (selDef.encodings || []).forEach((channel: SingleDefChannel) => {\n      const fieldDef = model.fieldDef(channel);\n      if (fieldDef) {\n        if (fieldDef.timeUnit) {\n          const tuField = model.field(channel);\n          channels[tuField] = channel;\n\n          // Construct TimeUnitComponents which will be combined into a\n          // TimeUnitNode. This node may need to be inserted into the\n          // dataflow if the selection is used across views that do not\n          // have these time units defined.\n          timeUnits[tuField] = {\n            as: tuField,\n            field: fieldDef.field,\n            timeUnit: fieldDef.timeUnit\n          };\n        } else {\n          channels[fieldDef.field] = channel;\n        }\n      } else {\n        log.warn(log.message.cannotProjectOnChannelWithoutField(channel));\n      }\n    });\n\n    const projection = selCmpt.project || (selCmpt.project = []);\n    for (const field in channels) {\n      if (channels.hasOwnProperty(field)) {\n        projection.push({field: field, channel: channels[field]});\n      }\n    }\n\n    const fields = selCmpt.fields || (selCmpt.fields = {});\n    projection.filter((p) => p.channel).forEach((p) => fields[p.channel] = p.field);\n\n    if (keys(timeUnits).length) {\n      selCmpt.timeUnit = new TimeUnitNode(timeUnits);\n    }\n  }\n};\n\nexport {project as default};\n","import {Channel} from '../../../channel';\nimport {warn} from '../../../log';\nimport {hasContinuousDomain, isBinScale} from '../../../scale';\nimport {stringValue} from '../../../util';\nimport {UnitModel} from '../../unit';\nimport {channelSignalName, MODIFY, TUPLE} from '../selection';\nimport {TransformCompiler} from './transforms';\n\n\nconst scaleBindings:TransformCompiler = {\n  has: function(selCmpt) {\n    return selCmpt.type === 'interval' && selCmpt.resolve === 'global' &&\n      selCmpt.bind && selCmpt.bind === 'scales';\n  },\n\n  parse: function(model, selDef, selCmpt) {\n    const bound: Channel[] = selCmpt.scales = [];\n\n    selCmpt.project.forEach(function(p) {\n      const channel = p.channel;\n      const scale = model.getScaleComponent(channel);\n      const scaleType = scale ? scale.get('type') : undefined;\n\n      if (!scale || !hasContinuousDomain(scaleType) || isBinScale(scaleType)) {\n        warn('Scale bindings are currently only supported for scales with unbinned, continuous domains.');\n        return;\n      }\n\n      scale.set('domainRaw', {signal: channelSignalName(selCmpt, channel, 'data')}, true);\n      bound.push(channel);\n    });\n  },\n\n  topLevelSignals: function(model, selCmpt, signals) {\n    // Top-level signals are only needed when coordinating composed views.\n    if (!model.parent) {\n      return signals;\n    }\n\n    const channels = selCmpt.scales.filter((channel) => {\n      return !(signals.filter((s) => s.name === channelSignalName(selCmpt, channel, 'data')).length);\n    });\n\n    return signals.concat(channels.map((channel) => {\n      return {name: channelSignalName(selCmpt, channel, 'data')};\n    }));\n  },\n\n  signals: function(model, selCmpt, signals) {\n    // Nested signals need only push to top-level signals when within composed views.\n    if (model.parent) {\n      selCmpt.scales.forEach(function(channel) {\n        const signal = signals.filter((s) => s.name === channelSignalName(selCmpt, channel, 'data'))[0];\n        signal.push = 'outer';\n        delete signal.value;\n        delete signal.update;\n      });\n    }\n\n    return signals;\n  }\n};\n\nexport {scaleBindings as default};\n\nexport function domain(model: UnitModel, channel: Channel) {\n  const scale = stringValue(model.scaleName(channel));\n  return `domain(${scale})`;\n}\n","import {stringValue} from '../../../util';\nimport {TUPLE, unitName} from '../selection';\nimport {TransformCompiler} from './transforms';\n\n\nconst TOGGLE = '_toggle';\n\nconst toggle:TransformCompiler = {\n  has: function(selCmpt) {\n    return selCmpt.type === 'multi' && selCmpt.toggle;\n  },\n\n  signals: function(model, selCmpt, signals) {\n    return signals.concat({\n      name: selCmpt.name + TOGGLE,\n      value: false,\n      on: [{events: selCmpt.events, update: selCmpt.toggle}]\n    });\n  },\n\n  modifyExpr: function(model, selCmpt, expr) {\n    const tpl = selCmpt.name + TUPLE;\n    const signal = selCmpt.name + TOGGLE;\n\n    return `${signal} ? null : ${tpl}, ` +\n      (selCmpt.resolve === 'global' ?\n        `${signal} ? null : true, ` :\n        `${signal} ? null : {unit: ${unitName(model)}}, `) +\n      `${signal} ? ${tpl} : null`;\n  }\n};\n\nexport {toggle as default};\n","import {SelectionDef} from '../../../selection';\nimport {Dict} from '../../../util';\nimport {Model} from '../../model';\nimport {UnitModel} from '../../unit';\nimport {SelectionComponent} from '../selection';\n\n\nexport interface TransformCompiler {\n  has: (selCmpt: SelectionComponent | SelectionDef) => boolean;\n  parse?: (model: UnitModel, def: SelectionDef, selCmpt: SelectionComponent) => void;\n  signals?: (model: UnitModel, selCmpt: SelectionComponent, signals: any[]) => any[];\n  topLevelSignals?: (model: Model, selCmpt: SelectionComponent, signals: any[]) => any[];\n  // tupleExpr?: (model: UnitModel, selCmpt: SelectionComponent, expr: string) => string;\n  modifyExpr?: (model: UnitModel, selCmpt: SelectionComponent, expr: string) => string;\n  marks?: (model: UnitModel, selCmpt:SelectionComponent, marks: any[], selMarks: any[]) => any[];\n}\n\nimport inputs from './inputs';\nimport nearest from './nearest';\nimport project from './project';\nimport scales from './scales';\nimport toggle from './toggle';\nimport translate from './translate';\nimport zoom from './zoom';\nconst compilers: Dict<TransformCompiler> = {project, toggle, scales,\n  translate, zoom, inputs, nearest};\n\nexport function forEachTransform(selCmpt: SelectionComponent, cb: (tx: TransformCompiler) => void) {\n  for (const t in compilers) {\n    if (compilers[t].has(selCmpt)) {\n      cb(compilers[t]);\n    }\n  }\n}\n","import {selector as parseSelector} from 'vega-event-selector';\nimport {Channel, ScaleChannel, X, Y} from '../../../channel';\nimport {stringValue} from '../../../util';\nimport {BRUSH as INTERVAL_BRUSH} from '../interval';\nimport {channelSignalName, SelectionComponent, spatialProjections} from '../selection';\nimport {UnitModel} from './../../unit';\nimport {default as scalesCompiler, domain} from './scales';\nimport {TransformCompiler} from './transforms';\n\n\nconst ANCHOR = '_translate_anchor';\nconst DELTA  = '_translate_delta';\n\nconst translate:TransformCompiler = {\n  has: function(selCmpt) {\n    return selCmpt.type === 'interval' && selCmpt.translate;\n  },\n\n  signals: function(model, selCmpt, signals) {\n    const name = selCmpt.name;\n    const hasScales = scalesCompiler.has(selCmpt);\n    const anchor = name + ANCHOR;\n    const {x, y} = spatialProjections(selCmpt);\n    let events = parseSelector(selCmpt.translate, 'scope');\n\n    if (!hasScales) {\n      events = events.map((e) => (e.between[0].markname = name + INTERVAL_BRUSH, e));\n    }\n\n    signals.push({\n      name: anchor,\n      value: {},\n      on: [{\n        events: events.map((e) => e.between[0]),\n        update: '{x: x(unit), y: y(unit)' +\n          (x !== null ? ', extent_x: ' + (hasScales ? domain(model, X) :\n              `slice(${channelSignalName(selCmpt, 'x', 'visual')})`) : '') +\n\n          (y !== null ? ', extent_y: ' + (hasScales ? domain(model, Y) :\n              `slice(${channelSignalName(selCmpt, 'y', 'visual')})`) : '') + '}'\n      }]\n    }, {\n      name: name + DELTA,\n      value: {},\n      on: [{\n        events: events,\n        update: `{x: ${anchor}.x - x(unit), y: ${anchor}.y - y(unit)}`\n      }]\n    });\n\n    if (x !== null) {\n      onDelta(model, selCmpt, X, 'width', signals);\n    }\n\n    if (y !== null) {\n      onDelta(model, selCmpt, Y, 'height', signals);\n    }\n\n    return signals;\n  }\n};\n\nexport {translate as default};\n\nfunction onDelta(model: UnitModel, selCmpt: SelectionComponent, channel: ScaleChannel, size: 'width' | 'height', signals: any[]) {\n  const name = selCmpt.name;\n  const hasScales = scalesCompiler.has(selCmpt);\n  const signal:any = signals.filter((s:any) => {\n    return s.name === channelSignalName(selCmpt, channel, hasScales ? 'data' : 'visual');\n  })[0];\n  const anchor = name + ANCHOR;\n  const delta  = name + DELTA;\n  const sizeSg = model.getSizeSignalRef(size).signal;\n  const scaleCmpt = model.getScaleComponent(channel);\n  const scaleType = scaleCmpt.get('type');\n  const sign = hasScales && channel === X ? '-' : ''; // Invert delta when panning x-scales.\n  const extent = `${anchor}.extent_${channel}`;\n  const offset = `${sign}${delta}.${channel} / ` + (hasScales ? `${sizeSg}` : `span(${extent})`);\n  const panFn = !hasScales ? 'panLinear' :\n    scaleType === 'log' ? 'panLog' :\n    scaleType === 'pow' ? 'panPow' : 'panLinear';\n  const update = `${panFn}(${extent}, ${offset}` +\n    (hasScales && scaleType === 'pow' ? `, ${scaleCmpt.get('exponent') || 1}` : '') + ')';\n\n  signal.on.push({\n    events: {signal: delta},\n    update: hasScales ? update : `clampRange(${update}, 0, ${sizeSg})`\n  });\n}\n","import {selector as parseSelector} from 'vega-event-selector';\nimport {Channel, ScaleChannel, X, Y} from '../../../channel';\nimport {stringValue} from '../../../util';\nimport {BRUSH as INTERVAL_BRUSH} from '../interval';\nimport {channelSignalName, SelectionComponent, spatialProjections} from '../selection';\nimport {UnitModel} from './../../unit';\nimport {default as scalesCompiler, domain} from './scales';\nimport {TransformCompiler} from './transforms';\n\n\nconst ANCHOR = '_zoom_anchor';\nconst DELTA  = '_zoom_delta';\n\nconst zoom:TransformCompiler = {\n  has: function(selCmpt) {\n    return selCmpt.type === 'interval' && selCmpt.zoom;\n  },\n\n  signals: function(model, selCmpt, signals) {\n    const name = selCmpt.name;\n    const hasScales = scalesCompiler.has(selCmpt);\n    const delta = name + DELTA;\n    const {x, y} = spatialProjections(selCmpt);\n    const sx = stringValue(model.scaleName(X));\n    const sy = stringValue(model.scaleName(Y));\n    let events = parseSelector(selCmpt.zoom, 'scope');\n\n    if (!hasScales) {\n      events = events.map((e) => (e.markname = name + INTERVAL_BRUSH, e));\n    }\n\n    signals.push({\n      name: name + ANCHOR,\n      on: [{\n        events: events,\n        update: !hasScales ? `{x: x(unit), y: y(unit)}` :\n          '{' + [\n            (sx ? `x: invert(${sx}, x(unit))` : ''),\n            (sy ? `y: invert(${sy}, y(unit))` : '')\n          ].filter((expr) => !!expr).join(', ') + '}'\n      }]\n    }, {\n      name: delta,\n      on: [{\n        events: events,\n        force: true,\n        update: 'pow(1.001, event.deltaY * pow(16, event.deltaMode))'\n      }]\n    });\n\n    if (x !== null) {\n      onDelta(model, selCmpt, 'x', 'width', signals);\n    }\n\n    if (y !== null) {\n      onDelta(model, selCmpt, 'y', 'height', signals);\n    }\n\n    return signals;\n  }\n};\n\nexport {zoom as default};\n\nfunction onDelta(model: UnitModel, selCmpt: SelectionComponent, channel: ScaleChannel, size: 'width' | 'height', signals: any[]) {\n  const name = selCmpt.name;\n  const hasScales = scalesCompiler.has(selCmpt);\n  const signal:any = signals.filter((s:any) => {\n    return s.name === channelSignalName(selCmpt, channel, hasScales ? 'data' : 'visual');\n  })[0];\n  const sizeSg = model.getSizeSignalRef(size).signal;\n  const scaleCmpt = model.getScaleComponent(channel);\n  const scaleType = scaleCmpt.get('type');\n  const base = hasScales ? domain(model, channel) : signal.name;\n  const delta  = name + DELTA;\n  const anchor = `${name}${ANCHOR}.${channel}`;\n  const zoomFn = !hasScales ? 'zoomLinear' :\n    scaleType === 'log' ? 'zoomLog' :\n    scaleType === 'pow' ? 'zoomPow' : 'zoomLinear';\n  const update = `${zoomFn}(${base}, ${anchor}, ${delta}` +\n    (hasScales && scaleType === 'pow' ? `, ${scaleCmpt.get('exponent') || 1}` : '') + ')';\n\n  signal.on.push({\n    events: {signal: delta},\n    update: hasScales ? update : `clampRange(${update}, 0, ${sizeSg})`\n  });\n}\n","import {Axis} from '../axis';\nimport {Legend} from '../legend';\nimport * as log from '../log';\nimport {Scale} from '../scale';\nimport {duplicate} from '../util';\n\n/**\n * Generic class for storing properties that are explicitly specified\n * and implicitly determined by the compiler.\n * This is important for scale/axis/legend merging as\n * we want to prioritize properties that users explicitly specified.\n */\nexport class Split<T extends object> {\n  constructor(public readonly explicit: T = {} as T, public readonly implicit: T = {} as T) {}\n\n  public clone() {\n    return new Split(duplicate(this.explicit), duplicate(this.implicit));\n  }\n\n  public combine(): T {\n    // FIXME remove \"as any\".\n    // Add \"as any\" to avoid an error \"Spread types may only be created from object types\".\n    return {\n      ...this.explicit as any, // Explicit properties comes first\n      ...this.implicit as any\n    };\n  }\n\n  public get<K extends keyof T>(key: K): T[K] {\n    // Explicit has higher precedence\n    return this.explicit[key] !== undefined ? this.explicit[key] : this.implicit[key];\n  }\n\n  public getWithExplicit<K extends keyof T>(key: K): Explicit<T[K]> {\n    // Explicit has higher precedence\n    if (this.explicit[key] !== undefined) {\n      return {explicit: true, value: this.explicit[key]};\n    } else if (this.implicit[key] !== undefined) {\n      return {explicit: false, value: this.implicit[key]};\n    }\n    return {explicit: false, value: undefined};\n  }\n\n  public setWithExplicit<K extends keyof T>(key: K, value: Explicit<T[K]>) {\n    if (value.value !== undefined) {\n      this.set(key, value.value, value.explicit);\n    }\n  }\n\n  public set<K extends keyof T>(key: K, value: T[K], explicit: boolean) {\n    delete this[explicit ? 'implicit' : 'explicit'][key];\n    this[explicit ? 'explicit' : 'implicit'][key] = value;\n    return this;\n  }\n\n  public copyKeyFromSplit<S extends object, K extends keyof (T|S)>(key: K, s: Split<S>) {\n    // Explicit has higher precedence\n    if (s.explicit[key] !== undefined) {\n      this.set(key, s.explicit[key], true);\n    } else if (s.implicit[key] !== undefined) {\n      this.set(key, s.implicit[key], false);\n    }\n  }\n  public copyKeyFromObject<S, K extends keyof (T|S)>(key: K, s: S) {\n    // Explicit has higher precedence\n    if (s[key] !== undefined) {\n      this.set(key, s[key], true);\n    }\n  }\n\n  public extend(mixins: T, explicit: boolean) {\n    return new Split<T>(\n      explicit ? {\n        ...this.explicit as any,\n        ...mixins as any\n      } : this.explicit,\n      explicit ? this.implicit : {\n        ...this.implicit as any,\n        ...mixins as any\n      }\n    );\n  }\n}\n\nexport interface Explicit<T> {\n  explicit: boolean;\n  value: T;\n}\n\n\nexport function makeExplicit<T>(value: T): Explicit<T> {\n  return {\n    explicit: true,\n    value\n  };\n}\n\nexport function makeImplicit<T>(value: T): Explicit<T> {\n  return {\n    explicit: false,\n    value\n  };\n}\n\nexport function tieBreakByComparing<S, T>(compare: (v1: T, v2: T) => number) {\n  return (v1: Explicit<T>, v2: Explicit<T>, property: keyof S, propertyOf: string): Explicit<T> => {\n    const diff = compare(v1.value, v2.value);\n    if (diff > 0) {\n      return v1;\n    } else if (diff < 0) {\n      return v2;\n    }\n    return defaultTieBreaker<S, T>(v1, v2, property, propertyOf);\n  };\n}\n\nexport function defaultTieBreaker<S, T>(v1: Explicit<T>, v2: Explicit<T>, property: keyof S, propertyOf: string) {\n  if (v1.explicit && v2.explicit) {\n    log.warn(log.message.mergeConflictingProperty(property, propertyOf, v1.value, v2.value));\n  }\n  // If equal score, prefer v1.\n  return v1;\n}\n\nexport function mergeValuesWithExplicit<S, T>(\n    v1: Explicit<T>, v2: Explicit<T>,\n    property: keyof S,\n    propertyOf: 'scale' | 'axis' | 'legend' | '',\n    tieBreaker: (v1: Explicit<T>, v2: Explicit<T>, property: keyof S, propertyOf: string) => Explicit<T> = defaultTieBreaker\n  ) {\n  if (v1 === undefined || v1.value === undefined) {\n    // For first run\n    return v2;\n  }\n\n  if (v1.explicit && !v2.explicit) {\n    return v1;\n  } else if (v2.explicit && !v1.explicit) {\n    return v2;\n  } else if (v1.value === v2.value) {\n    return v1;\n  } else {\n    return tieBreaker(v1, v2, property, propertyOf);\n  }\n}\n","import {Axis} from '../axis';\nimport {\n  Channel,\n  isScaleChannel,\n  NONSPATIAL_SCALE_CHANNELS,\n  SCALE_CHANNELS,\n  ScaleChannel,\n  SingleDefChannel,\n  X,\n  Y,\n} from '../channel';\nimport {Config} from '../config';\nimport * as vlEncoding from '../encoding';\nimport {Encoding, normalizeEncoding} from '../encoding';\nimport {ChannelDef, field, FieldDef, FieldRefOption, getFieldDef, isConditionalDef, isFieldDef} from '../fielddef';\nimport {Legend} from '../legend';\nimport {isMarkDef, Mark, MarkDef} from '../mark';\nimport {Domain, hasDiscreteDomain, Scale} from '../scale';\nimport {SelectionDef} from '../selection';\nimport {SortField, SortOrder} from '../sort';\nimport {LayoutSizeMixins, UnitSpec} from '../spec';\nimport {stack, StackProperties} from '../stack';\nimport {Dict, duplicate, extend} from '../util';\nimport {VgData, VgEncodeEntry, VgLayout, VgScale, VgSignal} from '../vega.schema';\nimport {AxisIndex} from './axis/component';\nimport {parseUnitAxis} from './axis/parse';\nimport {parseData} from './data/parse';\nimport {assembleLayoutSignals} from './layoutsize/assemble';\nimport {parseUnitLayoutSize} from './layoutsize/parse';\nimport {LegendIndex} from './legend/component';\nimport {initEncoding} from './mark/init';\nimport {parseMarkGroup} from './mark/mark';\nimport {isLayerModel, Model, ModelWithField} from './model';\nimport {RepeaterValue, replaceRepeaterInEncoding} from './repeater';\nimport {assembleScalesForModel} from './scale/assemble';\nimport {ScaleIndex} from './scale/component';\nimport {\n  assembleTopLevelSignals,\n  assembleUnitSelectionData,\n  assembleUnitSelectionMarks,\n  assembleUnitSelectionSignals,\n  parseUnitSelection,\n} from './selection/selection';\n\n\n/**\n * Internal model of Vega-Lite specification for the compiler.\n */\nexport class UnitModel extends ModelWithField {\n  public readonly type: 'unit' = 'unit';\n  public readonly markDef: MarkDef;\n  public readonly encoding: Encoding<string>;\n\n  public readonly specifiedScales: ScaleIndex = {};\n\n  public readonly stack: StackProperties;\n\n  protected specifiedAxes: AxisIndex = {};\n\n  protected specifiedLegends: LegendIndex = {};\n\n  public readonly selection: Dict<SelectionDef> = {};\n  public children: Model[] = [];\n\n  constructor(spec: UnitSpec, parent: Model, parentGivenName: string,\n    parentGivenSize: LayoutSizeMixins = {}, repeater: RepeaterValue, config: Config) {\n\n    super(spec, parent, parentGivenName, config, {});\n    this.initSize({\n      ...parentGivenSize,\n      ...(spec.width ? {width: spec.width} : {}),\n      ...(spec.height ? {height: spec.height} : {})\n    });\n\n    this.markDef = isMarkDef(spec.mark) ? {...spec.mark} : {type: spec.mark};\n    const mark = this.markDef.type;\n    const encoding = this.encoding = normalizeEncoding(replaceRepeaterInEncoding(spec.encoding || {}, repeater), mark);\n\n    // calculate stack properties\n    this.stack = stack(mark, encoding, this.config.stack);\n    this.specifiedScales = this.initScales(mark, encoding);\n\n    // FIXME: this one seems out of place!\n    this.encoding = initEncoding(this.markDef, encoding, this.stack, this.config);\n\n    this.specifiedAxes = this.initAxes(encoding);\n    this.specifiedLegends = this.initLegend(encoding);\n\n    // Selections will be initialized upon parse.\n    this.selection = spec.selection;\n  }\n\n  /**\n   * Return specified Vega-lite scale domain for a particular channel\n   * @param channel\n   */\n  public scaleDomain(channel: ScaleChannel): Domain {\n    const scale = this.specifiedScales[channel];\n    return scale ? scale.domain : undefined;\n  }\n\n  public hasDiscreteDomain(channel: Channel) {\n    if (isScaleChannel(channel)) {\n      const scaleCmpt = this.getScaleComponent(channel);\n      return scaleCmpt && hasDiscreteDomain(scaleCmpt.get('type'));\n    }\n    return false;\n  }\n\n\n  public sort(channel: Channel): SortField | SortOrder {\n    return (this.getMapping()[channel] || {}).sort;\n  }\n\n  public axis(channel: Channel): Axis {\n    return this.specifiedAxes[channel];\n  }\n\n  public legend(channel: Channel): Legend {\n    return this.specifiedLegends[channel];\n  }\n\n  private initScales(mark: Mark, encoding: Encoding<string>): ScaleIndex {\n    return SCALE_CHANNELS.reduce((scales, channel) => {\n      let fieldDef: FieldDef<string>;\n      let specifiedScale: Scale;\n\n      const channelDef = encoding[channel];\n\n      if (isFieldDef(channelDef)) {\n        fieldDef = channelDef;\n        specifiedScale = channelDef.scale;\n      } else if (isConditionalDef(channelDef) && isFieldDef(channelDef.condition)) {\n        fieldDef = channelDef.condition;\n        specifiedScale = channelDef.condition.scale;\n      } else if (channel === 'x') {\n        fieldDef = getFieldDef(encoding.x2);\n      } else if (channel === 'y') {\n        fieldDef = getFieldDef(encoding.y2);\n      }\n\n      if (fieldDef) {\n        scales[channel] = specifiedScale || {};\n      }\n      return scales;\n    }, {} as ScaleIndex);\n  }\n\n  private initAxes(encoding: Encoding<string>): AxisIndex {\n    return [X, Y].reduce(function(_axis, channel) {\n      // Position Axis\n\n      // TODO: handle ConditionFieldDef\n      const channelDef = encoding[channel];\n      if (isFieldDef(channelDef) ||\n          (channel === X && isFieldDef(encoding.x2)) ||\n          (channel === Y && isFieldDef(encoding.y2))) {\n\n        const axisSpec = isFieldDef(channelDef) ? channelDef.axis : null;\n\n        // We no longer support false in the schema, but we keep false here for backward compatability.\n        if (axisSpec !== null && axisSpec !== false) {\n          _axis[channel] = {\n            ...axisSpec\n          };\n        }\n      }\n      return _axis;\n    }, {});\n  }\n\n  private initLegend(encoding: Encoding<string>): LegendIndex {\n    return NONSPATIAL_SCALE_CHANNELS.reduce(function(_legend, channel) {\n      const channelDef = encoding[channel];\n      if (channelDef) {\n        const legend = isFieldDef(channelDef) ? channelDef.legend :\n          (channelDef.condition && isFieldDef(channelDef.condition)) ? channelDef.condition.legend : null;\n\n        if (legend !== null && legend !== false) {\n          _legend[channel] = {...legend};\n        }\n      }\n\n      return _legend;\n    }, {});\n  }\n\n  public parseData() {\n    this.component.data = parseData(this);\n  }\n\n  public parseLayoutSize() {\n    parseUnitLayoutSize(this);\n  }\n\n  public parseSelection() {\n    this.component.selection = parseUnitSelection(this, this.selection);\n  }\n\n  public parseMarkGroup() {\n    this.component.mark = parseMarkGroup(this);\n  }\n\n  public parseAxisAndHeader() {\n    this.component.axes = parseUnitAxis(this);\n  }\n\n  public assembleScales(): VgScale[] {\n    return assembleScalesForModel(this);\n  }\n\n  public assembleSelectionTopLevelSignals(signals: any[]): VgSignal[] {\n    return assembleTopLevelSignals(this, signals);\n  }\n\n  public assembleSelectionSignals(): VgSignal[] {\n    return assembleUnitSelectionSignals(this, []);\n  }\n\n  public assembleSelectionData(data: VgData[]): VgData[] {\n    return assembleUnitSelectionData(this, data);\n  }\n\n  public assembleLayout(): VgLayout {\n    return null;\n  }\n\n  public assembleLayoutSignals(): VgSignal[] {\n    return assembleLayoutSignals(this);\n  }\n\n  public assembleMarks() {\n    let marks = this.component.mark || [];\n\n    // If this unit is part of a layer, selections should augment\n    // all in concert rather than each unit individually. This\n    // ensures correct interleaving of clipping and brushed marks.\n    if (!this.parent || !isLayerModel(this.parent)) {\n      marks = assembleUnitSelectionMarks(this, marks);\n    }\n\n    return marks.map(this.correctDataNames);\n  }\n\n  public assembleLayoutSize(): VgEncodeEntry {\n    return {\n      width: this.getSizeSignalRef('width'),\n      height: this.getSizeSignalRef('height')\n    };\n  }\n\n  protected getMapping() {\n    return this.encoding;\n  }\n\n  public toSpec(excludeConfig?: any, excludeData?: any) {\n    const encoding = duplicate(this.encoding);\n    let spec: any;\n\n    spec = {\n      mark: this.markDef,\n      encoding: encoding\n    };\n\n    if (!excludeConfig) {\n      spec.config = duplicate(this.config);\n    }\n\n    if (!excludeData) {\n      spec.data = duplicate(this.data);\n    }\n\n    // remove defaults\n    return spec;\n  }\n\n  public mark(): Mark {\n    return this.markDef.type;\n  }\n\n  public channelHasField(channel: Channel) {\n    return vlEncoding.channelHasField(this.encoding, channel);\n  }\n\n  public fieldDef(channel: SingleDefChannel): FieldDef<string> {\n    const channelDef = this.encoding[channel] as ChannelDef<string>;\n    return getFieldDef(channelDef);\n  }\n\n  /** Get \"field\" reference for vega */\n  public field(channel: SingleDefChannel, opt: FieldRefOption = {}) {\n    const fieldDef = this.fieldDef(channel);\n\n    if (!fieldDef) {\n      return undefined;\n    }\n\n    if (fieldDef.bin) { // bin has default suffix that depends on scaleType\n      opt = extend({\n        binSuffix: this.hasDiscreteDomain(channel) ? 'range' : 'start'\n      }, opt);\n    }\n\n    return field(fieldDef, opt);\n  }\n}\n","import {isNumber} from 'vega-util';\nimport {Channel} from '../channel';\nimport {Config} from '../config';\nimport {reduce} from '../encoding';\nimport {isRepeatRef} from '../fielddef';\nimport {BinTransform, CalculateTransform, Summarize, SummarizeTransform, TimeUnitTransform} from '../transform';\nimport {Encoding, forEach} from './../encoding';\nimport {field, Field, FieldDef, isContinuous, isDiscrete, isFieldDef, PositionFieldDef} from './../fielddef';\nimport * as log from './../log';\nimport {MarkConfig, MarkDef} from './../mark';\nimport {GenericUnitSpec, LayerSpec} from './../spec';\nimport {Orient} from './../vega.schema';\n\n\nexport const BOXPLOT: 'box-plot' = 'box-plot';\nexport type BOXPLOT = typeof BOXPLOT;\nexport type BoxPlotStyle = 'boxWhisker' | 'box' | 'boxMid';\n\n\nexport interface BoxPlotDef {\n  type: BOXPLOT;\n  orient?: Orient;\n  extent?: 'min-max' | number;\n}\n\nexport function isBoxPlotDef(mark: BOXPLOT | BoxPlotDef): mark is BoxPlotDef {\n  return !!mark['type'];\n}\n\nexport const BOXPLOT_STYLES: BoxPlotStyle[] = ['boxWhisker', 'box', 'boxMid'];\n\nexport interface BoxPlotConfig extends MarkConfig {\n  /** Size of the box and mid tick of a box plot */\n  size?: number;\n}\n\nexport interface BoxPlotConfigMixins {\n  /** Box Config */\n  box?: BoxPlotConfig;\n\n  boxWhisker?: MarkConfig;\n\n  boxMid?: MarkConfig;\n}\n\nexport const VL_ONLY_BOXPLOT_CONFIG_PROPERTY_INDEX: {\n  [k in keyof BoxPlotConfigMixins]?: (keyof BoxPlotConfigMixins[k])[]\n} = {\n  box: ['size']\n};\n\nconst supportedChannels: Channel[] = ['x', 'y', 'color', 'detail', 'opacity', 'size'];\nexport function filterUnsupportedChannels(spec: GenericUnitSpec<Encoding<string>, BOXPLOT | BoxPlotDef>): GenericUnitSpec<Encoding<string>, BOXPLOT | BoxPlotDef> {\n  return {\n    ...spec,\n    encoding: reduce(spec.encoding, (newEncoding, fieldDef, channel) => {\n      if (supportedChannels.indexOf(channel) > -1) {\n        newEncoding[channel] = fieldDef;\n      } else {\n        log.warn(log.message.incompatibleChannel(channel, BOXPLOT));\n      }\n      return newEncoding;\n    }, {}),\n  };\n}\n\nexport function normalizeBoxPlot(spec: GenericUnitSpec<Encoding<string>, BOXPLOT | BoxPlotDef>, config: Config): LayerSpec {\n  spec = filterUnsupportedChannels(spec);\n  // TODO: use selection\n  const {mark, encoding, selection, ...outerSpec} = spec;\n\n  let kIQRScalar: number = undefined;\n  if (isBoxPlotDef(mark)) {\n    if (mark.extent) {\n      if(isNumber(mark.extent)) {\n        kIQRScalar = mark.extent;\n      }\n    }\n  }\n  const isMinMax = kIQRScalar === undefined;\n\n  const orient: Orient = boxOrient(spec);\n  const {transform, continuousAxisChannelDef, continuousAxis, encodingWithoutContinuousAxis} = boxParams(spec, orient, kIQRScalar);\n\n  const {size, color, ...nonPositionEncodingWithoutColorSize} = encodingWithoutContinuousAxis;\n  const sizeMixins = size ? {size} : {size: {value: config.box.size}};\n\n  const continuousAxisScaleAndAxis = {};\n  if (continuousAxisChannelDef.scale) {\n    continuousAxisScaleAndAxis['scale'] = continuousAxisChannelDef.scale;\n  }\n  if (continuousAxisChannelDef.axis) {\n    continuousAxisScaleAndAxis['axis'] = continuousAxisChannelDef.axis;\n  }\n\n  return {\n    ...outerSpec,\n    transform,\n    layer: [\n      { // lower whisker\n        mark: {\n          type: 'rule',\n          style: 'boxWhisker'\n        },\n        encoding: {\n          [continuousAxis]: {\n            field: 'lowerWhisker',\n            type: continuousAxisChannelDef.type,\n            ...continuousAxisScaleAndAxis\n          },\n          [continuousAxis + '2']: {\n            field: 'lowerBox',\n            type: continuousAxisChannelDef.type\n          },\n          ...nonPositionEncodingWithoutColorSize\n        }\n      }, { // upper whisker\n        mark: {\n          type: 'rule',\n          style: 'boxWhisker'\n        },\n        encoding: {\n          [continuousAxis]: {\n            field: 'upperBox',\n            type: continuousAxisChannelDef.type\n          },\n          [continuousAxis + '2']: {\n            field: 'upperWhisker',\n            type: continuousAxisChannelDef.type\n          },\n          ...nonPositionEncodingWithoutColorSize\n        }\n      }, { // box (q1 to q3)\n        ...(selection ? {selection} : {}),\n        mark: {\n          type: 'bar',\n          style: 'box'\n        },\n        encoding: {\n          [continuousAxis]: {\n            field: 'lowerBox',\n            type: continuousAxisChannelDef.type\n          },\n          [continuousAxis + '2']: {\n            field: 'upperBox',\n            type: continuousAxisChannelDef.type\n          },\n          ...encodingWithoutContinuousAxis,\n          // Need to apply size here to make sure size config get used\n          ...sizeMixins\n        }\n      }, { // mid tick\n        mark: {\n          type: 'tick',\n          style: 'boxMid'\n        },\n        encoding: {\n          [continuousAxis]: {\n            field: 'midBox',\n            type: continuousAxisChannelDef.type\n          },\n          ...nonPositionEncodingWithoutColorSize,\n          ...sizeMixins\n        }\n      }\n    ]\n  };\n}\n\nfunction boxOrient(spec: GenericUnitSpec<Encoding<Field>, BOXPLOT | BoxPlotDef>): Orient {\n  const {mark: mark, encoding: encoding, ...outerSpec} = spec;\n\n  if (isFieldDef(encoding.x) && isContinuous(encoding.x)) {\n    // x is continuous\n    if (isFieldDef(encoding.y) && isContinuous(encoding.y)) {\n      // both x and y are continuous\n      if (encoding.x.aggregate === undefined && encoding.y.aggregate === BOXPLOT) {\n        return 'vertical';\n      } else if (encoding.y.aggregate === undefined && encoding.x.aggregate === BOXPLOT) {\n        return 'horizontal';\n      } else if (encoding.x.aggregate === BOXPLOT && encoding.y.aggregate === BOXPLOT) {\n        throw new Error('Both x and y cannot have aggregate');\n      } else {\n        if (isBoxPlotDef(mark) && mark.orient) {\n          return mark.orient;\n        }\n\n        // default orientation = vertical\n        return 'vertical';\n      }\n    }\n\n    // x is continuous but y is not\n    return 'horizontal';\n  } else if (isFieldDef(encoding.y) && isContinuous(encoding.y)) {\n    // y is continuous but x is not\n    return 'vertical';\n  } else {\n    // Neither x nor y is continuous.\n    throw new Error('Need a valid continuous axis for boxplots');\n  }\n}\n\n\nfunction boxContinousAxis(spec: GenericUnitSpec<Encoding<string>, BOXPLOT | BoxPlotDef>, orient: Orient) {\n  const {mark: mark, encoding: encoding, ...outerSpec} = spec;\n\n  let continuousAxisChannelDef: PositionFieldDef<string>;\n  let continuousAxis: 'x' | 'y';\n\n  if (orient === 'vertical') {\n    continuousAxis = 'y';\n    continuousAxisChannelDef = encoding.y as FieldDef<string>; // Safe to cast because if y is not continous fielddef, the orient would not be vertical.\n  } else {\n    continuousAxis = 'x';\n    continuousAxisChannelDef = encoding.x as FieldDef<string>; // Safe to cast because if x is not continous fielddef, the orient would not be horizontal.\n  }\n\n  if (continuousAxisChannelDef && continuousAxisChannelDef.aggregate) {\n    const {aggregate, ...continuousAxisWithoutAggregate} = continuousAxisChannelDef;\n    if (aggregate !== BOXPLOT) {\n      log.warn(`Continuous axis should not have customized aggregation function ${aggregate}`);\n    }\n    continuousAxisChannelDef = continuousAxisWithoutAggregate;\n  }\n\n  return {\n    continuousAxisChannelDef,\n    continuousAxis\n  };\n}\n\nfunction boxParams(spec: GenericUnitSpec<Encoding<string>, BOXPLOT | BoxPlotDef>, orient: Orient, kIQRScalar: 'min-max' | number) {\n\n  const {continuousAxisChannelDef, continuousAxis} = boxContinousAxis(spec, orient);\n  const encoding = spec.encoding;\n\n  const isMinMax = kIQRScalar === undefined;\n  const summarize: Summarize[] = [\n    {\n      aggregate: 'q1',\n      field: continuousAxisChannelDef.field,\n      as: 'lowerBox'\n    },\n    {\n      aggregate: 'q3',\n      field: continuousAxisChannelDef.field,\n      as: 'upperBox'\n    },\n    {\n      aggregate: 'median',\n      field: continuousAxisChannelDef.field,\n      as: 'midBox'\n    }\n  ];\n  let postAggregateCalculates: CalculateTransform[] = [];\n\n  if (isMinMax) {\n    summarize.push({\n      aggregate: 'min',\n      field: continuousAxisChannelDef.field,\n      as: 'lowerWhisker'\n    });\n    summarize.push({\n      aggregate: 'max',\n      field: continuousAxisChannelDef.field,\n      as: 'upperWhisker'\n    });\n  } else {\n    postAggregateCalculates = [\n      {\n        calculate: 'datum.upperBox - datum.lowerBox',\n        as: 'IQR'\n      },\n      {\n        calculate: 'datum.lowerBox - datum.IQR * ' + kIQRScalar,\n        as: 'lowerWhisker'\n      },\n      {\n        calculate: 'datum.upperBox + datum.IQR * ' + kIQRScalar,\n        as: 'lowerWhisker'\n      }\n    ];\n  }\n\n  const groupby: string[] = [];\n  const bins: BinTransform[] = [];\n  const timeUnits: TimeUnitTransform[] = [];\n\n  const encodingWithoutContinuousAxis: Encoding<string> = {};\n  forEach(encoding, (channelDef, channel) => {\n    if (channel === continuousAxis) {\n      // Skip continuous axis as we already handle it separately\n      return;\n    }\n    if (isFieldDef(channelDef)) {\n      if (channelDef.aggregate && channelDef.aggregate !== BOXPLOT) {\n        summarize.push({\n          aggregate: channelDef.aggregate,\n          field: channelDef.field,\n          as: field(channelDef)\n        });\n      } else if (channelDef.aggregate === undefined) {\n        const transformedField = field(channelDef);\n\n        // Add bin or timeUnit transform if applicable\n        const bin = channelDef.bin;\n        if (bin) {\n          const {field} = channelDef;\n          bins.push({bin, field, as: transformedField});\n        } else if (channelDef.timeUnit) {\n          const {timeUnit, field} = channelDef;\n          timeUnits.push({timeUnit, field, as: transformedField});\n        }\n\n        groupby.push(transformedField);\n      }\n      // now the field should refer to post-transformed field instead\n      encodingWithoutContinuousAxis[channel] = {\n        field: field(channelDef),\n        type: channelDef.type\n      };\n    } else {\n      // For value def, just copy\n      encodingWithoutContinuousAxis[channel] = encoding[channel];\n    }\n  });\n\n  return {\n    transform: [].concat(\n      bins,\n      timeUnits,\n      [{summarize, groupby}],\n      postAggregateCalculates\n    ),\n    continuousAxisChannelDef,\n    continuousAxis,\n    encodingWithoutContinuousAxis\n  };\n}\n","import {Field} from '../fielddef';\nimport {Encoding} from './../encoding';\nimport {GenericUnitSpec, LayerSpec} from './../spec';\n\n\nexport const ERRORBAR: 'error-bar' = 'error-bar';\nexport type ERRORBAR = typeof ERRORBAR;\n\nexport function normalizeErrorBar(spec: GenericUnitSpec<Encoding<Field>, ERRORBAR>): LayerSpec {\n  // TODO: use selection\n  const {mark: _m, selection: _sel, encoding, ...outerSpec} = spec;\n  const {size: _s, ...encodingWithoutSize} = encoding;\n  const {x2: _x2, y2: _y2, ...encodingWithoutX2Y2} = encoding;\n  const {x: _x, y: _y, ...encodingWithoutX_X2_Y_Y2} = encodingWithoutX2Y2;\n\n  if (!encoding.x2 && !encoding.y2) {\n    throw new Error('Neither x2 or y2 provided');\n  }\n\n  return {\n    ...outerSpec,\n    layer: [\n      {\n        mark: 'rule',\n        encoding: encodingWithoutSize\n      },{ // Lower tick\n        mark: 'tick',\n        encoding: encodingWithoutX2Y2\n      }, { // Upper tick\n        mark: 'tick',\n        encoding: encoding.x2 ? {\n          x: encoding.x2,\n          y: encoding.y,\n          ...encodingWithoutX_X2_Y_Y2\n        } : {\n          x: encoding.x,\n          y: encoding.y2,\n          ...encodingWithoutX_X2_Y_Y2\n        }\n      }\n    ]\n  };\n}\n","import {Config} from './../config';\nimport {AnyMark, isMarkDef, Mark, MarkDef} from './../mark';\nimport {GenericUnitSpec, LayerSpec} from './../spec';\nimport {BOXPLOT, BOXPLOT_STYLES, BoxPlotConfigMixins, BoxPlotDef, normalizeBoxPlot, VL_ONLY_BOXPLOT_CONFIG_PROPERTY_INDEX} from './boxplot';\nimport {ERRORBAR, normalizeErrorBar} from './errorbar';\n\n\nexport {BoxPlotConfig} from './boxplot';\nexport type UnitNormalizer = (spec: GenericUnitSpec<any, any>, config: Config)=> LayerSpec;\n\n/**\n * Registry index for all composite mark's normalizer\n */\nconst normalizerRegistry: {[mark: string]: UnitNormalizer} = {};\n\nexport function add(mark: string, normalizer: UnitNormalizer) {\n  normalizerRegistry[mark] = normalizer;\n}\n\nexport function remove(mark: string) {\n  delete normalizerRegistry[mark];\n}\n\nexport type CompositeMark = BOXPLOT | ERRORBAR;\n\nexport type CompositeMarkDef = BoxPlotDef;\n\nexport type CompositeAggregate = BOXPLOT;\n\nexport const COMPOSITE_MARK_STYLES = BOXPLOT_STYLES;\nexport type CompositeMarkStyle = typeof COMPOSITE_MARK_STYLES[0];\n\nexport interface CompositeMarkConfigMixins extends BoxPlotConfigMixins {}\n\nexport const VL_ONLY_COMPOSITE_MARK_SPECIFIC_CONFIG_PROPERTY_INDEX = {\n  ...VL_ONLY_BOXPLOT_CONFIG_PROPERTY_INDEX\n};\n\nadd(BOXPLOT, normalizeBoxPlot);\nadd(ERRORBAR, normalizeErrorBar);\n\n/**\n * Transform a unit spec with composite mark into a normal layer spec.\n */\nexport function normalize(\n    // This GenericUnitSpec has any as Encoding because unit specs with composite mark can have additional encoding channels.\n    spec: GenericUnitSpec<any, AnyMark>,\n    config: Config\n  ): LayerSpec {\n\n  const mark = isMarkDef(spec.mark) ? spec.mark.type : spec.mark;\n  const normalizer = normalizerRegistry[mark];\n  if (normalizer) {\n    return normalizer(spec, config);\n  }\n\n  throw new Error(`Unregistered composite mark ${mark}`);\n}\n","import {AxisConfig, AxisConfigMixins} from './axis';\nimport {BoxPlotConfig, COMPOSITE_MARK_STYLES} from './compositemark';\nimport {CompositeMarkConfigMixins, CompositeMarkStyle, VL_ONLY_COMPOSITE_MARK_SPECIFIC_CONFIG_PROPERTY_INDEX} from './compositemark/index';\nimport {VL_ONLY_GUIDE_CONFIG} from './guide';\nimport {defaultLegendConfig, LegendConfig} from './legend';\nimport {BarConfig, Mark, MarkConfig, MarkConfigMixins, PRIMITIVE_MARKS, TextConfig, TickConfig, VL_ONLY_MARK_CONFIG_PROPERTIES, VL_ONLY_MARK_SPECIFIC_CONFIG_PROPERTY_INDEX} from './mark';\nimport * as mark from './mark';\nimport {defaultScaleConfig, ScaleConfig} from './scale';\nimport {defaultConfig as defaultSelectionConfig, SelectionConfig} from './selection';\nimport {StackOffset} from './stack';\nimport {extractTitleConfig} from './title';\nimport {TopLevelProperties} from './toplevelprops';\nimport {duplicate, isObject, keys, mergeDeep} from './util';\nimport {VgMarkConfig, VgRangeScheme, VgTitleConfig} from './vega.schema';\n\n\nexport interface CellConfig {\n  /**\n   * The default width of the single plot or each plot in a trellis plot when the visualization has a continuous (non-ordinal) x-scale or ordinal x-scale with `rangeStep` = `null`.\n   *\n   * __Default value:__ `200`\n   *\n   */\n  width?: number;\n\n  /**\n   * The default height of the single plot or each plot in a trellis plot when the visualization has a continuous (non-ordinal) y-scale with `rangeStep` = `null`.\n   *\n   * __Default value:__ `200`\n   *\n   */\n  height?: number;\n\n  /**\n   * Whether the view should be clipped.\n   */\n  clip?: boolean;\n\n  // FILL_STROKE_CONFIG\n  /**\n   * The fill color.\n   *\n   * __Default value:__ (none)\n   *\n   */\n  fill?: string;\n\n  /**\n   * The fill opacity (value between [0,1]).\n   *\n   * __Default value:__ (none)\n   *\n   */\n  fillOpacity?: number;\n\n  /**\n   * The stroke color.\n   *\n   * __Default value:__ (none)\n   *\n   */\n  stroke?: string;\n\n  /**\n   * The stroke opacity (value between [0,1]).\n   *\n   * __Default value:__ (none)\n   *\n   */\n  strokeOpacity?: number;\n\n  /**\n   * The stroke width, in pixels.\n   *\n   * __Default value:__ (none)\n   *\n   */\n  strokeWidth?: number;\n\n  /**\n   * An array of alternating stroke, space lengths for creating dashed or dotted lines.\n   *\n   * __Default value:__ (none)\n   *\n   */\n  strokeDash?: number[];\n\n  /**\n   * The offset (in pixels) into which to begin drawing with the stroke dash array.\n   *\n   * __Default value:__ (none)\n   *\n   */\n  strokeDashOffset?: number;\n}\n\nexport const defaultCellConfig: CellConfig = {\n  width: 200,\n  height: 200\n};\n\nexport type RangeConfig = (number|string)[] | VgRangeScheme | {step: number};\n\nexport interface VLOnlyConfig {\n  /**\n   * Default axis and legend title for count fields.\n   *\n   * __Default value:__ `'Number of Records'`.\n   *\n   * @type {string}\n   */\n  countTitle?: string;\n\n  /**\n   * Defines how Vega-Lite should handle invalid values (`null` and `NaN`).\n   * - If set to `\"filter\"` (default), all data items with null values are filtered.\n   * - If `null`, all data items are included. In this case, invalid values will be interpreted as zeroes.\n   */\n  invalidValues?: 'filter';\n\n  /**\n   * D3 Number format for axis labels and text tables. For example \"s\" for SI units.(in the form of [D3 number format pattern](https://github.com/mbostock/d3/wiki/Formatting)).\n   *\n   * __Default value:__ `\"s\"` (except for text marks that encode a count field, the default value is `\"d\"`).\n   *\n   */\n  numberFormat?: string;\n\n  /**\n   * Default datetime format for axis and legend labels. The format can be set directly on each axis and legend. [D3 time format pattern](https://github.com/mbostock/d3/wiki/Time-Formatting)).\n   *\n   * __Default value:__ `'%b %d, %Y'`.\n   *\n   */\n  timeFormat?: string;\n\n\n  /** Cell Config */\n  cell?: CellConfig;\n\n  /** Scale Config */\n  scale?: ScaleConfig;\n\n  /** Selection Config */\n  selection?: SelectionConfig;\n\n  /** Default stack offset for stackable mark. */\n  stack?: StackOffset;\n}\n\nexport interface StyleConfigIndex {\n  [style: string]: VgMarkConfig;\n}\n\nexport type AreaOverlay = 'line' | 'linepoint' | 'none';\n\nexport interface OverlayConfig {\n  /**\n   * Whether to overlay line with point.\n   */\n  line?: boolean;\n\n  /**\n   * Type of overlay for area mark (line or linepoint)\n   */\n  area?: AreaOverlay;\n}\n\nexport interface Config extends TopLevelProperties, VLOnlyConfig, MarkConfigMixins, CompositeMarkConfigMixins, AxisConfigMixins {\n\n  /**\n   * Scale range config, or properties defining named range arrays\n   * that can be used within scale range definitions\n   * (such as `{\"type\": \"ordinal\", \"range\": \"category\"}`).\n   * For default range that Vega-Lite adopts from Vega, see https://github.com/vega/vega-parser#scale-range-properties.\n   */\n  range?: {[name: string]: RangeConfig};\n\n  /** Legend Config */\n  legend?: LegendConfig;\n\n  /** Title Config */\n  title?: VgTitleConfig;\n\n  /** Style Config */\n  style?: StyleConfigIndex;\n\n  /**\n   * @hide\n   */\n  overlay?: OverlayConfig;\n}\n\nexport const defaultConfig: Config = {\n  padding: 5,\n  timeFormat: '%b %d, %Y',\n  countTitle: 'Number of Records',\n\n  invalidValues: 'filter',\n\n  cell: defaultCellConfig,\n\n  mark: mark.defaultMarkConfig,\n  area: {},\n  bar: mark.defaultBarConfig,\n  circle: {},\n  line: {},\n  point: {},\n  rect: {},\n  rule: {color: 'black'},\n  square: {},\n  text: {color: 'black'},\n  tick: mark.defaultTickConfig,\n\n  box: {size: 14},\n  boxWhisker: {},\n  boxMid: {color: 'white'},\n\n  scale: defaultScaleConfig,\n  axis: {\n    domainColor: '#888',\n    tickColor: '#888'\n  },\n  axisX: {},\n  axisY: {minExtent: 30},\n  axisLeft: {},\n  axisRight: {},\n  axisTop: {},\n  axisBottom: {},\n  axisBand: {},\n  legend: defaultLegendConfig,\n\n  selection: defaultSelectionConfig,\n  style: {},\n\n  title: {},\n};\n\nexport function initConfig(config: Config) {\n  return mergeDeep(duplicate(defaultConfig), config);\n}\n\nconst MARK_STYLES = ['cell'].concat(PRIMITIVE_MARKS, COMPOSITE_MARK_STYLES) as ('cell' | Mark | CompositeMarkStyle)[];\n\n\nconst VL_ONLY_CONFIG_PROPERTIES: (keyof Config)[] = [\n  'padding', 'numberFormat', 'timeFormat', 'countTitle',\n  'stack', 'scale', 'selection', 'invalidValues',\n  'overlay' as keyof Config // FIXME: Redesign and unhide this\n];\n\nconst VL_ONLY_ALL_MARK_SPECIFIC_CONFIG_PROPERTY_INDEX = {\n  cell: ['width', 'height'],\n  ...VL_ONLY_MARK_SPECIFIC_CONFIG_PROPERTY_INDEX,\n  ...VL_ONLY_COMPOSITE_MARK_SPECIFIC_CONFIG_PROPERTY_INDEX\n};\n\nexport function stripAndRedirectConfig(config: Config) {\n  config = duplicate(config);\n\n  for (const prop of VL_ONLY_CONFIG_PROPERTIES) {\n    delete config[prop];\n  }\n\n  // Remove Vega-Lite only axis/legend config\n  if (config.axis) {\n    for (const prop of VL_ONLY_GUIDE_CONFIG) {\n      delete config.axis[prop];\n    }\n  }\n  if (config.legend) {\n    for (const prop of VL_ONLY_GUIDE_CONFIG) {\n      delete config.legend[prop];\n    }\n  }\n\n  // Remove Vega-Lite only generic mark config\n  if (config.mark) {\n    for (const prop of VL_ONLY_MARK_CONFIG_PROPERTIES) {\n      delete config.mark[prop];\n    }\n  }\n\n  for (const mark of MARK_STYLES) {\n    // Remove Vega-Lite-only mark config\n    for (const prop of VL_ONLY_MARK_CONFIG_PROPERTIES) {\n      delete config[mark][prop];\n    }\n\n    // Remove Vega-Lite only mark-specific config\n    const vlOnlyMarkSpecificConfigs = VL_ONLY_ALL_MARK_SPECIFIC_CONFIG_PROPERTY_INDEX[mark];\n    if (vlOnlyMarkSpecificConfigs) {\n      for (const prop of vlOnlyMarkSpecificConfigs) {\n        delete config[mark][prop];\n      }\n    }\n\n    // Redirect mark config to config.style so that mark config only affect its own mark type\n    // without affecting other marks that share the same underlying Vega marks.\n    // For example, config.rect should not affect bar marks.\n    redirectConfig(config, mark);\n  }\n\n  // Redirect config.title -- so that title config do not\n  // affect header labels, which also uses `title` directive to implement.\n  redirectConfig(config, 'title', 'group-title');\n\n  // Remove empty config objects\n  for (const prop in config) {\n    if (isObject(config[prop]) && keys(config[prop]).length === 0) {\n      delete config[prop];\n    }\n  }\n\n  return keys(config).length > 0 ? config : undefined;\n}\n\nfunction redirectConfig(config: Config, prop: Mark | CompositeMarkStyle | 'title' | 'cell', toProp?: string) {\n  const propConfig: VgMarkConfig = prop === 'title' ? extractTitleConfig(config.title).mark : config[prop];\n\n  const style: VgMarkConfig = {\n    ...propConfig,\n    ...config.style[prop]\n  };\n  // set config.style if it is not an empty object\n  if (keys(style).length > 0) {\n    config.style[toProp || prop] = style;\n  }\n  delete config[prop];\n}\n","/*\n * Constants and utilities for data.\n */\n\nexport interface DataFormat {\n  /**\n   * If set to auto (the default), perform automatic type inference to determine the desired data types.\n   * Alternatively, a parsing directive object can be provided for explicit data types. Each property of the object corresponds to a field name, and the value to the desired data type (one of `\"number\"`, `\"boolean\"` or `\"date\"`).\n   * For example, `\"parse\": {\"modified_on\": \"date\"}` parses the `modified_on` field in each input record a Date value.\n   *\n   * For `\"date\"`, we parse data based using Javascript's [`Date.parse()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/parse).\n   * For Specific date formats can be provided (e.g., `{foo: 'date:\"%m%d%Y\"'}`), using the [d3-time-format syntax](https://github.com/d3/d3-time-format#locale_format). UTC date format parsing is supported similarly (e.g., `{foo: 'utc:\"%m%d%Y\"'}`). See more about [UTC time](timeunit.html#utc)\n   */\n  parse?: 'auto' | object;\n\n  /**\n   * The JSON property containing the desired data.\n   * This parameter can be used when the loaded JSON file may have surrounding structure or meta-data.\n   * For example `\"property\": \"values.features\"` is equivalent to retrieving `json.values.features`\n   * from the loaded JSON object.\n   */\n  property?: string;\n\n  /**\n   * The name of the TopoJSON object set to convert to a GeoJSON feature collection.\n   * For example, in a map of the world, there may be an object set named `\"countries\"`.\n   * Using the feature property, we can extract this set and generate a GeoJSON feature object for each country.\n   */\n  feature?: string;\n  /**\n   * The name of the TopoJSON object set to convert to mesh.\n   * Similar to the `feature` option, `mesh` extracts a named TopoJSON object set.\n   *  Unlike the `feature` option, the corresponding geo data is returned as a single, unified mesh instance, not as individual GeoJSON features.\n   * Extracting a mesh is useful for more efficiently drawing borders or other geographic elements that you do not need to associate with specific regions such as individual countries, states or counties.\n   */\n  mesh?: string;\n}\n\nexport interface DataUrlFormat extends DataFormat {\n  /**\n   * Type of input data: `\"json\"`, `\"csv\"`, `\"tsv\"`.\n   * The default format type is determined by the extension of the file URL.\n   * If no extension is detected, `\"json\"` will be used by default.\n   */\n  type?: DataFormatType;\n}\n\nexport type DataFormatType = 'json' | 'csv' | 'tsv' | 'topojson';\n\nexport type Data = UrlData | InlineData | NamedData;\n\nexport interface UrlData {\n  /**\n   * Data format properties\n   */\n  format?: DataUrlFormat;\n\n  /**\n   * An URL from which to load the data set. Use the `format.type` property\n   * to ensure the loaded data is correctly parsed.\n   */\n  url: string;\n}\n\nexport interface InlineData {\n  /**\n   * Data format properties\n   */\n  format?: DataFormat;\n  /**\n   * Pass array of objects instead of a url to a file.\n   */\n  values: any[];\n}\n\nexport interface NamedData {\n  /**\n   * Data format properties\n   */\n  format?: DataFormat;\n  /**\n   * Provide a placeholder name and bind data at runtime.\n   */\n  name: string;\n}\n\nexport function isUrlData(data: Partial<Data>): data is UrlData {\n  return !!data['url'];\n}\n\nexport function isInlineData(data: Partial<Data>): data is InlineData {\n  return !!data['values'];\n}\n\nexport function isNamedData(data: Partial<Data>): data is NamedData {\n  return !!data['name'];\n}\n\nexport type DataSourceType = 'raw' | 'main' | 'row' | 'column' | 'lookup';\n\nexport const MAIN: 'main' = 'main';\nexport const RAW: 'raw' = 'raw';\n","// DateTime definition object\n\nimport * as log from './log';\nimport {duplicate, isNumber, keys} from './util';\n\n\n/*\n * A designated year that starts on Sunday.\n */\nconst SUNDAY_YEAR = 2006;\n\n/**\n * @minimum 1\n * @maximum 12\n * @TJS-type integer\n */\nexport type Month = number;\n\n/**\n * @minimum 1\n * @maximum 7\n */\nexport type Day = number;\n\n/**\n * Object for defining datetime in Vega-Lite Filter.\n * If both month and quarter are provided, month has higher precedence.\n * `day` cannot be combined with other date.\n * We accept string for month and day names.\n */\nexport interface DateTime {\n  /**\n   * Integer value representing the year.\n   * @TJS-type integer\n   */\n  year?: number;\n\n  /**\n   * Integer value representing the quarter of the year (from 1-4).\n   * @minimum 1\n   * @maximum 4\n   * @TJS-type integer\n   */\n  quarter?: number;\n\n  /** One of: (1) integer value representing the month from `1`-`12`. `1` represents January;  (2) case-insensitive month name (e.g., `\"January\"`);  (3) case-insensitive, 3-character short month name (e.g., `\"Jan\"`). */\n  month?: Month | string;\n\n  /**\n   * Integer value representing the date from 1-31.\n   * @minimum 1\n   * @maximum 31\n   * @TJS-type integer\n   */\n  date?: number;\n\n  /**\n   * Value representing the day of a week.  This can be one of: (1) integer value -- `1` represents Monday; (2) case-insensitive day name (e.g., `\"Monday\"`);  (3) case-insensitive, 3-character short day name (e.g., `\"Mon\"`).   <br/> **Warning:** A DateTime definition object with `day`** should not be combined with `year`, `quarter`, `month`, or `date`.\n   */\n  day?: Day | string;\n\n  /**\n   * Integer value representing the hour of a day from 0-23.\n   * @minimum 0\n   * @maximum 23\n   * @TJS-type integer\n   */\n  hours?: number;\n\n  /**\n   * Integer value representing the minute segment of time from 0-59.\n   * @minimum 0\n   * @maximum 59\n   * @TJS-type integer\n   */\n  minutes?: number;\n\n  /**\n   * Integer value representing the second segment (0-59) of a time value\n   * @minimum 0\n   * @maximum 59\n   * @TJS-type integer\n   */\n  seconds?: number;\n\n  /**\n   * Integer value representing the millisecond segment of time.\n   * @minimum 0\n   * @maximum 999\n   * @TJS-type integer\n   */\n  milliseconds?: number;\n\n  /**\n   * A boolean flag indicating if date time is in utc time. If false, the date time is in local time\n   */\n  utc?: boolean;\n}\n\n\n/**\n * Internal Object for defining datetime expressions.\n * This is an expression version of DateTime.\n * If both month and quarter are provided, month has higher precedence.\n * `day` cannot be combined with other date.\n */\nexport interface DateTimeExpr {\n  year?: string;\n  quarter?: string;\n  month?: string;\n  date?: string;\n  day?: string;\n  hours?: string;\n  minutes?: string;\n  seconds?: string;\n  milliseconds?: string;\n  utc?: boolean;\n}\n\nexport function isDateTime(o: any): o is DateTime {\n  return !!o && (!!o.year || !!o.quarter || !!o.month || !!o.date || !!o.day ||\n    !!o.hours || !!o.minutes || !!o.seconds || !!o.milliseconds);\n}\n\nexport const MONTHS = ['january', 'february', 'march', 'april', 'may', 'june', 'july', 'august', 'september', 'october', 'november', 'december'];\nexport const SHORT_MONTHS = MONTHS.map((m) => m.substr(0, 3));\n\nexport const DAYS = ['sunday', 'monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday'];\nexport const SHORT_DAYS = DAYS.map((d) => d.substr(0,3));\n\nfunction normalizeQuarter(q: number | string) {\n  if (isNumber(q)) {\n    if (q > 4) {\n      log.warn(log.message.invalidTimeUnit('quarter', q));\n    }\n    // We accept 1-based quarter, so need to readjust to 0-based quarter\n    return (q - 1) + '';\n  } else {\n    // Invalid quarter\n    throw new Error(log.message.invalidTimeUnit('quarter', q));\n  }\n}\n\nfunction normalizeMonth(m: string | number) {\n  if (isNumber(m)) {\n    // We accept 1-based month, so need to readjust to 0-based month\n    return (m - 1) + '';\n  } else {\n    const lowerM = m.toLowerCase();\n    const monthIndex = MONTHS.indexOf(lowerM);\n    if (monthIndex !== -1) {\n      return monthIndex + ''; // 0 for january, ...\n    }\n    const shortM = lowerM.substr(0, 3);\n    const shortMonthIndex = SHORT_MONTHS.indexOf(shortM);\n    if (shortMonthIndex !== -1) {\n      return shortMonthIndex + '';\n    }\n    // Invalid month\n    throw new Error(log.message.invalidTimeUnit('month', m));\n  }\n}\n\nfunction normalizeDay(d: string | number) {\n  if (isNumber(d)) {\n    // mod so that this can be both 0-based where 0 = sunday\n    // and 1-based where 7=sunday\n    return (d % 7) + '';\n  } else {\n    const lowerD = d.toLowerCase();\n    const dayIndex = DAYS.indexOf(lowerD);\n    if (dayIndex !== -1) {\n      return dayIndex + ''; // 0 for january, ...\n    }\n    const shortD = lowerD.substr(0, 3);\n    const shortDayIndex = SHORT_DAYS.indexOf(shortD);\n    if (shortDayIndex !== -1) {\n      return shortDayIndex + '';\n    }\n    // Invalid day\n    throw new Error(log.message.invalidTimeUnit('day', d));\n  }\n}\n\n/**\n * Return Vega Expression for a particular date time.\n * @param d\n * @param normalize whether to normalize quarter, month, day.\n */\nexport function dateTimeExpr(d: DateTime | DateTimeExpr, normalize = false) {\n  const units: (string | number)[] = [];\n\n  if (normalize && d.day !== undefined) {\n    if (keys(d).length > 1) {\n      log.warn(log.message.droppedDay(d));\n      d = duplicate(d);\n      delete d.day;\n    }\n  }\n\n  if (d.year !== undefined) {\n    units.push(d.year);\n  } else if (d.day !== undefined) {\n    // Set year to 2006 for working with day since January 1 2006 is a Sunday\n    units.push(SUNDAY_YEAR);\n  } else {\n    units.push(0);\n  }\n\n  if (d.month !== undefined) {\n    const month = normalize ? normalizeMonth(d.month) : d.month;\n    units.push(month);\n  } else if (d.quarter !== undefined) {\n    const quarter = normalize ? normalizeQuarter(d.quarter) : d.quarter;\n    units.push(quarter + '*3');\n  } else {\n    units.push(0); // months start at zero in JS\n  }\n\n  if (d.date !== undefined) {\n    units.push(d.date);\n  } else if (d.day !== undefined) {\n    // HACK: Day only works as a standalone unit\n    // This is only correct because we always set year to 2006 for day\n    const day = normalize ? normalizeDay(d.day) : d.day;\n    units.push(day + '+1');\n  } else {\n    units.push(1); // Date starts at 1 in JS\n  }\n\n  // Note: can't use TimeUnit enum here as importing it will create\n  // circular dependency problem!\n  for (const timeUnit of ['hours', 'minutes', 'seconds', 'milliseconds']) {\n    if (d[timeUnit] !== undefined) {\n      units.push(d[timeUnit]);\n    } else {\n      units.push(0);\n    }\n  }\n\n  if (d.utc) {\n    return `utc(${units.join(', ')})`;\n  } else {\n    return `datetime(${units.join(', ')})`;\n  }\n}\n","// utility for encoding mapping\nimport {AggregateOp} from './aggregate';\nimport {Channel, CHANNELS, supportMark} from './channel';\nimport {CompositeAggregate} from './compositemark';\nimport {Facet} from './facet';\nimport {\n  ChannelDef,\n  Condition,\n  Conditional,\n  Field,\n  FieldDef,\n  getFieldDef,\n  hasConditionFieldDef,\n  isConditionalDef,\n  isFieldDef,\n  isValueDef,\n  LegendFieldDef,\n  normalize,\n  normalizeFieldDef,\n  OrderFieldDef,\n  PositionFieldDef,\n  TextFieldDef,\n  ValueDef\n} from './fielddef';\nimport * as log from './log';\nimport {Mark} from './mark';\nimport {isArray, keys, some} from './util';\n\n\nexport interface Encoding<F> {\n  /**\n   * X coordinates for `point`, `circle`, `square`,\n   * `line`, `rule`, `text`, and `tick`\n   * (or to width and height for `bar` and `area` marks).\n   */\n  x?: PositionFieldDef<F> | ValueDef<number>;\n\n  /**\n   * Y coordinates for `point`, `circle`, `square`,\n   * `line`, `rule`, `text`, and `tick`\n   * (or to width and height for `bar` and `area` marks).\n   */\n  y?: PositionFieldDef<F> | ValueDef<number>;\n\n  /**\n   * X2 coordinates for ranged `bar`, `rule`, `area`.\n   */\n  // TODO: Ham need to add default behavior\n  x2?: FieldDef<F> | ValueDef<number>;\n\n  /**\n   * Y2 coordinates for ranged `bar`, `rule`, `area`.\n   */\n  // TODO: Ham need to add default behavior\n  y2?: FieldDef<F> | ValueDef<number>;\n\n  /**\n   * Color of the marks – either fill or stroke color based on mark type.\n   * (By default, fill color for `area`, `bar`, `tick`, `text`, `circle`, and `square` /\n   * stroke color for `line` and `point`.)\n   */\n  color?: Conditional<LegendFieldDef<F>, ValueDef<string>>;\n\n  /**\n   * Opacity of the marks – either can be a value or a range.\n   */\n  opacity?: Conditional<LegendFieldDef<F>, ValueDef<number>>;\n\n  /**\n   * Size of the mark.\n   * - For `point`, `square` and `circle`\n   * – the symbol size, or pixel area of the mark.\n   * - For `bar` and `tick` – the bar and tick's size.\n   * - For `text` – the text's font size.\n   * - Size is currently unsupported for `line` and `area`.\n   */\n  size?: Conditional<LegendFieldDef<F>, ValueDef<number>>;\n\n  /**\n   * The symbol's shape (only for `point` marks). The supported values are\n   * `\"circle\"` (default), `\"square\"`, `\"cross\"`, `\"diamond\"`, `\"triangle-up\"`,\n   * or `\"triangle-down\"`, or else a custom SVG path string.\n   */\n  shape?: Conditional<LegendFieldDef<F>, ValueDef<string>>; // TODO: maybe distinguish ordinal-only\n\n  /**\n   * Additional levels of detail for grouping data in aggregate views and\n   * in line and area marks without mapping data to a specific visual channel.\n   */\n  detail?: FieldDef<F> | FieldDef<F>[];\n\n  /**\n   * Text of the `text` mark.\n   */\n  text?: Conditional<TextFieldDef<F>, ValueDef<string|number|boolean>>;\n\n  /**\n   * The tooltip text to show upon mouse hover.\n   */\n  tooltip?: Conditional<TextFieldDef<F>, ValueDef<string|number|boolean>>;\n\n  /**\n   * stack order for stacked marks or order of data points in line marks.\n   */\n  order?: OrderFieldDef<F> | OrderFieldDef<F>[];\n}\n\nexport interface EncodingWithFacet<F> extends Encoding<F>, Facet<F> {}\n\nexport function channelHasField(encoding: EncodingWithFacet<Field>, channel: Channel): boolean {\n  const channelDef = encoding && encoding[channel];\n  if (channelDef) {\n    if (isArray(channelDef)) {\n      return some(channelDef, (fieldDef) => !!fieldDef.field);\n    } else {\n      return isFieldDef(channelDef) || hasConditionFieldDef(channelDef);\n    }\n  }\n  return false;\n}\n\n\nexport function isAggregate(encoding: EncodingWithFacet<Field>) {\n  return some(CHANNELS, (channel) => {\n    if (channelHasField(encoding, channel)) {\n      const channelDef = encoding[channel];\n      if (isArray(channelDef)) {\n        return some(channelDef, (fieldDef) => !!fieldDef.aggregate);\n      } else {\n        const fieldDef = getFieldDef(channelDef);\n        return fieldDef && !!fieldDef.aggregate;\n      }\n    }\n    return false;\n  });\n}\n\nexport function normalizeEncoding(encoding: Encoding<string>, mark: Mark): Encoding<string> {\n  return keys(encoding).reduce((normalizedEncoding: Encoding<string>, channel: Channel) => {\n    if (!supportMark(channel, mark)) {\n      // Drop unsupported channel\n\n      log.warn(log.message.incompatibleChannel(channel, mark));\n      return normalizedEncoding;\n    }\n\n    // Drop line's size if the field is aggregated.\n    if (channel === 'size' && mark === 'line') {\n      const fieldDef = getFieldDef(encoding[channel]);\n      if (fieldDef && fieldDef.aggregate) {\n        log.warn(log.message.incompatibleChannel(channel, mark, 'when the field is aggregated.'));\n        return normalizedEncoding;\n      }\n    }\n\n    if (channel === 'detail' || channel === 'order') {\n      const channelDef = encoding[channel];\n      if (channelDef) {\n        // Array of fieldDefs for detail channel (or production rule)\n        normalizedEncoding[channel] = (isArray(channelDef) ? channelDef : [channelDef])\n          .reduce((fieldDefs: FieldDef<string>[], fieldDef: FieldDef<string>) => {\n            if (!isFieldDef(fieldDef)) {\n              log.warn(log.message.emptyFieldDef(fieldDef, channel));\n            } else {\n              fieldDefs.push(normalizeFieldDef(fieldDef, channel));\n            }\n            return fieldDefs;\n          }, []);\n      }\n    } else {\n      // FIXME: remove this casting.  (I don't know why Typescript doesn't infer this correctly here.)\n      const channelDef = encoding[channel] as ChannelDef<string>;\n      if (!isFieldDef(channelDef) && !isValueDef(channelDef) && !isConditionalDef(channelDef)) {\n        log.warn(log.message.emptyFieldDef(channelDef, channel));\n        return normalizedEncoding;\n      }\n      normalizedEncoding[channel] = normalize(channelDef, channel);\n    }\n    return normalizedEncoding;\n  }, {});\n}\n\n\nexport function isRanged(encoding: EncodingWithFacet<any>) {\n  return encoding && ((!!encoding.x && !!encoding.x2) || (!!encoding.y && !!encoding.y2));\n}\n\nexport function fieldDefs(encoding: EncodingWithFacet<Field>): FieldDef<Field>[] {\n  const arr: FieldDef<Field>[] = [];\n  CHANNELS.forEach(function(channel) {\n    if (channelHasField(encoding, channel)) {\n      const channelDef = encoding[channel];\n      (isArray(channelDef) ? channelDef : [channelDef]).forEach((def) => {\n        if (isFieldDef(def)) {\n          arr.push(def);\n        } else if (hasConditionFieldDef(def)) {\n          arr.push(def.condition);\n        }\n      });\n    }\n  });\n  return arr;\n}\n\nexport function forEach(mapping: any,\n    f: (fd: FieldDef<string>, c: Channel) => void,\n    thisArg?: any) {\n  if (!mapping) {\n    return;\n  }\n\n  keys(mapping).forEach((c: any) => {\n    const channel: Channel = c;\n    if (isArray(mapping[channel])) {\n      mapping[channel].forEach(function(channelDef: ChannelDef<string>) {\n        f.call(thisArg, channelDef, channel);\n      });\n    } else {\n      f.call(thisArg, mapping[channel], channel);\n    }\n  });\n}\n\nexport function reduce<T, U>(mapping: U,\n    f: (acc: any, fd: FieldDef<string>, c: Channel) => U,\n    init: T, thisArg?: any) {\n  if (!mapping) {\n    return init;\n  }\n\n  return keys(mapping).reduce((r: T, c: any) => {\n    const channel: Channel = c;\n    if (isArray(mapping[channel])) {\n      return mapping[channel].reduce(function(r1: T, channelDef: ChannelDef<string>) {\n        return f.call(thisArg, r1, channelDef, channel);\n      }, r);\n    } else {\n      return f.call(thisArg, r, mapping[channel], channel);\n    }\n  }, init);\n}\n","// utility for a field definition object\n\nimport {AGGREGATE_OP_INDEX, AggregateOp, isCountingAggregateOp} from './aggregate';\nimport {Axis} from './axis';\nimport {autoMaxBins, Bin, binToString} from './bin';\nimport {Channel, rangeType} from './channel';\nimport {CompositeAggregate} from './compositemark';\nimport {Config} from './config';\nimport {Field} from './fielddef';\nimport {Legend} from './legend';\nimport * as log from './log';\nimport {LogicalOperand} from './logical';\nimport {Scale, ScaleType} from './scale';\nimport {SortField, SortOrder} from './sort';\nimport {StackOffset} from './stack';\nimport {isDiscreteByDefault, TimeUnit} from './timeunit';\nimport {getFullName, Type} from './type';\nimport {isBoolean, isString, stringValue} from './util';\n\n\n/**\n * Definition object for a constant value of an encoding channel.\n */\nexport interface ValueDef<T> {\n  /**\n   * A constant value in visual domain.\n   */\n  value: T;\n}\n\n/**\n * Generic type for conditional channelDef.\n * F defines the underlying FieldDef type while V defines the underlying ValueDef type.\n */\nexport type Conditional<F extends FieldDef<any>, V extends ValueDef<any>> = ConditionalFieldDef<F, V> | ConditionalValueDef<F, V> | ConditionOnlyDef<F, V>;\n\n\nexport type Condition<T> = {\n  selection: LogicalOperand<string>;\n} & T;\n\n/**\n * A FieldDef with Condition<ValueDef>\n * {\n *   condition: {value: ...},\n *   field: ...,\n *   ...\n * }\n */\nexport type ConditionalFieldDef<F extends FieldDef<any>, V extends ValueDef<any>> = F & {condition?: Condition<V>};\n\nexport interface ConditionOnlyDef <F extends FieldDef<any>, V extends ValueDef<any>> {\n  condition: Condition<F> | Condition<V>;\n}\n\n\n/**\n * A ValueDef with Condition<ValueDef | FieldDef>\n * {\n *   condition: {field: ...} | {value: ...},\n *   value: ...,\n * }\n */\nexport type ConditionalValueDef<F extends FieldDef<any>, V extends ValueDef<any>> = V & {condition?: Condition<F> | Condition<V>;};\n\n/**\n * Reference to a repeated value.\n */\nexport type RepeatRef = {\n  repeat: 'row' | 'column'\n};\n\nexport type Field = string | RepeatRef;\n\nexport function isRepeatRef(field: Field): field is RepeatRef {\n  return field && !isString(field) && 'repeat' in field;\n}\n\nexport interface FieldDefBase<F> {\n\n  /**\n   * __Required.__ Name of the field from which to pull a data value.\n   *\n   * __Note:__ `field` is not required if `aggregate` is `count`.\n   */\n  field?: F;\n\n  // function\n\n  /**\n   * Time unit for a `temporal` field  (e.g., `year`, `yearmonth`, `month`, `hour`).\n   *\n   * __Default value:__ `undefined` (None)\n   *\n   */\n  timeUnit?: TimeUnit;\n\n  /**\n   * Flag for binning a `quantitative` field, or a bin property object\n   * for binning parameters.\n   */\n  bin?: boolean | Bin;\n\n  /**\n   * Aggregation function for the field\n   * (e.g., `mean`, `sum`, `median`, `min`, `max`, `count`).\n   *\n   * __Default value:__ `undefined` (None)\n   *\n   */\n  aggregate?: AggregateOp | CompositeAggregate;\n}\n\n/**\n *  Definition object for a data field, its type and transformation of an encoding channel.\n */\nexport interface FieldDef<F> extends FieldDefBase<F> {\n  /**\n   * The encoded field's type of measurement. This can be either a full type\n   * name (`\"quantitative\"`, `\"temporal\"`, `\"ordinal\"`,  and `\"nominal\"`)\n   * or an initial character of the type name (`\"Q\"`, `\"T\"`, `\"O\"`, `\"N\"`).\n   * This property is case-insensitive.\n   */\n  type: Type;\n}\n\nexport interface ScaleFieldDef<F> extends FieldDef<F> {\n  scale?: Scale;\n  /**\n   * Sort order for a field with discrete domain.\n   * This can be `\"ascending\"`, `\"descending\"`, `null`, or a [sort field definition object](sort.html#sort-field) for sorting by an aggregate calculation of a specified sort field.\n   *\n   * __Note:__ For fields with continuous domain, please use `\"scale\": {\"reverse\": true}` to flip the scale instead.\n   */\n  sort?: SortField | SortOrder;\n}\n\nexport interface PositionFieldDef<F> extends ScaleFieldDef<F> {\n  /**\n   * By default, Vega-Lite automatically creates axes for `x` and `y` channels when they are encoded.\n   * If `axis` is not defined, default axis properties are applied.\n   * User can provide set `axis` to an object to customize [axis properties](axis.html#axis-properties)\n   * or set `axis` to `null` to remove the axis.\n   * @nullable\n   */\n  axis?: Axis;\n\n  /**\n   * Type of stacking offset if the field should be stacked.\n   * \"none\" or null, if the field should not be stacked.\n   */\n  stack?: StackOffset;\n}\n\nexport interface LegendFieldDef<F> extends ScaleFieldDef<F> {\n   /**\n    * @nullable\n    */\n  legend?: Legend;\n}\n\n// Detail\n\n// Order Path have no scale\n\nexport interface OrderFieldDef<F> extends FieldDef<F> {\n  sort?: SortOrder;\n}\n\nexport interface TextFieldDef<F> extends FieldDef<F> {\n  // FIXME: add more reference to Vega's format pattern or d3's format pattern.\n  /**\n   * The formatting pattern for text value. If not defined, this will be determined automatically.\n   */\n  format?: string;\n}\n\nexport type ChannelDef<F> = Conditional<FieldDef<F>, ValueDef<any>>;\n\nexport function isConditionalDef<F>(channelDef: ChannelDef<F>): channelDef is Conditional<FieldDef<F>, ValueDef<any>> {\n  return !!channelDef && !!channelDef.condition;\n}\n\n/**\n * Return if a channelDef is a ConditionalValueDef with ConditionFieldDef\n */\nexport function hasConditionFieldDef<F>(channelDef: ChannelDef<F>): channelDef is (ValueDef<any> & {condition: Condition<FieldDef<F>>}) {\n  return !!channelDef && !!channelDef.condition && isFieldDef(channelDef.condition);\n}\n\nexport function isFieldDef<F>(channelDef: ChannelDef<F>): channelDef is FieldDef<F> | PositionFieldDef<F> | LegendFieldDef<F> | OrderFieldDef<F> | TextFieldDef<F> {\n  return !!channelDef && (!!channelDef['field'] || channelDef['aggregate'] === 'count');\n}\n\nexport function isValueDef<F>(channelDef: ChannelDef<F>): channelDef is ValueDef<any> {\n  return channelDef && 'value' in channelDef && channelDef['value'] !== undefined;\n}\n\nexport function isScaleFieldDef(channelDef: ChannelDef<any>): channelDef is ScaleFieldDef<any> {\n    return !!channelDef && (!!channelDef['scale'] || !!channelDef['sort']);\n}\n\nexport interface FieldRefOption {\n  /** exclude bin, aggregate, timeUnit */\n  nofn?: boolean;\n  /** Wrap the field with datum or parent (e.g., datum['...'] for Vega Expression */\n  expr?: 'datum' | 'parent';\n  /** prepend fn with custom function prefix */\n  prefix?: string;\n  /** append suffix to the field ref for bin (default='start') */\n  binSuffix?: 'start' | 'end' | 'range' | 'mid';\n  /** append suffix to the field ref (general) */\n  suffix?: string;\n  /** Overrride which aggregate to use. Needed for unaggregated domain. */\n  aggregate?: AggregateOp;\n}\n\nexport function field(fieldDef: FieldDefBase<string>, opt: FieldRefOption = {}): string {\n  let field = fieldDef.field;\n  const prefix = opt.prefix;\n  let suffix = opt.suffix;\n\n  if (isCount(fieldDef)) {\n    field = 'count_*';\n  } else {\n    let fn: string = undefined;\n\n    if (!opt.nofn) {\n      if (fieldDef.bin) {\n        fn = binToString(fieldDef.bin);\n        suffix = opt.binSuffix;\n      } else if (fieldDef.aggregate) {\n        fn = String(opt.aggregate || fieldDef.aggregate);\n      } else if (fieldDef.timeUnit) {\n        fn = String(fieldDef.timeUnit);\n      }\n    }\n\n    if (fn) {\n      field = `${fn}_${field}`;\n    }\n  }\n\n  if (suffix) {\n    field = `${field}_${suffix}`;\n  }\n\n  if (prefix) {\n    field = `${prefix}_${field}`;\n  }\n\n  if (opt.expr) {\n    field = `${opt.expr}[${stringValue(field)}]`;\n  }\n\n  return field;\n}\n\nexport function isDiscrete(fieldDef: FieldDef<Field>) {\n  switch (fieldDef.type) {\n    case 'nominal':\n    case 'ordinal':\n      return true;\n    case 'quantitative':\n      return !!fieldDef.bin;\n    case 'temporal':\n      // TODO: deal with custom scale type case.\n      return isDiscreteByDefault(fieldDef.timeUnit);\n  }\n  throw new Error(log.message.invalidFieldType(fieldDef.type));\n}\n\nexport function isContinuous(fieldDef: FieldDef<Field>) {\n  return !isDiscrete(fieldDef);\n}\n\nexport function isCount(fieldDef: FieldDefBase<Field>) {\n  return fieldDef.aggregate === 'count';\n}\n\nexport function title(fieldDef: FieldDef<string>, config: Config) {\n  if (isCount(fieldDef)) {\n    return config.countTitle;\n  }\n  const fn = fieldDef.aggregate || fieldDef.timeUnit || (fieldDef.bin && 'bin');\n  if (fn) {\n    return fn.toUpperCase() + '(' + fieldDef.field + ')';\n  } else {\n    return fieldDef.field;\n  }\n}\n\nexport function defaultType(fieldDef: FieldDef<Field>, channel: Channel): Type {\n  if (fieldDef.timeUnit) {\n    return 'temporal';\n  }\n  if (fieldDef.bin) {\n    return 'quantitative';\n  }\n  switch (rangeType(channel)) {\n    case 'continuous':\n      return 'quantitative';\n    case 'discrete':\n      return 'nominal';\n    case 'flexible': // color\n      return 'nominal';\n    default:\n      return 'quantitative';\n  }\n}\n\n/**\n * Returns the fieldDef -- either from the outer channelDef or from the condition of channelDef.\n * @param channelDef\n */\nexport function getFieldDef<F>(channelDef: ChannelDef<F>): FieldDef<F> {\n  if (isFieldDef(channelDef)) {\n    return channelDef;\n  } else if (hasConditionFieldDef(channelDef)) {\n    return channelDef.condition;\n  }\n  return undefined;\n}\n\n/**\n * Convert type to full, lowercase type, or augment the fieldDef with a default type if missing.\n */\nexport function normalize(channelDef: ChannelDef<string>, channel: Channel): ChannelDef<any> {\n  // If a fieldDef contains a field, we need type.\n  if (isFieldDef(channelDef)) {\n    return normalizeFieldDef(channelDef, channel);\n  } else if (hasConditionFieldDef(channelDef)) {\n    return {\n      ...channelDef,\n      // Need to cast as normalizeFieldDef normally return FieldDef, but here we know that it is definitely Condition<FieldDef>\n      condition: normalizeFieldDef(channelDef.condition, channel) as Condition<FieldDef<string>>\n    };\n  }\n  return channelDef;\n}\nexport function normalizeFieldDef(fieldDef: FieldDef<string>, channel: Channel) {\n  // Drop invalid aggregate\n  if (fieldDef.aggregate && !AGGREGATE_OP_INDEX[fieldDef.aggregate]) {\n    const {aggregate, ...fieldDefWithoutAggregate} = fieldDef;\n    log.warn(log.message.invalidAggregate(fieldDef.aggregate));\n    fieldDef = fieldDefWithoutAggregate;\n  }\n\n  // Normalize bin\n  if (fieldDef.bin) {\n    fieldDef = {\n      ...fieldDef,\n      bin: normalizeBin(fieldDef.bin, channel)\n    };\n  }\n\n  // Normalize Type\n  if (fieldDef.type) {\n    const fullType = getFullName(fieldDef.type);\n    if (fieldDef.type !== fullType) {\n      // convert short type to full type\n      fieldDef = {\n        ...fieldDef,\n        type: fullType\n      };\n    }\n    if (fieldDef.type !== 'quantitative') {\n      if (isCountingAggregateOp(fieldDef.aggregate)) {\n        log.warn(log.message.invalidFieldTypeForCountAggregate(fieldDef.type, fieldDef.aggregate));\n        fieldDef = {\n          ...fieldDef,\n          type: 'quantitative'\n        };\n      } else if (fieldDef.bin) {\n        log.warn(log.message.invalidFieldTypeForBin(fieldDef.type));\n        fieldDef = {\n          ...fieldDef,\n          type: 'quantitative'\n        };\n      }\n    }\n  } else {\n    // If type is empty / invalid, then augment with default type\n    const newType = defaultType(fieldDef, channel);\n    log.warn(log.message.emptyOrInvalidFieldType(fieldDef.type, channel, newType));\n    fieldDef = {\n        ...fieldDef,\n      type: newType\n    };\n  }\n\n  const {compatible, warning} = channelCompatibility(fieldDef, channel);\n  if (!compatible) {\n    log.warn(warning);\n  }\n  return fieldDef;\n}\n\nexport function normalizeBin(bin: Bin|boolean, channel: Channel) {\n  if (isBoolean(bin)) {\n    return {maxbins: autoMaxBins(channel)};\n  } else if (!bin.maxbins && !bin.step) {\n    return {...bin, maxbins: autoMaxBins(channel)};\n  } else {\n    return bin;\n  }\n}\n\nconst COMPATIBLE = {compatible: true};\nexport function channelCompatibility(fieldDef: FieldDef<Field>, channel: Channel): {compatible: boolean; warning?: string;} {\n  switch (channel) {\n    case 'row':\n    case 'column':\n      if (isContinuous(fieldDef) && !fieldDef.timeUnit) {\n        // TODO:(https://github.com/vega/vega-lite/issues/2011):\n        // with timeUnit it's not always strictly continuous\n        return {\n          compatible: false,\n          warning: log.message.facetChannelShouldBeDiscrete(channel)\n        };\n      }\n      return COMPATIBLE;\n\n    case 'x':\n    case 'y':\n    case 'color':\n    case 'text':\n    case 'detail':\n    case 'tooltip':\n      return COMPATIBLE;\n\n    case 'opacity':\n    case 'size':\n    case 'x2':\n    case 'y2':\n      if (isDiscrete(fieldDef) && !fieldDef.bin) {\n        return {\n          compatible: false,\n          warning: `Channel ${channel} should not be used with discrete field.`\n        };\n      }\n      return COMPATIBLE;\n\n    case 'shape':\n      if (fieldDef.type !== 'nominal') {\n        return {\n          compatible: false,\n          warning: 'Shape channel should be used with nominal data only'\n        };\n      }\n      return COMPATIBLE;\n\n    case 'order':\n      if (fieldDef.type === 'nominal') {\n        return {\n          compatible: false,\n          warning: `Channel order is inappropriate for nominal field, which has no inherent order.`\n        };\n      }\n      return COMPATIBLE;\n  }\n  throw new Error('channelCompatability not implemented for channel ' + channel);\n}\n","import {DataFlowNode} from './compile/data/dataflow';\nimport {Model} from './compile/model';\nimport {predicate} from './compile/selection/selection';\nimport {DateTime, dateTimeExpr, isDateTime} from './datetime';\nimport {field} from './fielddef';\nimport {LogicalOperand} from './logical';\nimport {fieldExpr as timeUnitFieldExpr, isSingleTimeUnit, TimeUnit} from './timeunit';\nimport {isArray, isString, logicalExpr} from './util';\n\n\nexport type Filter = EqualFilter | RangeFilter | OneOfFilter | SelectionFilter | string;\n\nexport interface SelectionFilter {\n  /**\n   * Filter using a selection name.\n   */\n  selection: LogicalOperand<string>;\n}\n\nexport function isSelectionFilter(filter: LogicalOperand<Filter>): filter is SelectionFilter {\n  return filter && filter['selection'];\n}\n\nexport interface EqualFilter {\n  // TODO: support aggregate\n\n  /**\n   * Time unit for the field to be filtered.\n   */\n  timeUnit?: TimeUnit;\n\n  /**\n   * Field to be filtered.\n   */\n  field: string;\n\n  /**\n   * The value that the field should be equal to.\n   */\n  equal: string | number | boolean | DateTime;\n\n}\n\nexport function isEqualFilter(filter: any): filter is EqualFilter {\n  return filter && !!filter.field && filter.equal!==undefined;\n}\n\nexport interface RangeFilter {\n  // TODO: support aggregate\n\n  /**\n   * time unit for the field to be filtered.\n   */\n  timeUnit?: TimeUnit;\n\n  /**\n   * Field to be filtered\n   */\n  field: string;\n\n  /**\n   * An array of inclusive minimum and maximum values\n   * for a field value of a data item to be included in the filtered data.\n   * @maxItems 2\n   * @minItems 2\n   */\n  range: (number|DateTime)[];\n\n}\n\nexport function isRangeFilter(filter: any): filter is RangeFilter {\n  if (filter && filter.field) {\n    if (isArray(filter.range) && filter.range.length === 2) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport interface OneOfFilter {\n  // TODO: support aggregate\n\n  /**\n   * time unit for the field to be filtered.\n   */\n  timeUnit?: TimeUnit;\n\n  /**\n   * Field to be filtered\n   */\n  field: string;\n\n  /**\n   * A set of values that the `field`'s value should be a member of,\n   * for a data item included in the filtered data.\n   */\n  oneOf: string[] | number[] | boolean[] | DateTime[];\n\n}\n\nexport function isOneOfFilter(filter: any): filter is OneOfFilter {\n  return filter && !!filter.field && (\n    isArray(filter.oneOf) ||\n    isArray(filter.in) // backward compatibility\n  );\n}\n\n/**\n * Converts a filter into an expression.\n */\n// model is only used for selection filters.\nexport function expression(model: Model, filterOp: LogicalOperand<Filter>, node?: DataFlowNode): string {\n  return logicalExpr(filterOp, (filter: Filter) => {\n    if (isString(filter)) {\n      return filter;\n    } else if (isSelectionFilter(filter)) {\n      return predicate(model, filter.selection, node);\n    } else { // Filter Object\n      const fieldExpr = filter.timeUnit ?\n        // For timeUnit, cast into integer with time() so we can use ===, inrange, indexOf to compare values directly.\n          // TODO: We calculate timeUnit on the fly here. Consider if we would like to consolidate this with timeUnit pipeline\n          // TODO: support utc\n        ('time(' + timeUnitFieldExpr(filter.timeUnit, filter.field) + ')') :\n        field(filter, {expr: 'datum'});\n\n      if (isEqualFilter(filter)) {\n        return fieldExpr + '===' + valueExpr(filter.equal, filter.timeUnit);\n      } else if (isOneOfFilter(filter)) {\n        // \"oneOf\" was formerly \"in\" -- so we need to add backward compatibility\n        const oneOf: OneOfFilter[] = filter.oneOf || filter['in'];\n        return 'indexof([' +\n          oneOf.map((v) => valueExpr(v, filter.timeUnit)).join(',') +\n          '], ' + fieldExpr + ') !== -1';\n      } else if (isRangeFilter(filter)) {\n        const lower = filter.range[0];\n        const upper = filter.range[1];\n\n        if (lower !== null &&  upper !== null) {\n          return 'inrange(' + fieldExpr + ', [' +\n            valueExpr(lower, filter.timeUnit) + ', ' +\n            valueExpr(upper, filter.timeUnit) + '])';\n        } else if (lower !== null) {\n          return fieldExpr + ' >= ' + lower;\n        } else if (upper !== null) {\n          return fieldExpr + ' <= ' + upper;\n        }\n      }\n    }\n    return undefined;\n  });\n}\n\nfunction valueExpr(v: any, timeUnit: TimeUnit) {\n  if (isDateTime(v)) {\n    const expr = dateTimeExpr(v, true);\n    return 'time(' + expr + ')';\n  }\n  if (isSingleTimeUnit(timeUnit)) {\n    const datetime: DateTime = {};\n    datetime[timeUnit] = v;\n    const expr = dateTimeExpr(datetime, true);\n    return 'time(' + expr + ')';\n  }\n  return JSON.stringify(v);\n}\n","import {ValueDef} from './fielddef';\nimport {VgEncodeChannel} from './vega.schema';\n\n\nexport interface Guide {\n  /**\n   * The formatting pattern for labels. This is D3's [number format pattern](https://github.com/mbostock/d3/wiki/Formatting) for quantitative fields and D3's [time format pattern](https://github.com/mbostock/d3/wiki/Time-Formatting) for time field.\n   *\n   * __Default value:__  derived from [numberFormat](config.html#format) config for quantitative fields and from [timeFormat](config.html#format) config for temporal fields.\n   */\n  format?: string;\n\n  /**\n   * A title for the field.\n   *\n   * __Default value:__  derived from the field's name and transformation function applied e.g, \"field_name\", \"SUM(field_name)\", \"BIN(field_name)\", \"YEAR(field_name)\".\n   */\n  title?: string;\n}\nexport interface VlOnlyGuideConfig {\n\n  /**\n   * Whether month names and weekday names should be abbreviated.\n   *\n   * __Default value:__  `false`\n   */\n  shortTimeLabels?: boolean;\n}\n\n\nexport type GuideEncodingEntry = {\n  [k in VgEncodeChannel]?: ValueDef<any>;\n};\n\nexport const VL_ONLY_GUIDE_CONFIG: (keyof VlOnlyGuideConfig)[] = ['shortTimeLabels'];\n","export import axis = require('./axis');\nexport import aggregate = require('./aggregate');\nexport import bin = require('./bin');\nexport import channel = require('./channel');\nexport import compositeMark = require('./compositemark');\nexport {compile}  from './compile/compile';\nexport import config = require('./config');\nexport import data = require('./data');\nexport import datetime = require('./datetime');\nexport import encoding = require('./encoding');\nexport import facet = require('./facet');\nexport import fieldDef = require('./fielddef');\nexport import legend = require('./legend');\nexport import mark = require('./mark');\nexport import scale = require('./scale');\nexport import sort = require('./sort');\nexport import spec = require('./spec');\nexport import stack = require('./stack');\nexport import timeUnit = require('./timeunit');\nexport import transform = require('./transform');\nexport import type = require('./type');\nexport import util = require('./util');\nexport import validate = require('./validate');\n\nexport const version: string = require('../package.json').version;\n","import {DateTime} from './datetime';\nimport {Guide, GuideEncodingEntry, VlOnlyGuideConfig} from './guide';\nimport {VgLegend, VgLegendBase, VgLegendConfig, VgLegendEncode} from './vega.schema';\n\n\nexport interface LegendConfig extends VgLegendConfig, VlOnlyGuideConfig {}\n\n/**\n * Properties of a legend or boolean flag for determining whether to show it.\n */\nexport interface Legend extends VgLegendBase, Guide {\n  /**\n   * Optional mark definitions for custom legend encoding.\n   */\n  encoding?: LegendEncoding;\n\n  /**\n   * The desired number of tick values for quantitative legends.\n   */\n  tickCount?: number;\n\n  /**\n   * Explicitly set the visible legend values.\n   */\n  values?: number[] | string[] | DateTime[];\n\n  /**\n   * The type of the legend. Use `symbol` to create a discrete legend and `gradient` for a continuous color gradient.\n   */\n  type?: 'symbol' | 'gradient';\n\n  /**\n   * A non-positive integer indicating z-index of the legend.\n   * If zindex is 0, legend should be drawn behind all chart elements.\n   * To put them in front, use zindex = 1.\n   * @TJS-type integer\n   * @minimum 0\n   */\n  zindex?: number;\n}\n\nexport type LegendEncoding = {\n  /**\n   * Custom encoding for the legend container.\n   * This can be useful for creating legend with custom x, y position.\n   */\n  legend?: GuideEncodingEntry;\n\n  /**\n   * Custom encoding for the legend title text mark.\n   */\n  title?: GuideEncodingEntry;\n\n  /**\n   * Custom encoding for legend label text marks.\n   */\n  labels?: GuideEncodingEntry;\n\n  /**\n   * Custom encoding for legend symbol marks.\n   */\n  symbols?: GuideEncodingEntry;\n\n  /**\n   * Custom encoding for legend gradient filled rect marks.\n   */\n  gradient?: GuideEncodingEntry;\n};\n\nexport const defaultLegendConfig: LegendConfig = {};\n\nexport const LEGEND_PROPERTIES:(keyof (VgLegend | Legend))[] = ['entryPadding', 'format', 'offset', 'orient', 'tickCount', 'title', 'type', 'values' ,'zindex'];\n\nexport const VG_LEGEND_PROPERTIES:(keyof VgLegend)[] = [].concat(\n  ['fill', 'stroke', 'shape', 'size', 'opacity', 'encode'],\n  LEGEND_PROPERTIES\n);\n","/**\n * Vega-Lite's singleton logger utility.\n */\n\nimport {logger, LoggerInterface, Warn} from 'vega-util';\nimport {AggregateOp} from './aggregate';\nimport {Axis} from './axis';\nimport {Channel} from './channel';\nimport {CompositeMark} from './compositemark';\nimport {DateTime, DateTimeExpr} from './datetime';\nimport {FieldDef} from './fielddef';\nimport {Legend} from './legend';\nimport {Mark} from './mark';\nimport {Scale, ScaleType} from './scale';\nimport {TimeUnit} from './timeunit';\nimport {Type} from './type';\nimport {VgSortField} from './vega.schema';\n\n\nexport {LoggerInterface} from 'vega-util';\n\n/**\n * Main (default) Vega Logger instance for Vega-Lite\n */\nconst main = logger(Warn);\nlet current: LoggerInterface = main;\n\n/**\n * Logger tool for checking if the code throws correct warning\n */\nexport class LocalLogger implements LoggerInterface {\n  public warns: any[] = [];\n  public infos: any[] = [];\n  public debugs: any[] = [];\n\n  public level() {\n    return this;\n  }\n\n  public warn(...args: any[]) {\n    this.warns.push(...args);\n    return this;\n  }\n\n  public info(...args: any[]) {\n    this.infos.push(...args);\n    return this;\n  }\n\n  public debug(...args: any[]) {\n    this.debugs.push(...args);\n    return this;\n  }\n}\n\nexport function runLocalLogger(f: (localLogger: LocalLogger) => void) {\n  const localLogger = current = new LocalLogger();\n  f(localLogger);\n  reset();\n}\n\nexport function wrap(f: (logger: LocalLogger) => void) {\n  return () => {\n    const logger = current = new LocalLogger();\n    f(logger);\n    reset();\n  };\n}\n\n/**\n * Set the singleton logger to be a custom logger\n */\nexport function set(logger: LoggerInterface) {\n  current = logger;\n  return current;\n}\n\n/**\n * Reset the main logger to use the default Vega Logger\n */\nexport function reset() {\n  current = main;\n  return current;\n}\n\nexport function warn(..._: any[]) {\n  current.warn.apply(current, arguments);\n}\n\nexport function info(..._: any[]) {\n  current.info.apply(current, arguments);\n}\n\nexport function debug(..._: any[]) {\n  current.debug.apply(current, arguments);\n}\n\n/**\n * Collection of all Vega-Lite Error Messages\n */\nexport namespace message {\n  export const INVALID_SPEC = 'Invalid spec';\n\n  // SELECTION\n  export function cannotProjectOnChannelWithoutField(channel: Channel) {\n    return `Cannot project a selection on encoding channel ${channel}, which has no field.`;\n  }\n\n  export function selectionNotFound(name: string) {\n    return `Cannot find a selection named \"${name}\"`;\n  }\n\n  // REPEAT\n  export function noSuchRepeatedValue(field: string) {\n    return `Unknown repeated value \"${field}\".`;\n  }\n\n  // DATA\n  export function unrecognizedParse(p: string) {\n    return `Unrecognized parse ${p}.`;\n  }\n\n  export function differentParse(field: string, local: string, ancestor: string) {\n    return `An ancestor parsed field ${field} as ${ancestor} but a child wants to parse the field as ${local}.`;\n  }\n\n  // TRANSFORMS\n  export function invalidTransformIgnored(transform: any) {\n    return `Ignoring an invalid transform: ${JSON.stringify(transform)}.`;\n  }\n\n  export const NO_FIELDS_NEEDS_AS = 'If `from.fields` is not specified, `as` has to be a string that specifies the key to be used for the the data from the secondary source.';\n\n  // ENCODING & FACET\n  export function invalidFieldType(type: Type) {\n    return `Invalid field type \"${type}\"`;\n  }\n\n  export function invalidFieldTypeForCountAggregate(type: Type, aggregate: string) {\n    return `Invalid field type \"${type}\" for aggregate: \"${aggregate}\", using \"quantitative\" instead.`;\n  }\n\n  export function invalidFieldTypeForBin(type: Type) {\n    return `Invalid field type \"${type}\" for bin, using \"quantitative\" instead.`;\n  }\n\n  export function invalidAggregate(aggregate: AggregateOp | string) {\n    return `Invalid aggregation operator \"${aggregate}\"`;\n  }\n\n  export function emptyOrInvalidFieldType(type: Type | string, channel: Channel, newType: Type) {\n    return `Invalid field type (${type}) for channel ${channel}, using ${newType} instead.`;\n  }\n\n  export function emptyFieldDef(fieldDef: FieldDef<string>, channel: Channel) {\n    return `Dropping ${JSON.stringify(fieldDef)} from channel ${channel} since it does not contain data field or value.`;\n  }\n\n  export function incompatibleChannel(channel: Channel, markOrFacet: Mark | 'facet' | CompositeMark, when?: string) {\n    return `${channel} dropped as it is incompatible with ${markOrFacet}${when ? ` when ${when}` : ''}.`;\n  }\n\n  export function facetChannelShouldBeDiscrete(channel: string) {\n    return `${channel} encoding should be discrete (ordinal / nominal / binned).`;\n  }\n\n  export function discreteChannelCannotEncode(channel: Channel, type: Type) {\n    return `Using discrete channel ${channel} to encode ${type} field can be misleading as it does not encode ${type === 'ordinal' ? 'order' : 'magnitude'}.`;\n  }\n\n  // Mark\n  export const BAR_WITH_POINT_SCALE_AND_RANGESTEP_NULL = 'Bar mark should not be used with point scale when rangeStep is null. Please use band scale instead.';\n\n  export function unclearOrientContinuous(mark: Mark) {\n    return `Cannot clearly determine orientation for ${mark} since both x and y channel encode continous fields. In this case, we use vertical by default`;\n  }\n\n  export function unclearOrientDiscreteOrEmpty(mark: Mark) {\n    return `Cannot clearly determine orientation for ${mark} since both x and y channel encode discrete or empty fields.`;\n  }\n\n  export function orientOverridden(original: string, actual: string) {\n    return `Specified orient ${original} overridden with ${actual}`;\n  }\n\n  // SCALE\n  export const CANNOT_UNION_CUSTOM_DOMAIN_WITH_FIELD_DOMAIN = 'custom domain scale cannot be unioned with default field-based domain';\n\n  export function cannotUseScalePropertyWithNonColor(prop: string) {\n    return `Cannot use ${prop} with non-color channel.`;\n  }\n\n  export function unaggregateDomainHasNoEffectForRawField(fieldDef: FieldDef<string>) {\n    return `Using unaggregated domain with raw field has no effect (${JSON.stringify(fieldDef)}).`;\n  }\n\n  export function unaggregateDomainWithNonSharedDomainOp(aggregate: string) {\n    return `Unaggregated domain not applicable for ${aggregate} since it produces values outside the origin domain of the source data.`;\n  }\n\n  export function unaggregatedDomainWithLogScale(fieldDef: FieldDef<string>) {\n    return `Unaggregated domain is currently unsupported for log scale (${JSON.stringify(fieldDef)}).`;\n  }\n\n  export const CANNOT_USE_RANGE_WITH_POSITION =\n    'Cannot use custom range with x or y channel.  Please customize width, height, padding, or rangeStep instead.';\n\n  export function cannotUseSizeFieldWithBandSize(positionChannel: 'x'|'y') {\n    return `Using size field when ${positionChannel}-channel has a band scale is not supported.`;\n  }\n\n  export function cannotApplySizeToNonOrientedMark(mark: Mark) {\n    return `Cannot apply size to non-oriented mark ${mark}.`;\n  }\n\n  export function rangeStepDropped(channel: Channel) {\n    return `rangeStep for ${channel} is dropped as top-level ${\n      channel === 'x' ? 'width' : 'height'} is provided.`;\n  }\n\n  export function scaleTypeNotWorkWithChannel(channel: Channel, scaleType: ScaleType, defaultScaleType: ScaleType) {\n    return `Channel ${channel} does not work with ${scaleType} scale. We are using ${defaultScaleType} scale instead.`;\n  }\n\n  export function scaleTypeNotWorkWithFieldDef(scaleType: ScaleType, defaultScaleType: ScaleType) {\n    return `FieldDef does not work with ${scaleType} scale. We are using ${defaultScaleType} scale instead.`;\n  }\n\n  export function scalePropertyNotWorkWithScaleType(scaleType: ScaleType, propName: string, channel: Channel) {\n    return `${channel}-scale's \"${propName}\" is dropped as it does not work with ${scaleType} scale.`;\n  }\n\n  export function scaleTypeNotWorkWithMark(mark: Mark, scaleType: ScaleType) {\n    return `Scale type \"${scaleType}\" does not work with mark ${mark}.`;\n  }\n\n  export function mergeConflictingProperty<T>(property: string, propertyOf: string, v1: T, v2: T) {\n    return `Conflicting ${propertyOf} property ${property} (${v1} and ${v2}).  Using ${v1}.`;\n  }\n\n  export function independentScaleMeansIndependentGuide(channel: Channel) {\n    return `Setting the scale to be independent for ${channel} means we also have to set the guide (axis or legend) to be independent.`;\n  }\n\n  export function conflictedDomain(channel: Channel) {\n    return `Cannot set ${channel}-scale's \"domain\" as it is binned. Please use \"bin\"'s \"extent\" instead.`;\n  }\n\n  export function domainSortDropped(sort: VgSortField) {\n    return `Dropping sort property ${JSON.stringify(sort)} as unioned domains only support boolean or op 'count'.`;\n  }\n\n  export const UNABLE_TO_MERGE_DOMAINS = 'Unable to merge domains';\n\n  export const MORE_THAN_ONE_SORT = 'Domains that should be unioned has conflicting sort properties. Sort will be set to true.';\n\n  // AXIS\n  export const INVALID_CHANNEL_FOR_AXIS = 'Invalid channel for axis.';\n\n  // STACK\n  export function cannotStackRangedMark(channel: Channel) {\n    return `Cannot stack ${channel} if there is already ${channel}2`;\n  }\n\n  export function cannotStackNonLinearScale(scaleType: ScaleType) {\n    return `Cannot stack non-linear scale (${scaleType})`;\n  }\n\n  export function cannotStackNonSummativeAggregate(aggregate: string) {\n    return `Cannot stack when the aggregate function is non-summative (${aggregate})`;\n  }\n\n  // TIMEUNIT\n  export function invalidTimeUnit(unitName: string, value: string | number) {\n    return `Invalid ${unitName}: ${value}`;\n  }\n\n  export function dayReplacedWithDate(fullTimeUnit: TimeUnit) {\n    return `Time unit \"${fullTimeUnit}\" is not supported. We are replacing it with ${\n      fullTimeUnit.replace('day', 'date')}.`;\n  }\n\n  export function droppedDay(d: DateTime | DateTimeExpr) {\n    return `Dropping day from datetime ${JSON.stringify(d)} as day cannot be combined with other units.`;\n  }\n}\n\n","export type LogicalOperand<T> = LogicalNot<T> | LogicalAnd<T> | LogicalOr<T> | T;\n\nexport interface LogicalOr<T> {\n  or: LogicalOperand<T>[];\n}\n\nexport interface LogicalAnd<T> {\n  and: LogicalOperand<T>[];\n}\n\nexport interface LogicalNot<T> {\n  not: LogicalOperand<T>;\n}\n\nexport function isLogicalOr(op: LogicalOperand<any>): op is LogicalOr<any> {\n  return !!op.or;\n}\n\nexport function isLogicalAnd(op: LogicalOperand<any>): op is LogicalAnd<any> {\n  return !!op.and;\n}\n\nexport function isLogicalNot(op: LogicalOperand<any>): op is LogicalNot<any> {\n  return !!op.not;\n}\n\nexport function forEachLeave<T>(op: LogicalOperand<T>, fn: (op: T) => void) {\n  if (isLogicalNot(op)) {\n    forEachLeave(op.not, fn);\n  } else if (isLogicalAnd(op)) {\n    for (const subop of op.and) {\n      forEachLeave(subop, fn);\n    }\n  } else if (isLogicalOr(op)) {\n    for (const subop of op.or) {\n      forEachLeave(subop, fn);\n    }\n  } else {\n    fn(op);\n  }\n}\n","import {CompositeMark, CompositeMarkDef} from './compositemark/index';\nimport {Dict, toSet} from './util';\nimport {Interpolate, Orient, VgMarkConfig} from './vega.schema';\n\nexport namespace Mark {\n  export const AREA: 'area' = 'area';\n  export const BAR: 'bar' = 'bar';\n  export const LINE: 'line' = 'line';\n  export const POINT: 'point' = 'point';\n  export const RECT: 'rect' = 'rect';\n  export const RULE: 'rule' = 'rule';\n  export const TEXT: 'text' = 'text';\n  export const TICK: 'tick' = 'tick';\n  export const CIRCLE: 'circle' = 'circle';\n  export const SQUARE: 'square' = 'square';\n}\n\n/**\n * All types of primitive marks.\n */\nexport type Mark = typeof Mark.AREA | typeof Mark.BAR | typeof Mark.LINE | typeof Mark.POINT | typeof Mark.TEXT | typeof Mark.TICK | typeof Mark.RECT | typeof Mark.RULE | typeof Mark.CIRCLE | typeof Mark.SQUARE;\n\n\nexport const AREA = Mark.AREA;\nexport const BAR = Mark.BAR;\nexport const LINE = Mark.LINE;\nexport const POINT = Mark.POINT;\nexport const TEXT = Mark.TEXT;\nexport const TICK = Mark.TICK;\nexport const RECT = Mark.RECT;\nexport const RULE = Mark.RULE;\n\nexport const CIRCLE = Mark.CIRCLE;\nexport const SQUARE = Mark.SQUARE;\n\nexport const PRIMITIVE_MARKS = [AREA, BAR, LINE, POINT, TEXT, TICK, RECT, RULE, CIRCLE, SQUARE];\n\nexport interface MarkDef {\n  /**\n   * The mark type.\n   * One of `\"bar\"`, `\"circle\"`, `\"square\"`, `\"tick\"`, `\"line\"`,\n   * `\"area\"`, `\"point\"`, `\"rule\"`, and `\"text\"`.\n   */\n  type: Mark;\n\n  /**\n   *\n   * A string or array of strings indicating the name of custom styles to apply to the mark. A style is a named collection of mark property defaults defined within the [configuration](config.html). If style is an array, later styles will override earlier styles. Any properties explicitly defined within the `encoding` will override a style default.\n   *\n   * __Default value:__ The mark's name.  For example, a bar mark will have style `\"bar\"` by default.  If\n   */\n  style?: string | string[];\n\n  /**\n   * Whether the mark's color should be used as fill color instead of stroke color.\n   *\n   * __Default value:__ All marks except `\"point\"`, `\"line\"`, and `\"rule\"` are filled by default.\n   */\n  filled?: boolean;\n\n  /**\n   * TODO\n   */\n  orient?: Orient;\n\n  /**\n   * The line interpolation method to use for line and area marks. One of the following:\n   * - `\"linear\"`: piecewise linear segments, as in a polyline.\n   * - `\"linear-closed\"`: close the linear segments to form a polygon.\n   * - `\"step\"`: alternate between horizontal and vertical segments, as in a step function.\n   * - `\"step-before\"`: alternate between vertical and horizontal segments, as in a step function.\n   * - `\"step-after\"`: alternate between horizontal and vertical segments, as in a step function.\n   * - `\"basis\"`: a B-spline, with control point duplication on the ends.\n   * - `\"basis-open\"`: an open B-spline; may not intersect the start or end.\n   * - `\"basis-closed\"`: a closed B-spline, as in a loop.\n   * - `\"cardinal\"`: a Cardinal spline, with control point duplication on the ends.\n   * - `\"cardinal-open\"`: an open Cardinal spline; may not intersect the start or end, but will intersect other control points.\n   * - `\"cardinal-closed\"`: a closed Cardinal spline, as in a loop.\n   * - `\"bundle\"`: equivalent to basis, except the tension parameter is used to straighten the spline.\n   * - `\"monotone\"`: cubic interpolation that preserves monotonicity in y.\n   *\n   * For more information about each interpolation method, please see [D3's line interpolation](https://github.com/mbostock/d3/wiki/SVG-Shapes#line_interpolate).\n   */\n  interpolate?: Interpolate;\n\n  /**\n   * Depending on the interpolation type, sets the tension parameter (for line and area marks).\n   *\n   * TODO: provide the link to D3 docs.\n   *\n   * @minimum 0\n   * @maximum 1\n   */\n  tension?: number;\n  /**\n   * Should a mark be clipped to the enclosing group’s width and height?\n   */\n  clip?: boolean;\n}\n\nexport type AnyMark = CompositeMark | CompositeMarkDef | Mark | MarkDef;\n\nexport function isMarkDef(mark: AnyMark): mark is (MarkDef | CompositeMarkDef) {\n  return mark['type'];\n}\n\nconst PRIMITIVE_MARK_INDEX = toSet(PRIMITIVE_MARKS);\n\nexport function isPrimitiveMark(mark: CompositeMark | CompositeMarkDef | Mark | MarkDef): mark is Mark {\n  const markType = isMarkDef(mark) ? mark.type : mark;\n  return markType in PRIMITIVE_MARK_INDEX;\n}\n\nexport const STROKE_CONFIG = ['stroke', 'strokeWidth',\n  'strokeDash', 'strokeDashOffset', 'strokeOpacity'];\n\nexport const FILL_CONFIG = ['fill', 'fillOpacity'];\n\nexport const FILL_STROKE_CONFIG = [].concat(STROKE_CONFIG, FILL_CONFIG);\n\nexport const VL_ONLY_MARK_CONFIG_PROPERTIES: (keyof MarkConfig)[] = ['filled', 'color'];\n\nexport const VL_ONLY_MARK_SPECIFIC_CONFIG_PROPERTY_INDEX: {\n  [k in (typeof PRIMITIVE_MARKS[0])]?: (keyof MarkConfigMixins[k])[]\n} = {\n  bar: ['binSpacing', 'continuousBandSize', 'discreteBandSize'],\n  text: ['shortTimeLabels'],\n  tick: ['bandSize', 'thickness']\n};\n\n\nexport interface MarkConfig extends VgMarkConfig {\n\n  // ---------- Color ----------\n  /**\n   * Whether the mark's color should be used as fill color instead of stroke color.\n   *\n   * __Default value:__ `true` for all marks except `point` and `false` for `point`.\n   *\n   * __Applicable for:__ `bar`, `point`, `circle`, `square`, and `area` marks.\n   *\n   */\n  filled?: boolean;\n\n  // TODO: remove this once we correctly integrate theme\n  /**\n   * Default color.\n   *\n   * __Default value:__ <span style=\"color: #4682b4;\">&#9632;</span> `\"#4682b4\"`\n   */\n  color?: string;\n}\n\nexport const defaultMarkConfig: MarkConfig = {\n  color: '#4c78a8',\n};\n\nexport interface MarkConfigMixins {\n  /** Mark Config */\n  mark?: MarkConfig;\n\n  // MARK-SPECIFIC CONFIGS\n  /** Area-Specific Config */\n  area?: MarkConfig;\n\n  /** Bar-Specific Config */\n  bar?: BarConfig;\n\n  /** Circle-Specific Config */\n  circle?: MarkConfig;\n\n  /** Line-Specific Config */\n  line?: MarkConfig;\n\n  /** Point-Specific Config */\n  point?: MarkConfig;\n\n  /** Rect-Specific Config */\n  rect?: MarkConfig;\n\n  /** Rule-Specific Config */\n  rule?: MarkConfig;\n\n  /** Square-Specific Config */\n  square?: MarkConfig;\n\n  /** Text-Specific Config */\n  text?: TextConfig;\n\n  /** Tick-Specific Config */\n  tick?: TickConfig;\n}\n\nexport interface BarConfig extends MarkConfig {\n  /**\n   * Offset between bar for binned field.  Ideal value for this is either 0 (Preferred by statisticians) or 1 (Vega-Lite Default, D3 example style).\n   *\n   * __Default value:__ `1`\n   *\n   * @minimum 0\n   */\n  binSpacing?: number;\n  /**\n   * The default size of the bars on continuous scales.\n   *\n   * __Default value:__ `2`\n   *\n   * @minimum 0\n   */\n  continuousBandSize?: number;\n\n  /**\n   * The size of the bars.  If unspecified, the default size is  `bandSize-1`,\n   * which provides 1 pixel offset between bars.\n   * @minimum 0\n   */\n  discreteBandSize?: number;\n}\n\nexport const defaultBarConfig: BarConfig = {\n  binSpacing: 1,\n  continuousBandSize: 2\n};\n\nexport interface TextConfig extends MarkConfig {\n  /**\n   * Whether month names and weekday names should be abbreviated.\n   */\n  shortTimeLabels?: boolean;\n  /**\n   * The horizontal text alignment.\n   */\n  align?: 'left' | 'center' | 'right';\n  /**\n   * The horizontal offset in pixels (before rotation), between the text and anchor point.\n   */\n  dx?: number;\n  /**\n   * The vertical offset in pixels (before rotation), between the text and anchor point.\n   */\n  dy?: number;\n}\n\nexport interface TickConfig extends MarkConfig {\n  /**\n   * The width of the ticks.\n   * If this value is undefined (by default,), we use 2/3 of rangeStep by default.\n   * @minimum 0\n   */\n  bandSize?: number;\n\n  /**\n   * Thickness of the tick mark.\n   *\n   * __Default value:__  `1`\n   *\n   * @minimum 0\n   */\n  thickness?: number;\n}\n\nexport const defaultTickConfig: TickConfig = {\n  thickness: 1\n};\n","import {Channel} from './channel';\nimport {ScaleComponentProps} from './compile/scale/component';\nimport {DateTime} from './datetime';\nimport * as log from './log';\nimport {contains, toSet} from './util';\nimport {VgScale} from './vega.schema';\n\n\nexport namespace ScaleType {\n  // Continuous - Quantitative\n  export const LINEAR: 'linear' = 'linear';\n  export const BIN_LINEAR: 'bin-linear' = 'bin-linear';\n  export const LOG: 'log' = 'log';\n  export const POW: 'pow' = 'pow';\n  export const SQRT: 'sqrt' = 'sqrt';\n  // Continuous - Time\n  export const TIME: 'time' = 'time';\n  export const UTC: 'utc'  = 'utc';\n  // sequential\n  export const SEQUENTIAL: 'sequential' = 'sequential';\n\n  // Quantile, Quantize, threshold\n  export const QUANTILE: 'quantile' = 'quantile';\n  export const QUANTIZE: 'quantize' = 'quantize';\n  export const THRESHOLD: 'threshold' = 'threshold';\n\n  export const ORDINAL: 'ordinal' = 'ordinal';\n  export const BIN_ORDINAL: 'bin-ordinal' = 'bin-ordinal';\n  export const POINT: 'point' = 'point';\n  export const BAND: 'band' = 'band';\n}\n\nexport type ScaleType = typeof ScaleType.LINEAR | typeof ScaleType.BIN_LINEAR |\n  typeof ScaleType.LOG | typeof ScaleType.POW | typeof ScaleType.SQRT |\n  typeof ScaleType.TIME | typeof ScaleType.UTC |\n  // TODO: add 'quantize', 'quantile', 'threshold' back when we really support them\n  typeof ScaleType.SEQUENTIAL | // typeof ScaleType.QUANTILE | typeof ScaleType.QUANTIZE | typeof ScaleType.THRESHOLD |\n  typeof ScaleType.ORDINAL | typeof ScaleType.BIN_ORDINAL | typeof ScaleType.POINT | typeof ScaleType.BAND;\n\nexport const SCALE_TYPES: ScaleType[] = [\n  // Continuous - Quantitative\n  'linear', 'bin-linear', 'log', 'pow', 'sqrt',\n  // Continuous - Time\n  'time', 'utc',\n  // Sequential\n  'sequential', // TODO: add 'quantile', 'quantize' when we really support them\n  // Discrete\n  'ordinal', 'bin-ordinal', 'point', 'band',\n];\n\n/**\n * Index for scale categories -- only scale of the same categories can be merged together.\n * Current implementation is trying to be conservative and avoid merging scale type that might not work together\n */\nconst SCALE_CATEGORY_INDEX: {\n  // Using Mapped Type to declare type (https://www.typescriptlang.org/docs/handbook/advanced-types.html#mapped-types)\n  [k in ScaleType]: ScaleType | 'numeric' | 'ordinal-position'\n} = {\n  linear: 'numeric',\n  log: 'numeric',\n  pow: 'numeric',\n  sqrt: 'numeric',\n  'bin-linear': 'bin-linear', // TODO: should bin-linear support merging with other\n  time: 'time',\n  utc: 'time',\n  sequential: 'sequential',\n  ordinal: 'ordinal',\n  'bin-ordinal': 'bin-ordinal', // TODO: should bin-ordinal support merging with other\n  point: 'ordinal-position',\n  band: 'ordinal-position'\n};\n\nexport function getScaleCategory(scaleType: ScaleType) {\n  return SCALE_CATEGORY_INDEX[scaleType];\n}\n\n/**\n * Whether the two given scale types can be merged together.\n */\nexport function scaleCompatible(scaleType1: ScaleType, scaleType2: ScaleType) {\n  return SCALE_CATEGORY_INDEX[scaleType1] === SCALE_CATEGORY_INDEX[scaleType2];\n}\n\n\n/**\n * Index for scale predecence -- high score = higher priority for merging.\n */\nconst SCALE_PRECEDENCE_INDEX: {\n  // Using Mapped Type to declare type (https://www.typescriptlang.org/docs/handbook/advanced-types.html#mapped-types)\n  [k in ScaleType]: number\n} = {\n  // numeric\n  linear: 0,\n  log: 1,\n  pow: 1,\n  sqrt: 1,\n  // time\n  time: 0,\n  utc: 0,\n  // ordinal-position\n  point: 0,\n  band: 1, // band has higher precedence as it is better for interaction\n  // non grouped types\n  'bin-linear': 0,\n  sequential: 0,\n  ordinal: 0,\n  'bin-ordinal': 0,\n};\n\n/**\n * Return scale categories -- only scale of the same categories can be merged together.\n */\nexport function scaleTypePrecedence(scaleType: ScaleType): number {\n  return SCALE_PRECEDENCE_INDEX[scaleType];\n}\n\nexport const CONTINUOUS_TO_CONTINUOUS_SCALES: ScaleType[] = ['linear', 'bin-linear', 'log', 'pow', 'sqrt', 'time', 'utc'];\nconst CONTINUOUS_TO_CONTINUOUS_INDEX = toSet(CONTINUOUS_TO_CONTINUOUS_SCALES);\n\nexport const CONTINUOUS_DOMAIN_SCALES: ScaleType[] = CONTINUOUS_TO_CONTINUOUS_SCALES.concat(['sequential' /* TODO add 'quantile', 'quantize', 'threshold'*/]);\nconst CONTINUOUS_DOMAIN_INDEX = toSet(CONTINUOUS_DOMAIN_SCALES);\n\nexport const DISCRETE_DOMAIN_SCALES: ScaleType[] = ['ordinal', 'bin-ordinal', 'point', 'band'];\nconst DISCRETE_DOMAIN_INDEX = toSet(DISCRETE_DOMAIN_SCALES);\n\nconst BIN_SCALES_INDEX = toSet(['bin-linear', 'bin-ordinal']);\n\nexport const TIME_SCALE_TYPES: ScaleType[] = ['time', 'utc'];\n\nexport function hasDiscreteDomain(type: ScaleType): type is 'ordinal' | 'bin-ordinal' | 'point' | 'band' {\n  return type in DISCRETE_DOMAIN_INDEX;\n}\n\nexport function isBinScale(type: ScaleType): type is 'bin-linear' | 'bin-ordinal' {\n  return type in BIN_SCALES_INDEX;\n}\n\nexport function hasContinuousDomain(type: ScaleType):\n  type is 'linear' | 'log' | 'pow' | 'sqrt' |  'time' | 'utc'|\n          'sequential' /* TODO add | 'quantile' | 'quantize' | 'threshold' */ {\n  return type in CONTINUOUS_DOMAIN_INDEX;\n}\n\nexport function isContinuousToContinuous(type: ScaleType): type is 'linear' | 'bin-linear' | 'log' | 'pow' | 'sqrt' |  'time' | 'utc' {\n  return type in CONTINUOUS_TO_CONTINUOUS_INDEX;\n}\n\nexport type NiceTime = 'second' | 'minute' | 'hour' | 'day' | 'week' | 'month' | 'year';\n\nexport interface ScaleConfig {\n  /**\n   * If true, rounds numeric output values to integers.\n   * This can be helpful for snapping to the pixel grid.\n   * (Only available for `x`, `y`, `size`, `row`, and `column` scales.)\n   */\n  round?: boolean;\n\n  /**\n   * If true, values that exceed the data domain are clamped to either the minimum or maximum range value\n   */\n  clamp?: boolean;\n  /**\n   *  Default range step for `x` ordinal scale when is mark is `text`.\n   *\n   * __Default value:__ `90`\n   *\n   *  @minimum 0\n   */\n  textXRangeStep?: number; // FIXME: consider if we will rename this \"tableColumnWidth\"\n  /**\n   * Default range step for (1) `y` ordinal scale,\n   * and (2) `x` ordinal scale when the mark is not `text`.\n   *\n   * __Default value:__ `21`\n   *\n   * @minimum 0\n   * @nullable\n   */\n  rangeStep?: number | null;\n\n  /**\n   * Default inner padding for `x` and `y` band-ordinal scales.\n   *\n   * __Default value:__ `0.1`\n   *\n   * @minimum 0\n   * @maximum 1\n   */\n  bandPaddingInner?: number;\n\n  /**\n   * Default outer padding for `x` and `y` band-ordinal scales.\n   * If not specified, by default, band scale's paddingOuter is paddingInner/2.\n   * @minimum 0\n   * @maximum 1\n   */\n  bandPaddingOuter?: number;\n\n  /**\n   * Default outer padding for `x` and `y` point-ordinal scales.\n   *\n   * __Default value:__ `0.5`\n   *\n   * @minimum 0\n   * @maximum 1\n   */\n  pointPadding?: number;\n\n  /**\n   * Use the source data range before aggregation as scale domain instead of aggregated data for aggregate axis.\n   * This property only works with aggregate functions that produce values within the raw data domain (`\"mean\"`, `\"average\"`, `\"median\"`, `\"q1\"`, `\"q3\"`, `\"min\"`, `\"max\"`). For other aggregations that produce values outside of the raw data domain (e.g. `\"count\"`, `\"sum\"`), this property is ignored.\n   */\n  useUnaggregatedDomain?: boolean;\n\n  // nice should depends on type (quantitative or temporal), so\n  // let's not make a config.\n\n  // Configs for Range\n\n\n  /**\n   * The default max value for mapping quantitative fields to bar's size/bandSize.\n   * If undefined (default), we will use bandSize - 1.\n   * @minimum 0\n   */\n  maxBandSize?: number;\n\n  /**\n   * The default min value for mapping quantitative fields to bar and tick's size/bandSize scale with zero=false\n   * If undefined (default), we will use the `continuousBandSize` value for bar and 3 for ticks.\n   * @minimum 0\n   */\n  minBandSize?: number;\n\n  /**\n   * The default max value for mapping quantitative fields to text's size/fontSize.\n   * If undefined (default), we will use bandSize - 1.\n   *\n   * __Default value:__ `40`\n   *\n   * @minimum 0\n   */\n  maxFontSize?: number;\n\n  /**\n   * The default min value for mapping quantitative fields to tick's size/fontSize scale with zero=false\n   *\n   * __Default value:__ `8`\n   *\n   * @minimum 0\n   */\n  minFontSize?: number;\n\n  /**\n   * Default minimum opacity for mapping a field to opacity.\n   *\n   * __Default value:__ `0.3`\n   *\n   * @minimum 0\n   * @maximum 1\n   */\n  minOpacity?: number;\n\n  /**\n   * Default max opacity for mapping a field to opacity.\n   *\n   * __Default value:__ `0.8`\n   *\n   * @minimum 0\n   * @maximum 1\n   */\n  maxOpacity?: number;\n\n\n  /**\n   * Default minimum value for point size scale with zero=false.\n   *\n   * __Default value:__ `9`\n   *\n   * @minimum 0\n   */\n  minSize?: number;\n\n  /**\n   * Default max value for point size scale.\n   * @minimum 0\n   */\n  maxSize?: number;\n\n  /**\n   * Default minimum strokeWidth for strokeWidth (or rule/line's size) scale with zero=false.\n   *\n   * __Default value:__ `1`\n   *\n   * @minimum 0\n   */\n  minStrokeWidth?: number;\n\n  /**\n   * Default max strokeWidth for strokeWidth  (or rule/line's size) scale.\n   *\n   * __Default value:__ `4`\n   *\n   * @minimum 0\n   */\n  maxStrokeWidth?: number;\n\n  /**\n   * The default collection of symbol shapes for mapping nominal fields to shapes of point marks (i.e., range of a `shape` scale).\n   * Each value should be one of: `\"circle\"`, `\"square\"`, `\"cross\"`, `\"diamond\"`, `\"triangle-up\"`, or `\"triangle-down\"`, or a custom SVG path.\n   *\n   * __Default value:__ `[\"circle\", \"square\", \"cross\", \"diamond\", \"triangle-up\", \"triangle-down\"]`\n   *\n   */\n  shapes?: string[];\n}\n\nexport const defaultScaleConfig = {\n  round: true,\n  textXRangeStep: 90,\n  rangeStep: 21,\n  pointPadding: 0.5,\n  bandPaddingInner: 0.1,\n  facetSpacing: 16,\n\n  minFontSize: 8,\n  maxFontSize: 40,\n\n  minOpacity: 0.3,\n  maxOpacity: 0.8,\n\n  // FIXME: revise if these *can* become ratios of rangeStep\n  minSize: 9, // Point size is area. For square point, 9 = 3 pixel ^ 2, not too small!\n\n  minStrokeWidth: 1,\n  maxStrokeWidth: 4,\n\n  shapes: ['circle', 'square', 'cross', 'diamond', 'triangle-up', 'triangle-down']\n};\n\nexport interface ExtendedScheme {\n  /**\n   * Color scheme that determines output color of an ordinal/sequential color scale.\n   */\n  name: string;\n\n  // TODO: add docs\n  extent?: number[];\n\n  // TODO: add docs\n  count?: number;\n}\n\nexport type SelectionDomain = {selection: string, field?: string} | {selection: string, encoding?: string};\nexport type Domain = number[] | string[] | DateTime[] | 'unaggregated' | SelectionDomain;\nexport type Scheme = string | ExtendedScheme;\n\nexport type Range = number[] | string[] | string;\n\nexport function isExtendedScheme(scheme: string | ExtendedScheme): scheme is ExtendedScheme {\n  return scheme && !!scheme['name'];\n}\n\nexport function isSelectionDomain(domain: Domain): domain is SelectionDomain {\n  return domain && domain['selection'];\n}\n\nexport interface Scale {\n  /**\n   * The type of scale.\n   * - For a _quantitative_ field, supported quantitative scale types  are `\"linear\"` (default), `\"log\"`, `\"pow\"`, `\"sqrt\"`, `\"quantile\"`, `\"quantize\"`, and `\"threshold\"`.\n   * - For a _temporal_ field without `timeUnit`, the scale type should be `\"time\"` (default), `\"utc\"` or `\"ordinal\"`. See more about [UTC time](timeunit.html#utc)\n   * - For _ordinal_ and _nominal_ fields, the type is always `\"ordinal\"`.\n   * Unsupported values will be ignored.\n   */\n  type?: ScaleType;\n  /**\n   * The domain of the scale, representing the set of data values. For quantitative data, this can take the form of a two-element array with minimum and maximum values. For ordinal/categorical data, this may be an array of valid input values.\n   *\n   * If the domain is `\"unaggregated\"`, we use the source data range before aggregation as scale domain instead of aggregated data for an aggregate axis.\n   * This property only works with aggregate functions that produce values within the raw data domain (`\"mean\"`, `\"average\"`, `\"median\"`, `\"q1\"`, `\"q3\"`, `\"min\"`, `\"max\"`). For other aggregations that produce values outside of the raw data domain (e.g. `\"count\"`, `\"sum\"`), this property is ignored.\n   */\n  domain?: Domain;\n\n  /**\n   * If true, reverses the order of the scale range.\n   * __Default value:__ `false`.\n   */\n  reverse?: boolean;\n\n  /**\n   * The range of the scale, representing the set of visual values. For numeric values, the range can take the form of a two-element array with minimum and maximum values. For ordinal or quantized data, the range may by an array of desired output values, which are mapped to elements in the specified domain.\n   */\n  range?: Range;\n\n  /**\n   * If `true`, rounds numeric output values to integers. This can be helpful for snapping to the pixel grid.\n   *\n   * __Default Rule:__ `true` for `\"x\"`, `\"y\"`, `\"row\"`, `\"column\"` channels if scale config's `round` is `true`; `false` otherwise.\n   */\n  round?: boolean;\n\n  // ordinal\n  /**\n   * The distance between the starts of adjacent bands or points in band or point scales.\n   * If this value is `null`, this will be determined to fit width (for x) or height (for y) of the plot.\n   * If both width and x-scale's rangeStep is provided, rangeStep will be dropped.  (The same rule is applied for height and y-scale's rangeStep.)\n   *\n   * __Default Rule:__ for `x` ordinal scale of a `text` mark, derived from [scale config](config.html#scale-config)'s `textXRangeStep`. Otherwise, derived from [scale config](config.html#scale-config)'s `rangeStep`.\n   * __Warning:__ If the cardinality of the scale domain is too high, the rangeStep might become less than one pixel and the mark might not appear correctly.\n   * @minimum 0\n   * @nullable\n   */\n  rangeStep?: number | null;\n\n  /**\n   * Range scheme (e.g., color schemes such as `\"category10\"` or `\"viridis\"`).\n   *\n   * __Default value:__ [scale config](config.html#scale-config)'s `\"nominalColorScheme\"` for nominal field and `\"sequentialColorScheme\"` for other types of fields.\n   *\n   */\n  scheme?: Scheme;\n\n\n  /**\n   * Applies spacing among ordinal elements in the scale range. The actual effect depends on how the scale is configured. If the __points__ parameter is `true`, the padding value is interpreted as a multiple of the spacing between points. A reasonable value is 1.0, such that the first and last point will be offset from the minimum and maximum value by half the distance between points. Otherwise, padding is typically in the range [0, 1] and corresponds to the fraction of space in the range interval to allocate to padding. A value of 0.5 means that the band size will be equal to the padding width. For more, see the [D3 ordinal scale documentation](https://github.com/mbostock/d3/wiki/Ordinal-Scales).\n   * A convenience property for setting the inner and outer padding to the same value.\n   *\n   * __Default value:__ `x` and `y` channels are derived from [scale config](config.html#scale-config)'s `pointPadding` for `point` scale and `bandPadding` for `band` scale.  Other channels have `0` padding by default.\n   *\n   * @minimum 0\n   * @maximum 1\n   */\n  padding?: number;\n\n  /**\n   * The inner padding of a band scale determines the ratio of the range that is reserved for blank space between bands. (For point scale, this property is ignored.)\n   * @minimum 0\n   * @maximum 1\n   */\n  paddingInner?: number;\n\n  /**\n   * The outer padding determines the ratio of the range that is reserved for blank space before the first and after the last bands/points.\n   * @minimum 0\n   * @maximum 1\n   */\n  paddingOuter?: number;\n\n  // typical\n  /**\n   * If `true`, values that exceed the data domain are clamped to either the minimum or maximum range value\n   *\n   * __Default value:__ derived from [scale config](config.html#scale-config) (`true` by default)\n   *\n   * __Supported types:__ only `linear`, `pow`, `sqrt`, and `log` (Not applicable for `quantile`, `quantize`, and `threshold` scales as they output discrete ranges.)\n   *\n   */\n  clamp?: boolean;\n  /**\n   * As quantitative scale property, if specified, modifies the scale domain to use a more human-friendly value range. If specified as a `true` boolean, modifies the scale domain to use a more human-friendly number range (e.g., 7 instead of 6.96). If specified as a string, modifies the scale domain to use a more human-friendly value range. For time and utc scale types only, the nice value should be a string indicating the desired time interval.\n   * As time scale properties, if `true`, values that exceed the data domain are clamped to either the minimum or maximum range value. (Not applicable for `quantile`, `quantize`, and `threshold` scales as they output discrete ranges.)\n   *\n   * __Default value:__ `true` only for quantitative x and y scales and `false` otherwise.\n   *\n   */\n  nice?: boolean | string;\n  /**\n   * Sets the exponent of the scale transformation. For `pow` scale types only, otherwise ignored.\n   */\n  exponent?: number;\n  /**\n   * If `true`, ensures that a zero baseline value is included in the scale domain.\n   * Default value: `true` for `x` and `y` channel if the quantitative field is not binned\n   * and no custom `domain` is provided; `false` otherwise.\n   *\n   * __Default value:__ `true` for `x` and `y` channel if the quantitative field is not binned and no custom `domain` is provided; `false` otherwise.\n   *\n   * __Note:__  This property is always `false` for log scale.\n   *\n   */\n  zero?: boolean;\n\n  // FIXME: Add description\n  interpolate?: 'rgb'| 'lab' | 'hcl' | 'hsl' | 'hsl-long' | 'hcl-long' | 'cubehelix' | 'cubehelix-long';\n}\n\n\nexport const NON_TYPE_DOMAIN_RANGE_VEGA_SCALE_PROPERTIES: (keyof (Scale | ScaleComponentProps))[] = [\n  'reverse', 'round',\n  // quantitative / time\n  'clamp', 'nice',\n  // quantitative\n  'exponent', 'interpolate', 'zero', // zero depends on domain\n  // ordinal\n  'padding', 'paddingInner', 'paddingOuter', // padding\n];\n\nexport const SCALE_PROPERTIES: (keyof Scale)[]= [].concat([\n  'type', 'domain',\n  'range', 'rangeStep', 'scheme'\n], NON_TYPE_DOMAIN_RANGE_VEGA_SCALE_PROPERTIES);\n\nexport function scaleTypeSupportProperty(scaleType: ScaleType, propName: keyof Scale) {\n  switch (propName) {\n    case 'type':\n    case 'domain':\n    case 'reverse':\n    case 'range':\n    case 'scheme':\n      return true;\n    case 'interpolate':\n      return contains(['linear', 'bin-linear', 'pow', 'log', 'sqrt', 'utc', 'time'], scaleType);\n    case 'round':\n      return isContinuousToContinuous(scaleType) || scaleType === 'band' || scaleType === 'point';\n    case 'rangeStep':\n    case 'padding':\n    case 'paddingOuter':\n      return contains(['point', 'band'], scaleType);\n    case 'paddingInner':\n      return scaleType === 'band';\n    case 'clamp':\n      return isContinuousToContinuous(scaleType) || scaleType === 'sequential';\n    case 'nice':\n      return isContinuousToContinuous(scaleType) || scaleType === 'sequential' || scaleType as any === 'quantize';\n    case 'exponent':\n      return scaleType === 'pow' || scaleType === 'log';\n    case 'zero':\n      // TODO: what about quantize, threshold?\n      return scaleType === 'bin-ordinal' || (!hasDiscreteDomain(scaleType) && !contains(['log', 'time', 'utc', 'bin-linear'], scaleType));\n  }\n  /* istanbul ignore next: should never reach here*/\n  throw new Error(`Invalid scale property ${propName}.`);\n}\n\n/**\n * Returns undefined if the input channel supports the input scale property name\n */\nexport function channelScalePropertyIncompatability(channel: Channel, propName: keyof Scale): string {\n  switch (propName) {\n    case 'range':\n      // User should not customize range for position and facet channel directly.\n      if (channel === 'x' || channel === 'y') {\n        return log.message.CANNOT_USE_RANGE_WITH_POSITION;\n      }\n      return undefined; // GOOD!\n    case 'interpolate':\n    case 'scheme':\n      if (channel !== 'color') {\n        return log.message.cannotUseScalePropertyWithNonColor(channel);\n      }\n      return undefined;\n    case 'type':\n    case 'domain':\n    case 'exponent':\n    case 'nice':\n    case 'padding':\n    case 'paddingInner':\n    case 'paddingOuter':\n    case 'rangeStep':\n    case 'reverse':\n    case 'round':\n    case 'clamp':\n    case 'zero':\n      return undefined; // GOOD!\n  }\n  /* istanbul ignore next: it should never reach here */\n  throw new Error('Invalid scale property \"${propName}\".');\n}\n","import {SingleDefChannel} from './channel';\nimport {VgBinding} from './vega.schema';\n\nexport const SELECTION_ID = '_vgsid_';\nexport type SelectionType = 'single' | 'multi' | 'interval';\nexport type SelectionResolution = 'global' | 'union' | 'intersect';\n\nexport interface BaseSelectionDef {\n  /**\n   * A Vega event stream (object or selector) that triggers the selection.\n   */\n  on?: any;\n  /**\n   * With layered and multi-view displays, a strategy that determines how\n   * selections' data queries are resolved when applied in a filter transform,\n   * conditional encoding rule, or scale domain. One of: \"global\", \"union\",\n   * \"intersect\", \"union_others\", or \"intersect_others\".\n   *\n   * __global__: Only one instance of the selection exists across all\n   * views. When a user interacts within a new view, any previous selections\n   * are overridden.\n   *\n   * __union__: Each view contains its own selection, and a data value is\n   * considered to be selected if it falls within _any_ of these selection\n   * instances.\n   *\n   * __intersect__: Each view contains its own selection, and a data value is\n   * considered to be selected if it falls within _all_ of these selection\n   * instances.\n   *\n   */\n  resolve?: SelectionResolution;\n\n  // TODO(https://github.com/vega/vega-lite/issues/2596).\n  // predicate?: string;\n  // domain?: SelectionDomain;\n\n  // Transforms\n\n  /**\n   * An array of encoding channels. The corresponding data field values\n   * must match for a data tuple to fall within the selection.\n   */\n  encodings?: SingleDefChannel[];\n\n  /**\n   * An array of field names whose values must match for a data tuple to\n   * fall within the selection.\n   */\n  fields?: string[];\n}\n\nexport interface SingleSelectionConfig extends BaseSelectionDef {\n  /**\n   * Establish a two-way binding between a single selection and input elements\n   * (also known as dynamic query widgets). A binding takes the form of\n   * Vega's [input element binding definition](https://vega.github.io/vega/docs/signals/#bind)\n   * or can be a mapping between projected field/encodings and binding definitions.\n   */\n  bind?: VgBinding | {[key: string]: VgBinding};\n\n  /**\n   * When true, an invisible voronoi diagram is computed to accelerate discrete\n   * selection. The data value _nearest_ the mouse cursor is added to the selection.\n   */\n  nearest?: boolean;\n}\n\nexport interface MultiSelectionConfig extends BaseSelectionDef {\n  /**\n   * Controls whether data values should be toggled or only ever inserted into\n   * multi selections. Can be `true`, `false` (for insertion only), or a\n   * [Vega expression](https://vega.github.io/vega/docs/expressions/).\n   *\n   * __Default value:__ `true`, which corresponds to `event.shiftKey` (i.e.,\n   * data values are toggled when a user interacts with the shift-key pressed).\n   */\n  toggle?: string | boolean;\n\n  /**\n   * When true, an invisible voronoi diagram is computed to accelerate discrete\n   * selection. The data value _nearest_ the mouse cursor is added to the selection.\n   */\n  nearest?: boolean;\n}\n\nexport interface BrushConfig {\n  /**\n   * The fill color of the interval mark.\n   *\n   * __Default value:__ `#333333`\n   *\n   */\n  fill?: string;\n  /**\n   * The fill opacity of the interval mark (a value between 0 and 1).\n   *\n   * __Default value:__ `0.125`\n   */\n  fillOpacity?: number;\n  /**\n   * The stroke color of the interval mark.\n   *\n   * __Default value:__ `#ffffff`\n   */\n  stroke?: string;\n  /**\n   * The stroke opacity of the interval mark (a value between 0 and 1).\n   */\n  strokeOpacity?: number;\n  /**\n   * The stroke width of the interval mark.\n   */\n  strokeWidth?: number;\n  /**\n   * An array of alternating stroke and space lengths,\n   * for creating dashed or dotted lines.\n   */\n  strokeDash?: number[];\n  /**\n   * The offset (in pixels) with which to begin drawing the stroke dash array.\n   */\n  strokeDashOffset?: number;\n}\n\nexport interface IntervalSelectionConfig extends BaseSelectionDef {\n  /**\n   * When truthy, allows a user to interactively move an interval selection\n   * back-and-forth. Can be `true`, `false` (to disable panning), or a\n   * [Vega event stream definition](https://vega.github.io/vega/docs/event-streams/)\n   * which must include a start and end event to trigger continuous panning.\n   *\n   * __Default value:__ `true`, which corresponds to\n   * `[mousedown, window:mouseup] > window:mousemove!` which corresponds to\n   * clicks and dragging within an interval selection to reposition it.\n   */\n  translate?: string | boolean;\n\n  /**\n   * When truthy, allows a user to interactively resize an interval selection.\n   * Can be `true`, `false` (to disable zooming), or a [Vega event stream\n   * definition](https://vega.github.io/vega/docs/event-streams/). Currently,\n   * only `wheel` events are supported.\n   *\n   *\n   * __Default value:__ `true`, which corresponds to `wheel!`.\n   */\n  zoom?: string | boolean;\n\n  /**\n   * Establishes a two-way binding between the interval selection and the scales\n   * used within the same view. This allows a user to interactively pan and\n   * zoom the view.\n   */\n  bind?: 'scales';\n\n  /**\n   * Each (unbound) interval selection also adds a rectangle mark to depict the\n   * extents of the interval. The `mark` property can be used to customize the\n   * appearance of the mark.\n   */\n  mark?: BrushConfig;\n}\n\nexport interface SingleSelection extends SingleSelectionConfig {\n  type: 'single';\n}\n\nexport interface MultiSelection extends MultiSelectionConfig {\n  type: 'multi';\n}\n\nexport interface IntervalSelection extends IntervalSelectionConfig {\n  type: 'interval';\n}\n\nexport type SelectionDef = SingleSelection | MultiSelection | IntervalSelection;\n\nexport interface SelectionConfig {\n  single: SingleSelectionConfig;\n  multi: MultiSelectionConfig;\n  interval: IntervalSelectionConfig;\n}\n\nexport const defaultConfig:SelectionConfig = {\n  single: {on: 'click', fields: [SELECTION_ID], resolve: 'global'},\n  multi: {on: 'click', fields: [SELECTION_ID], toggle: 'event.shiftKey', resolve: 'global'},\n  interval: {\n    on: '[mousedown, window:mouseup] > window:mousemove!',\n    encodings: ['x', 'y'],\n    translate: '[mousedown, window:mouseup] > window:mousemove!',\n    zoom: 'wheel!',\n    mark: {fill: '#333', fillOpacity: 0.125, stroke: 'white'},\n    resolve: 'global'\n  }\n};\n","import {AggregateOp} from './aggregate';\n\n\nexport type SortOrder = 'ascending' | 'descending' | null;\n\nexport interface SortField {\n  /**\n   * The field name to aggregate over.\n   */\n  field?: string;\n  /**\n   * The sort aggregation operator\n   */\n  op: AggregateOp;\n\n  order?: SortOrder;\n}\n\nexport function isSortField(sort: SortOrder | SortField): sort is SortField {\n  return !!sort && (sort['op'] === 'count' || !!sort['field']) && !!sort['op'];\n}\n","import {COLUMN, ROW, X, X2, Y, Y2} from './channel';\nimport * as compositeMark from './compositemark';\nimport {Config, OverlayConfig} from './config';\nimport {Data} from './data';\nimport {channelHasField, Encoding, EncodingWithFacet, isRanged} from './encoding';\nimport * as vlEncoding from './encoding';\nimport {Facet} from './facet';\nimport {Field, FieldDef} from './fielddef';\nimport * as log from './log';\nimport {AnyMark, AREA, isPrimitiveMark, LINE, Mark, MarkDef} from './mark';\nimport {Repeat} from './repeat';\nimport {ResolveMapping} from './resolve';\nimport {SelectionDef} from './selection';\nimport {stack} from './stack';\nimport {Title} from './title';\nimport {TopLevelProperties} from './toplevelprops';\nimport {Transform} from './transform';\nimport {contains, Dict, duplicate, hash, vals} from './util';\nimport {VgTitle} from './vega.schema';\n\n\nexport type TopLevel<S extends BaseSpec> = S & TopLevelProperties & {\n  /**\n   * URL to JSON schema for this Vega-Lite specification.\n   * @format uri\n   */\n  $schema?: string;\n\n  /**\n   * Vega-Lite configuration object.  This property can only be defined at the top-level of a specification.\n   */\n  config?: Config;\n};\n\n\nexport interface BaseSpec {\n  /**\n   * @hide\n   */\n  title?: Title;\n\n  /**\n   * Name of the visualization for later reference.\n   */\n  name?: string;\n\n  /**\n   * An optional description of this mark for commenting purpose.\n   */\n  description?: string;\n\n  /**\n   * An object describing the data source\n   */\n  data?: Data;\n\n  /**\n   * An array of data transformations such as filter and new field calculation.\n   */\n  transform?: Transform[];\n}\n\n// TODO(https://github.com/vega/vega-lite/issues/2503): Make this generic so we can support some form of top-down sizing.\nexport interface LayoutSizeMixins {\n  /**\n   * The width of a visualization.\n   *\n   * __Default value:__ This will be determined by the following rules:\n   *\n   * - For x-axis with a continuous (non-ordinal) scale, the width will be the value of [`config.cell.width`](config.html#cell-config).\n   * - For x-axis with an ordinal scale: if [`rangeStep`](scale.html#ordinal) is a numeric value (default), the width is determined by the value of `rangeStep` and the cardinality of the field mapped to x-channel.   Otherwise, if the `rangeStep` is `null`, the width will be the value of [`config.cell.width`](config.html#cell-config).\n   * - If no field is mapped to `x` channel, the `width` will be the value of [`config.scale.textXRangeStep`](size.html#default-width-and-height) for `text` mark and the value of `rangeStep` for other marks.\n   *\n   * __Note__: For plot with `row` and `column` channels, this represents the width of a single cell.\n   */\n  width?: number;\n\n  /**\n   * The height of a visualization.\n   *\n   * __Default value:__\n   * - For y-axis with a continuous (non-ordinal) scale, the height will be the value of [`config.cell.height`](config.html#cell-config).\n   * - For y-axis with an ordinal scale: if [`rangeStep`](scale.html#ordinal) is a numeric value (default), the height is determined by the value of `rangeStep` and the cardinality of the field mapped to y-channel.   Otherwise, if the `rangeStep` is `null`, the height will be the value of [`config.cell.height`](config.html#cell-config).\n   * - If no field is mapped to `x` channel, the `height` will be the value of `rangeStep`.\n   *\n   * __Note__: For plot with `row` and `column` channels, this represents the height of a single cell.\n   */\n  height?: number;\n}\n\nexport interface GenericUnitSpec<E extends Encoding<any>, M> extends BaseSpec, LayoutSizeMixins {\n\n  /**\n   * A string describing the mark type (one of `\"bar\"`, `\"circle\"`, `\"square\"`, `\"tick\"`, `\"line\"`,\n   * `\"area\"`, `\"point\"`, `\"rule\"`, and `\"text\"`) or a [mark definition object](mark.html#mark-def).\n   */\n  mark: M;\n\n  /**\n   * A key-value mapping between encoding channels and definition of fields.\n   */\n  encoding: E;\n\n  /**\n   * A key-value mapping between selection names and definitions.\n   */\n  selection?: {[name: string]: SelectionDef};\n}\n\nexport type UnitSpec = GenericUnitSpec<Encoding<Field>, Mark | MarkDef>;\n\n/**\n * Unit spec that can have a composite mark.\n */\nexport type CompositeUnitSpec = GenericUnitSpec<Encoding<Field>, AnyMark>;\n\n/**\n * Unit spec that can have a composite mark and row or column channels.\n */\nexport type FacetedCompositeUnitSpec = GenericUnitSpec<EncodingWithFacet<Field>, AnyMark>;\n\nexport interface GenericLayerSpec<U extends GenericUnitSpec<any, any>> extends BaseSpec, LayoutSizeMixins {\n  /**\n   * Unit specs that will be layered.\n   */\n  layer: (GenericLayerSpec<U> | U)[];\n\n  resolve?: ResolveMapping;\n}\n\nexport type LayerSpec = GenericLayerSpec<UnitSpec>;\n\nexport interface GenericFacetSpec<U extends GenericUnitSpec<any, any>> extends BaseSpec {\n  facet: Facet<Field>;\n\n  spec: GenericSpec<U>;\n\n  resolve?: ResolveMapping;\n}\n\nexport type FacetSpec = GenericFacetSpec<UnitSpec>;\n\nexport interface GenericRepeatSpec<U extends GenericUnitSpec<any, any>> extends BaseSpec {\n  repeat: Repeat;\n\n  spec: GenericSpec<U>;\n\n  resolve?: ResolveMapping;\n}\n\nexport type RepeatSpec = GenericRepeatSpec<UnitSpec>;\n\nexport interface GenericVConcatSpec<U extends GenericUnitSpec<any, any>> extends BaseSpec {\n  vconcat: (GenericSpec<U>)[];\n\n  resolve?: ResolveMapping;\n}\n\nexport interface GenericHConcatSpec<U extends GenericUnitSpec<any, any>> extends BaseSpec {\n  hconcat: (GenericSpec<U>)[];\n\n  resolve?: ResolveMapping;\n}\n\nexport type ConcatSpec = GenericVConcatSpec<UnitSpec> | GenericHConcatSpec<UnitSpec>;\n\nexport type GenericSpec<U extends GenericUnitSpec<any, any>> = U | GenericLayerSpec<U> | GenericFacetSpec<U> | GenericRepeatSpec<U> | GenericVConcatSpec<U> | GenericHConcatSpec<U>;\n\nexport type Spec = GenericSpec<UnitSpec>;\n\nexport type TopLevelExtendedSpec = TopLevel<FacetedCompositeUnitSpec> | TopLevel<GenericLayerSpec<CompositeUnitSpec>> | TopLevel<GenericFacetSpec<CompositeUnitSpec>> | TopLevel<GenericRepeatSpec<CompositeUnitSpec>> | TopLevel<GenericVConcatSpec<CompositeUnitSpec>> | TopLevel<GenericHConcatSpec<CompositeUnitSpec>>;\n\n/* Custom type guards */\n\n\nexport function isFacetSpec(spec: GenericSpec<GenericUnitSpec<any, any>>): spec is GenericFacetSpec<GenericUnitSpec<any, any>> {\n  return spec['facet'] !== undefined;\n}\n\nexport function isUnitSpec(spec: GenericSpec<GenericUnitSpec<any, any>>): spec is FacetedCompositeUnitSpec | UnitSpec {\n  return !!spec['mark'];\n}\n\nexport function isLayerSpec(spec: GenericSpec<GenericUnitSpec<any, any>>): spec is GenericLayerSpec<GenericUnitSpec<any, any>> {\n  return spec['layer'] !== undefined;\n}\n\nexport function isRepeatSpec(spec: GenericSpec<GenericUnitSpec<any, any>>): spec is GenericRepeatSpec<GenericUnitSpec<any, any>> {\n  return spec['repeat'] !== undefined;\n}\n\nexport function isConcatSpec(spec: GenericSpec<GenericUnitSpec<any, any>>): spec is GenericVConcatSpec<GenericUnitSpec<any, any>> | GenericHConcatSpec<GenericUnitSpec<any, any>> {\n  return isVConcatSpec(spec) || isHConcatSpec(spec);\n}\n\nexport function isVConcatSpec(spec: GenericSpec<GenericUnitSpec<any, any>>): spec is GenericVConcatSpec<GenericUnitSpec<any, any>> {\n  return spec['vconcat'] !== undefined;\n}\n\nexport function isHConcatSpec(spec: GenericSpec<GenericUnitSpec<any, any>>): spec is GenericHConcatSpec<GenericUnitSpec<any, any>> {\n  return spec['hconcat'] !== undefined;\n}\n\n/**\n * Decompose extended unit specs into composition of pure unit specs.\n */\n// TODO: consider moving this to another file.  Maybe vl.spec.normalize or vl.normalize\nexport function normalize(spec: TopLevelExtendedSpec, config: Config): Spec {\n  if (isFacetSpec(spec)) {\n    return normalizeFacet(spec, config);\n  }\n  if (isLayerSpec(spec)) {\n    return normalizeLayer(spec, config);\n  }\n  if (isRepeatSpec(spec)) {\n    return normalizeRepeat(spec, config);\n  }\n  if (isVConcatSpec(spec)) {\n    return normalizeVConcat(spec, config);\n  }\n  if (isHConcatSpec(spec)) {\n    return normalizeHConcat(spec, config);\n  }\n  if (isUnitSpec(spec)) {\n    const hasRow = channelHasField(spec.encoding, ROW);\n    const hasColumn = channelHasField(spec.encoding, COLUMN);\n\n    if (hasRow || hasColumn) {\n      return normalizeFacetedUnit(spec, config);\n    }\n    return normalizeNonFacetUnit(spec, config);\n  }\n  throw new Error(log.message.INVALID_SPEC);\n}\n\nfunction normalizeFacet(spec: GenericFacetSpec<CompositeUnitSpec>, config: Config): FacetSpec {\n  const {spec: subspec, ...rest} = spec;\n  return {\n    ...rest,\n    spec: normalize(subspec, config)\n  };\n}\n\nfunction normalizeLayer(spec: GenericLayerSpec<CompositeUnitSpec>, config: Config): LayerSpec {\n  const {layer: layer, ...rest} = spec;\n  return {\n    ...rest,\n    layer: layer.map((subspec) => isLayerSpec(subspec) ? normalizeLayer(subspec, config) : normalizeNonFacetUnit(subspec, config))\n  };\n}\n\nfunction normalizeRepeat(spec: GenericRepeatSpec<CompositeUnitSpec>, config: Config): RepeatSpec {\n  const {spec: subspec, ...rest} = spec;\n  return {\n    ...rest,\n    spec: normalize(subspec, config)\n  };\n}\n\nfunction normalizeVConcat(spec: GenericVConcatSpec<CompositeUnitSpec>, config: Config): ConcatSpec {\n  const {vconcat: vconcat, ...rest} = spec;\n  return {\n    ...rest,\n    vconcat: vconcat.map((subspec) => normalize(subspec, config))\n  };\n}\n\nfunction normalizeHConcat(spec: GenericHConcatSpec<CompositeUnitSpec>, config: Config): ConcatSpec {\n  const {hconcat: hconcat, ...rest} = spec;\n  return {\n    ...rest,\n    hconcat: hconcat.map((subspec) => normalize(subspec, config))\n  };\n}\n\nfunction normalizeFacetedUnit(spec: FacetedCompositeUnitSpec, config: Config): FacetSpec {\n  // New encoding in the inside spec should not contain row / column\n  // as row/column should be moved to facet\n  const {row: row, column: column, ...encoding} = spec.encoding;\n\n  // Mark and encoding should be moved into the inner spec\n  const {mark, width, height, selection, encoding: _, ...outerSpec} = spec;\n\n  return {\n    ...outerSpec,\n    facet: {\n      ...(row ? {row} : {}),\n      ...(column ? {column}: {}),\n    },\n    spec: normalizeNonFacetUnit({\n      mark,\n      ...(width ? {width} : {}),\n      ...(height ? {height} : {}),\n      encoding,\n      ...(selection ? {selection} : {})\n    }, config)\n  };\n}\n\nfunction isNonFacetUnitSpecWithPrimitiveMark(spec: GenericUnitSpec<Encoding<Field>, AnyMark>):\n  spec is GenericUnitSpec<Encoding<Field>, Mark> {\n    return isPrimitiveMark(spec.mark);\n}\n\n\nfunction normalizeNonFacetUnit(spec: GenericUnitSpec<Encoding<Field>, AnyMark>, config: Config) {\n  if (isNonFacetUnitSpecWithPrimitiveMark(spec)) {\n    // TODO: thoroughly test\n    if (isRanged(spec.encoding)) {\n      return normalizeRangedUnit(spec);\n    }\n\n    const overlayConfig: OverlayConfig = config && config.overlay;\n    const overlayWithLine = overlayConfig  && spec.mark === AREA &&\n      contains(['linepoint', 'line'], overlayConfig.area);\n    const overlayWithPoint = overlayConfig && (\n      (overlayConfig.line && spec.mark === LINE) ||\n      (overlayConfig.area === 'linepoint' && spec.mark === AREA)\n    );\n    // TODO: consider moving this to become another case of compositeMark\n    if (overlayWithPoint || overlayWithLine) {\n      return normalizeOverlay(spec, overlayWithPoint, overlayWithLine, config);\n    }\n\n    return spec; // Nothing to normalize\n  } else {\n    return compositeMark.normalize(spec, config);\n  }\n}\n\nfunction normalizeRangedUnit(spec: UnitSpec) {\n  const hasX = channelHasField(spec.encoding, X);\n  const hasY = channelHasField(spec.encoding, Y);\n  const hasX2 = channelHasField(spec.encoding, X2);\n  const hasY2 = channelHasField(spec.encoding, Y2);\n  if ((hasX2 && !hasX) || (hasY2 && !hasY)) {\n    const normalizedSpec = duplicate(spec);\n    if (hasX2 && !hasX) {\n      normalizedSpec.encoding.x = normalizedSpec.encoding.x2;\n      delete normalizedSpec.encoding.x2;\n    }\n    if (hasY2 && !hasY) {\n      normalizedSpec.encoding.y = normalizedSpec.encoding.y2;\n      delete normalizedSpec.encoding.y2;\n    }\n\n    return normalizedSpec;\n  }\n  return spec;\n}\n\n\n// FIXME(#1804): re-design this\nfunction normalizeOverlay(spec: UnitSpec, overlayWithPoint: boolean, overlayWithLine: boolean, config: Config): LayerSpec {\n  const {mark, selection, encoding, ...outerSpec} = spec;\n  const layer = [{mark, encoding}];\n\n  // Need to copy stack config to overlayed layer\n  const stackProps = stack(mark, encoding, config ? config.stack : undefined);\n\n  let overlayEncoding = encoding;\n  if (stackProps) {\n    const {fieldChannel: stackFieldChannel, offset} = stackProps;\n    overlayEncoding = {\n      ...encoding,\n      [stackFieldChannel]: {\n        ...encoding[stackFieldChannel],\n        ...(offset ? {stack: offset} : {})\n      }\n    };\n  }\n\n  if (overlayWithLine) {\n    layer.push({\n      mark: {\n        type: 'line',\n        style: 'lineOverlay'\n      },\n      ...(selection ? {selection} : {}),\n      encoding: overlayEncoding\n    });\n  }\n  if (overlayWithPoint) {\n    layer.push({\n      mark: {\n        type: 'point',\n        filled: true,\n        style: 'pointOverlay'\n      },\n      ...(selection ? {selection} : {}),\n      encoding: overlayEncoding\n    });\n  }\n\n  return {\n    ...outerSpec,\n    layer\n  };\n}\n\n// TODO: add vl.spec.validate & move stuff from vl.validate to here\n\n/* Accumulate non-duplicate fieldDefs in a dictionary */\nfunction accumulate(dict: any, fieldDefs: FieldDef<Field>[]): any {\n  fieldDefs.forEach(function(fieldDef) {\n    // Consider only pure fieldDef properties (ignoring scale, axis, legend)\n    const pureFieldDef = ['field', 'type', 'value', 'timeUnit', 'bin', 'aggregate'].reduce((f, key) => {\n      if (fieldDef[key] !== undefined) {\n        f[key] = fieldDef[key];\n      }\n      return f;\n    }, {});\n    const key = hash(pureFieldDef);\n    dict[key] = dict[key] || fieldDef;\n  });\n  return dict;\n}\n\n/* Recursively get fieldDefs from a spec, returns a dictionary of fieldDefs */\nfunction fieldDefIndex<T>(spec: GenericSpec<GenericUnitSpec<any, any>>, dict: Dict<FieldDef<T>> = {}): Dict<FieldDef<T>> {\n  // FIXME(https://github.com/vega/vega-lite/issues/2207): Support fieldDefIndex for repeat\n  if (isLayerSpec(spec)) {\n    spec.layer.forEach(layer => {\n      if (isUnitSpec(layer)) {\n        accumulate(dict, vlEncoding.fieldDefs(layer.encoding));\n      } else {\n        fieldDefIndex(layer, dict);\n      }\n    });\n  } else if (isFacetSpec(spec)) {\n    accumulate(dict, vlEncoding.fieldDefs(spec.facet));\n    fieldDefIndex(spec.spec, dict);\n  } else if (isRepeatSpec(spec)) {\n    fieldDefIndex(spec.spec, dict);\n  } else if (isConcatSpec(spec)) {\n    const childSpec = isVConcatSpec(spec) ? spec.vconcat : spec.hconcat;\n    childSpec.forEach(child => fieldDefIndex(child, dict));\n  } else { // Unit Spec\n    accumulate(dict, vlEncoding.fieldDefs(spec.encoding));\n  }\n  return dict;\n}\n\n/* Returns all non-duplicate fieldDefs in a spec in a flat array */\nexport function fieldDefs(spec: GenericSpec<GenericUnitSpec<any, any>>): FieldDef<any>[] {\n  return vals(fieldDefIndex(spec));\n}\n\nexport function isStacked(spec: TopLevel<FacetedCompositeUnitSpec>, config?: Config): boolean {\n  config = config || spec.config;\n  if (isPrimitiveMark(spec.mark)) {\n    return stack(spec.mark, spec.encoding,\n            config ? config.stack : undefined\n          ) !== null;\n  }\n  return false;\n}\n","import {SUM_OPS} from './aggregate';\nimport {Channel, STACK_BY_CHANNELS, StackByChannel, X, X2, Y, Y2} from './channel';\nimport {channelHasField, Encoding, isAggregate} from './encoding';\nimport {Field, FieldDef, getFieldDef, isFieldDef, PositionFieldDef} from './fielddef';\nimport * as log from './log';\nimport {AREA, BAR, CIRCLE, isMarkDef, LINE, Mark, MarkDef, POINT, RULE, SQUARE, TEXT, TICK} from './mark';\nimport {ScaleType} from './scale';\nimport {contains, isArray} from './util';\n\n\nexport type StackOffset = 'zero' | 'center' | 'normalize' | 'none';\n\nexport interface StackProperties {\n  /** Dimension axis of the stack. */\n  groupbyChannel: 'x' | 'y';\n\n  /** Measure axis of the stack. */\n  fieldChannel: 'x' | 'y';\n\n  /** Stack-by fields e.g., color, detail */\n  stackBy: {\n    fieldDef: FieldDef<string>,\n    channel: StackByChannel\n  }[];\n\n  /**\n   * Modes for stacking marks:\n   * - `zero`: stacking with baseline offset at zero value of the scale (for creating typical stacked [bar](mark.html#stacked-bar-chart) and [area](mark.html#stacked-area-chart) chart).\n   * - `normalize` - stacking with normalized domain (for creating normalized stacked [bar](mark.html#normalized-stacked-bar-chart) and [area](mark.html#normalized-stacked-area-chart) chart). <br/>\n   * -`center` - stacking with center baseline (for [streamgraph](mark.html#streamgraph)).\n   * - `none` - No-stacking. This will produce layered [bar](mark.html#layered-bar-chart) and area chart.\n   *\n   * __Default value:__ `zero` for plots with all of the following conditions: (1) `bar` or `area` marks (2) `color`, `opacity`, `size`, or `detail` channel mapped to a group-by field (3) One ordinal or nominal axis, and (4) one quantitative axis with linear scale and summative aggregation function (e.g., `sum`, `count`).\n   */\n  offset: StackOffset;\n\n  /**\n   * Whether this stack will produce impute transform\n   */\n  impute: boolean;\n}\n\nexport const STACKABLE_MARKS = [BAR, AREA, RULE, POINT, CIRCLE, SQUARE, LINE, TEXT, TICK];\nexport const STACK_BY_DEFAULT_MARKS = [BAR, AREA];\n\n// Note: CompassQL uses this method and only pass in required properties of each argument object.\n// If required properties change, make sure to update CompassQL.\n\nexport function stack(m: Mark | MarkDef, encoding: Encoding<Field>, stackConfig: StackOffset): StackProperties {\n  const mark = isMarkDef(m) ? m.type : m;\n  // Should have stackable mark\n  if (!contains(STACKABLE_MARKS, mark)) {\n    return null;\n  }\n\n  // Should be aggregate plot\n  if (!isAggregate(encoding)) {\n    return null;\n  }\n\n  // Should have grouping level of detail\n  const stackBy = STACK_BY_CHANNELS.reduce((sc, channel) => {\n    if (channelHasField(encoding, channel)) {\n      const channelDef = encoding[channel];\n      (isArray(channelDef) ? channelDef : [channelDef]).forEach((cDef) => {\n        const fieldDef = getFieldDef(cDef);\n        if (!fieldDef.aggregate) {\n          sc.push({\n            channel: channel,\n            fieldDef: fieldDef\n          });\n        }\n      });\n    }\n    return sc;\n  }, []);\n\n  if (stackBy.length === 0) {\n    return null;\n  }\n\n  // Has only one aggregate axis\n  const hasXField = isFieldDef(encoding.x);\n  const hasYField = isFieldDef(encoding.y);\n  const xIsAggregate = isFieldDef(encoding.x) && !!encoding.x.aggregate;\n  const yIsAggregate = isFieldDef(encoding.y) && !!encoding.y.aggregate;\n\n  if (xIsAggregate !== yIsAggregate) {\n    const fieldChannel = xIsAggregate ? X : Y;\n    const fieldDef = encoding[fieldChannel] as PositionFieldDef<string>;\n    const fieldChannelAggregate = fieldDef.aggregate;\n    const fieldChannelScale = fieldDef.scale;\n\n    let stackOffset: StackOffset = null;\n    if (fieldDef.stack !== undefined) {\n      stackOffset = fieldDef.stack;\n    } else if (contains(STACK_BY_DEFAULT_MARKS, mark)) {\n      // Bar and Area with sum ops are automatically stacked by default\n      stackOffset = stackConfig === undefined ? 'zero' : stackConfig;\n    } else {\n      stackOffset = stackConfig;\n    }\n\n    if (!stackOffset || stackOffset === 'none') {\n      return null;\n    }\n\n    // If stacked, check if it qualifies for stacking (and log warning if not qualified.)\n    if (fieldChannelScale && fieldChannelScale.type && fieldChannelScale.type !== ScaleType.LINEAR) {\n      log.warn(log.message.cannotStackNonLinearScale(fieldChannelScale.type));\n      return null;\n    }\n\n    if (channelHasField(encoding, fieldChannel === X ? X2 : Y2)) {\n      log.warn(log.message.cannotStackRangedMark(fieldChannel));\n      return null;\n    }\n\n    if (!contains(SUM_OPS, fieldChannelAggregate)) {\n      log.warn(log.message.cannotStackNonSummativeAggregate(fieldChannelAggregate));\n      return null;\n    }\n\n    return {\n      groupbyChannel: xIsAggregate ? (hasYField ? Y : null) : (hasXField ? X : null),\n      fieldChannel: fieldChannel,\n      impute: contains(['area', 'line'], mark),\n      stackBy: stackBy,\n      offset: stackOffset\n    };\n  }\n  return null;\n}\n","import {TimeUnitComponent} from './compile/data/timeunit';\nimport {DateTimeExpr, dateTimeExpr} from './datetime';\nimport * as log from './log';\nimport {Dict, keys, stringValue} from './util';\n\n\nexport namespace TimeUnit {\n  export const YEAR: 'year' = 'year';\n  export const MONTH: 'month' = 'month';\n  export const DAY: 'day' = 'day';\n  export const DATE: 'date' = 'date';\n  export const HOURS: 'hours' = 'hours';\n  export const MINUTES: 'minutes' = 'minutes';\n  export const SECONDS: 'seconds' = 'seconds';\n  export const MILLISECONDS: 'milliseconds' = 'milliseconds';\n  export const YEARMONTH: 'yearmonth' = 'yearmonth';\n  export const YEARMONTHDATE: 'yearmonthdate' = 'yearmonthdate';\n  export const YEARMONTHDATEHOURS: 'yearmonthdatehours' = 'yearmonthdatehours';\n  export const YEARMONTHDATEHOURSMINUTES: 'yearmonthdatehoursminutes' = 'yearmonthdatehoursminutes';\n  export const YEARMONTHDATEHOURSMINUTESSECONDS: 'yearmonthdatehoursminutesseconds' = 'yearmonthdatehoursminutesseconds';\n\n  // MONTHDATE always include 29 February since we use year 0th (which is a leap year);\n  export const MONTHDATE: 'monthdate' = 'monthdate';\n  export const HOURSMINUTES: 'hoursminutes' = 'hoursminutes';\n  export const HOURSMINUTESSECONDS: 'hoursminutesseconds' = 'hoursminutesseconds';\n  export const MINUTESSECONDS: 'minutesseconds' = 'minutesseconds';\n  export const SECONDSMILLISECONDS: 'secondsmilliseconds' = 'secondsmilliseconds';\n  export const QUARTER: 'quarter' = 'quarter';\n  export const YEARQUARTER: 'yearquarter' = 'yearquarter';\n  export const QUARTERMONTH: 'quartermonth' = 'quartermonth';\n  export const YEARQUARTERMONTH: 'yearquartermonth' = 'yearquartermonth';\n  export const UTCYEAR: 'utcyear' = 'utcyear';\n  export const UTCMONTH: 'utcmonth' = 'utcmonth';\n  export const UTCDAY: 'utcday' = 'utcday';\n  export const UTCDATE: 'utcdate' = 'utcdate';\n  export const UTCHOURS: 'utchours' = 'utchours';\n  export const UTCMINUTES: 'utcminutes' = 'utcminutes';\n  export const UTCSECONDS: 'utcseconds' = 'utcseconds';\n  export const UTCMILLISECONDS: 'utcmilliseconds' = 'utcmilliseconds';\n  export const UTCYEARMONTH: 'utcyearmonth' = 'utcyearmonth';\n  export const UTCYEARMONTHDATE: 'utcyearmonthdate' = 'utcyearmonthdate';\n  export const UTCYEARMONTHDATEHOURS: 'utcyearmonthdatehours' = 'utcyearmonthdatehours';\n  export const UTCYEARMONTHDATEHOURSMINUTES: 'utcyearmonthdatehoursminutes' = 'utcyearmonthdatehoursminutes';\n  export const UTCYEARMONTHDATEHOURSMINUTESSECONDS: 'utcyearmonthdatehoursminutesseconds' = 'utcyearmonthdatehoursminutesseconds';\n\n  // MONTHDATE always include 29 February since we use year 0th (which is a leap year);\n  export const UTCMONTHDATE: 'utcmonthdate' = 'utcmonthdate';\n  export const UTCHOURSMINUTES: 'utchoursminutes' = 'utchoursminutes';\n  export const UTCHOURSMINUTESSECONDS: 'utchoursminutesseconds' = 'utchoursminutesseconds';\n  export const UTCMINUTESSECONDS: 'utcminutesseconds' = 'utcminutesseconds';\n  export const UTCSECONDSMILLISECONDS: 'utcsecondsmilliseconds' = 'utcsecondsmilliseconds';\n  export const UTCQUARTER: 'utcquarter' = 'utcquarter';\n  export const UTCYEARQUARTER: 'utcyearquarter' = 'utcyearquarter';\n  export const UTCQUARTERMONTH: 'utcquartermonth' = 'utcquartermonth';\n  export const UTCYEARQUARTERMONTH: 'utcyearquartermonth' = 'utcyearquartermonth';\n}\n\nexport type TimeUnit = typeof TimeUnit.YEAR | typeof TimeUnit.MONTH | typeof TimeUnit.DAY | typeof TimeUnit.DATE | typeof TimeUnit.HOURS\n  | typeof TimeUnit.MINUTES | typeof TimeUnit.SECONDS | typeof TimeUnit.MILLISECONDS | typeof TimeUnit.YEARMONTH\n  | typeof TimeUnit.YEARMONTHDATE | typeof TimeUnit.YEARMONTHDATEHOURS | typeof TimeUnit.YEARMONTHDATEHOURSMINUTES\n  | typeof TimeUnit.YEARMONTHDATEHOURSMINUTESSECONDS | typeof TimeUnit.MONTHDATE | typeof TimeUnit.HOURSMINUTES\n  | typeof TimeUnit.HOURSMINUTESSECONDS | typeof TimeUnit.MINUTESSECONDS | typeof TimeUnit.SECONDSMILLISECONDS\n  | typeof TimeUnit.QUARTER | typeof TimeUnit.YEARQUARTER | typeof TimeUnit.QUARTERMONTH | typeof TimeUnit.YEARQUARTERMONTH\n  | typeof TimeUnit.UTCYEAR | typeof TimeUnit.UTCMONTH | typeof TimeUnit.UTCDAY | typeof TimeUnit.UTCDATE | typeof TimeUnit.UTCHOURS\n  | typeof TimeUnit.UTCMINUTES | typeof TimeUnit.UTCSECONDS | typeof TimeUnit.UTCMILLISECONDS | typeof TimeUnit.UTCYEARMONTH\n  | typeof TimeUnit.UTCYEARMONTHDATE | typeof TimeUnit.UTCYEARMONTHDATEHOURS | typeof TimeUnit.UTCYEARMONTHDATEHOURSMINUTES\n  | typeof TimeUnit.UTCYEARMONTHDATEHOURSMINUTESSECONDS | typeof TimeUnit.UTCMONTHDATE | typeof TimeUnit.UTCHOURSMINUTES\n  | typeof TimeUnit.UTCHOURSMINUTESSECONDS | typeof TimeUnit.UTCMINUTESSECONDS | typeof TimeUnit.UTCSECONDSMILLISECONDS\n  | typeof TimeUnit.UTCQUARTER | typeof TimeUnit.UTCYEARQUARTER | typeof TimeUnit.UTCQUARTERMONTH | typeof TimeUnit.UTCYEARQUARTERMONTH;\n\n/** Time Unit that only corresponds to only one part of Date objects. */\nexport const SINGLE_TIMEUNITS = [\n  TimeUnit.YEAR,\n  TimeUnit.QUARTER,\n  TimeUnit.MONTH,\n  TimeUnit.DAY,\n  TimeUnit.DATE,\n  TimeUnit.HOURS,\n  TimeUnit.MINUTES,\n  TimeUnit.SECONDS,\n  TimeUnit.MILLISECONDS\n];\n\ntype SingleTimeUnit = typeof SINGLE_TIMEUNITS[0];\n\nconst SINGLE_TIMEUNIT_INDEX = SINGLE_TIMEUNITS.reduce((d, timeUnit) => {\n  d[timeUnit] = true;\n  return d;\n}, {} as {[key in SingleTimeUnit]: boolean});\n\nexport function isSingleTimeUnit(timeUnit: TimeUnit) {\n  return !!SINGLE_TIMEUNIT_INDEX[timeUnit];\n}\n\n/**\n * Converts a date to only have the measurements relevant to the specified unit\n * i.e. ('yearmonth', '2000-12-04 07:58:14') -> '2000-12-01 00:00:00'\n * Note: the base date is Jan 01 1900 00:00:00\n */\nexport function convert(unit: TimeUnit, date: Date): Date {\n  const result: Date = new Date(0, 0, 1, 0, 0, 0, 0); // start with uniform date\n  SINGLE_TIMEUNITS.forEach(function(singleUnit) {\n    if (containsTimeUnit(unit, singleUnit)) {\n      switch (singleUnit) {\n        case TimeUnit.DAY:\n          throw new Error('Cannot convert to TimeUnits containing \\'day\\'');\n        case TimeUnit.YEAR:\n          result.setFullYear(date.getFullYear());\n          break;\n        case TimeUnit.QUARTER:\n          // indicate quarter by setting month to be the first of the quarter i.e. may (4) -> april (3)\n          result.setMonth((Math.floor(date.getMonth() / 3)) * 3);\n          break;\n        case TimeUnit.MONTH:\n          result.setMonth(date.getMonth());\n          break;\n        case TimeUnit.DATE:\n          result.setDate(date.getDate());\n          break;\n        case TimeUnit.HOURS:\n          result.setHours(date.getHours());\n          break;\n        case TimeUnit.MINUTES:\n          result.setMinutes(date.getMinutes());\n          break;\n        case TimeUnit.SECONDS:\n          result.setSeconds(date.getSeconds());\n          break;\n        case TimeUnit.MILLISECONDS:\n          result.setMilliseconds(date.getMilliseconds());\n          break;\n      }\n    }\n  });\n\n  return result;\n}\n\nexport const MULTI_TIMEUNITS = [\n  TimeUnit.YEARQUARTER,\n  TimeUnit.YEARQUARTERMONTH,\n  TimeUnit.YEARMONTH,\n  TimeUnit.YEARMONTHDATE,\n  TimeUnit.YEARMONTHDATEHOURS,\n  TimeUnit.YEARMONTHDATEHOURSMINUTES,\n  TimeUnit.YEARMONTHDATEHOURSMINUTESSECONDS,\n  TimeUnit.QUARTERMONTH,\n  TimeUnit.HOURSMINUTES,\n  TimeUnit.HOURSMINUTESSECONDS,\n  TimeUnit.MINUTESSECONDS,\n  TimeUnit.SECONDSMILLISECONDS,\n];\n\nconst MULTI_TIMEUNIT_INDEX: Dict<boolean> = MULTI_TIMEUNITS.reduce((d, timeUnit) => {\n  d[timeUnit] = true;\n  return d;\n}, {});\n\nexport function isMultiTimeUnit(timeUnit: TimeUnit) {\n  return !!MULTI_TIMEUNIT_INDEX[timeUnit];\n}\n\nexport const TIMEUNITS = [\n  TimeUnit.YEAR,\n  TimeUnit.QUARTER,\n  TimeUnit.MONTH,\n  TimeUnit.DAY,\n  TimeUnit.DATE,\n  TimeUnit.HOURS,\n  TimeUnit.MINUTES,\n  TimeUnit.SECONDS,\n  TimeUnit.MILLISECONDS,\n  TimeUnit.YEARQUARTER,\n  TimeUnit.YEARQUARTERMONTH,\n  TimeUnit.YEARMONTH,\n  TimeUnit.YEARMONTHDATE,\n  TimeUnit.YEARMONTHDATEHOURS,\n  TimeUnit.YEARMONTHDATEHOURSMINUTES,\n  TimeUnit.YEARMONTHDATEHOURSMINUTESSECONDS,\n  TimeUnit.QUARTERMONTH,\n  TimeUnit.HOURSMINUTES,\n  TimeUnit.HOURSMINUTESSECONDS,\n  TimeUnit.MINUTESSECONDS,\n  TimeUnit.SECONDSMILLISECONDS,\n];\n\n/** Returns true if fullTimeUnit contains the timeUnit, false otherwise. */\nexport function containsTimeUnit(fullTimeUnit: TimeUnit, timeUnit: TimeUnit) {\n  const index = fullTimeUnit.indexOf(timeUnit);\n  return index > -1 &&\n    (\n      timeUnit !== TimeUnit.SECONDS ||\n      index === 0 ||\n      fullTimeUnit.charAt(index-1) !== 'i' // exclude milliseconds\n    );\n}\n\n/**\n * Returns Vega expresssion for a given timeUnit and fieldRef\n */\nexport function fieldExpr(fullTimeUnit: TimeUnit, field: string): string {\n  const fieldRef =  `datum[${stringValue(field)}]`;\n\n  const utc = isUTCTimeUnit(fullTimeUnit) ? 'utc' : '';\n  function func(timeUnit: TimeUnit) {\n    if (timeUnit === TimeUnit.QUARTER) {\n      // quarter starting at 0 (0,3,6,9).\n      return `(${utc}quarter(${fieldRef})-1)`;\n    } else {\n      return `${utc}${timeUnit}(${fieldRef})`;\n    }\n  }\n\n  const d = SINGLE_TIMEUNITS.reduce((dateExpr: DateTimeExpr, tu: TimeUnit) => {\n    if (containsTimeUnit(fullTimeUnit, tu)) {\n      dateExpr[tu] = func(tu);\n    }\n    return dateExpr;\n  }, {} as {[key in SingleTimeUnit]: string});\n\n  if (d.day && keys(d).length > 1) {\n    log.warn(log.message.dayReplacedWithDate(fullTimeUnit));\n    delete d.day;\n    d.date = func(TimeUnit.DATE);\n  }\n\n  return dateTimeExpr(d);\n}\n\n/** returns the smallest nice unit for scale.nice */\nexport function smallestUnit(timeUnit: TimeUnit): string {\n  if (!timeUnit) {\n    return undefined;\n  }\n\n  if (containsTimeUnit(timeUnit, TimeUnit.SECONDS)) {\n    return 'second';\n  }\n\n  if (containsTimeUnit(timeUnit, TimeUnit.MINUTES)) {\n    return 'minute';\n  }\n\n  if (containsTimeUnit(timeUnit, TimeUnit.HOURS)) {\n    return 'hour';\n  }\n\n  if (containsTimeUnit(timeUnit, TimeUnit.DAY) ||\n      containsTimeUnit(timeUnit, TimeUnit.DATE)) {\n    return 'day';\n  }\n\n  if (containsTimeUnit(timeUnit, TimeUnit.MONTH)) {\n    return 'month';\n  }\n\n  if (containsTimeUnit(timeUnit, TimeUnit.YEAR)) {\n    return 'year';\n  }\n  return undefined;\n}\n\n/**\n * returns the signal expression used for axis labels for a time unit\n */\nexport function formatExpression(timeUnit: TimeUnit, field: string, shortTimeLabels: boolean, isUTCScale: boolean): string {\n  if (!timeUnit) {\n    return undefined;\n  }\n\n  const dateComponents: string[] = [];\n  let expression = '';\n  const hasYear = containsTimeUnit(timeUnit, TimeUnit.YEAR);\n\n  if (containsTimeUnit(timeUnit, TimeUnit.QUARTER)) {\n   // special expression for quarter as prefix\n    expression = `'Q' + quarter(${field})`;\n  }\n\n  if (containsTimeUnit(timeUnit, TimeUnit.MONTH)) {\n    // By default use short month name\n    dateComponents.push(shortTimeLabels !== false ? '%b' : '%B');\n  }\n\n  if (containsTimeUnit(timeUnit, TimeUnit.DAY)) {\n    dateComponents.push(shortTimeLabels ? '%a' : '%A');\n  } else if (containsTimeUnit(timeUnit, TimeUnit.DATE)) {\n    dateComponents.push('%d' + (hasYear ? ',' : '')); // add comma if there is year\n  }\n\n  if (hasYear) {\n    dateComponents.push(shortTimeLabels ? '%y' : '%Y');\n  }\n\n  const timeComponents: string[] = [];\n\n  if (containsTimeUnit(timeUnit, TimeUnit.HOURS)) {\n    timeComponents.push('%H');\n  }\n  if (containsTimeUnit(timeUnit, TimeUnit.MINUTES)) {\n    timeComponents.push('%M');\n  }\n  if (containsTimeUnit(timeUnit, TimeUnit.SECONDS)) {\n    timeComponents.push('%S');\n  }\n  if (containsTimeUnit(timeUnit, TimeUnit.MILLISECONDS)) {\n    timeComponents.push('%L');\n  }\n\n  const dateTimeComponents: string[] = [];\n  if (dateComponents.length > 0) {\n    dateTimeComponents.push(dateComponents.join(' '));\n  }\n  if (timeComponents.length > 0) {\n    dateTimeComponents.push(timeComponents.join(':'));\n  }\n\n  if (dateTimeComponents.length > 0) {\n    if (expression) {\n      // Add space between quarter and main time format\n      expression += ` + ' ' + `;\n    }\n\n    if (isUTCScale) {\n      expression += `utcFormat(${field}, '${dateTimeComponents.join(' ')}')`;\n    } else {\n      expression += `timeFormat(${field}, '${dateTimeComponents.join(' ')}')`;\n    }\n  }\n\n  // If expression is still an empty string, return undefined instead.\n  return expression || undefined;\n}\n\nexport function isDiscreteByDefault(timeUnit: TimeUnit) {\n  switch (timeUnit) {\n    // These time unit use discrete scale by default\n    case 'hours':\n    case 'day':\n    case 'month':\n    case 'quarter':\n      return true;\n  }\n  return false;\n}\n\nfunction isUTCTimeUnit(timeUnit: TimeUnit) {\n  return timeUnit.substr(0, 3) === 'utc';\n}\n","import {Anchor, Orient, TitleOrient, VgMarkConfig, VgTitleConfig} from './vega.schema';\n\nexport interface TitleBase {\n  /**\n   * The orientation of the title relative to the chart. One of `\"top\"` (the default), `\"bottom\"`, `\"left\"`, or `\"right\"`.\n   */\n  orient?: TitleOrient;\n\n  /**\n   * The anchor position for placing the title. One of `\"start\"`, `\"middle\"` (the default), or `\"end\"`. For example, with an orientation of top these anchor positions map to a left-, center-, or right-aligned title.\n   */\n  anchor?: Anchor;\n\n  /**\n   * The orthogonal offset in pixels by which to displace the title from its position along the edge of the chart.\n   */\n  offset?: number;\n\n  // TODO: name, encode, interactive, zindex\n}\n\nexport interface Title extends TitleBase {\n  /**\n   * The title text.\n   */\n  text: string;\n}\n\nexport function extractTitleConfig(titleConfig: VgTitleConfig): {\n  mark: VgMarkConfig,\n  nonMark: TitleBase\n} {\n  const {\n    // These are non-mark title config that need to be hardcoded\n    anchor, offset, orient,\n    // color needs to be redirect to fill\n    color,\n    // The rest are mark config.\n    ...titleMarkConfig\n  } = titleConfig;\n\n  const mark: VgMarkConfig = {\n    ...titleMarkConfig,\n    ...color ? {fill: color} : {}\n  };\n\n  const nonMark: TitleBase = {\n    ...anchor ? {anchor} : {},\n    ...offset ? {offset} : {},\n    ...orient ? {orient} : {}\n  };\n\n  return {mark, nonMark};\n}\n","/**\n * @minimum 0\n */\nexport type Padding = number | {top?: number, bottom?: number, left?: number, right?: number};\n\nexport interface TopLevelProperties {\n  /**\n   * CSS color property to use as the background of visualization.\n   *\n   * __Default value:__ none (transparent)\n   */\n  background?: string;\n\n  /**\n   * The default visualization padding, in pixels, from the edge of the visualization canvas to the data rectangle.  If a number, specifies padding for all sides.\n   * If an object, the value should have the format `{\"left\": 5, \"top\": 5, \"right\": 5, \"bottom\": 5}` to specify padding for each side of the visualization.\n   *\n   * __Default value__: `5`\n   */\n  padding?: Padding;\n\n  /**\n   * Resize is a boolean indicating if autosize layout should be re-calculated on every update.\n   *\n   * __Default value__: `false`\n   */\n  autoResize?: boolean;\n}\n\nconst TOP_LEVEL_PROPERTIES: (keyof TopLevelProperties)[] = [\n  'background', 'padding', 'autoResize'\n];\n\nexport function extractTopLevelProperties<T extends TopLevelProperties>(t: T) {\n  return TOP_LEVEL_PROPERTIES.reduce((o, p) => {\n    if (t && t[p] !== undefined) {\n      o[p] = t[p];\n    }\n    return o;\n  }, {});\n}\n","import {AggregateOp} from './aggregate';\nimport {Bin} from './bin';\nimport {Data} from './data';\nimport {Filter} from './filter';\nimport {LogicalOperand} from './logical';\nimport {TimeUnit} from './timeunit';\nimport {VgFieldRef} from './vega.schema';\n\n\nexport interface FilterTransform {\n  /**\n   * A string containing the filter Vega expression. Use `datum` to refer to the current data object.\n   */\n  filter: LogicalOperand<Filter>;\n}\n\nexport function isFilter(t: Transform): t is FilterTransform {\n  return t['filter'] !== undefined;\n}\n\n\nexport interface CalculateTransform {\n  /**\n   * A string containing a Vega Expression. Use the variable `datum` to refer to the current data object.\n   */\n  calculate: string;\n  /**\n   * The field for storing the computed formula value.\n   */\n  as: string;\n}\n\nexport interface BinTransform {\n  /**\n   * An object indicating bin properties, or simply `true` for using default bin values..\n   */\n  bin: Bin | true;\n\n  /**\n   * The data field to bin.\n   */\n  field: string;\n\n  /**\n   * The output fields at which to write the start and end bin values.\n   */\n  as: string;\n}\n\nexport interface TimeUnitTransform {\n  /**\n   * The timeUnit.\n   */\n  timeUnit: TimeUnit;\n\n  /**\n   * The data field to apply time unit.\n   */\n  field: string;\n\n  /**\n   * The output field to write the timeUnit value.\n   */\n  as: string;\n}\n\nexport interface SummarizeTransform {\n  /**\n   * Array of objects that define aggregate fields.\n   */\n  summarize: Summarize[];\n\n  /**\n   * The data fields to group by. If not specified, a single group containing all data objects will be used.\n   */\n  groupby?: string[];\n}\n\nexport interface Summarize {\n  /**\n   * The aggregation operations to apply to the fields, such as sum, average or count.\n   * See the [full list of supported aggregation operations](https://vega.github.io/vega-lite/docs/aggregate.html#supported-aggregation-operations)\n   * for more information.\n   */\n  aggregate: AggregateOp;\n\n  /**\n   * The data field for which to compute aggregate function.\n   */\n  field: string;\n\n  /**\n   * The output field names to use for each aggregated field.\n   */\n  as: string;\n}\n\nexport interface LookupData {\n  /**\n   * secondary data source to lookup in\n   */\n  data: Data;\n  /**\n   * key in data to lookup\n   */\n  key: string;\n  /**\n   * (Optional) fields in foreign data to lookup\n   * if not specificied, the entire object is queried\n   */\n  fields?: string[];\n}\n\nexport interface LookupTransform {\n  /**\n   * key in primary data source\n   */\n  lookup: string;\n  /**\n   * secondary data reference\n   */\n  from: LookupData;\n  /**\n   * (Optional) The field or fields for storing the computed formula value.\n   * If `from.fields` is not specified, `as` has to be a string and we put the whole object into the data\n   */\n  as?: string | string[];\n  /**\n   * (Optional) The default value to use if lookup fails\n   */\n  default?: string;\n}\n\nexport function isLookup(t: Transform): t is LookupTransform {\n  return t['lookup'] !== undefined;\n}\n\nexport function isCalculate(t: Transform): t is CalculateTransform {\n  return t['calculate'] !== undefined;\n}\n\nexport function isBin(t: Transform): t is BinTransform {\n  return t['bin'] !== undefined;\n}\n\nexport function isTimeUnit(t: Transform): t is TimeUnitTransform {\n  return t['timeUnit'] !== undefined;\n}\n\nexport function isSummarize(t: Transform): t is SummarizeTransform {\n  return t['summarize'] !== undefined;\n}\n\nexport type Transform = FilterTransform | CalculateTransform | LookupTransform | BinTransform | TimeUnitTransform | SummarizeTransform;\n","/** Constants and utilities for data type */\n/** Data type based on level of measurement */\n\nexport namespace Type {\n  export const QUANTITATIVE: 'quantitative' = 'quantitative';\n  export const ORDINAL: 'ordinal' = 'ordinal';\n  export const TEMPORAL: 'temporal' = 'temporal';\n  export const NOMINAL: 'nominal' = 'nominal';\n}\nexport type Type = typeof Type.QUANTITATIVE | typeof Type.ORDINAL | typeof Type.TEMPORAL | typeof Type.NOMINAL;\n\nexport const QUANTITATIVE = Type.QUANTITATIVE;\nexport const ORDINAL = Type.ORDINAL;\nexport const TEMPORAL = Type.TEMPORAL;\nexport const NOMINAL = Type.NOMINAL;\n\n/**\n * Get full, lowercase type name for a given type.\n * @param  type\n * @return Full type name.\n */\nexport function getFullName(type: Type|string): Type {\n  if (type) {\n    type = type.toLowerCase();\n    switch (type) {\n      case 'q':\n      case QUANTITATIVE:\n        return 'quantitative';\n      case 't':\n      case TEMPORAL:\n        return 'temporal';\n      case 'o':\n      case ORDINAL:\n        return 'ordinal';\n      case 'n':\n      case NOMINAL:\n        return 'nominal';\n    }\n  }\n  // If we get invalid input, return undefined type.\n  return undefined;\n}\n","import * as stringify from 'json-stable-stringify';\nimport {isArray, isNumber, isObject, isString} from 'vega-util';\nimport {isLogicalAnd, isLogicalNot, isLogicalOr, LogicalOperand} from './logical';\n\n\nexport {extend, isArray, isObject, isNumber, isString, truncate, toSet, stringValue} from 'vega-util';\n\n/**\n * Creates an object composed of the picked object properties.\n *\n * Example:  (from lodash)\n *\n * var object = {'a': 1, 'b': '2', 'c': 3};\n * pick(object, ['a', 'c']);\n * // → {'a': 1, 'c': 3}\n *\n */\nexport function pick(obj: object, props: string[]) {\n  const copy = {};\n  props.forEach((prop) => {\n    if (obj.hasOwnProperty(prop)) {\n      copy[prop] = obj[prop];\n    }\n  });\n  return copy;\n}\n\n/**\n * The opposite of _.pick; this method creates an object composed of the own\n * and inherited enumerable string keyed properties of object that are not omitted.\n */\nexport function omit(obj: object, props: string[]) {\n  const copy = duplicate(obj);\n  props.forEach((prop) => {\n    delete copy[prop];\n  });\n  return copy;\n}\n\nexport function hash(a: any) {\n  if (isString(a) || isNumber(a) || isBoolean(a)) {\n    return String(a);\n  }\n  return stringify(a);\n}\n\nexport function contains<T>(array: T[], item: T) {\n  return array.indexOf(item) > -1;\n}\n\n/** Returns the array without the elements in item */\nexport function without<T>(array: T[], excludedItems: T[]) {\n  return array.filter(item => !contains(excludedItems, item));\n}\n\nexport function union<T>(array: T[], other: T[]) {\n  return array.concat(without(other, array));\n}\n\n/**\n * Returns true if any item returns true.\n */\nexport function some<T>(arr: T[], f: (d: T, k?: any, i?: any) => boolean) {\n  let i = 0;\n  for (let k = 0; k<arr.length; k++) {\n    if (f(arr[k], k, i++)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Returns true if all items return true.\n */\n export function every<T>(arr: T[], f: (d: T, k?: any, i?: any) => boolean) {\n  let i = 0;\n  for (let k = 0; k<arr.length; k++) {\n    if (!f(arr[k], k, i++)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function flatten(arrays: any[]) {\n  return [].concat.apply([], arrays);\n}\n\n/**\n * recursively merges src into dest\n */\nexport function mergeDeep<T>(dest: T, ...src: Partial<T>[]): T {\n  for (const s of src) {\n    dest = deepMerge_(dest, s);\n  }\n  return dest;\n}\n\n// recursively merges src into dest\nfunction deepMerge_(dest: any, src: any) {\n  if (typeof src !== 'object' || src === null) {\n    return dest;\n  }\n\n  for (const p in src) {\n    if (!src.hasOwnProperty(p)) {\n      continue;\n    }\n    if (src[p] === undefined) {\n      continue;\n    }\n    if (typeof src[p] !== 'object' || isArray(src[p]) || src[p] === null) {\n      dest[p] = src[p];\n    } else if (typeof dest[p] !== 'object' || dest[p] === null) {\n      dest[p] = mergeDeep(isArray(src[p].constructor) ? [] : {}, src[p]);\n    } else {\n      mergeDeep(dest[p], src[p]);\n    }\n  }\n  return dest;\n}\n\nexport function unique<T>(values: T[], f: (item: T) => string): T[] {\n  const results: any[] = [];\n  const u = {};\n  let v: string;\n  for (const val of values) {\n    v = f(val);\n    if (v in u) {\n      continue;\n    }\n    u[v] = 1;\n    results.push(val);\n  }\n  return results;\n}\n\nexport interface Dict<T> {\n  [key: string]: T;\n}\n\nexport type StringSet = Dict<boolean>;\n\n/**\n * Returns true if the two dictionaries disagree. Applies only to defined values.\n */\nexport function differ<T>(dict: Dict<T>, other: Dict<T>) {\n  for (const key in dict) {\n    if (dict.hasOwnProperty(key)) {\n      if (other[key] && dict[key] && other[key] !== dict[key]) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nexport function hasIntersection(a: StringSet, b: StringSet) {\n  for (const key in a) {\n    if (key in b) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport function differArray<T>(array: T[], other: T[]) {\n  if (array.length !== other.length) {\n    return true;\n  }\n\n  array.sort();\n  other.sort();\n\n  for (let i = 0; i < array.length; i++) {\n    if (other[i] !== array[i]) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nexport const keys = Object.keys;\n\nexport function vals<T>(x: {[key: string]: T}): T[] {\n  const _vals: T[] = [];\n  for (const k in x) {\n    if (x.hasOwnProperty(k)) {\n      _vals.push(x[k]);\n    }\n  }\n  return _vals;\n}\n\nexport function duplicate<T>(obj: T): T {\n  return JSON.parse(JSON.stringify(obj));\n}\n\nexport function isBoolean(b: any): b is boolean {\n  return b === true || b === false;\n}\n\n/**\n * Convert a string into a valid variable name\n */\nexport function varName(s: string): string {\n  // Replace non-alphanumeric characters (anything besides a-zA-Z0-9_) with _\n  const alphanumericS = s.replace(/\\W/g, '_');\n\n  // Add _ if the string has leading numbers.\n  return (s.match(/^\\d+/) ? '_' : '') + alphanumericS;\n}\n\nexport function logicalExpr<T>(op: LogicalOperand<T>, cb: Function): string {\n  if (isLogicalNot(op)) {\n    return '!(' + logicalExpr(op.not, cb) + ')';\n  } else if (isLogicalAnd(op)) {\n    return '(' + op.and.map((and: LogicalOperand<T>) => logicalExpr(and, cb)).join(') && (') + ')';\n  } else if (isLogicalOr(op)) {\n    return '(' + op.or.map((or: LogicalOperand<T>) => logicalExpr(or, cb)).join(') || (') + ')';\n  } else {\n    return cb(op);\n  }\n}\n","import {isMarkDef} from './mark';\nimport {BAR} from './mark';\nimport {FacetedCompositeUnitSpec} from './spec';\nimport {toSet} from './util';\n\n\n\n// TODO: move to vl.spec.validator?\nexport interface RequiredChannelMap {\n  [mark: string]: Array<string>;\n}\n\n/**\n * Required Encoding Channels for each mark type\n */\nexport const DEFAULT_REQUIRED_CHANNEL_MAP: RequiredChannelMap = {\n  text: ['text'],\n  line: ['x', 'y'],\n  area: ['x', 'y']\n};\n\nexport interface SupportedChannelMap {\n  [mark: string]: {\n    [channel: string]: boolean\n  };\n}\n\n/**\n * Supported Encoding Channel for each mark type\n */\nexport const DEFAULT_SUPPORTED_CHANNEL_TYPE: SupportedChannelMap = {\n  bar: toSet(['row', 'column', 'x', 'y', 'size', 'color', 'detail']),\n  line: toSet(['row', 'column', 'x', 'y', 'color', 'detail']), // TODO: add size when Vega supports\n  area: toSet(['row', 'column', 'x', 'y', 'color', 'detail']),\n  tick: toSet(['row', 'column', 'x', 'y', 'color', 'detail']),\n  circle: toSet(['row', 'column', 'x', 'y', 'color', 'size', 'detail']),\n  square: toSet(['row', 'column', 'x', 'y', 'color', 'size', 'detail']),\n  point: toSet(['row', 'column', 'x', 'y', 'color', 'size', 'detail', 'shape']),\n  text: toSet(['row', 'column', 'size', 'color', 'text']) // TODO(#724) revise\n};\n\n// TODO: consider if we should add validate method and\n// requires ZSchema in the main vega-lite repo\n\n/**\n * Further check if encoding mapping of a spec is invalid and\n * return error if it is invalid.\n *\n * This checks if\n * (1) all the required encoding channels for the mark type are specified\n * (2) all the specified encoding channels are supported by the mark type\n * @param  {[type]} spec [description]\n * @param  {RequiredChannelMap  = DefaultRequiredChannelMap}  requiredChannelMap\n * @param  {SupportedChannelMap = DefaultSupportedChannelMap} supportedChannelMap\n * @return {String} Return one reason why the encoding is invalid,\n *                  or null if the encoding is valid.\n */\nexport function getEncodingMappingError(spec: FacetedCompositeUnitSpec,\n  requiredChannelMap: RequiredChannelMap = DEFAULT_REQUIRED_CHANNEL_MAP,\n  supportedChannelMap: SupportedChannelMap = DEFAULT_SUPPORTED_CHANNEL_TYPE\n  ) {\n  const mark = isMarkDef(spec.mark) ? spec.mark.type : spec.mark;\n  const encoding = spec.encoding;\n  const requiredChannels = requiredChannelMap[mark];\n  const supportedChannels = supportedChannelMap[mark];\n\n  for (const i in requiredChannels) { // all required channels are in encoding`\n    if (!(requiredChannels[i] in encoding)) {\n      return 'Missing encoding channel \\\"' + requiredChannels[i] +\n        '\\\" for mark \\\"' + mark + '\\\"';\n    }\n  }\n\n  for (const channel in encoding) { // all channels in encoding are supported\n    if (!supportedChannels[channel]) {\n      return 'Encoding channel \\\"' + channel +\n        '\\\" is not supported by mark type \\\"' + mark + '\\\"';\n    }\n  }\n\n  if (mark === BAR && !encoding.x && !encoding.y) {\n    return 'Missing both x and y for bar';\n  }\n\n  return null;\n}\n","import {AggregateOp} from './aggregate';\nimport {BaseBin} from './bin';\nimport {OutputNode} from './compile/data/dataflow';\nimport {NiceTime, ScaleType, SelectionDomain} from './scale';\nimport {SortOrder} from './sort';\nimport {StackOffset} from './stack';\nimport {isArray} from './util';\n\n\nexport interface VgData {\n  name: string;\n  source?: string;\n  values?: any;\n  format?: any;\n  url?: any;\n  transform?: VgTransform[];\n}\n\n\nexport type VgParentRef = {\n  parent: string\n};\n\nexport type VgFieldRef = string | VgParentRef | VgParentRef[];\n\nexport type VgSortField = boolean | {\n  field?: VgFieldRef,\n  op: AggregateOp,\n  order?: SortOrder\n};\n\n/**\n * Unioned domains can only be sorted by count aggregate.\n */\nexport type VgUnionSortField = boolean | {\n  op: 'count'\n  order?: SortOrder\n};\n\nexport type VgDataRef = {\n  data: string,\n  field: VgFieldRef,\n  sort?: VgSortField\n};\n\nexport type VgSignalRef = {\n  signal: string\n};\n\nexport function isVgSignalRef(o: any): o is VgSignalRef  {\n  return !!o['signal'];\n}\n\nexport type VgEventStream = any;\n\n// TODO: add type of value (Make it VgValueRef<T> {value?:T ...})\nexport type VgValueRef = {\n  value?: number | string | boolean,\n  field?: string | {\n    datum?: string,\n    group?: string,\n    parent?: string\n  },\n  signal?: string;\n  scale?: string, // TODO: object\n  mult?: number,\n  offset?: number | VgValueRef,\n  band?: boolean | number | VgValueRef;\n};\n\n// TODO: add vg prefix\nexport type DataRefUnionDomain = {\n  fields: (any[] | VgDataRef | VgSignalRef)[],\n  sort?: VgUnionSortField\n};\n\n// TODO: add vg prefix\nexport type FieldRefUnionDomain = {\n  data: string,\n  fields: VgFieldRef[],\n  sort?: VgUnionSortField\n};\n\nexport type VgRangeScheme = {scheme: string, extent?: number[], count?: number};\nexport type VgRange = string | VgDataRef | (number|string|VgDataRef|VgSignalRef)[] | VgRangeScheme | VgRangeStep;\n\nexport type VgRangeStep = {step: number | VgSignalRef};\nexport function isVgRangeStep(range: VgRange): range is VgRangeStep {\n  return !!range['step'];\n}\n\n// Domains that are not a union of domains\nexport type VgNonUnionDomain = any[] | VgDataRef | VgSignalRef;\nexport type VgDomain =  VgNonUnionDomain | DataRefUnionDomain | FieldRefUnionDomain;\n\nexport type VgMarkGroup = any;\n\nexport type VgScale = {\n  name: string,\n  type: ScaleType,\n  domain: VgDomain,\n  domainRaw?: VgSignalRef,\n  range: VgRange,\n\n  clamp?: boolean,\n  exponent?: number,\n  interpolate?: 'rgb'| 'lab' | 'hcl' | 'hsl' | 'hsl-long' | 'hcl-long' | 'cubehelix' | 'cubehelix-long';\n  nice?: boolean | NiceTime,\n  padding?: number,\n  paddingInner?: number,\n  paddingOuter?: number,\n  reverse?: boolean,\n  round?: boolean,\n  zero?: boolean\n};\n\nexport type VgLayoutAlign = 'none' | 'each' | 'all';\n\nexport type RowCol<T> = {\n  row?: T,\n  column?: T\n};\n\nexport type VgLayout = {\n  padding: number | RowCol<number>,\n  headerBand?: number | RowCol<number>,\n  footerBand?: number | RowCol<number>,\n  offset: number | {\n    rowHeader: number,\n    rowFooter: number,\n    rowTitle: number,\n    columnHeader: number,\n    columnFooter: number,\n    columnTitle: number\n  },\n  bounds: 'full' | 'flush',\n  columns?: number | {signal: string},\n  align?: VgLayoutAlign | {\n    row: VgLayoutAlign,\n    column: VgLayoutAlign\n  };\n};\n\nexport function isDataRefUnionedDomain(domain: VgDomain): domain is DataRefUnionDomain {\n  if (!isArray(domain)) {\n    return 'fields' in domain && !('data' in domain);\n  }\n  return false;\n}\n\nexport function isFieldRefUnionDomain(domain: VgDomain): domain is FieldRefUnionDomain {\n  if (!isArray(domain)) {\n    return 'fields' in domain && 'data' in domain;\n  }\n  return false;\n}\n\nexport function isDataRefDomain(domain: VgDomain): domain is VgDataRef {\n  if (!isArray(domain)) {\n     return 'field' in domain && 'data' in domain;\n  }\n  return false;\n}\n\nexport function isSignalRefDomain(domain: VgDomain): domain is VgSignalRef {\n  if (!isArray(domain)) {\n    return 'signal' in domain;\n  }\n  return false;\n}\n\nexport type VgSignal = {\n  name: string,\n  value?: any,\n  update?: string\n};\n\nexport type VgEncodeChannel = 'x'|'x2'|'xc'|'width'|'y'|'y2'|'yc'|'height'|'opacity'|'fill'|'fillOpacity'|'stroke'|'strokeWidth'|'strokeOpacity'|'strokeDash'|'strokeDashOffset'|'cursor'|'clip'|'size'|'shape'|'path'|'innerRadius'|'outerRadius'|'startAngle'|'endAngle'|'interpolate'|'tension'|'orient'|'url'|'align'|'baseline'|'text'|'dir'|'ellipsis'|'limit'|'dx'|'dy'|'radius'|'theta'|'angle'|'font'|'fontSize'|'fontWeight'|'fontStyle';\nexport type VgEncodeEntry = {\n  [k in VgEncodeChannel]?: VgValueRef | (VgValueRef & {test?: string})[];\n};\n\n\n// TODO: make export interface VgEncodeEntry {\n//   x?: VgValueRef<number>\n//   y?: VgValueRef<number>\n//  ...\n//   color?: VgValueRef<string>\n//  ...\n// }\n\nexport type AxisOrient = 'top' | 'right' | 'left' | 'bottom';\n\nexport interface VgAxis {\n  scale: string;\n  domain?: boolean;\n  format?: string;\n  grid?: boolean;\n  gridScale?: string;\n\n  labels?: boolean;\n  labelPadding?: number;\n  labelOverlap?: boolean | 'parity' | 'greedy';\n  maxExtent?: number;\n  minExtent?: number;\n  offset?: number;\n  orient?: AxisOrient;\n  position?: number;\n\n  ticks?: boolean;\n  tickCount?: number;\n  tickExtra?: boolean;\n  tickSize?: number;\n\n  title?: string;\n  titleAlign?: string;\n  titleAngle?: number;\n  titleMaxLength?: number;\n  titlePadding?: number;\n\n  values?: any[] | VgSignalRef;\n  zindex?: number;\n\n  encode?: VgAxisEncode;\n}\n\nexport interface VgLegend {\n  fill?: string;\n  stroke?: string;\n  size?: string;\n  shape?: string;\n  opacity?: string;\n\n  entryPadding?: number;\n  fillColor?: string;\n  format?: string;\n\n  offset?: number;\n  orient?: LegendOrient;\n  padding?: number;\n\n  tickCount?: number;\n  title?: string;\n  titleAlign?: string;\n  type?: 'symbol' | 'gradient';\n  values?: any[] | VgSignalRef;\n  zindex?: number;\n\n  encode?: VgLegendEncode;\n}\n\nexport interface VgBinTransform extends BaseBin {\n  type: 'bin';\n  extent?: number[] | {signal: string};\n  field: string;\n  as: string[];\n  signal?: string;\n}\n\nexport interface VgExtentTransform {\n  type: 'extent';\n  field: string;\n  signal: string;\n}\n\nexport interface VgFormulaTransform {\n  type: 'formula';\n  as: string;\n  expr: string;\n}\n\nexport interface VgFilterTransform {\n  type: 'filter';\n  expr: string;\n}\n\nexport interface VgAggregateTransform {\n  type: 'aggregate';\n  groupby?: VgFieldRef[];\n  fields?: VgFieldRef[];\n  ops?: AggregateOp[];\n  as?: string[];\n  cross?: boolean;\n  drop?: boolean;\n}\n\nexport interface VgCollectTransform {\n  type: 'collect';\n  sort: VgSort;\n}\n\nexport interface VgLookupTransform {\n  type: 'lookup';\n  from: string;\n  key: string;\n  fields: string[];\n  values?: string[];\n  as?: string[];\n  default?: string;\n}\n\nexport interface VgStackTransform {\n  type: 'stack';\n  offset?: StackOffset;\n  groupby: string[];\n  field: string;\n  sort: VgSort;\n  as: string[];\n}\n\nexport interface VgIdentifierTransform {\n  type: 'identifier';\n  as: string;\n}\n\nexport type VgTransform = VgBinTransform | VgExtentTransform | VgFormulaTransform | VgAggregateTransform | VgFilterTransform | VgImputeTransform | VgStackTransform | VgCollectTransform | VgLookupTransform | VgIdentifierTransform;\n\nexport interface VgAxisEncode {\n  ticks?: VgGuideEncode;\n  labels?: VgGuideEncode;\n  title?: VgGuideEncode;\n  grid?: VgGuideEncode;\n  domain?: VgGuideEncode;\n}\n\nexport interface VgLegendEncode {\n  title?: VgGuideEncode;\n  labels?: VgGuideEncode;\n  legend?: VgGuideEncode;\n  symbols?: VgGuideEncode;\n  gradient?: VgGuideEncode;\n}\n\nexport type VgGuideEncode = any; // TODO: replace this (See guideEncode in Vega Schema)\n\nexport type VgSort = {\n  field: string;\n  order?: 'ascending' | 'descending';\n} | {\n  field: string[];\n  order?: ('ascending' | 'descending')[];\n};\n\nexport interface VgImputeTransform {\n  type: 'impute';\n  groupby?: string[];\n  field: string;\n  key: string;\n  keyvals?: string[];\n  method?: 'value' | 'median' | 'max' | 'min' | 'mean';\n  value?: any;\n}\n\nexport type VgCheckboxBinding = {\n  input: 'checkbox';\n  element?: string;\n};\n\nexport type VgRadioBinding = {\n  input: 'radio';\n  options: string[];\n  element?: string;\n};\n\nexport type VgSelectBinding = {\n  input: 'select';\n  options: string[];\n  element?: string;\n};\n\nexport type VgRangeBinding = {\n  input: 'range';\n  min?: number;\n  max?: number;\n  step?: number;\n  element?: string;\n};\n\nexport type VgGenericBinding = {\n  input: string;\n  element?: string;\n};\n\nexport type VgBinding = VgCheckboxBinding | VgRadioBinding |\n  VgSelectBinding | VgRangeBinding | VgGenericBinding;\n\n\n/**\n * Base object for Vega's Axis and Axis Config.\n * All of these properties are both properties of Vega's Axis and Axis Config.\n */\nexport interface VgAxisBase {\n  /**\n   * A boolean flag indicating if the domain (the axis baseline) should be included as part of the axis (default true).\n   */\n  domain?: boolean;\n\n  /**\n   * A boolean flag indicating if grid lines should be included as part of the axis\n   *\n   * __Default value:__ `true` for (1) quantitative fields that are not binned and (2) time fields;  otherwise, `\"false\"`.\n   */\n  grid?: boolean;\n\n  /**\n   * A boolean flag indicating if labels should be included as part of the axis (default true).\n   *\n   * __Default value:__  derived from [axis config](config.html#axis-config)'s `labels` (`true` by default).\n   */\n  labels?: boolean;\n\n  /**\n   * The rotation angle of the axis labels.\n   *\n   * __Default value:__ `-45` for time or ordinal axis and `0` otherwise.\n   * @minimum -360\n   * @maximum 360\n   */\n  labelAngle?: number;\n\n  /**\n   * The strategy to use for resolving overlap of axis labels. If `false` (the default), no overlap reduction is attempted. If set to `true` or `\"parity\"`, a strategy of removing every other label is used (this works well for standard linear axes). If set to `\"greedy\"`, a linear scan of the labels is performed, removing any labels that overlaps with the last visible label (this often works better for log-scaled axes).\n   *\n   * __Default value:__ `true` for x-axes with horizontal labels, otherwise `false`.\n   */\n  labelOverlap?: boolean | 'parity' | 'greedy';\n\n  /**\n   * Boolean value that determines whether the axis should include ticks.\n   */\n  ticks?: boolean;\n\n  /**\n   * Boolean flag indicating if an extra axis tick should be added for the initial position of the axis. This flag is useful for styling axes for `band` scales such that ticks are placed on band boundaries rather in the middle of a band. Use in conjunction with `\"bandPostion\": 1` and an axis `\"padding\"` value of `0`.\n   */\n  tickExtra?: boolean;\n\n  /**\n   * The size, in pixels, of major, minor and end ticks.\n   *\n   * __Default value:__  derived from [axis config](config.html#axis-config)'s `tickSize` (`6` by default).\n   *\n   * @minimum 0\n   */\n  tickSize?: number;\n\n  /**\n   * Horizontal text alignment of axis titles.\n   */\n  titleAlign?: string;\n\n  /**\n   * Angle in degrees of axis titles.\n   */\n  titleAngle?: number;\n\n  /**\n   * Max length for axis title if the title is automatically generated from the field's description. By default, this is automatically based on cell size and characterWidth property.\n   *\n   * __Default value:__  automatically determined based on the cell size (`config.cell.width`, `config.cell.height`)\n   *\n   * @minimum 0\n   * @TJS-type integer\n   */\n  titleMaxLength?: number;\n\n  /**\n   * The padding, in pixels, between title and axis.\n   */\n  titlePadding?: number;\n\n  /**\n   * The minimum extent in pixels that axis ticks and labels should use. This determines a minimum offset value for axis titles.\n   *\n   * __Default value:__ `30`\n   */\n  minExtent?: number;\n\n  /**\n   * The maximum extent in pixels that axis ticks and labels should use. This determines a maximum offset value for axis titles.\n   *\n   * __Default value:__ `undefined`.\n   */\n  maxExtent?: number;\n}\n\nexport interface VgAxisConfig extends VgAxisBase {\n  /**\n   * An interpolation fraction indicating where, for `band` scales, axis ticks should be positioned. A value of `0` places ticks at the left edge of their bands. A value of `0.5` places ticks in the middle of their bands.\n   */\n  bandPosition?: number;\n  /**\n   * Stroke width of axis domain line\n   *\n   * __Default value:__  (none, using Vega default).\n   */\n  domainWidth?: number;\n\n  /**\n   * Color of axis domain line.\n   *\n   * __Default value:__  (none, using Vega default).\n   */\n  domainColor?: string;\n\n  // ---------- Grid ----------\n  /**\n   * Color of gridlines.\n   */\n  gridColor?: string;\n\n  /**\n   * The offset (in pixels) into which to begin drawing with the grid dash array.\n   * @minimum 0\n   */\n  gridDash?: number[];\n\n  /**\n   * The stroke opacity of grid (value between [0,1])\n   *\n   * __Default value:__ (`1` by default)\n   * @minimum 0\n   * @maximum 1\n   */\n  gridOpacity?: number;\n\n  /**\n   * The grid width, in pixels.\n   * @minimum 0\n   */\n  gridWidth?: number;\n\n  // ---------- Ticks ----------\n  /**\n   * The color of the axis's tick.\n   */\n  tickColor?: string;\n\n  /**\n   * The color of the tick label, can be in hex color code or regular color name.\n   */\n  labelColor?: string;\n\n  /**\n   * The font of the tick label.\n   */\n  labelFont?: string;\n\n  /**\n   * The font size of the label, in pixels.\n   *\n   * __Default value:__ `10`.\n   *\n   * @minimum 0\n   */\n  labelFontSize?: number;\n\n  /**\n   * Maximum allowed pixel width of axis tick labels.\n   */\n  labelLimit?: number;\n\n  /**\n   * Padding in pixels between axis ticks and tick labels.\n   */\n  labelPadding?: number;\n\n  /**\n   * Boolean flag indicating if pixel position values should be rounded to the nearest integer.\n   */\n  tickRound?: boolean;\n\n  /**\n   * The width, in pixels, of ticks.\n   *\n   * @minimum 0\n   */\n  tickWidth?: number;\n\n  // ---------- Title ----------\n\n  /**\n   * Vertical text baseline for axis titles.\n   */\n  titleBaseline?: string;\n  /**\n   * Color of the title, can be in hex color code or regular color name.\n   */\n  titleColor?: string;\n\n  /**\n   * Font of the title. (e.g., `\"Helvetica Neue\"`).\n   */\n  titleFont?: string;\n\n  /**\n   * Font size of the title.\n   *\n   * __Default value:__ `10`.\n   *\n   * @minimum 0\n   */\n  titleFontSize?: number;\n\n  /**\n   * Font weight of the title. (e.g., `\"bold\"`).\n   */\n  titleFontWeight?: string | number;\n\n  /**\n   * Maximum allowed pixel width of axis titles.\n   */\n  titleLimit?: number;\n\n  /**\n   * X-coordinate of the axis title relative to the axis group.\n   */\n  titleX?: number;\n\n  /**\n   * Y-coordinate of the axis title relative to the axis group.\n   */\n  titleY?: number;\n}\n\nexport type LegendOrient = 'left' | 'right' | 'top-left' | 'top-right' | 'bottom-left' | 'bottom-right' | 'none';\n\nexport interface VgLegendBase {\n  /**\n   * Padding (in pixels) between legend entries in a symbol legend.\n   */\n  entryPadding?: number;\n\n  /**\n   * Background fill color for the full legend.\n   */\n  fillColor?: string;\n\n  /**\n   * The orientation of the legend. One of `\"left\"` or `\"right\"`. This determines how the legend is positioned within the scene. The default is `\"right\"`.\n   *\n   * __Default value:__  `\"right\"`\n   */\n  orient?: LegendOrient;\n\n  /**\n   * The offset, in pixels, by which to displace the legend from the edge of the enclosing group or data rectangle.\n   *\n   * __Default value:__  `0`\n   */\n  offset?: number;\n\n  /**\n   * The padding, in pixels, between the legend and axis.\n   */\n  padding?: number;\n\n  /**\n   * Horizontal text alignment for legend titles.\n   */\n  titleAlign?: string;\n}\n\nexport interface VgLegendConfig extends VgLegendBase {\n\n  /**\n   * Corner radius for the full legend.\n   */\n  cornerRadius?: number;\n\n  /**\n   * Border stroke color for the full legend.\n   */\n  strokeColor?: string;\n\n  /**\n   * Border stroke dash pattern for the full legend.\n   */\n  strokeDash?: number[];\n\n  /**\n   * Border stroke width for the full legend.\n   */\n  strokeWidth?: number;\n  // ---------- Gradient ----------\n  /**\n   * The color of the gradient stroke, can be in hex color code or regular color name.\n   */\n  gradientStrokeColor?: string;\n\n  /**\n   * The width of the gradient stroke, in pixels.\n   * @minimum 0\n   */\n  gradientStrokeWidth?: number;\n\n  /**\n   * The height of the gradient, in pixels.\n   * @minimum 0\n   */\n  gradientHeight?: number;\n\n  /**\n   * Text baseline for color ramp gradient labels.\n   */\n  gradientLabelBaseline?: string;\n\n  /**\n   * The maximum allowed length in pixels of color ramp gradient labels.\n   */\n  gradientLabelLimit?: number;\n\n  /**\n   * Vertical offset in pixels for color ramp gradient labels.\n   */\n  gradientLabelOffset?: number;\n\n  /**\n   * The width of the gradient, in pixels.\n   * @minimum 0\n   */\n  gradientWidth?: number;\n\n  // ---------- Label ----------\n  /**\n   * The alignment of the legend label, can be left, middle or right.\n   */\n  labelAlign?: string;\n\n  /**\n   * The position of the baseline of legend label, can be top, middle or bottom.\n   */\n  labelBaseline?: string;\n\n  /**\n   * The color of the legend label, can be in hex color code or regular color name.\n   */\n  labelColor?: string;\n\n  /**\n   * The font of the legend label.\n   */\n  labelFont?: string;\n\n  /**\n   * The font size of legend label.\n   *\n   * __Default value:__ `10`.\n   *\n   * @minimum 0\n   */\n  labelFontSize?: number;\n\n  /**\n   * Maximum allowed pixel width of axis tick labels.\n   */\n  labelLimit?: number;\n\n  /**\n   * The offset of the legend label.\n   * @minimum 0\n   */\n  labelOffset?: number;\n\n  // ---------- Symbols ----------\n  /**\n   * The color of the legend symbol,\n   */\n  symbolColor?: string;\n\n  /**\n   * Default shape type (such as \"circle\") for legend symbols.\n   */\n  symbolType?: string;\n\n  /**\n   * The size of the legend symbol, in pixels.\n   * @minimum 0\n   */\n  symbolSize?: number;\n\n  /**\n   * The width of the symbol's stroke.\n   * @minimum 0\n   */\n  symbolStrokeWidth?: number;\n\n  // ---------- Title ----------\n  /**\n   * Optional mark property definitions for custom legend styling.\n   */\n   /**\n    * Vertical text baseline for legend titles.\n    */\n  titleBaseline?: string;\n  /**\n   * The color of the legend title, can be in hex color code or regular color name.\n   */\n  titleColor?: string;\n\n  /**\n   * The font of the legend title.\n   */\n  titleFont?: string;\n\n  /**\n   * The font size of the legend title.\n   */\n  titleFontSize?: number;\n\n  /**\n   * The font weight of the legend title.\n   */\n  titleFontWeight?: string | number;\n\n  /**\n   * Maximum allowed pixel width of axis titles.\n   */\n  titleLimit?: number;\n\n  /**\n   * The padding, in pixels, between title and legend.\n   */\n  titlePadding?: number;\n}\n\nexport type FontStyle = 'normal' | 'italic';\nexport type FontWeight = 'normal' | 'bold';\n/**\n * @TJS-type integer\n * @minimum 100\n * @maximum 900\n */\nexport type FontWeightNumber = number;\nexport type HorizontalAlign = 'left' | 'right' | 'center';\nexport type Interpolate = 'linear' | 'linear-closed' |\n  'step' | 'step-before' | 'step-after' |\n  'basis' | 'basis-open' | 'basis-closed' |\n  'cardinal' | 'cardinal-open' | 'cardinal-closed' |\n  'bundle' | 'monotone';\nexport type Orient = 'horizontal' | 'vertical';\nexport type VerticalAlign = 'top' | 'middle' | 'bottom';\n\nexport interface VgMarkConfig {\n\n  /**\n   * Default Fill Color.  This has higher precedence than config.color\n   *\n   * __Default value:__ (None)\n   *\n   */\n  fill?: string;\n\n  /**\n   * Default Stroke Color.  This has higher precedence than config.color\n   *\n   * __Default value:__ (None)\n   *\n   */\n  stroke?: string;\n\n  // ---------- Opacity ----------\n  /**\n   * The overall opacity (value between [0,1]).\n   *\n   * __Default value:__ `0.7` for non-aggregate plots with `point`, `tick`, `circle`, or `square` marks or layered `bar` charts and `1` otherwise.\n   *\n   * @minimum 0\n   * @maximum 1\n   */\n  opacity?: number;\n\n\n  /**\n   * The fill opacity (value between [0,1]).\n   *\n   * __Default value:__ `1`\n   *\n   * @minimum 0\n   * @maximum 1\n   */\n  fillOpacity?: number;\n\n  /**\n   * The stroke opacity (value between [0,1]).\n   *\n   * __Default value:__ `1`\n   *\n   * @minimum 0\n   * @maximum 1\n   */\n  strokeOpacity?: number;\n\n  // ---------- Stroke Style ----------\n  /**\n   * The stroke width, in pixels.\n   *\n   * @minimum 0\n   */\n  strokeWidth?: number;\n\n  /**\n   * An array of alternating stroke, space lengths for creating dashed or dotted lines.\n   */\n  strokeDash?: number[];\n\n  /**\n   * The offset (in pixels) into which to begin drawing with the stroke dash array.\n   */\n  strokeDashOffset?: number;\n\n  // ---------- Orientation: Bar, Tick, Line, Area ----------\n  /**\n   * The orientation of a non-stacked bar, tick, area, and line charts.\n   * The value is either horizontal (default) or vertical.\n   * - For bar, rule and tick, this determines whether the size of the bar and tick\n   * should be applied to x or y dimension.\n   * - For area, this property determines the orient property of the Vega output.\n   * - For line, this property determines the sort order of the points in the line\n   * if `config.sortLineBy` is not specified.\n   * For stacked charts, this is always determined by the orientation of the stack;\n   * therefore explicitly specified value will be ignored.\n   */\n  orient?: Orient;\n\n  // ---------- Interpolation: Line / area ----------\n  /**\n   * The line interpolation method to use for line and area marks. One of the following:\n   * - `\"linear\"`: piecewise linear segments, as in a polyline.\n   * - `\"linear-closed\"`: close the linear segments to form a polygon.\n   * - `\"step\"`: alternate between horizontal and vertical segments, as in a step function.\n   * - `\"step-before\"`: alternate between vertical and horizontal segments, as in a step function.\n   * - `\"step-after\"`: alternate between horizontal and vertical segments, as in a step function.\n   * - `\"basis\"`: a B-spline, with control point duplication on the ends.\n   * - `\"basis-open\"`: an open B-spline; may not intersect the start or end.\n   * - `\"basis-closed\"`: a closed B-spline, as in a loop.\n   * - `\"cardinal\"`: a Cardinal spline, with control point duplication on the ends.\n   * - `\"cardinal-open\"`: an open Cardinal spline; may not intersect the start or end, but will intersect other control points.\n   * - `\"cardinal-closed\"`: a closed Cardinal spline, as in a loop.\n   * - `\"bundle\"`: equivalent to basis, except the tension parameter is used to straighten the spline.\n   * - `\"monotone\"`: cubic interpolation that preserves monotonicity in y.\n   */\n  interpolate?: Interpolate;\n  /**\n   * Depending on the interpolation type, sets the tension parameter (for line and area marks).\n   * @minimum 0\n   * @maximum 1\n   */\n  tension?: number;\n\n  /**\n   * The default symbol shape to use. One of: `\"circle\"` (default), `\"square\"`, `\"cross\"`, `\"diamond\"`, `\"triangle-up\"`, or `\"triangle-down\"`, or a custom SVG path.\n   *\n   * __Default value:__ `\"circle\"`\n   *\n   */\n  shape?: string;\n\n  /**\n   * The pixel area each the point/circle/square.\n   * For example: in the case of circles, the radius is determined in part by the square root of the size value.\n   *\n   * __Default value:__ `30`\n   *\n   * @minimum 0\n   */\n  size?: number;\n\n  // Text / Label Mark Config\n\n  /**\n   * The horizontal alignment of the text. One of `\"left\"`, `\"right\"`, `\"center\"`.\n   */\n  align?: HorizontalAlign;\n\n  /**\n   * The rotation angle of the text, in degrees.\n   * @minimum 0\n   * @maximum 360\n   */\n  angle?: number;\n\n  /**\n   * The vertical alignment of the text. One of `\"top\"`, `\"middle\"`, `\"bottom\"`.\n   *\n   * __Default value:__ `\"middle\"`\n   *\n   */\n  baseline?: VerticalAlign;\n\n  /**\n   * The horizontal offset, in pixels, between the text label and its anchor point. The offset is applied after rotation by the _angle_ property.\n   */\n  dx?: number;\n\n  /**\n   * The vertical offset, in pixels, between the text label and its anchor point. The offset is applied after rotation by the _angle_ property.\n   */\n  dy?: number;\n\n  /**\n   * Polar coordinate radial offset, in pixels, of the text label from the origin determined by the `x` and `y` properties.\n   * @minimum 0\n   */\n  radius?: number;\n\n  /**\n   * The maximum length of the text mark in pixels (default 0, indicating no limit). The text value will be automatically truncated if the rendered size exceeds the limit.\n   */\n  limit?: number;\n\n  /**\n   * Polar coordinate angle, in radians, of the text label from the origin determined by the `x` and `y` properties. Values for `theta` follow the same convention of `arc` mark `startAngle` and `endAngle` properties: angles are measured in radians, with `0` indicating \"north\".\n   */\n  theta?: number;\n\n  /**\n   * The typeface to set the text in (e.g., `\"Helvetica Neue\"`).\n   * @minimum 0\n   */\n  font?: string;\n\n  /**\n   * The font size, in pixels.\n   * @minimum 0\n   */\n  fontSize?: number;\n\n  /**\n   * The font style (e.g., `\"italic\"`).\n   */\n  fontStyle?: FontStyle;\n  /**\n   * The font weight (e.g., `\"bold\"`).\n   */\n  fontWeight?: FontWeight | FontWeightNumber;\n\n  /**\n   * Placeholder text if the `text` channel is not specified\n   */\n  text?: string;\n}\n\nexport type Anchor = 'start' | 'middle' | 'end';\n\nexport interface VgTitle {\n  /**\n   * The title text.\n   */\n  text: string;\n\n  /**\n   * The orientation of the title relative to the chart. One of `\"top\"` (the default), `\"bottom\"`, `\"left\"`, or `\"right\"`.\n   */\n  orient?: TitleOrient;\n\n  /**\n   * The anchor position for placing the title. One of `\"start\"`, `\"middle\"` (the default), or `\"end\"`. For example, with an orientation of top these anchor positions map to a left-, center-, or right-aligned title.\n   */\n  anchor?: Anchor;\n\n  /**\n   * The orthogonal offset in pixels by which to displace the title from its position along the edge of the chart.\n   */\n  offset?: number;\n\n  // TODO: name, encode, interactive, zindex\n}\n\nexport type TitleOrient = 'top' | 'bottom' | 'left' | 'right';\n\nexport interface VgTitleConfig {\n  /**\n   * Title anchor position (`\"start\"`, `\"middle\"`, or `\"end\"`).\n   */\n  anchor?: Anchor;\n  /**\n   * Angle in degrees of title text.\n   */\n  angle?:\tnumber;\n  /**\n   * Vertical text baseline for title text.\n   */\n  baseline?: VerticalAlign;\n  /**\n   * Text color for title text.\n   */\n  color?:\tstring;\n  /**\n   * Font name for title text.\n   */\n  font?:\tstring;\n  /**\n   * Font size in pixels for title text.\n   *\n   * __Default value:__ `10`.\n   *\n   * @minimum 0\n   */\n  fontSize?:\tnumber;\n  /**\n   * Font weight for title text.\n   */\n  fontWeight?: FontWeight | FontWeightNumber;\n  /**\n   * The maximum allowed length in pixels of legend labels.\n   *\n   * @minimum 0\n   */\n  limit?:\tnumber;\n  /**\n   * Offset in pixels of the title from the chart body and axes.\n   */\n  offset?:\tnumber;\n  /**\n   * Default title orientation (\"top\", \"bottom\", \"left\", or \"right\")\n   */\n  orient?: TitleOrient;\n}\n"]}