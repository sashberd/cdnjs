!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e(require("inferno")):"function"==typeof define&&define.amd?define(["inferno"],e):t["inferno-component"]=e(t.Inferno)}(this,function(t){"use strict";function e(t){var e=typeof t;return"string"===e||"number"===e}function n(t){return p(t)||r(t)}function o(t){return r(t)||t===!1||s(t)||p(t)}function i(t){return"function"==typeof t}function r(t){return null===t}function s(t){return t===!0}function p(t){return void 0===t}function d(t){throw t||(t=S),new Error("Inferno Error: "+t)}function a(t,e){var n,o={};if(t)for(n in t)o[n]=t[n];if(e)for(n in e)o[n]=e[n];return o}function u(){this.listeners=[]}function c(t,e){if(28&t.flags){var n=t.parentVNode;n&&(n.dom=e,c(n,e))}}function f(t,e,n){var o=y.get(t);o||(o=[],y.set(t,o),Promise.resolve().then(function(){y.delete(t),h(t,e,function(){for(var t=0,e=o.length;t<e;t++)o[t]()})})),n&&o.push(n)}function l(t,e,n,o){i(e)&&(e=e(t.state,t.props,t.context));for(var r in e)t._pendingState[r]=e[r];if(t._pendingSetState||!m||o&&t._blockRender){var s=t._pendingState,p=t.state;for(var d in s)p[d]=s[d];t._pendingState={}}else o||t._blockRender?(t._pendingSetState=!0,h(t,!1,n)):f(t,!1,n)}function h(i,r,s){if(i._deferSetState&&!r||i._blockRender||i._unmounted)n(s)||(i._blockRender&&(i.state=i._pendingState,i._pendingState={}),s());else{i._pendingSetState=!1;var p=i._pendingState,f=i.state,l=a(f,p),h=i.props,S=i.context;i._pendingState={};var m=i._updateComponent(f,l,h,h,S,r,!0),y=!0;o(m)?m=t.createVNode(4096):m===_?(m=i._lastInput,y=!1):e(m)?m=t.createVNode(1,null,null,m):g(m)&&d();var v=i._lastInput,b=i._vNode,R=v.dom&&v.dom.parentNode||(v.dom=b.dom);if(i._lastInput=m,y){var k=i._lifecycle;k?k.listeners=[]:k=new u,i._lifecycle=k;var x=i.getChildContext();x=n(x)?i._childContext:a(S,x),i._patch(v,m,R,k,x,i._isSVG,!1),k.trigger(),i.componentDidUpdate(h,f),t.options.afterUpdate&&t.options.afterUpdate(b)}var C=b.dom=m.dom,M=i._componentToDOMNodeMap;M&&M.set(i,m.dom),c(b,C),n(s)||s()}}var _="$NO_OP",S="a runtime error occured! Use Inferno in development environment to find the error.",m="undefined"!=typeof window&&window.document,g=Array.isArray;u.prototype.addListener=function(t){this.listeners.push(t)},u.prototype.trigger=function(){for(var t=this.listeners,e=0,n=t.length;e<n;e++)t[e]()};var y=new Map,v=function(e,n){this.state={},this._blockRender=!1,this._ignoreSetState=!1,this._blockSetState=!1,this._deferSetState=!1,this._pendingSetState=!1,this._syncSetState=!0,this._pendingState={},this._lastInput=null,this._vNode=null,this._unmounted=!1,this._lifecycle=null,this._childContext=null,this._patch=null,this._isSVG=!1,this._componentToDOMNodeMap=null,this.props=e||t.EMPTY_OBJ,this.context=n||t.EMPTY_OBJ};return v.prototype.render=function(t,e,n){},v.prototype.forceUpdate=function(t){this._unmounted||m&&h(this,!0,t)},v.prototype.setState=function(t,e){this._unmounted||(this._blockSetState?d():this._ignoreSetState||l(this,t,e,this._syncSetState))},v.prototype.setStateSync=function(t){this._unmounted||(this._blockSetState?d():this._ignoreSetState||l(this,t,null,!0))},v.prototype.componentWillMount=function(){},v.prototype.componentDidUpdate=function(t,e,n){},v.prototype.shouldComponentUpdate=function(t,e,n){return!0},v.prototype.componentWillReceiveProps=function(t,e){},v.prototype.componentWillUpdate=function(t,e,n){},v.prototype.getChildContext=function(){},v.prototype._updateComponent=function(e,n,o,i,r,s,p){if(this._unmounted===!0&&d(),o!==i||i===t.EMPTY_OBJ||e!==n||s){o===i&&i!==t.EMPTY_OBJ||(p||(this._blockRender=!0,this.componentWillReceiveProps(i,r),this._blockRender=!1),this._pendingSetState&&(n=a(n,this._pendingState),this._pendingSetState=!1,this._pendingState={}));if(this.shouldComponentUpdate(i,n,r)||s){this._blockSetState=!0,this.componentWillUpdate(i,n,r),this._blockSetState=!1,this.props=i,this.state=n,this.context=r,t.options.beforeRender&&t.options.beforeRender(this);var u=this.render(i,n,r);return t.options.afterRender&&t.options.afterRender(this),u}this.props=i,this.state=n,this.context=r}return _},v});
