{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///pnp.min.js","webpack:///webpack/bootstrap 1992e9638d8baf287427","webpack:///./lib/utils/util.js","webpack:///./lib/sharepoint/queryable.js","webpack:///./lib/sharepoint/odata.js","webpack:///./lib/utils/exceptions.js","webpack:///./lib/configuration/pnplibconfig.js","webpack:///./lib/utils/logging.js","webpack:///./lib/collections/collections.js","webpack:///./lib/sharepoint/webs.js","webpack:///./lib/sharepoint/files.js","webpack:///./lib/net/httpclient.js","webpack:///./lib/sharepoint/lists.js","webpack:///./lib/sharepoint/items.js","webpack:///./lib/sharepoint/queryableshareable.js","webpack:///./lib/sharepoint/types.js","webpack:///./lib/sharepoint/folders.js","webpack:///./lib/utils/storage.js","webpack:///./lib/sharepoint/roles.js","webpack:///./lib/sharepoint/sitegroups.js","webpack:///./lib/sharepoint/contenttypes.js","webpack:///./lib/sharepoint/usercustomactions.js","webpack:///(webpack)/buildin/global.js","webpack:///./lib/net/fetchclient.js","webpack:///./lib/sharepoint/search.js","webpack:///./lib/sharepoint/caching.js","webpack:///./lib/sharepoint/searchsuggest.js","webpack:///./lib/sharepoint/site.js","webpack:///./lib/sharepoint/queryablesecurable.js","webpack:///./lib/sharepoint/siteusers.js","webpack:///./lib/sharepoint/webparts.js","webpack:///./lib/sharepoint/fields.js","webpack:///./lib/sharepoint/navigation.js","webpack:///./lib/sharepoint/features.js","webpack:///./lib/sharepoint/utilities.js","webpack:///./lib/configuration/providers/cachingConfigurationProvider.js","webpack:///./lib/pnp.js","webpack:///./lib/configuration/configuration.js","webpack:///./lib/sharepoint/rest.js","webpack:///./lib/net/digestcache.js","webpack:///./lib/sharepoint/pipeline.js","webpack:///./lib/sharepoint/attachmentfiles.js","webpack:///./lib/sharepoint/views.js","webpack:///./lib/sharepoint/forms.js","webpack:///./lib/sharepoint/subscriptions.js","webpack:///./lib/sharepoint/relateditems.js","webpack:///./lib/sharepoint/userprofiles.js","webpack:///./lib/utils/files.js","webpack:///./lib/types/index.js","webpack:///./lib/sharepoint/index.js","webpack:///./lib/net/sprequestexecutorclient.js","webpack:///./lib/net/nodefetchclientbrowser.js","webpack:///./lib/configuration/providers/index.js","webpack:///./lib/configuration/providers/spListConfigurationProvider.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","global","extractWebUrl","candidateUrl","index","indexOf","substr","value","pnplibconfig_1","Util","getCtxCallback","context","method","params","_i","arguments","length","apply","urlParamExists","replace","RegExp","test","location","search","getUrlParamByName","regex","results","exec","decodeURIComponent","getUrlParamBoolByName","stringInsert","target","substring","dateAdd","date","interval","units","ret","Date","toLowerCase","setFullYear","getFullYear","setMonth","getMonth","setDate","getDate","setTime","getTime","undefined","loadStylesheet","path","avoidCache","encodeURIComponent","toString","head","document","getElementsByTagName","e","createElement","appendChild","setAttribute","combinePaths","paths","filter","stringIsNullOrEmpty","map","join","getRandomString","chars","text","Array","possible","charAt","Math","floor","random","getGUID","r","isFunction","candidateFunction","isArray","array","constructor","extend","source","noOverwrite","check","getOwnPropertyNames","v","reduce","t","isUrlAbsolute","url","toAbsoluteUrl","Promise","resolve","RuntimeConfig","baseUrl","_spPageContextInfo","webAbsoluteUrl","webServerRelativeUrl","baseUrl_1","forEach","__extends","extendStatics","setPrototypeOf","__proto__","b","__","create","util_1","collections_1","httpclient_1","odata_1","exceptions_1","logging_1","pipeline_1","Queryable","_options","_query","Dictionary","_batch","urlStr","lastIndexOf","_parentUrl","_url","slice","q","add","concat","pathPart","append","addBatchDependency","hasBatch","addDependency","configure","options","mergeOptions","as","inBatch","batch","AlreadyInBatchException","usingCaching","globalCacheDisable","_useCaching","_cachingOptions","toUrl","toUrlAndQuery","aliasedParams","match","labelName","Logger","write","LogLevel","Verbose","merge","count","getKeys","key","getParent","parentUrl","parent","query","clone","additionalPath","includeBatch","parser","getOptions","ODataDefaultParser","toRequestContext","then","pipe","getAs","postCore","postOptions","postAsCore","patchCore","patchOptions","deleteCore","deleteOptions","verb","pipeline","_this","PipelineMethods","default","dependencyDispose","batchDependency","cachingOptions","isBatched","isCached","requestAbsoluteUrl","requestId","QueryableCollection","_super","select","selects","expand","expands","orderBy","ascending","keys","asc","push","skip","top","QueryableInstance","extractOdataId","candidate","__metadata","id","ODataIdException","getEntityUrl","entity","uri","Warning","ODataValue","ODataValueParserImpl","ODataEntity","ODataEntityParserImpl","ODataEntityArray","ODataEntityArrayParserImpl","ODataParserBase","parse","reject","handleError","headers","has","parseFloat","status","txt","JSON","json","parseODataJSON","catch","ok","data","responseBody","responseHeaders","ProcessHttpClientResponseException","statusText","log","level","message","result","ODataRawParserImpl","ODataRaw","ODataBatch","_batchId","_requests","_dependencies","info","toUpperCase","resolver","promise","execute","all","executeImpl","batchId","Info","client","HttpClient","absoluteRequestUrl","batchBody","currentChangeSetId","reqInfo","Headers","set","mergeHeaders","body","batchHeaders","Content-Type","batchOptions","post","_parseResponse","responses","BatchParseException","chain","response","request","_","statusRegExp","lines","split","state","line","trim","parts","parseInt","Response","TextFileParser","BlobFileParser","blob","JSONFileParser","BufferFileParser","arrayBuffer","buffer","defaultLog","error","Error","NoCacheAvailableException","msg","APIUrlException","AuthUrlException","NodeFetchClientUnsupportedException","SPRequestExecutorUndefinedException","MaxCommentLengthException","NotSupportedInBatchException","operation","FunctionExpectedException","UrlException","setRuntimeConfig","config","_runtimeConfig","fetchclient_1","RuntimeConfigImpl","_headers","_defaultCachingStore","_defaultCachingTimeoutSeconds","_globalCacheDisable","_fetchClientFactory","FetchClient","_baseUrl","_spfxContext","_enableCacheExpiration","_cacheExpirationIntervalMilliseconds","defaultCachingStore","defaultCachingTimeoutSeconds","fetchClientFactory","spfxContext","enableCacheExpiration","cacheExpirationIntervalMilliseconds","pageContext","web","absoluteUrl","instance","activeLogLevel","_instance","LoggerImpl","subscribe","listeners","listener","clearSubscribers","writeJSON","stringify","entry","measure","f","subscribers","subscriber","console","profile","profileEnd","ConsoleListener","format","warn","FunctionListener","values","sourceAsDictionary_1","sourceAsHash","remove","val","splice","getValues","clear","queryable_1","lists_1","fields_1","navigation_1","sitegroups_1","contenttypes_1","folders_1","roles_1","files_1","lists_2","siteusers_1","usercustomactions_1","features_1","queryableshareable_1","relateditems_1","Webs","webPath","title","description","template","language","inheritPermissions","props","Description","Language","Title","Url","UseSamePermissionsAsParentSite","WebTemplate","postBody","parameters","type","Web","WebInfos","fromUrl","ContentTypes","Lists","Fields","Features","Navigation","SiteUsers","SiteGroups","CurrentUser","Folders","UserCustomActions","RoleDefinitions","RelatedItemManagerImpl","FromUrl","createBatch","Folder","SiteGroup","getFolderByServerRelativeUrl","folderRelativeUrl","getFileByServerRelativeUrl","fileRelativeUrl","File","getList","listRelativeUrl","List","update","properties","X-HTTP-Method","delete","applyTheme","colorPaletteUrl","fontSchemeUrl","backgroundImageUrl","shareGenerated","applyWebTemplate","ensureUser","loginName","logonName","user","SiteUser","availableWebTemplates","includeCrossLanugage","getCatalog","getChanges","getUserById","mapToIcon","filename","size","progId","QueryableShareableWeb","webparts_1","items_1","odata_2","Files","getByName","content","shouldOverWrite","file","addChunked","progress","chunkSize","setContentChunked","addTemplateFile","fileUrl","templateFileType","Versions","approve","comment","cancelUpload","uploadId","checkin","checkinType","CheckinType","Major","checkout","copyTo","eTag","IF-Match","deny","getLimitedWebPartManager","scope","WebPartsPersonalizationScope","Shared","LimitedWebPartManager","moveTo","moveOperations","MoveOperations","Overwrite","publish","recycle","undoCheckout","unpublish","getText","binaryStringResponseBody","getBlob","getBuffer","getJSON","setContent","getItem","listItemAllFields","Item","self","fileSize","blockCount","blockNumber","currentPointer","stage","totalBlocks","startUpload","pointer","continueUpload","finishUpload","fragment","fileOffset","ServerRelativeUrl","QueryableShareableFile","getById","versionId","Version","deleteAll","deleteById","deleteByLabel","label","restoreByLabel","TemplateFileType","Request","digestcache_1","_impl","_digestCache","DigestCache","fetch","opts","cache","credentials","webUrl","getDigest","digest","fetchRaw","rawHeaders","retry","ctx","delay","attempts","retryCount","setTimeout","retryContext","patch","views_1","forms_1","subscriptions_1","queryablesecurable_1","getByTitle","list","enableContentTypes","additionalSettings","addSettings","AllowContentTypes","BaseTemplate","ContentTypesEnabled","ensure","addOrUpdateSettings","created","ensureSiteAssetsLibrary","ensureSitePagesLibrary","Items","Views","Forms","Subscriptions","getView","viewId","View","retList","getItemsByCAMLQuery","getListItemChangesSinceToken","Recycle","renderListData","viewXml","RenderListData","renderListFormData","itemId","formId","mode","ListData","reserveListItemId","ReserveListItemId","getListItemEntityTypeFullName","ListItemEntityTypeFullName","QueryableSecurable","attachmentfiles_1","getPaged","PagedItemCollectionParser","listItemEntityTypeFullName","removeDependency","ensureListItemEntityTypeName","listItemEntityType","item","Id","candidatelistItemEntityTypeFullName","AttachmentFiles","ContentType","ItemUpdatedParser","getWopiFrameUrl","action","GetWOPIFrameUrl","validateUpdateListItem","formValues","newDocumentUpdate","bNewDocumentUpdate","QueryableShareableItem","PagedItemCollection","nextUrl","getNext","hasNext","__next","odata.etag","webs_1","types_1","QueryableShareable","getShareLink","kind","expiration","expString","toISOString","createLink","emailData","settings","linkKind","shareWith","loginNames","role","requireSignin","propagateAcl","userStr","login","Key","roleFilter","SharingRole","Edit","RoleType","Contributor","Reader","roleDefinitions","def","includeAnonymousLinkInEmail","peoplePickerInput","roleValue","useSimplifiedRoles","emailBody","emailSubject","subject","sendEmail","shareObject","bypass","sendShareObjectRequest","group","getRoleValue","unshareObjectWeb","checkPermissions","recipients","getSharingInformation","getObjectSharingSettings","unshareObject","deleteLinkByKind","unshareLink","shareId","associatedMemberGroup","g","Guest","associatedVisitorGroup","getShareObjectWeb","dependency","shareObjectRaw","SharingLinkKind","OrganizationView","checkSharingPermissions","unshare","deleteSharingLinkByKind","FileFolderShared","getShareable","shareable","QueryableShareableFolder","shareEverything","ControlMode","FieldTypes","DateTimeFieldFormatType","AddFieldOptions","CalendarType","UrlFieldFormatType","PermissionKind","PrincipalType","PrincipalSource","PageType","SharingOperationStatusCode","SPSharedObjectType","SharingDomainRestrictionMode","folder","PnPClientStorageWrapper","store","defaultTimeoutMinutes","enabled","cacheExpirationHandler","persistable","put","expire","setItem","createPersistable","removeItem","getOrPut","deleteExpired","defaultTimeout","pnp","MemoryStorage","_store","PnPClientStorage","_local","_session","localStorage","sessionStorage","RoleAssignments","principalId","roleDefId","ra","RoleAssignment","RoleDefinitionBindings","RoleDefinition","getByType","roleTypeKind","order","basePermissions","BasePermissions","Name","Order","definition","retDef","groupName","sg","removeById","removeByLoginName","retGroup","ct","addAvailableContentType","contentTypeId","contentType","Group","StringValue","FieldLinks","fl","FieldLink","uca","UserCustomAction","Function","eval","window","SearchQueryBuilder","queryText","extendQuery","Querytext","queryTemplate","QueryTemplate","sourceId","SourceId","EnableInterleaving","EnableStemming","TrimDuplicates","trimDuplicatesIncludeId","TrimDuplicatesIncludeId","EnableNicknames","EnableFQL","EnablePhonetic","BypassResultTypes","ProcessBestBets","EnableQueryRules","EnableSorting","GenerateBlockRankLog","rankingModelId","RankingModelId","startRow","StartRow","rowLimit","RowLimit","rowsPerPage","RowsPerPage","selectProperties","SelectProperties","culture","Culture","timeZoneId","TimeZoneId","refinementFilters","filters","RefinementFilters","refiners","Refiners","hiddenConstraints","constraints","HiddenConstraints","sortList","sorts","SortList","timeout","milliseconds","Timeout","hithighlightedProperties","HitHighlightedProperties","clientType","ClientType","personalizationData","PersonalizationData","resultsURL","ResultsUrl","queryTag","tags","QueryTag","Properties","ProcessPersonalFavorites","queryTemplatePropertiesUrl","QueryTemplatePropertiesUrl","reorderingRules","rules","ReorderingRules","hitHighlightedMultivaluePropertyLimit","limit","HitHighlightedMultivaluePropertyLimit","EnableOrderingHitHighlightedProperty","collapseSpecification","spec","CollapseSpecification","uiLanguage","lang","UILanguage","desiredSnippetLength","len","DesiredSnippetLength","maxSnippetLength","MaxSnippetLength","summaryLength","SummaryLength","toSearchQuery","part","Search","formattedBody","fixupProp","HithighlightedProperties","SearchResults","prop","rawResponse","_raw","_primary","postquery","RawSearchResults","ElapsedTime","PrimaryQueryResult","RelevantResults","RowCount","TotalRows","TotalRowsIncludingDuplicates","formatSearchResults","Table","Rows","getPage","pageNumber","pageSize","rows","rawResults","tempResults","tempResults_1","tempResult","cells","Cells","res","cell","Value","writable","SortDirection","ReorderingRuleMatchType","QueryPropertyValueType","SearchBuiltInSourceId","Documents","ItemsMatchingContentType","ItemsMatchingTag","ItemsRelatedToCurrentUser","ItemsWithSameKeywordAsThisItem","LocalPeopleResults","LocalReportsAndDataResults","LocalSharePointResults","LocalVideoResults","Pages","Pictures","Popular","RecentlyChangedItems","RecommendedItems","Wiki","storage_1","CachingOptions","storeName","storage","local","session","CachingParserWrapper","_parser","_cacheOptions","SearchSuggest","mapQueryToQueryString","SearchSuggestResult","querytext","personalCount","preQuery","hitHighlighting","capitalize","stemming","includePeople","queryRules","prefixMatch","PeopleNames","suggest","PersonalResults","Queries","Site","getContextInfo","GetContextWebInformation","SupportedSchemaVersions","getDocumentLibraries","absoluteWebUrl","GetDocumentLibraries","getWebUrlFromPageUrl","absolutePageUrl","GetWebUrlFromPageUrl","openWebById","webId","getUserEffectivePermissions","GetUserEffectivePermissions","getCurrentUserEffectivePermissions","currentUser","LoginName","breakRoleInheritance","copyRoleAssignments","clearSubscopes","resetRoleInheritance","userHasPermissions","permission","perms","hasPermissions","currentUserHasPermissions","perm","FullMask","High","Low","num","getByEmail","email","getByLoginName","su","WebPartDefinitions","export","webPartId","import","xml","webPartXml","WebPartDefinition","getByControlId","WebPart","saveChanges","zoneId","zoneIndex","close","open","Field","getByInternalNameOrTitle","createFieldAsXml","SchemaXml","field","fieldType","addText","maxLength","FieldTypeKind","MaxLength","addCalculated","formula","dateFormat","outputType","Text","DateFormat","Formula","OutputType","addDateTime","displayFormat","calendarType","friendlyDisplayFormat","DateOnly","Gregorian","DateTimeCalendarType","DisplayFormat","FriendlyDisplayFormat","addNumber","minValue","maxValue","MinimumValue","MaximumValue","addCurrency","currencyLocalId","CurrencyLocaleId","addMultilineText","numberOfLines","richText","restrictedMode","appendOnly","allowHyperlink","AllowHyperlink","AppendOnly","NumberOfLines","RestrictedMode","RichText","addUrl","Hyperlink","setShowInDisplayForm","show","setShowInEditForm","setShowInNewForm","NavigationNodes","node","NavigationNode","visible","IsVisible","moveAfter","nodeId","previousNodeId","feature","Feature","force","featdefScope","featureId","deactivate","DefinitionId","UtilityMethod","methodName","getBaseUrl","excute","Body","From","Subject","To","CC","BCC","AdditionalHeaders","getCurrentUserEmailAddresses","resolvePrincipal","input","scopes","sources","inputIsEmailOnly","addToUserInfoList","matchUserInfoList","searchPrincipals","maxCount","createEmailBodyForInvitation","pageAddress","expandGroupsToPrincipals","inputs","createWikiPage","CachingConfigurationProvider","wrappedProvider","cacheKey","cacheStore","selectPnPCache","getWrappedProvider","getConfiguration","cachedConfig","providerPromise","providedConfig","pnpCache","configuration_1","rest_1","util","sp","SPRest","Settings","setup","Def","_settings","addJSON","hash","load","provider","reason","search_1","searchsuggest_1","site_1","userprofiles_1","utilities_1","searchSuggest","finalQuery","UserProfileQuery","crossDomainSite","addInWebUrl","hostWebUrl","_cdImpl","crossDomainWeb","urlPart","CachedDigest","digests","_httpClient","_digests","cachedDigest","Accept","newCachedDigest","FormDigestValue","seconds","FormDigestTimeoutSeconds","returnResult","setResult","hasResult","next","shift","requestPipelineMethod","alwaysRun","propertyKey","descriptor","args","__decorate","decorators","desc","getOwnPropertyDescriptor","Reflect","decorate","caching_1","logStart","caching","cacheOptions","send","logEnd","AttachmentFile","addMultiple","files","personalView","PersonalView","view","ViewFields","renderAsHtml","getSchemaXml","fieldTitleOrInternalName","move","fieldInternalName","removeAll","Form","subscriptionId","subscription","Subscription","notificationUrl","expirationDate","clientState","expirationDateTime","resource","getRelatedItems","sourceListName","sourceItemId","SourceItemID","SourceListName","getPageOneRelatedItems","addSingleLink","sourceWebUrl","targetListName","targetItemID","targetWebUrl","tryAddReverseLink","SourceWebUrl","TargetItemID","TargetListName","TargetWebUrl","TryAddReverseLink","addSingleLinkToUrl","targetItemUrl","TargetItemUrl","addSingleLinkFromUrl","sourceItemUrl","targetItemId","SourceItemUrl","deleteSingleLink","tryDeleteReverseLink","TryDeleteReverseLink","profileLoader","ProfileLoader","amIFollowedBy","amIFollowing","getFollowedTags","getFollowersFor","getPeopleFollowedBy","getPropertiesFor","getUserProfilePropertyFor","propertyName","hideSuggestion","isFollowing","follower","followee","setMyProfilePic","profilePicSource","readBlobAsArrayBuffer","String","fromCharCode","Uint16Array","createPersonalSiteEnqueueBulk","emails","ownerUserProfile","userProfile","createPersonalSite","interactiveRequest","shareAllSocialData","share","emailIDs","readBlobAsText","readBlobAs","reader","FileReader","onload","readAsText","readAsArrayBuffer","__export","sprequestexecutorclient_1","SPRequestExecutorClient","nodefetchclient_1","NodeFetchClient","convertToResponse","spResponse","h","statusCode","SP","RequestExecutor","iterator","temp","addinWebUrl","executor","entries","done","requestOptions","success","binaryStringRequestBody","executeAsync","cachingConfigurationProvider_1","spListConfigurationProvider_1","SPListConfigurationProvider","sourceWeb","sourceListTitle","lists","listTitle","items","configuration","asCaching"],"mappings":"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","file":"pnp.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"$pnp\"] = factory();\n\telse\n\t\troot[\"$pnp\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","/**\n * sp-pnp-js v2.0.8 - A JavaScript library for SharePoint development.\n * MIT (https://github.com/SharePoint/PnP-JS-Core/blob/master/LICENSE)\n * Copyright (c) 2017 Microsoft\n * docs: http://officedev.github.io/PnP-JS-Core\n * source: https://github.com/SharePoint/PnP-JS-Core\n * bugs: https://github.com/SharePoint/PnP-JS-Core/issues\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"$pnp\"] = factory();\n\telse\n\t\troot[\"$pnp\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/assets/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 34);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar pnplibconfig_1 = __webpack_require__(4);\nfunction extractWebUrl(candidateUrl) {\n    if (candidateUrl === null) {\n        return \"\";\n    }\n    var index = candidateUrl.indexOf(\"_api/\");\n    if (index > -1) {\n        return candidateUrl.substr(0, index);\n    }\n    // if all else fails just give them what they gave us back\n    return candidateUrl;\n}\nexports.extractWebUrl = extractWebUrl;\nvar Util = (function () {\n    function Util() {\n    }\n    /**\n     * Gets a callback function which will maintain context across async calls.\n     * Allows for the calling pattern getCtxCallback(thisobj, method, methodarg1, methodarg2, ...)\n     *\n     * @param context The object that will be the 'this' value in the callback\n     * @param method The method to which we will apply the context and parameters\n     * @param params Optional, additional arguments to supply to the wrapped method when it is invoked\n     */\n    Util.getCtxCallback = function (context, method) {\n        var params = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            params[_i - 2] = arguments[_i];\n        }\n        return function () {\n            method.apply(context, params);\n        };\n    };\n    /**\n     * Tests if a url param exists\n     *\n     * @param name The name of the url paramter to check\n     */\n    Util.urlParamExists = function (name) {\n        name = name.replace(/[\\[]/, \"\\\\[\").replace(/[\\]]/, \"\\\\]\");\n        var regex = new RegExp(\"[\\\\?&]\" + name + \"=([^&#]*)\");\n        return regex.test(location.search);\n    };\n    /**\n     * Gets a url param value by name\n     *\n     * @param name The name of the paramter for which we want the value\n     */\n    Util.getUrlParamByName = function (name) {\n        name = name.replace(/[\\[]/, \"\\\\[\").replace(/[\\]]/, \"\\\\]\");\n        var regex = new RegExp(\"[\\\\?&]\" + name + \"=([^&#]*)\");\n        var results = regex.exec(location.search);\n        return results == null ? \"\" : decodeURIComponent(results[1].replace(/\\+/g, \" \"));\n    };\n    /**\n     * Gets a url param by name and attempts to parse a bool value\n     *\n     * @param name The name of the paramter for which we want the boolean value\n     */\n    Util.getUrlParamBoolByName = function (name) {\n        var p = this.getUrlParamByName(name);\n        var isFalse = (p === \"\" || /false|0/i.test(p));\n        return !isFalse;\n    };\n    /**\n     * Inserts the string s into the string target as the index specified by index\n     *\n     * @param target The string into which we will insert s\n     * @param index The location in target to insert s (zero based)\n     * @param s The string to insert into target at position index\n     */\n    Util.stringInsert = function (target, index, s) {\n        if (index > 0) {\n            return target.substring(0, index) + s + target.substring(index, target.length);\n        }\n        return s + target;\n    };\n    /**\n     * Adds a value to a date\n     *\n     * @param date The date to which we will add units, done in local time\n     * @param interval The name of the interval to add, one of: ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second']\n     * @param units The amount to add to date of the given interval\n     *\n     * http://stackoverflow.com/questions/1197928/how-to-add-30-minutes-to-a-javascript-date-object\n     */\n    Util.dateAdd = function (date, interval, units) {\n        var ret = new Date(date); // don't change original date\n        switch (interval.toLowerCase()) {\n            case \"year\":\n                ret.setFullYear(ret.getFullYear() + units);\n                break;\n            case \"quarter\":\n                ret.setMonth(ret.getMonth() + 3 * units);\n                break;\n            case \"month\":\n                ret.setMonth(ret.getMonth() + units);\n                break;\n            case \"week\":\n                ret.setDate(ret.getDate() + 7 * units);\n                break;\n            case \"day\":\n                ret.setDate(ret.getDate() + units);\n                break;\n            case \"hour\":\n                ret.setTime(ret.getTime() + units * 3600000);\n                break;\n            case \"minute\":\n                ret.setTime(ret.getTime() + units * 60000);\n                break;\n            case \"second\":\n                ret.setTime(ret.getTime() + units * 1000);\n                break;\n            default:\n                ret = undefined;\n                break;\n        }\n        return ret;\n    };\n    /**\n     * Loads a stylesheet into the current page\n     *\n     * @param path The url to the stylesheet\n     * @param avoidCache If true a value will be appended as a query string to avoid browser caching issues\n     */\n    Util.loadStylesheet = function (path, avoidCache) {\n        if (avoidCache) {\n            path += \"?\" + encodeURIComponent((new Date()).getTime().toString());\n        }\n        var head = document.getElementsByTagName(\"head\");\n        if (head.length > 0) {\n            var e = document.createElement(\"link\");\n            head[0].appendChild(e);\n            e.setAttribute(\"type\", \"text/css\");\n            e.setAttribute(\"rel\", \"stylesheet\");\n            e.setAttribute(\"href\", path);\n        }\n    };\n    /**\n     * Combines an arbitrary set of paths ensuring that the slashes are normalized\n     *\n     * @param paths 0 to n path parts to combine\n     */\n    Util.combinePaths = function () {\n        var paths = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            paths[_i] = arguments[_i];\n        }\n        return paths\n            .filter(function (path) { return !Util.stringIsNullOrEmpty(path); })\n            .map(function (path) { return path.replace(/^[\\\\|\\/]/, \"\").replace(/[\\\\|\\/]$/, \"\"); })\n            .join(\"/\")\n            .replace(/\\\\/g, \"/\");\n    };\n    /**\n     * Gets a random string of chars length\n     *\n     * @param chars The length of the random string to generate\n     */\n    Util.getRandomString = function (chars) {\n        var text = new Array(chars);\n        var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n        for (var i = 0; i < chars; i++) {\n            text[i] = possible.charAt(Math.floor(Math.random() * possible.length));\n        }\n        return text.join(\"\");\n    };\n    /**\n     * Gets a random GUID value\n     *\n     * http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n     */\n    /* tslint:disable no-bitwise */\n    Util.getGUID = function () {\n        var d = new Date().getTime();\n        var guid = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\n            var r = (d + Math.random() * 16) % 16 | 0;\n            d = Math.floor(d / 16);\n            return (c === \"x\" ? r : (r & 0x3 | 0x8)).toString(16);\n        });\n        return guid;\n    };\n    /* tslint:enable */\n    /**\n     * Determines if a given value is a function\n     *\n     * @param candidateFunction The thing to test for being a function\n     */\n    Util.isFunction = function (candidateFunction) {\n        return typeof candidateFunction === \"function\";\n    };\n    /**\n     * @returns whether the provided parameter is a JavaScript Array or not.\n    */\n    Util.isArray = function (array) {\n        if (Array.isArray) {\n            return Array.isArray(array);\n        }\n        return array && typeof array.length === \"number\" && array.constructor === Array;\n    };\n    /**\n     * Determines if a string is null or empty or undefined\n     *\n     * @param s The string to test\n     */\n    Util.stringIsNullOrEmpty = function (s) {\n        return typeof s === \"undefined\" || s === null || s.length < 1;\n    };\n    /**\n     * Provides functionality to extend the given object by doing a shallow copy\n     *\n     * @param target The object to which properties will be copied\n     * @param source The source object from which properties will be copied\n     * @param noOverwrite If true existing properties on the target are not overwritten from the source\n     *\n     */\n    Util.extend = function (target, source, noOverwrite) {\n        if (noOverwrite === void 0) { noOverwrite = false; }\n        if (source === null || typeof source === \"undefined\") {\n            return target;\n        }\n        // ensure we don't overwrite things we don't want overwritten\n        var check = noOverwrite ? function (o, i) { return !(i in o); } : function () { return true; };\n        return Object.getOwnPropertyNames(source)\n            .filter(function (v) { return check(target, v); })\n            .reduce(function (t, v) {\n            t[v] = source[v];\n            return t;\n        }, target);\n    };\n    /**\n     * Determines if a given url is absolute\n     *\n     * @param url The url to check to see if it is absolute\n     */\n    Util.isUrlAbsolute = function (url) {\n        return /^https?:\\/\\/|^\\/\\//i.test(url);\n    };\n    /**\n     * Ensures that a given url is absolute for the current web based on context\n     *\n     * @param candidateUrl The url to make absolute\n     *\n     */\n    Util.toAbsoluteUrl = function (candidateUrl) {\n        return new Promise(function (resolve) {\n            if (Util.isUrlAbsolute(candidateUrl)) {\n                // if we are already absolute, then just return the url\n                return resolve(candidateUrl);\n            }\n            if (pnplibconfig_1.RuntimeConfig.baseUrl !== null) {\n                // base url specified either with baseUrl of spfxContext config property\n                return resolve(Util.combinePaths(pnplibconfig_1.RuntimeConfig.baseUrl, candidateUrl));\n            }\n            if (typeof global._spPageContextInfo !== \"undefined\") {\n                // operating in classic pages\n                if (global._spPageContextInfo.hasOwnProperty(\"webAbsoluteUrl\")) {\n                    return resolve(Util.combinePaths(global._spPageContextInfo.webAbsoluteUrl, candidateUrl));\n                }\n                else if (global._spPageContextInfo.hasOwnProperty(\"webServerRelativeUrl\")) {\n                    return resolve(Util.combinePaths(global._spPageContextInfo.webServerRelativeUrl, candidateUrl));\n                }\n            }\n            // does window.location exist and have a certain path part in it?\n            if (typeof global.location !== \"undefined\") {\n                var baseUrl_1 = global.location.toString().toLowerCase();\n                [\"/_layouts/\", \"/siteassets/\"].forEach(function (s) {\n                    var index = baseUrl_1.indexOf(s);\n                    if (index > 0) {\n                        return resolve(Util.combinePaths(baseUrl_1.substr(0, index), candidateUrl));\n                    }\n                });\n            }\n            return resolve(candidateUrl);\n        });\n    };\n    return Util;\n}());\nexports.Util = Util;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(20)))\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = __webpack_require__(0);\nvar collections_1 = __webpack_require__(6);\nvar httpclient_1 = __webpack_require__(9);\nvar odata_1 = __webpack_require__(2);\nvar pnplibconfig_1 = __webpack_require__(4);\nvar exceptions_1 = __webpack_require__(3);\nvar logging_1 = __webpack_require__(5);\nvar pipeline_1 = __webpack_require__(38);\n/**\n * Queryable Base Class\n *\n */\nvar Queryable = (function () {\n    /**\n     * Creates a new instance of the Queryable class\n     *\n     * @constructor\n     * @param baseUrl A string or Queryable that should form the base part of the url\n     *\n     */\n    function Queryable(baseUrl, path) {\n        this._options = {};\n        this._query = new collections_1.Dictionary();\n        this._batch = null;\n        if (typeof baseUrl === \"string\") {\n            // we need to do some extra parsing to get the parent url correct if we are\n            // being created from just a string.\n            var urlStr = baseUrl;\n            if (util_1.Util.isUrlAbsolute(urlStr) || urlStr.lastIndexOf(\"/\") < 0) {\n                this._parentUrl = urlStr;\n                this._url = util_1.Util.combinePaths(urlStr, path);\n            }\n            else if (urlStr.lastIndexOf(\"/\") > urlStr.lastIndexOf(\"(\")) {\n                // .../items(19)/fields\n                var index = urlStr.lastIndexOf(\"/\");\n                this._parentUrl = urlStr.slice(0, index);\n                path = util_1.Util.combinePaths(urlStr.slice(index), path);\n                this._url = util_1.Util.combinePaths(this._parentUrl, path);\n            }\n            else {\n                // .../items(19)\n                var index = urlStr.lastIndexOf(\"(\");\n                this._parentUrl = urlStr.slice(0, index);\n                this._url = util_1.Util.combinePaths(urlStr, path);\n            }\n        }\n        else {\n            var q = baseUrl;\n            this._parentUrl = q._url;\n            this._options = q._options;\n            var target = q._query.get(\"@target\");\n            if (target !== null) {\n                this._query.add(\"@target\", target);\n            }\n            this._url = util_1.Util.combinePaths(this._parentUrl, path);\n        }\n    }\n    /**\n     * Directly concatonates the supplied string to the current url, not normalizing \"/\" chars\n     *\n     * @param pathPart The string to concatonate to the url\n     */\n    Queryable.prototype.concat = function (pathPart) {\n        this._url += pathPart;\n        return this;\n    };\n    /**\n     * Appends the given string and normalizes \"/\" chars\n     *\n     * @param pathPart The string to append\n     */\n    Queryable.prototype.append = function (pathPart) {\n        this._url = util_1.Util.combinePaths(this._url, pathPart);\n    };\n    /**\n     * Blocks a batch call from occuring, MUST be cleared by calling the returned function\n     */\n    Queryable.prototype.addBatchDependency = function () {\n        if (this.hasBatch) {\n            return this._batch.addDependency();\n        }\n        return function () { return null; };\n    };\n    Object.defineProperty(Queryable.prototype, \"hasBatch\", {\n        /**\n         * Indicates if the current query has a batch associated\n         *\n         */\n        get: function () {\n            return this._batch !== null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Queryable.prototype, \"batch\", {\n        /**\n         * The batch currently associated with this query or null\n         *\n         */\n        get: function () {\n            return this.hasBatch ? this._batch : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Queryable.prototype, \"parentUrl\", {\n        /**\n         * Gets the parent url used when creating this instance\n         *\n         */\n        get: function () {\n            return this._parentUrl;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Queryable.prototype, \"query\", {\n        /**\n         * Provides access to the query builder for this url\n         *\n         */\n        get: function () {\n            return this._query;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Sets custom options for current object and all derived objects accessible via chaining\n     *\n     * @param options custom options\n     */\n    Queryable.prototype.configure = function (options) {\n        httpclient_1.mergeOptions(this._options, options);\n        return this;\n    };\n    /**\n     * Creates a new instance of the supplied factory and extends this into that new instance\n     *\n     * @param factory constructor for the new queryable\n     */\n    Queryable.prototype.as = function (factory) {\n        var o = new factory(this._url, null);\n        return util_1.Util.extend(o, this, true);\n    };\n    /**\n     * Adds this query to the supplied batch\n     *\n     * @example\n     * ```\n     *\n     * let b = pnp.sp.createBatch();\n     * pnp.sp.web.inBatch(b).get().then(...);\n     * b.execute().then(...)\n     * ```\n     */\n    Queryable.prototype.inBatch = function (batch) {\n        if (this._batch !== null) {\n            throw new exceptions_1.AlreadyInBatchException();\n        }\n        this._batch = batch;\n        return this;\n    };\n    /**\n     * Enables caching for this request\n     *\n     * @param options Defines the options used when caching this request\n     */\n    Queryable.prototype.usingCaching = function (options) {\n        if (!pnplibconfig_1.RuntimeConfig.globalCacheDisable) {\n            this._useCaching = true;\n            this._cachingOptions = options;\n        }\n        return this;\n    };\n    /**\n     * Gets the currentl url, made absolute based on the availability of the _spPageContextInfo object\n     *\n     */\n    Queryable.prototype.toUrl = function () {\n        return this._url;\n    };\n    /**\n     * Gets the full url with query information\n     *\n     */\n    Queryable.prototype.toUrlAndQuery = function () {\n        var aliasedParams = new collections_1.Dictionary();\n        var url = this.toUrl().replace(/'!(@.*?)::(.*?)'/ig, function (match, labelName, value) {\n            logging_1.Logger.write(\"Rewriting aliased parameter from match \" + match + \" to label: \" + labelName + \" value: \" + value, logging_1.LogLevel.Verbose);\n            aliasedParams.add(labelName, \"'\" + value + \"'\");\n            return labelName;\n        });\n        // inlude our explicitly set query string params\n        aliasedParams.merge(this._query);\n        if (aliasedParams.count() > 0) {\n            url += \"?\" + aliasedParams.getKeys().map(function (key) { return key + \"=\" + aliasedParams.get(key); }).join(\"&\");\n        }\n        return url;\n    };\n    /**\n     * Gets a parent for this instance as specified\n     *\n     * @param factory The contructor for the class to create\n     */\n    Queryable.prototype.getParent = function (factory, baseUrl, path, batch) {\n        if (baseUrl === void 0) { baseUrl = this.parentUrl; }\n        var parent = new factory(baseUrl, path);\n        parent.configure(this._options);\n        var target = this.query.get(\"@target\");\n        if (target !== null) {\n            parent.query.add(\"@target\", target);\n        }\n        if (typeof batch !== \"undefined\") {\n            parent = parent.inBatch(batch);\n        }\n        return parent;\n    };\n    /**\n     * Clones this queryable into a new queryable instance of T\n     * @param factory Constructor used to create the new instance\n     * @param additionalPath Any additional path to include in the clone\n     * @param includeBatch If true this instance's batch will be added to the cloned instance\n     */\n    Queryable.prototype.clone = function (factory, additionalPath, includeBatch) {\n        if (includeBatch === void 0) { includeBatch = false; }\n        var clone = new factory(this, additionalPath);\n        var target = this.query.get(\"@target\");\n        if (target !== null) {\n            clone.query.add(\"@target\", target);\n        }\n        if (includeBatch && this.hasBatch) {\n            clone = clone.inBatch(this.batch);\n        }\n        return clone;\n    };\n    /**\n     * Executes the currently built request\n     *\n     * @param parser Allows you to specify a parser to handle the result\n     * @param getOptions The options used for this request\n     */\n    Queryable.prototype.get = function (parser, getOptions) {\n        if (parser === void 0) { parser = new odata_1.ODataDefaultParser(); }\n        if (getOptions === void 0) { getOptions = {}; }\n        return this.toRequestContext(\"GET\", getOptions, parser).then(function (context) { return pipeline_1.pipe(context); });\n    };\n    Queryable.prototype.getAs = function (parser, getOptions) {\n        if (parser === void 0) { parser = new odata_1.ODataDefaultParser(); }\n        if (getOptions === void 0) { getOptions = {}; }\n        return this.toRequestContext(\"GET\", getOptions, parser).then(function (context) { return pipeline_1.pipe(context); });\n    };\n    Queryable.prototype.postCore = function (postOptions, parser) {\n        if (postOptions === void 0) { postOptions = {}; }\n        if (parser === void 0) { parser = new odata_1.ODataDefaultParser(); }\n        return this.toRequestContext(\"POST\", postOptions, parser).then(function (context) { return pipeline_1.pipe(context); });\n    };\n    Queryable.prototype.postAsCore = function (postOptions, parser) {\n        if (postOptions === void 0) { postOptions = {}; }\n        if (parser === void 0) { parser = new odata_1.ODataDefaultParser(); }\n        return this.toRequestContext(\"POST\", postOptions, parser).then(function (context) { return pipeline_1.pipe(context); });\n    };\n    Queryable.prototype.patchCore = function (patchOptions, parser) {\n        if (patchOptions === void 0) { patchOptions = {}; }\n        if (parser === void 0) { parser = new odata_1.ODataDefaultParser(); }\n        return this.toRequestContext(\"PATCH\", patchOptions, parser).then(function (context) { return pipeline_1.pipe(context); });\n    };\n    Queryable.prototype.deleteCore = function (deleteOptions, parser) {\n        if (deleteOptions === void 0) { deleteOptions = {}; }\n        if (parser === void 0) { parser = new odata_1.ODataDefaultParser(); }\n        return this.toRequestContext(\"DELETE\", deleteOptions, parser).then(function (context) { return pipeline_1.pipe(context); });\n    };\n    /**\n     * Converts the current instance to a request context\n     *\n     * @param verb The request verb\n     * @param options The set of supplied request options\n     * @param parser The supplied ODataParser instance\n     * @param pipeline Optional request processing pipeline\n     */\n    Queryable.prototype.toRequestContext = function (verb, options, parser, pipeline) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        if (pipeline === void 0) { pipeline = pipeline_1.PipelineMethods.default; }\n        var dependencyDispose = this.hasBatch ? this.addBatchDependency() : function () { return; };\n        return util_1.Util.toAbsoluteUrl(this.toUrlAndQuery()).then(function (url) {\n            httpclient_1.mergeOptions(options, _this._options);\n            // build our request context\n            var context = {\n                batch: _this._batch,\n                batchDependency: dependencyDispose,\n                cachingOptions: _this._cachingOptions,\n                isBatched: _this.hasBatch,\n                isCached: _this._useCaching,\n                options: options,\n                parser: parser,\n                pipeline: pipeline,\n                requestAbsoluteUrl: url,\n                requestId: util_1.Util.getGUID(),\n                verb: verb,\n            };\n            return context;\n        });\n    };\n    return Queryable;\n}());\nexports.Queryable = Queryable;\n/**\n * Represents a REST collection which can be filtered, paged, and selected\n *\n */\nvar QueryableCollection = (function (_super) {\n    __extends(QueryableCollection, _super);\n    function QueryableCollection() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Filters the returned collection (https://msdn.microsoft.com/en-us/library/office/fp142385.aspx#bk_supported)\n     *\n     * @param filter The string representing the filter query\n     */\n    QueryableCollection.prototype.filter = function (filter) {\n        this._query.add(\"$filter\", filter);\n        return this;\n    };\n    /**\n     * Choose which fields to return\n     *\n     * @param selects One or more fields to return\n     */\n    QueryableCollection.prototype.select = function () {\n        var selects = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            selects[_i] = arguments[_i];\n        }\n        if (selects.length > 0) {\n            this._query.add(\"$select\", selects.join(\",\"));\n        }\n        return this;\n    };\n    /**\n     * Expands fields such as lookups to get additional data\n     *\n     * @param expands The Fields for which to expand the values\n     */\n    QueryableCollection.prototype.expand = function () {\n        var expands = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            expands[_i] = arguments[_i];\n        }\n        if (expands.length > 0) {\n            this._query.add(\"$expand\", expands.join(\",\"));\n        }\n        return this;\n    };\n    /**\n     * Orders based on the supplied fields ascending\n     *\n     * @param orderby The name of the field to sort on\n     * @param ascending If false DESC is appended, otherwise ASC (default)\n     */\n    QueryableCollection.prototype.orderBy = function (orderBy, ascending) {\n        if (ascending === void 0) { ascending = true; }\n        var keys = this._query.getKeys();\n        var query = [];\n        var asc = ascending ? \" asc\" : \" desc\";\n        for (var i = 0; i < keys.length; i++) {\n            if (keys[i] === \"$orderby\") {\n                query.push(this._query.get(\"$orderby\"));\n                break;\n            }\n        }\n        query.push(\"\" + orderBy + asc);\n        this._query.add(\"$orderby\", query.join(\",\"));\n        return this;\n    };\n    /**\n     * Skips the specified number of items\n     *\n     * @param skip The number of items to skip\n     */\n    QueryableCollection.prototype.skip = function (skip) {\n        this._query.add(\"$skip\", skip.toString());\n        return this;\n    };\n    /**\n     * Limits the query to only return the specified number of items\n     *\n     * @param top The query row limit\n     */\n    QueryableCollection.prototype.top = function (top) {\n        this._query.add(\"$top\", top.toString());\n        return this;\n    };\n    return QueryableCollection;\n}(Queryable));\nexports.QueryableCollection = QueryableCollection;\n/**\n * Represents an instance that can be selected\n *\n */\nvar QueryableInstance = (function (_super) {\n    __extends(QueryableInstance, _super);\n    function QueryableInstance() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Choose which fields to return\n     *\n     * @param selects One or more fields to return\n     */\n    QueryableInstance.prototype.select = function () {\n        var selects = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            selects[_i] = arguments[_i];\n        }\n        if (selects.length > 0) {\n            this._query.add(\"$select\", selects.join(\",\"));\n        }\n        return this;\n    };\n    /**\n     * Expands fields such as lookups to get additional data\n     *\n     * @param expands The Fields for which to expand the values\n     */\n    QueryableInstance.prototype.expand = function () {\n        var expands = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            expands[_i] = arguments[_i];\n        }\n        if (expands.length > 0) {\n            this._query.add(\"$expand\", expands.join(\",\"));\n        }\n        return this;\n    };\n    return QueryableInstance;\n}(Queryable));\nexports.QueryableInstance = QueryableInstance;\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = __webpack_require__(0);\nvar logging_1 = __webpack_require__(5);\nvar httpclient_1 = __webpack_require__(9);\nvar pnplibconfig_1 = __webpack_require__(4);\nvar exceptions_1 = __webpack_require__(3);\nfunction extractOdataId(candidate) {\n    if (candidate.hasOwnProperty(\"odata.id\")) {\n        return candidate[\"odata.id\"];\n    }\n    else if (candidate.hasOwnProperty(\"__metadata\") && candidate.__metadata.hasOwnProperty(\"id\")) {\n        return candidate.__metadata.id;\n    }\n    else {\n        throw new exceptions_1.ODataIdException(candidate);\n    }\n}\nexports.extractOdataId = extractOdataId;\nvar ODataParserBase = (function () {\n    function ODataParserBase() {\n    }\n    ODataParserBase.prototype.parse = function (r) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            if (_this.handleError(r, reject)) {\n                if ((r.headers.has(\"Content-Length\") && parseFloat(r.headers.get(\"Content-Length\")) === 0) || r.status === 204) {\n                    resolve({});\n                }\n                else {\n                    // patch to handle cases of 200 response with no or whitespace only bodies (#487 & #545)\n                    r.text()\n                        .then(function (txt) { return txt.replace(/\\s/ig, \"\").length > 0 ? JSON.parse(txt) : {}; })\n                        .then(function (json) { return resolve(_this.parseODataJSON(json)); })\n                        .catch(function (e) { return reject(e); });\n                }\n            }\n        });\n    };\n    ODataParserBase.prototype.handleError = function (r, reject) {\n        if (!r.ok) {\n            r.json().then(function (json) {\n                // include the headers as they contain diagnostic information\n                var data = {\n                    responseBody: json,\n                    responseHeaders: r.headers,\n                };\n                reject(new exceptions_1.ProcessHttpClientResponseException(r.status, r.statusText, data));\n            }).catch(function (e) {\n                // we failed to read the body - possibly it is empty. Let's report the original status that caused\n                // the request to fail and log the error with parsing the body if anyone needs it for debugging\n                logging_1.Logger.log({\n                    data: e,\n                    level: logging_1.LogLevel.Warning,\n                    message: \"There was an error parsing the error response body. See data for details.\",\n                });\n                // include the headers as they contain diagnostic information\n                var data = {\n                    responseBody: \"[[body not available]]\",\n                    responseHeaders: r.headers,\n                };\n                reject(new exceptions_1.ProcessHttpClientResponseException(r.status, r.statusText, data));\n            });\n        }\n        return r.ok;\n    };\n    ODataParserBase.prototype.parseODataJSON = function (json) {\n        var result = json;\n        if (json.hasOwnProperty(\"d\")) {\n            if (json.d.hasOwnProperty(\"results\")) {\n                result = json.d.results;\n            }\n            else {\n                result = json.d;\n            }\n        }\n        else if (json.hasOwnProperty(\"value\")) {\n            result = json.value;\n        }\n        return result;\n    };\n    return ODataParserBase;\n}());\nexports.ODataParserBase = ODataParserBase;\nvar ODataDefaultParser = (function (_super) {\n    __extends(ODataDefaultParser, _super);\n    function ODataDefaultParser() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return ODataDefaultParser;\n}(ODataParserBase));\nexports.ODataDefaultParser = ODataDefaultParser;\nvar ODataRawParserImpl = (function () {\n    function ODataRawParserImpl() {\n    }\n    ODataRawParserImpl.prototype.parse = function (r) {\n        return r.json();\n    };\n    return ODataRawParserImpl;\n}());\nexports.ODataRawParserImpl = ODataRawParserImpl;\nvar ODataValueParserImpl = (function (_super) {\n    __extends(ODataValueParserImpl, _super);\n    function ODataValueParserImpl() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ODataValueParserImpl.prototype.parse = function (r) {\n        return _super.prototype.parse.call(this, r).then(function (d) { return d; });\n    };\n    return ODataValueParserImpl;\n}(ODataParserBase));\nvar ODataEntityParserImpl = (function (_super) {\n    __extends(ODataEntityParserImpl, _super);\n    function ODataEntityParserImpl(factory) {\n        var _this = _super.call(this) || this;\n        _this.factory = factory;\n        return _this;\n    }\n    ODataEntityParserImpl.prototype.parse = function (r) {\n        var _this = this;\n        return _super.prototype.parse.call(this, r).then(function (d) {\n            var o = new _this.factory(getEntityUrl(d), null);\n            return util_1.Util.extend(o, d);\n        });\n    };\n    return ODataEntityParserImpl;\n}(ODataParserBase));\nvar ODataEntityArrayParserImpl = (function (_super) {\n    __extends(ODataEntityArrayParserImpl, _super);\n    function ODataEntityArrayParserImpl(factory) {\n        var _this = _super.call(this) || this;\n        _this.factory = factory;\n        return _this;\n    }\n    ODataEntityArrayParserImpl.prototype.parse = function (r) {\n        var _this = this;\n        return _super.prototype.parse.call(this, r).then(function (d) {\n            return d.map(function (v) {\n                var o = new _this.factory(getEntityUrl(v), null);\n                return util_1.Util.extend(o, v);\n            });\n        });\n    };\n    return ODataEntityArrayParserImpl;\n}(ODataParserBase));\nfunction getEntityUrl(entity) {\n    if (entity.hasOwnProperty(\"odata.metadata\") && entity.hasOwnProperty(\"odata.editLink\")) {\n        // we are dealign with minimal metadata (default)\n        return util_1.Util.combinePaths(util_1.extractWebUrl(entity[\"odata.metadata\"]), \"_api\", entity[\"odata.editLink\"]);\n    }\n    else if (entity.hasOwnProperty(\"__metadata\")) {\n        // we are dealing with verbose, which has an absolute uri\n        return entity.__metadata.uri;\n    }\n    else {\n        // we are likely dealing with nometadata, so don't error but we won't be able to\n        // chain off these objects\n        logging_1.Logger.write(\"No uri information found in ODataEntity parsing, chaining will fail for this object.\", logging_1.LogLevel.Warning);\n        return \"\";\n    }\n}\nexports.getEntityUrl = getEntityUrl;\nexports.ODataRaw = new ODataRawParserImpl();\nfunction ODataValue() {\n    return new ODataValueParserImpl();\n}\nexports.ODataValue = ODataValue;\nfunction ODataEntity(factory) {\n    return new ODataEntityParserImpl(factory);\n}\nexports.ODataEntity = ODataEntity;\nfunction ODataEntityArray(factory) {\n    return new ODataEntityArrayParserImpl(factory);\n}\nexports.ODataEntityArray = ODataEntityArray;\n/**\n * Manages a batch of OData operations\n */\nvar ODataBatch = (function () {\n    function ODataBatch(baseUrl, _batchId) {\n        if (_batchId === void 0) { _batchId = util_1.Util.getGUID(); }\n        this.baseUrl = baseUrl;\n        this._batchId = _batchId;\n        this._requests = [];\n        this._dependencies = [];\n    }\n    Object.defineProperty(ODataBatch.prototype, \"batchId\", {\n        get: function () {\n            return this._batchId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Adds a request to a batch (not designed for public use)\n     *\n     * @param url The full url of the request\n     * @param method The http method GET, POST, etc\n     * @param options Any options to include in the request\n     * @param parser The parser that will hadle the results of the request\n     */\n    ODataBatch.prototype.add = function (url, method, options, parser) {\n        var info = {\n            method: method.toUpperCase(),\n            options: options,\n            parser: parser,\n            reject: null,\n            resolve: null,\n            url: url,\n        };\n        var p = new Promise(function (resolve, reject) {\n            info.resolve = resolve;\n            info.reject = reject;\n        });\n        this._requests.push(info);\n        return p;\n    };\n    /**\n     * Adds a dependency insuring that some set of actions will occur before a batch is processed.\n     * MUST be cleared using the returned resolve delegate to allow batches to run\n     */\n    ODataBatch.prototype.addDependency = function () {\n        var resolver;\n        var promise = new Promise(function (resolve) {\n            resolver = resolve;\n        });\n        this._dependencies.push(promise);\n        return resolver;\n    };\n    /**\n     * Execute the current batch and resolve the associated promises\n     *\n     * @returns A promise which will be resolved once all of the batch's child promises have resolved\n     */\n    ODataBatch.prototype.execute = function () {\n        var _this = this;\n        // we need to check the dependencies twice due to how different engines handle things.\n        // We can get a second set of promises added after the first set resolve\n        return Promise.all(this._dependencies).then(function () { return Promise.all(_this._dependencies); }).then(function () { return _this.executeImpl(); });\n    };\n    ODataBatch.prototype.executeImpl = function () {\n        var _this = this;\n        logging_1.Logger.write(\"[\" + this.batchId + \"] (\" + (new Date()).getTime() + \") Executing batch with \" + this._requests.length + \" requests.\", logging_1.LogLevel.Info);\n        // if we don't have any requests, don't bother sending anything\n        // this could be due to caching further upstream, or just an empty batch\n        if (this._requests.length < 1) {\n            logging_1.Logger.write(\"Resolving empty batch.\", logging_1.LogLevel.Info);\n            return Promise.resolve();\n        }\n        // creating the client here allows the url to be populated for nodejs client as well as potentially\n        // any other hacks needed for other types of clients. Essentially allows the absoluteRequestUrl\n        // below to be correct\n        var client = new httpclient_1.HttpClient();\n        // due to timing we need to get the absolute url here so we can use it for all the individual requests\n        // and for sending the entire batch\n        return util_1.Util.toAbsoluteUrl(this.baseUrl).then(function (absoluteRequestUrl) {\n            // build all the requests, send them, pipe results in order to parsers\n            var batchBody = [];\n            var currentChangeSetId = \"\";\n            for (var i = 0; i < _this._requests.length; i++) {\n                var reqInfo = _this._requests[i];\n                if (reqInfo.method === \"GET\") {\n                    if (currentChangeSetId.length > 0) {\n                        // end an existing change set\n                        batchBody.push(\"--changeset_\" + currentChangeSetId + \"--\\n\\n\");\n                        currentChangeSetId = \"\";\n                    }\n                    batchBody.push(\"--batch_\" + _this._batchId + \"\\n\");\n                }\n                else {\n                    if (currentChangeSetId.length < 1) {\n                        // start new change set\n                        currentChangeSetId = util_1.Util.getGUID();\n                        batchBody.push(\"--batch_\" + _this._batchId + \"\\n\");\n                        batchBody.push(\"Content-Type: multipart/mixed; boundary=\\\"changeset_\" + currentChangeSetId + \"\\\"\\n\\n\");\n                    }\n                    batchBody.push(\"--changeset_\" + currentChangeSetId + \"\\n\");\n                }\n                // common batch part prefix\n                batchBody.push(\"Content-Type: application/http\\n\");\n                batchBody.push(\"Content-Transfer-Encoding: binary\\n\\n\");\n                var headers = new Headers();\n                // this is the url of the individual request within the batch\n                var url = util_1.Util.isUrlAbsolute(reqInfo.url) ? reqInfo.url : util_1.Util.combinePaths(absoluteRequestUrl, reqInfo.url);\n                logging_1.Logger.write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Adding request \" + reqInfo.method + \" \" + url + \" to batch.\", logging_1.LogLevel.Verbose);\n                if (reqInfo.method !== \"GET\") {\n                    var method = reqInfo.method;\n                    if (reqInfo.hasOwnProperty(\"options\") && reqInfo.options.hasOwnProperty(\"headers\") && typeof reqInfo.options.headers[\"X-HTTP-Method\"] !== \"undefined\") {\n                        method = reqInfo.options.headers[\"X-HTTP-Method\"];\n                        delete reqInfo.options.headers[\"X-HTTP-Method\"];\n                    }\n                    batchBody.push(method + \" \" + url + \" HTTP/1.1\\n\");\n                    headers.set(\"Content-Type\", \"application/json;odata=verbose;charset=utf-8\");\n                }\n                else {\n                    batchBody.push(reqInfo.method + \" \" + url + \" HTTP/1.1\\n\");\n                }\n                // merge global config headers\n                httpclient_1.mergeHeaders(headers, pnplibconfig_1.RuntimeConfig.headers);\n                // merge per-request headers\n                if (reqInfo.options) {\n                    httpclient_1.mergeHeaders(headers, reqInfo.options.headers);\n                }\n                // lastly we apply any default headers we need that may not exist\n                if (!headers.has(\"Accept\")) {\n                    headers.append(\"Accept\", \"application/json\");\n                }\n                if (!headers.has(\"Content-Type\")) {\n                    headers.append(\"Content-Type\", \"application/json;odata=verbose;charset=utf-8\");\n                }\n                if (!headers.has(\"X-ClientService-ClientTag\")) {\n                    headers.append(\"X-ClientService-ClientTag\", \"PnPCoreJS:2.0.8\");\n                }\n                // write headers into batch body\n                headers.forEach(function (value, name) {\n                    batchBody.push(name + \": \" + value + \"\\n\");\n                });\n                batchBody.push(\"\\n\");\n                if (reqInfo.options.body) {\n                    batchBody.push(reqInfo.options.body + \"\\n\\n\");\n                }\n            }\n            if (currentChangeSetId.length > 0) {\n                // Close the changeset\n                batchBody.push(\"--changeset_\" + currentChangeSetId + \"--\\n\\n\");\n                currentChangeSetId = \"\";\n            }\n            batchBody.push(\"--batch_\" + _this._batchId + \"--\\n\");\n            var batchHeaders = {\n                \"Content-Type\": \"multipart/mixed; boundary=batch_\" + _this._batchId,\n            };\n            var batchOptions = {\n                \"body\": batchBody.join(\"\"),\n                \"headers\": batchHeaders,\n            };\n            logging_1.Logger.write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Sending batch request.\", logging_1.LogLevel.Info);\n            return client.post(util_1.Util.combinePaths(absoluteRequestUrl, \"/_api/$batch\"), batchOptions)\n                .then(function (r) { return r.text(); })\n                .then(_this._parseResponse)\n                .then(function (responses) {\n                if (responses.length !== _this._requests.length) {\n                    throw new exceptions_1.BatchParseException(\"Could not properly parse responses to match requests in batch.\");\n                }\n                logging_1.Logger.write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Resolving batched requests.\", logging_1.LogLevel.Info);\n                return responses.reduce(function (chain, response, index) {\n                    var request = _this._requests[index];\n                    logging_1.Logger.write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Resolving batched request \" + request.method + \" \" + request.url + \".\", logging_1.LogLevel.Verbose);\n                    return chain.then(function (_) { return request.parser.parse(response).then(request.resolve).catch(request.reject); });\n                }, Promise.resolve());\n            });\n        });\n    };\n    /**\n     * Parses the response from a batch request into an array of Response instances\n     *\n     * @param body Text body of the response from the batch request\n     */\n    ODataBatch.prototype._parseResponse = function (body) {\n        return new Promise(function (resolve, reject) {\n            var responses = [];\n            var header = \"--batchresponse_\";\n            // Ex. \"HTTP/1.1 500 Internal Server Error\"\n            var statusRegExp = new RegExp(\"^HTTP/[0-9.]+ +([0-9]+) +(.*)\", \"i\");\n            var lines = body.split(\"\\n\");\n            var state = \"batch\";\n            var status;\n            var statusText;\n            for (var i = 0; i < lines.length; ++i) {\n                var line = lines[i];\n                switch (state) {\n                    case \"batch\":\n                        if (line.substr(0, header.length) === header) {\n                            state = \"batchHeaders\";\n                        }\n                        else {\n                            if (line.trim() !== \"\") {\n                                throw new exceptions_1.BatchParseException(\"Invalid response, line \" + i);\n                            }\n                        }\n                        break;\n                    case \"batchHeaders\":\n                        if (line.trim() === \"\") {\n                            state = \"status\";\n                        }\n                        break;\n                    case \"status\":\n                        var parts = statusRegExp.exec(line);\n                        if (parts.length !== 3) {\n                            throw new exceptions_1.BatchParseException(\"Invalid status, line \" + i);\n                        }\n                        status = parseInt(parts[1], 10);\n                        statusText = parts[2];\n                        state = \"statusHeaders\";\n                        break;\n                    case \"statusHeaders\":\n                        if (line.trim() === \"\") {\n                            state = \"body\";\n                        }\n                        break;\n                    case \"body\":\n                        responses.push((status === 204) ? new Response() : new Response(line, { status: status, statusText: statusText }));\n                        state = \"batch\";\n                        break;\n                }\n            }\n            if (state !== \"status\") {\n                reject(new exceptions_1.BatchParseException(\"Unexpected end of input\"));\n            }\n            resolve(responses);\n        });\n    };\n    return ODataBatch;\n}());\nexports.ODataBatch = ODataBatch;\nvar TextFileParser = (function () {\n    function TextFileParser() {\n    }\n    TextFileParser.prototype.parse = function (r) {\n        return r.text();\n    };\n    return TextFileParser;\n}());\nexports.TextFileParser = TextFileParser;\nvar BlobFileParser = (function () {\n    function BlobFileParser() {\n    }\n    BlobFileParser.prototype.parse = function (r) {\n        return r.blob();\n    };\n    return BlobFileParser;\n}());\nexports.BlobFileParser = BlobFileParser;\nvar JSONFileParser = (function () {\n    function JSONFileParser() {\n    }\n    JSONFileParser.prototype.parse = function (r) {\n        return r.json();\n    };\n    return JSONFileParser;\n}());\nexports.JSONFileParser = JSONFileParser;\nvar BufferFileParser = (function () {\n    function BufferFileParser() {\n    }\n    BufferFileParser.prototype.parse = function (r) {\n        if (util_1.Util.isFunction(r.arrayBuffer)) {\n            return r.arrayBuffer();\n        }\n        return r.buffer();\n    };\n    return BufferFileParser;\n}());\nexports.BufferFileParser = BufferFileParser;\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar logging_1 = __webpack_require__(5);\nfunction defaultLog(error) {\n    logging_1.Logger.log({ data: {}, level: logging_1.LogLevel.Error, message: \"[\" + error.name + \"]::\" + error.message });\n}\n/**\n * Represents an exception with an HttpClient request\n *\n */\nvar ProcessHttpClientResponseException = (function (_super) {\n    __extends(ProcessHttpClientResponseException, _super);\n    function ProcessHttpClientResponseException(status, statusText, data) {\n        var _this = _super.call(this, \"Error making HttpClient request in queryable: [\" + status + \"] \" + statusText) || this;\n        _this.status = status;\n        _this.statusText = statusText;\n        _this.data = data;\n        _this.name = \"ProcessHttpClientResponseException\";\n        logging_1.Logger.log({ data: _this.data, level: logging_1.LogLevel.Error, message: _this.message });\n        return _this;\n    }\n    return ProcessHttpClientResponseException;\n}(Error));\nexports.ProcessHttpClientResponseException = ProcessHttpClientResponseException;\nvar NoCacheAvailableException = (function (_super) {\n    __extends(NoCacheAvailableException, _super);\n    function NoCacheAvailableException(msg) {\n        if (msg === void 0) { msg = \"Cannot create a caching configuration provider since cache is not available.\"; }\n        var _this = _super.call(this, msg) || this;\n        _this.name = \"NoCacheAvailableException\";\n        defaultLog(_this);\n        return _this;\n    }\n    return NoCacheAvailableException;\n}(Error));\nexports.NoCacheAvailableException = NoCacheAvailableException;\nvar APIUrlException = (function (_super) {\n    __extends(APIUrlException, _super);\n    function APIUrlException(msg) {\n        if (msg === void 0) { msg = \"Unable to determine API url.\"; }\n        var _this = _super.call(this, msg) || this;\n        _this.name = \"APIUrlException\";\n        defaultLog(_this);\n        return _this;\n    }\n    return APIUrlException;\n}(Error));\nexports.APIUrlException = APIUrlException;\nvar AuthUrlException = (function (_super) {\n    __extends(AuthUrlException, _super);\n    function AuthUrlException(data, msg) {\n        if (msg === void 0) { msg = \"Auth URL Endpoint could not be determined from data. Data logged.\"; }\n        var _this = _super.call(this, msg) || this;\n        _this.name = \"APIUrlException\";\n        logging_1.Logger.log({ data: data, level: logging_1.LogLevel.Error, message: _this.message });\n        return _this;\n    }\n    return AuthUrlException;\n}(Error));\nexports.AuthUrlException = AuthUrlException;\nvar NodeFetchClientUnsupportedException = (function (_super) {\n    __extends(NodeFetchClientUnsupportedException, _super);\n    function NodeFetchClientUnsupportedException(msg) {\n        if (msg === void 0) { msg = \"Using NodeFetchClient in the browser is not supported.\"; }\n        var _this = _super.call(this, msg) || this;\n        _this.name = \"NodeFetchClientUnsupportedException\";\n        defaultLog(_this);\n        return _this;\n    }\n    return NodeFetchClientUnsupportedException;\n}(Error));\nexports.NodeFetchClientUnsupportedException = NodeFetchClientUnsupportedException;\nvar SPRequestExecutorUndefinedException = (function (_super) {\n    __extends(SPRequestExecutorUndefinedException, _super);\n    function SPRequestExecutorUndefinedException() {\n        var _this = this;\n        var msg = [\n            \"SP.RequestExecutor is undefined. \",\n            \"Load the SP.RequestExecutor.js library (/_layouts/15/SP.RequestExecutor.js) before loading the PnP JS Core library.\",\n        ].join(\" \");\n        _this = _super.call(this, msg) || this;\n        _this.name = \"SPRequestExecutorUndefinedException\";\n        defaultLog(_this);\n        return _this;\n    }\n    return SPRequestExecutorUndefinedException;\n}(Error));\nexports.SPRequestExecutorUndefinedException = SPRequestExecutorUndefinedException;\nvar MaxCommentLengthException = (function (_super) {\n    __extends(MaxCommentLengthException, _super);\n    function MaxCommentLengthException(msg) {\n        if (msg === void 0) { msg = \"The maximum comment length is 1023 characters.\"; }\n        var _this = _super.call(this, msg) || this;\n        _this.name = \"MaxCommentLengthException\";\n        defaultLog(_this);\n        return _this;\n    }\n    return MaxCommentLengthException;\n}(Error));\nexports.MaxCommentLengthException = MaxCommentLengthException;\nvar NotSupportedInBatchException = (function (_super) {\n    __extends(NotSupportedInBatchException, _super);\n    function NotSupportedInBatchException(operation) {\n        if (operation === void 0) { operation = \"This operation\"; }\n        var _this = _super.call(this, operation + \" is not supported as part of a batch.\") || this;\n        _this.name = \"NotSupportedInBatchException\";\n        defaultLog(_this);\n        return _this;\n    }\n    return NotSupportedInBatchException;\n}(Error));\nexports.NotSupportedInBatchException = NotSupportedInBatchException;\nvar ODataIdException = (function (_super) {\n    __extends(ODataIdException, _super);\n    function ODataIdException(data, msg) {\n        if (msg === void 0) { msg = \"Could not extract odata id in object, you may be using nometadata. Object data logged to logger.\"; }\n        var _this = _super.call(this, msg) || this;\n        _this.name = \"ODataIdException\";\n        logging_1.Logger.log({ data: data, level: logging_1.LogLevel.Error, message: _this.message });\n        return _this;\n    }\n    return ODataIdException;\n}(Error));\nexports.ODataIdException = ODataIdException;\nvar BatchParseException = (function (_super) {\n    __extends(BatchParseException, _super);\n    function BatchParseException(msg) {\n        var _this = _super.call(this, msg) || this;\n        _this.name = \"BatchParseException\";\n        defaultLog(_this);\n        return _this;\n    }\n    return BatchParseException;\n}(Error));\nexports.BatchParseException = BatchParseException;\nvar AlreadyInBatchException = (function (_super) {\n    __extends(AlreadyInBatchException, _super);\n    function AlreadyInBatchException(msg) {\n        if (msg === void 0) { msg = \"This query is already part of a batch.\"; }\n        var _this = _super.call(this, msg) || this;\n        _this.name = \"AlreadyInBatchException\";\n        defaultLog(_this);\n        return _this;\n    }\n    return AlreadyInBatchException;\n}(Error));\nexports.AlreadyInBatchException = AlreadyInBatchException;\nvar FunctionExpectedException = (function (_super) {\n    __extends(FunctionExpectedException, _super);\n    function FunctionExpectedException(msg) {\n        if (msg === void 0) { msg = \"This query is already part of a batch.\"; }\n        var _this = _super.call(this, msg) || this;\n        _this.name = \"FunctionExpectedException\";\n        defaultLog(_this);\n        return _this;\n    }\n    return FunctionExpectedException;\n}(Error));\nexports.FunctionExpectedException = FunctionExpectedException;\nvar UrlException = (function (_super) {\n    __extends(UrlException, _super);\n    function UrlException(msg) {\n        var _this = _super.call(this, msg) || this;\n        _this.name = \"UrlException\";\n        defaultLog(_this);\n        return _this;\n    }\n    return UrlException;\n}(Error));\nexports.UrlException = UrlException;\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar fetchclient_1 = __webpack_require__(21);\nvar RuntimeConfigImpl = (function () {\n    function RuntimeConfigImpl() {\n        // these are our default values for the library\n        this._headers = null;\n        this._defaultCachingStore = \"session\";\n        this._defaultCachingTimeoutSeconds = 60;\n        this._globalCacheDisable = false;\n        this._fetchClientFactory = function () { return new fetchclient_1.FetchClient(); };\n        this._baseUrl = null;\n        this._spfxContext = null;\n        this._enableCacheExpiration = false;\n        this._cacheExpirationIntervalMilliseconds = 750;\n    }\n    RuntimeConfigImpl.prototype.set = function (config) {\n        if (config.hasOwnProperty(\"headers\")) {\n            this._headers = config.headers;\n        }\n        if (config.hasOwnProperty(\"globalCacheDisable\")) {\n            this._globalCacheDisable = config.globalCacheDisable;\n        }\n        if (config.hasOwnProperty(\"defaultCachingStore\")) {\n            this._defaultCachingStore = config.defaultCachingStore;\n        }\n        if (config.hasOwnProperty(\"defaultCachingTimeoutSeconds\")) {\n            this._defaultCachingTimeoutSeconds = config.defaultCachingTimeoutSeconds;\n        }\n        if (config.hasOwnProperty(\"fetchClientFactory\")) {\n            this._fetchClientFactory = config.fetchClientFactory;\n        }\n        if (config.hasOwnProperty(\"baseUrl\")) {\n            this._baseUrl = config.baseUrl;\n        }\n        if (config.hasOwnProperty(\"spfxContext\")) {\n            this._spfxContext = config.spfxContext;\n        }\n        if (config.hasOwnProperty(\"enableCacheExpiration\")) {\n            this._enableCacheExpiration = config.enableCacheExpiration;\n        }\n        if (config.hasOwnProperty(\"cacheExpirationIntervalMilliseconds\")) {\n            // we don't let the interval be less than 300 milliseconds\n            var interval = config.cacheExpirationIntervalMilliseconds < 300 ? 300 : config.cacheExpirationIntervalMilliseconds;\n            this._cacheExpirationIntervalMilliseconds = interval;\n        }\n    };\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"headers\", {\n        get: function () {\n            return this._headers;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"defaultCachingStore\", {\n        get: function () {\n            return this._defaultCachingStore;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"defaultCachingTimeoutSeconds\", {\n        get: function () {\n            return this._defaultCachingTimeoutSeconds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"globalCacheDisable\", {\n        get: function () {\n            return this._globalCacheDisable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"fetchClientFactory\", {\n        get: function () {\n            return this._fetchClientFactory;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"baseUrl\", {\n        get: function () {\n            if (this._baseUrl !== null) {\n                return this._baseUrl;\n            }\n            else if (this._spfxContext !== null) {\n                return this._spfxContext.pageContext.web.absoluteUrl;\n            }\n            return null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"enableCacheExpiration\", {\n        get: function () {\n            return this._enableCacheExpiration;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"cacheExpirationIntervalMilliseconds\", {\n        get: function () {\n            return this._cacheExpirationIntervalMilliseconds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return RuntimeConfigImpl;\n}());\nexports.RuntimeConfigImpl = RuntimeConfigImpl;\nvar _runtimeConfig = new RuntimeConfigImpl();\nexports.RuntimeConfig = _runtimeConfig;\nfunction setRuntimeConfig(config) {\n    _runtimeConfig.set(config);\n}\nexports.setRuntimeConfig = setRuntimeConfig;\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * A set of logging levels\n *\n */\nvar LogLevel;\n(function (LogLevel) {\n    LogLevel[LogLevel[\"Verbose\"] = 0] = \"Verbose\";\n    LogLevel[LogLevel[\"Info\"] = 1] = \"Info\";\n    LogLevel[LogLevel[\"Warning\"] = 2] = \"Warning\";\n    LogLevel[LogLevel[\"Error\"] = 3] = \"Error\";\n    LogLevel[LogLevel[\"Off\"] = 99] = \"Off\";\n})(LogLevel = exports.LogLevel || (exports.LogLevel = {}));\n/**\n * Class used to subscribe ILogListener and log messages throughout an application\n *\n */\nvar Logger = (function () {\n    function Logger() {\n    }\n    Object.defineProperty(Logger, \"activeLogLevel\", {\n        get: function () {\n            return Logger.instance.activeLogLevel;\n        },\n        set: function (value) {\n            Logger.instance.activeLogLevel = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Logger, \"instance\", {\n        get: function () {\n            if (typeof Logger._instance === \"undefined\" || Logger._instance === null) {\n                Logger._instance = new LoggerImpl();\n            }\n            return Logger._instance;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Adds ILogListener instances to the set of subscribed listeners\n     *\n     * @param listeners One or more listeners to subscribe to this log\n     */\n    Logger.subscribe = function () {\n        var listeners = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            listeners[_i] = arguments[_i];\n        }\n        listeners.map(function (listener) { return Logger.instance.subscribe(listener); });\n    };\n    /**\n     * Clears the subscribers collection, returning the collection before modifiction\n     */\n    Logger.clearSubscribers = function () {\n        return Logger.instance.clearSubscribers();\n    };\n    Object.defineProperty(Logger, \"count\", {\n        /**\n         * Gets the current subscriber count\n         */\n        get: function () {\n            return Logger.instance.count;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Writes the supplied string to the subscribed listeners\n     *\n     * @param message The message to write\n     * @param level [Optional] if supplied will be used as the level of the entry (Default: LogLevel.Verbose)\n     */\n    Logger.write = function (message, level) {\n        if (level === void 0) { level = LogLevel.Verbose; }\n        Logger.instance.log({ level: level, message: message });\n    };\n    /**\n     * Writes the supplied string to the subscribed listeners\n     *\n     * @param json The json object to stringify and write\n     * @param level [Optional] if supplied will be used as the level of the entry (Default: LogLevel.Verbose)\n     */\n    Logger.writeJSON = function (json, level) {\n        if (level === void 0) { level = LogLevel.Verbose; }\n        Logger.instance.log({ level: level, message: JSON.stringify(json) });\n    };\n    /**\n     * Logs the supplied entry to the subscribed listeners\n     *\n     * @param entry The message to log\n     */\n    Logger.log = function (entry) {\n        Logger.instance.log(entry);\n    };\n    /**\n     * Logs performance tracking data for the the execution duration of the supplied function using console.profile\n     *\n     * @param name The name of this profile boundary\n     * @param f The function to execute and track within this performance boundary\n     */\n    Logger.measure = function (name, f) {\n        return Logger.instance.measure(name, f);\n    };\n    return Logger;\n}());\nexports.Logger = Logger;\nvar LoggerImpl = (function () {\n    function LoggerImpl(activeLogLevel, subscribers) {\n        if (activeLogLevel === void 0) { activeLogLevel = LogLevel.Warning; }\n        if (subscribers === void 0) { subscribers = []; }\n        this.activeLogLevel = activeLogLevel;\n        this.subscribers = subscribers;\n    }\n    LoggerImpl.prototype.subscribe = function (listener) {\n        this.subscribers.push(listener);\n    };\n    LoggerImpl.prototype.clearSubscribers = function () {\n        var s = this.subscribers.slice(0);\n        this.subscribers.length = 0;\n        return s;\n    };\n    Object.defineProperty(LoggerImpl.prototype, \"count\", {\n        get: function () {\n            return this.subscribers.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    LoggerImpl.prototype.write = function (message, level) {\n        if (level === void 0) { level = LogLevel.Verbose; }\n        this.log({ level: level, message: message });\n    };\n    LoggerImpl.prototype.log = function (entry) {\n        if (typeof entry === \"undefined\" || entry.level < this.activeLogLevel) {\n            return;\n        }\n        this.subscribers.map(function (subscriber) { return subscriber.log(entry); });\n    };\n    LoggerImpl.prototype.measure = function (name, f) {\n        console.profile(name);\n        try {\n            return f();\n        }\n        finally {\n            console.profileEnd();\n        }\n    };\n    return LoggerImpl;\n}());\n/**\n * Implementation of ILogListener which logs to the browser console\n *\n */\nvar ConsoleListener = (function () {\n    function ConsoleListener() {\n    }\n    /**\n     * Any associated data that a given logging listener may choose to log or ignore\n     *\n     * @param entry The information to be logged\n     */\n    ConsoleListener.prototype.log = function (entry) {\n        var msg = this.format(entry);\n        switch (entry.level) {\n            case LogLevel.Verbose:\n            case LogLevel.Info:\n                console.log(msg);\n                break;\n            case LogLevel.Warning:\n                console.warn(msg);\n                break;\n            case LogLevel.Error:\n                console.error(msg);\n                break;\n        }\n    };\n    /**\n     * Formats the message\n     *\n     * @param entry The information to format into a string\n     */\n    ConsoleListener.prototype.format = function (entry) {\n        var msg = [];\n        msg.push(\"Message: \" + entry.message);\n        if (typeof entry.data !== \"undefined\") {\n            msg.push(\" Data: \" + JSON.stringify(entry.data));\n        }\n        return msg.join(\"\");\n    };\n    return ConsoleListener;\n}());\nexports.ConsoleListener = ConsoleListener;\n/**\n * Implementation of ILogListener which logs to the supplied function\n *\n */\nvar FunctionListener = (function () {\n    /**\n     * Creates a new instance of the FunctionListener class\n     *\n     * @constructor\n     * @param  method The method to which any logging data will be passed\n     */\n    function FunctionListener(method) {\n        this.method = method;\n    }\n    /**\n     * Any associated data that a given logging listener may choose to log or ignore\n     *\n     * @param entry The information to be logged\n     */\n    FunctionListener.prototype.log = function (entry) {\n        this.method(entry);\n    };\n    return FunctionListener;\n}());\nexports.FunctionListener = FunctionListener;\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Generic dictionary\n */\nvar Dictionary = (function () {\n    /**\n     * Creates a new instance of the Dictionary<T> class\n     *\n     * @constructor\n     */\n    function Dictionary(keys, values) {\n        if (keys === void 0) { keys = []; }\n        if (values === void 0) { values = []; }\n        this.keys = keys;\n        this.values = values;\n    }\n    /**\n     * Gets a value from the collection using the specified key\n     *\n     * @param key The key whose value we want to return, returns null if the key does not exist\n     */\n    Dictionary.prototype.get = function (key) {\n        var index = this.keys.indexOf(key);\n        if (index < 0) {\n            return null;\n        }\n        return this.values[index];\n    };\n    /**\n     * Adds the supplied key and value to the dictionary\n     *\n     * @param key The key to add\n     * @param o The value to add\n     */\n    Dictionary.prototype.add = function (key, o) {\n        var index = this.keys.indexOf(key);\n        if (index > -1) {\n            this.values[index] = o;\n        }\n        else {\n            this.keys.push(key);\n            this.values.push(o);\n        }\n    };\n    /**\n     * Merges the supplied typed hash into this dictionary instance. Existing values are updated and new ones are created as appropriate.\n     */\n    Dictionary.prototype.merge = function (source) {\n        var _this = this;\n        if (\"getKeys\" in source) {\n            var sourceAsDictionary_1 = source;\n            sourceAsDictionary_1.getKeys().map(function (key) {\n                _this.add(key, sourceAsDictionary_1.get(key));\n            });\n        }\n        else {\n            var sourceAsHash = source;\n            for (var key in sourceAsHash) {\n                if (sourceAsHash.hasOwnProperty(key)) {\n                    this.add(key, sourceAsHash[key]);\n                }\n            }\n        }\n    };\n    /**\n     * Removes a value from the dictionary\n     *\n     * @param key The key of the key/value pair to remove. Returns null if the key was not found.\n     */\n    Dictionary.prototype.remove = function (key) {\n        var index = this.keys.indexOf(key);\n        if (index < 0) {\n            return null;\n        }\n        var val = this.values[index];\n        this.keys.splice(index, 1);\n        this.values.splice(index, 1);\n        return val;\n    };\n    /**\n     * Returns all the keys currently in the dictionary as an array\n     */\n    Dictionary.prototype.getKeys = function () {\n        return this.keys;\n    };\n    /**\n     * Returns all the values currently in the dictionary as an array\n     */\n    Dictionary.prototype.getValues = function () {\n        return this.values;\n    };\n    /**\n     * Clears the current dictionary\n     */\n    Dictionary.prototype.clear = function () {\n        this.keys = [];\n        this.values = [];\n    };\n    /**\n     * Gets a count of the items currently in the dictionary\n     */\n    Dictionary.prototype.count = function () {\n        return this.keys.length;\n    };\n    return Dictionary;\n}());\nexports.Dictionary = Dictionary;\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = __webpack_require__(1);\nvar lists_1 = __webpack_require__(10);\nvar fields_1 = __webpack_require__(29);\nvar navigation_1 = __webpack_require__(30);\nvar sitegroups_1 = __webpack_require__(17);\nvar contenttypes_1 = __webpack_require__(18);\nvar folders_1 = __webpack_require__(14);\nvar roles_1 = __webpack_require__(16);\nvar files_1 = __webpack_require__(8);\nvar util_1 = __webpack_require__(0);\nvar lists_2 = __webpack_require__(10);\nvar siteusers_1 = __webpack_require__(27);\nvar usercustomactions_1 = __webpack_require__(19);\nvar odata_1 = __webpack_require__(2);\nvar features_1 = __webpack_require__(31);\nvar queryableshareable_1 = __webpack_require__(12);\nvar relateditems_1 = __webpack_require__(43);\n/**\n * Describes a collection of webs\n *\n */\nvar Webs = (function (_super) {\n    __extends(Webs, _super);\n    /**\n     * Creates a new instance of the Webs class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this web collection\n     */\n    function Webs(baseUrl, webPath) {\n        if (webPath === void 0) { webPath = \"webs\"; }\n        return _super.call(this, baseUrl, webPath) || this;\n    }\n    /**\n     * Adds a new web to the collection\n     *\n     * @param title The new web's title\n     * @param url The new web's relative url\n     * @param description The new web's description\n     * @param template The new web's template internal name (default = STS)\n     * @param language The locale id that specifies the new web's language (default = 1033 [English, US])\n     * @param inheritPermissions When true, permissions will be inherited from the new web's parent (default = true)\n     */\n    Webs.prototype.add = function (title, url, description, template, language, inheritPermissions) {\n        if (description === void 0) { description = \"\"; }\n        if (template === void 0) { template = \"STS\"; }\n        if (language === void 0) { language = 1033; }\n        if (inheritPermissions === void 0) { inheritPermissions = true; }\n        var props = {\n            Description: description,\n            Language: language,\n            Title: title,\n            Url: url,\n            UseSamePermissionsAsParentSite: inheritPermissions,\n            WebTemplate: template,\n        };\n        var postBody = JSON.stringify({\n            \"parameters\": util_1.Util.extend({\n                \"__metadata\": { \"type\": \"SP.WebCreationInformation\" },\n            }, props),\n        });\n        return this.clone(Webs, \"add\", true).postCore({ body: postBody }).then(function (data) {\n            return {\n                data: data,\n                web: new Web(odata_1.extractOdataId(data).replace(/_api\\/web\\/?/i, \"\")),\n            };\n        });\n    };\n    return Webs;\n}(queryable_1.QueryableCollection));\nexports.Webs = Webs;\n/**\n * Describes a collection of web infos\n *\n */\nvar WebInfos = (function (_super) {\n    __extends(WebInfos, _super);\n    /**\n     * Creates a new instance of the WebInfos class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this web infos collection\n     */\n    function WebInfos(baseUrl, webPath) {\n        if (webPath === void 0) { webPath = \"webinfos\"; }\n        return _super.call(this, baseUrl, webPath) || this;\n    }\n    return WebInfos;\n}(queryable_1.QueryableCollection));\nexports.WebInfos = WebInfos;\n/**\n * Describes a web\n *\n */\nvar Web = (function (_super) {\n    __extends(Web, _super);\n    /**\n     * Creates a new instance of the Web class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this web\n     */\n    function Web(baseUrl, path) {\n        if (path === void 0) { path = \"_api/web\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Creates a new web instance from the given url by indexing the location of the /_api/\n     * segment. If this is not found the method creates a new web with the entire string as\n     * supplied.\n     *\n     * @param url\n     */\n    Web.fromUrl = function (url, path) {\n        return new Web(util_1.extractWebUrl(url), path);\n    };\n    Object.defineProperty(Web.prototype, \"webs\", {\n        /**\n         * Gets this web's subwebs\n         *\n         */\n        get: function () {\n            return new Webs(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"webinfos\", {\n        /**\n         * Gets a collection of WebInfos for this web's subwebs\n         *\n         */\n        get: function () {\n            return new WebInfos(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"contentTypes\", {\n        /**\n         * Gets the content types available in this web\n         *\n         */\n        get: function () {\n            return new contenttypes_1.ContentTypes(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"lists\", {\n        /**\n         * Gets the lists in this web\n         *\n         */\n        get: function () {\n            return new lists_1.Lists(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"fields\", {\n        /**\n         * Gets the fields in this web\n         *\n         */\n        get: function () {\n            return new fields_1.Fields(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"features\", {\n        /**\n         * Gets the active features for this web\n         *\n         */\n        get: function () {\n            return new features_1.Features(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"availablefields\", {\n        /**\n         * Gets the available fields in this web\n         *\n         */\n        get: function () {\n            return new fields_1.Fields(this, \"availablefields\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"navigation\", {\n        /**\n         * Gets the navigation options in this web\n         *\n         */\n        get: function () {\n            return new navigation_1.Navigation(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"siteUsers\", {\n        /**\n         * Gets the site users\n         *\n         */\n        get: function () {\n            return new siteusers_1.SiteUsers(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"siteGroups\", {\n        /**\n         * Gets the site groups\n         *\n         */\n        get: function () {\n            return new sitegroups_1.SiteGroups(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"currentUser\", {\n        /**\n         * Gets the current user\n         */\n        get: function () {\n            return new siteusers_1.CurrentUser(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"folders\", {\n        /**\n         * Gets the top-level folders in this web\n         *\n         */\n        get: function () {\n            return new folders_1.Folders(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"userCustomActions\", {\n        /**\n         * Gets all user custom actions for this web\n         *\n         */\n        get: function () {\n            return new usercustomactions_1.UserCustomActions(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"roleDefinitions\", {\n        /**\n         * Gets the collection of RoleDefinition resources\n         *\n         */\n        get: function () {\n            return new roles_1.RoleDefinitions(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"relatedItems\", {\n        /**\n         * Provides an interface to manage related items\n         *\n         */\n        get: function () {\n            return relateditems_1.RelatedItemManagerImpl.FromUrl(this.toUrl());\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Creates a new batch for requests within the context of this web\n     *\n     */\n    Web.prototype.createBatch = function () {\n        return new odata_1.ODataBatch(this.parentUrl);\n    };\n    Object.defineProperty(Web.prototype, \"rootFolder\", {\n        /**\n         * Gets the root folder of this web\n         *\n         */\n        get: function () {\n            return new folders_1.Folder(this, \"rootFolder\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"associatedOwnerGroup\", {\n        /**\n         * Gets the associated owner group for this web\n         *\n         */\n        get: function () {\n            return new sitegroups_1.SiteGroup(this, \"associatedownergroup\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"associatedMemberGroup\", {\n        /**\n         * Gets the associated member group for this web\n         *\n         */\n        get: function () {\n            return new sitegroups_1.SiteGroup(this, \"associatedmembergroup\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"associatedVisitorGroup\", {\n        /**\n         * Gets the associated visitor group for this web\n         *\n         */\n        get: function () {\n            return new sitegroups_1.SiteGroup(this, \"associatedvisitorgroup\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets a folder by server relative url\n     *\n     * @param folderRelativeUrl The server relative path to the folder (including /sites/ if applicable)\n     */\n    Web.prototype.getFolderByServerRelativeUrl = function (folderRelativeUrl) {\n        return new folders_1.Folder(this, \"getFolderByServerRelativeUrl('\" + folderRelativeUrl + \"')\");\n    };\n    /**\n     * Gets a file by server relative url\n     *\n     * @param fileRelativeUrl The server relative path to the file (including /sites/ if applicable)\n     */\n    Web.prototype.getFileByServerRelativeUrl = function (fileRelativeUrl) {\n        return new files_1.File(this, \"getFileByServerRelativeUrl('\" + fileRelativeUrl + \"')\");\n    };\n    /**\n     * Gets a list by server relative url (list's root folder)\n     *\n     * @param listRelativeUrl The server relative path to the list's root folder (including /sites/ if applicable)\n     */\n    Web.prototype.getList = function (listRelativeUrl) {\n        return new lists_2.List(this, \"getList('\" + listRelativeUrl + \"')\");\n    };\n    /**\n     * Updates this web instance with the supplied properties\n     *\n     * @param properties A plain object hash of values to update for the web\n     */\n    Web.prototype.update = function (properties) {\n        var _this = this;\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"__metadata\": { \"type\": \"SP.Web\" },\n        }, properties));\n        return this.postCore({\n            body: postBody,\n            headers: {\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then(function (data) {\n            return {\n                data: data,\n                web: _this,\n            };\n        });\n    };\n    /**\n     * Deletes this web\n     *\n     */\n    Web.prototype.delete = function () {\n        return _super.prototype.deleteCore.call(this);\n    };\n    /**\n     * Applies the theme specified by the contents of each of the files specified in the arguments to the site\n     *\n     * @param colorPaletteUrl The server-relative URL of the color palette file\n     * @param fontSchemeUrl The server-relative URL of the font scheme\n     * @param backgroundImageUrl The server-relative URL of the background image\n     * @param shareGenerated When true, the generated theme files are stored in the root site. When false, they are stored in this web\n     */\n    Web.prototype.applyTheme = function (colorPaletteUrl, fontSchemeUrl, backgroundImageUrl, shareGenerated) {\n        var postBody = JSON.stringify({\n            backgroundImageUrl: backgroundImageUrl,\n            colorPaletteUrl: colorPaletteUrl,\n            fontSchemeUrl: fontSchemeUrl,\n            shareGenerated: shareGenerated,\n        });\n        return this.clone(Web, \"applytheme\", true).postCore({ body: postBody });\n    };\n    /**\n     * Applies the specified site definition or site template to the Web site that has no template applied to it\n     *\n     * @param template Name of the site definition or the name of the site template\n     */\n    Web.prototype.applyWebTemplate = function (template) {\n        var q = this.clone(Web, \"applywebtemplate\", true);\n        q.concat(\"(@t)\");\n        q.query.add(\"@t\", template);\n        return q.postCore();\n    };\n    /**\n     * Checks whether the specified login name belongs to a valid user in the web. If the user doesn't exist, adds the user to the web.\n     *\n     * @param loginName The login name of the user (ex: i:0#.f|membership|user@domain.onmicrosoft.com)\n     */\n    Web.prototype.ensureUser = function (loginName) {\n        var postBody = JSON.stringify({\n            logonName: loginName,\n        });\n        return this.clone(Web, \"ensureuser\", true).postCore({ body: postBody }).then(function (data) {\n            return {\n                data: data,\n                user: new siteusers_1.SiteUser(odata_1.extractOdataId(data)),\n            };\n        });\n    };\n    /**\n     * Returns a collection of site templates available for the site\n     *\n     * @param language The locale id of the site templates to retrieve (default = 1033 [English, US])\n     * @param includeCrossLanguage When true, includes language-neutral site templates; otherwise false (default = true)\n     */\n    Web.prototype.availableWebTemplates = function (language, includeCrossLanugage) {\n        if (language === void 0) { language = 1033; }\n        if (includeCrossLanugage === void 0) { includeCrossLanugage = true; }\n        return new queryable_1.QueryableCollection(this, \"getavailablewebtemplates(lcid=\" + language + \", doincludecrosslanguage=\" + includeCrossLanugage + \")\");\n    };\n    /**\n     * Returns the list gallery on the site\n     *\n     * @param type The gallery type - WebTemplateCatalog = 111, WebPartCatalog = 113 ListTemplateCatalog = 114,\n     * MasterPageCatalog = 116, SolutionCatalog = 121, ThemeCatalog = 123, DesignCatalog = 124, AppDataCatalog = 125\n     */\n    Web.prototype.getCatalog = function (type) {\n        return this.clone(Web, \"getcatalog(\" + type + \")\", true).select(\"Id\").get().then(function (data) {\n            return new lists_2.List(odata_1.extractOdataId(data));\n        });\n    };\n    /**\n     * Returns the collection of changes from the change log that have occurred within the list, based on the specified query\n     *\n     * @param query The change query\n     */\n    Web.prototype.getChanges = function (query) {\n        var postBody = JSON.stringify({ \"query\": util_1.Util.extend({ \"__metadata\": { \"type\": \"SP.ChangeQuery\" } }, query) });\n        return this.clone(Web, \"getchanges\", true).postCore({ body: postBody });\n    };\n    Object.defineProperty(Web.prototype, \"customListTemplate\", {\n        /**\n         * Gets the custom list templates for the site\n         *\n         */\n        get: function () {\n            return new queryable_1.QueryableCollection(this, \"getcustomlisttemplates\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Returns the user corresponding to the specified member identifier for the current site\n     *\n     * @param id The id of the user\n     */\n    Web.prototype.getUserById = function (id) {\n        return new siteusers_1.SiteUser(this, \"getUserById(\" + id + \")\");\n    };\n    /**\n     * Returns the name of the image file for the icon that is used to represent the specified file\n     *\n     * @param filename The file name. If this parameter is empty, the server returns an empty string\n     * @param size The size of the icon: 16x16 pixels = 0, 32x32 pixels = 1 (default = 0)\n     * @param progId The ProgID of the application that was used to create the file, in the form OLEServerName.ObjectName\n     */\n    Web.prototype.mapToIcon = function (filename, size, progId) {\n        if (size === void 0) { size = 0; }\n        if (progId === void 0) { progId = \"\"; }\n        return this.clone(Web, \"maptoicon(filename='\" + filename + \"', progid='\" + progId + \"', size=\" + size + \")\", true).get();\n    };\n    return Web;\n}(queryableshareable_1.QueryableShareableWeb));\nexports.Web = Web;\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = __webpack_require__(1);\nvar odata_1 = __webpack_require__(2);\nvar util_1 = __webpack_require__(0);\nvar exceptions_1 = __webpack_require__(3);\nvar webparts_1 = __webpack_require__(28);\nvar items_1 = __webpack_require__(11);\nvar queryableshareable_1 = __webpack_require__(12);\nvar odata_2 = __webpack_require__(2);\n/**\n * Describes a collection of File objects\n *\n */\nvar Files = (function (_super) {\n    __extends(Files, _super);\n    /**\n     * Creates a new instance of the Files class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    function Files(baseUrl, path) {\n        if (path === void 0) { path = \"files\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a File by filename\n     *\n     * @param name The name of the file, including extension.\n     */\n    Files.prototype.getByName = function (name) {\n        var f = new File(this);\n        f.concat(\"('\" + name + \"')\");\n        return f;\n    };\n    /**\n     * Uploads a file. Not supported for batching\n     *\n     * @param url The folder-relative url of the file.\n     * @param content The file contents blob.\n     * @param shouldOverWrite Should a file with the same name in the same location be overwritten? (default: true)\n     * @returns The new File and the raw response.\n     */\n    Files.prototype.add = function (url, content, shouldOverWrite) {\n        var _this = this;\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\n        return new Files(this, \"add(overwrite=\" + shouldOverWrite + \",url='\" + url + \"')\")\n            .postCore({\n            body: content,\n        }).then(function (response) {\n            return {\n                data: response,\n                file: _this.getByName(url),\n            };\n        });\n    };\n    /**\n     * Uploads a file. Not supported for batching\n     *\n     * @param url The folder-relative url of the file.\n     * @param content The Blob file content to add\n     * @param progress A callback function which can be used to track the progress of the upload\n     * @param shouldOverWrite Should a file with the same name in the same location be overwritten? (default: true)\n     * @param chunkSize The size of each file slice, in bytes (default: 10485760)\n     * @returns The new File and the raw response.\n     */\n    Files.prototype.addChunked = function (url, content, progress, shouldOverWrite, chunkSize) {\n        var _this = this;\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\n        if (chunkSize === void 0) { chunkSize = 10485760; }\n        var adder = this.clone(Files, \"add(overwrite=\" + shouldOverWrite + \",url='\" + url + \"')\");\n        return adder.postCore().then(function () { return _this.getByName(url); }).then(function (file) { return file.setContentChunked(content, progress, chunkSize); }).then(function (response) {\n            return {\n                data: response,\n                file: _this.getByName(url),\n            };\n        });\n    };\n    /**\n     * Adds a ghosted file to an existing list or document library. Not supported for batching.\n     *\n     * @param fileUrl The server-relative url where you want to save the file.\n     * @param templateFileType The type of use to create the file.\n     * @returns The template file that was added and the raw response.\n     */\n    Files.prototype.addTemplateFile = function (fileUrl, templateFileType) {\n        var _this = this;\n        return this.clone(Files, \"addTemplateFile(urloffile='\" + fileUrl + \"',templatefiletype=\" + templateFileType + \")\")\n            .postCore().then(function (response) {\n            return {\n                data: response,\n                file: _this.getByName(fileUrl),\n            };\n        });\n    };\n    return Files;\n}(queryable_1.QueryableCollection));\nexports.Files = Files;\n/**\n * Describes a single File instance\n *\n */\nvar File = (function (_super) {\n    __extends(File, _super);\n    function File() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(File.prototype, \"listItemAllFields\", {\n        /**\n         * Gets a value that specifies the list item field values for the list item corresponding to the file.\n         *\n         */\n        get: function () {\n            return new queryable_1.QueryableCollection(this, \"listItemAllFields\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(File.prototype, \"versions\", {\n        /**\n         * Gets a collection of versions\n         *\n         */\n        get: function () {\n            return new Versions(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Approves the file submitted for content approval with the specified comment.\n     * Only documents in lists that are enabled for content approval can be approved.\n     *\n     * @param comment The comment for the approval.\n     */\n    File.prototype.approve = function (comment) {\n        if (comment === void 0) { comment = \"\"; }\n        return this.clone(File, \"approve(comment='\" + comment + \"')\", true).postCore();\n    };\n    /**\n     * Stops the chunk upload session without saving the uploaded data. Does not support batching.\n     * If the file doesn’t already exist in the library, the partially uploaded file will be deleted.\n     * Use this in response to user action (as in a request to cancel an upload) or an error or exception.\n     * Use the uploadId value that was passed to the StartUpload method that started the upload session.\n     * This method is currently available only on Office 365.\n     *\n     * @param uploadId The unique identifier of the upload session.\n     */\n    File.prototype.cancelUpload = function (uploadId) {\n        return this.clone(File, \"cancelUpload(uploadId=guid'\" + uploadId + \"')\", false).postCore();\n    };\n    /**\n     * Checks the file in to a document library based on the check-in type.\n     *\n     * @param comment A comment for the check-in. Its length must be <= 1023.\n     * @param checkinType The check-in type for the file.\n     */\n    File.prototype.checkin = function (comment, checkinType) {\n        if (comment === void 0) { comment = \"\"; }\n        if (checkinType === void 0) { checkinType = CheckinType.Major; }\n        if (comment.length > 1023) {\n            throw new exceptions_1.MaxCommentLengthException();\n        }\n        return this.clone(File, \"checkin(comment='\" + comment + \"',checkintype=\" + checkinType + \")\", true).postCore();\n    };\n    /**\n     * Checks out the file from a document library.\n     */\n    File.prototype.checkout = function () {\n        return this.clone(File, \"checkout\", true).postCore();\n    };\n    /**\n     * Copies the file to the destination url.\n     *\n     * @param url The absolute url or server relative url of the destination file path to copy to.\n     * @param shouldOverWrite Should a file with the same name in the same location be overwritten?\n     */\n    File.prototype.copyTo = function (url, shouldOverWrite) {\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\n        return this.clone(File, \"copyTo(strnewurl='\" + url + \"',boverwrite=\" + shouldOverWrite + \")\", true).postCore();\n    };\n    /**\n     * Delete this file.\n     *\n     * @param eTag Value used in the IF-Match header, by default \"*\"\n     */\n    File.prototype.delete = function (eTag) {\n        if (eTag === void 0) { eTag = \"*\"; }\n        return this.clone(File, null, true).postCore({\n            headers: {\n                \"IF-Match\": eTag,\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    /**\n     * Denies approval for a file that was submitted for content approval.\n     * Only documents in lists that are enabled for content approval can be denied.\n     *\n     * @param comment The comment for the denial.\n     */\n    File.prototype.deny = function (comment) {\n        if (comment === void 0) { comment = \"\"; }\n        if (comment.length > 1023) {\n            throw new exceptions_1.MaxCommentLengthException();\n        }\n        return this.clone(File, \"deny(comment='\" + comment + \"')\", true).postCore();\n    };\n    /**\n     * Specifies the control set used to access, modify, or add Web Parts associated with this Web Part Page and view.\n     * An exception is thrown if the file is not an ASPX page.\n     *\n     * @param scope The WebPartsPersonalizationScope view on the Web Parts page.\n     */\n    File.prototype.getLimitedWebPartManager = function (scope) {\n        if (scope === void 0) { scope = WebPartsPersonalizationScope.Shared; }\n        return new webparts_1.LimitedWebPartManager(this, \"getLimitedWebPartManager(scope=\" + scope + \")\");\n    };\n    /**\n     * Moves the file to the specified destination url.\n     *\n     * @param url The absolute url or server relative url of the destination file path to move to.\n     * @param moveOperations The bitwise MoveOperations value for how to move the file.\n     */\n    File.prototype.moveTo = function (url, moveOperations) {\n        if (moveOperations === void 0) { moveOperations = MoveOperations.Overwrite; }\n        return this.clone(File, \"moveTo(newurl='\" + url + \"',flags=\" + moveOperations + \")\", true).postCore();\n    };\n    /**\n     * Submits the file for content approval with the specified comment.\n     *\n     * @param comment The comment for the published file. Its length must be <= 1023.\n     */\n    File.prototype.publish = function (comment) {\n        if (comment === void 0) { comment = \"\"; }\n        if (comment.length > 1023) {\n            throw new exceptions_1.MaxCommentLengthException();\n        }\n        return this.clone(File, \"publish(comment='\" + comment + \"')\", true).postCore();\n    };\n    /**\n     * Moves the file to the Recycle Bin and returns the identifier of the new Recycle Bin item.\n     *\n     * @returns The GUID of the recycled file.\n     */\n    File.prototype.recycle = function () {\n        return this.clone(File, \"recycle\", true).postCore();\n    };\n    /**\n     * Reverts an existing checkout for the file.\n     *\n     */\n    File.prototype.undoCheckout = function () {\n        return this.clone(File, \"undoCheckout\", true).postCore();\n    };\n    /**\n     * Removes the file from content approval or unpublish a major version.\n     *\n     * @param comment The comment for the unpublish operation. Its length must be <= 1023.\n     */\n    File.prototype.unpublish = function (comment) {\n        if (comment === void 0) { comment = \"\"; }\n        if (comment.length > 1023) {\n            throw new exceptions_1.MaxCommentLengthException();\n        }\n        return this.clone(File, \"unpublish(comment='\" + comment + \"')\", true).postCore();\n    };\n    /**\n     * Gets the contents of the file as text. Not supported in batching.\n     *\n     */\n    File.prototype.getText = function () {\n        return this.clone(File, \"$value\").get(new odata_1.TextFileParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\n    };\n    /**\n     * Gets the contents of the file as a blob, does not work in Node.js. Not supported in batching.\n     *\n     */\n    File.prototype.getBlob = function () {\n        return this.clone(File, \"$value\").get(new odata_1.BlobFileParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\n    };\n    /**\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js. Not supported in batching.\n     */\n    File.prototype.getBuffer = function () {\n        return this.clone(File, \"$value\").get(new odata_1.BufferFileParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\n    };\n    /**\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js. Not supported in batching.\n     */\n    File.prototype.getJSON = function () {\n        return this.clone(File, \"$value\").get(new odata_1.JSONFileParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\n    };\n    /**\n     * Sets the content of a file, for large files use setContentChunked. Not supported in batching.\n     *\n     * @param content The file content\n     *\n     */\n    File.prototype.setContent = function (content) {\n        var _this = this;\n        return this.clone(File, \"$value\").postCore({\n            body: content,\n            headers: {\n                \"X-HTTP-Method\": \"PUT\",\n            },\n        }).then(function (_) { return new File(_this); });\n    };\n    /**\n     * Gets the associated list item for this folder, loading the default properties\n     */\n    File.prototype.getItem = function () {\n        var selects = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            selects[_i] = arguments[_i];\n        }\n        var q = this.listItemAllFields;\n        return q.select.apply(q, selects).get().then(function (d) {\n            return util_1.Util.extend(new items_1.Item(odata_2.getEntityUrl(d)), d);\n        });\n    };\n    /**\n     * Sets the contents of a file using a chunked upload approach. Not supported in batching.\n     *\n     * @param file The file to upload\n     * @param progress A callback function which can be used to track the progress of the upload\n     * @param chunkSize The size of each file slice, in bytes (default: 10485760)\n     */\n    File.prototype.setContentChunked = function (file, progress, chunkSize) {\n        if (chunkSize === void 0) { chunkSize = 10485760; }\n        if (typeof progress === \"undefined\") {\n            progress = function () { return null; };\n        }\n        var self = this;\n        var fileSize = file.size;\n        var blockCount = parseInt((file.size / chunkSize).toString(), 10) + ((file.size % chunkSize === 0) ? 1 : 0);\n        var uploadId = util_1.Util.getGUID();\n        // start the chain with the first fragment\n        progress({ blockNumber: 1, chunkSize: chunkSize, currentPointer: 0, fileSize: fileSize, stage: \"starting\", totalBlocks: blockCount });\n        var chain = self.startUpload(uploadId, file.slice(0, chunkSize));\n        var _loop_1 = function (i) {\n            chain = chain.then(function (pointer) {\n                progress({ blockNumber: i, chunkSize: chunkSize, currentPointer: pointer, fileSize: fileSize, stage: \"continue\", totalBlocks: blockCount });\n                return self.continueUpload(uploadId, pointer, file.slice(pointer, pointer + chunkSize));\n            });\n        };\n        // skip the first and last blocks\n        for (var i = 2; i < blockCount; i++) {\n            _loop_1(i);\n        }\n        return chain.then(function (pointer) {\n            progress({ blockNumber: blockCount, chunkSize: chunkSize, currentPointer: pointer, fileSize: fileSize, stage: \"finishing\", totalBlocks: blockCount });\n            return self.finishUpload(uploadId, pointer, file.slice(pointer));\n        }).then(function (_) {\n            return self;\n        });\n    };\n    /**\n     * Starts a new chunk upload session and uploads the first fragment.\n     * The current file content is not changed when this method completes.\n     * The method is idempotent (and therefore does not change the result) as long as you use the same values for uploadId and stream.\n     * The upload session ends either when you use the CancelUpload method or when you successfully\n     * complete the upload session by passing the rest of the file contents through the ContinueUpload and FinishUpload methods.\n     * The StartUpload and ContinueUpload methods return the size of the running total of uploaded data in bytes,\n     * so you can pass those return values to subsequent uses of ContinueUpload and FinishUpload.\n     * This method is currently available only on Office 365.\n     *\n     * @param uploadId The unique identifier of the upload session.\n     * @param fragment The file contents.\n     * @returns The size of the total uploaded data in bytes.\n     */\n    File.prototype.startUpload = function (uploadId, fragment) {\n        return this.clone(File, \"startUpload(uploadId=guid'\" + uploadId + \"')\").postAsCore({ body: fragment }).then(function (n) { return parseFloat(n); });\n    };\n    /**\n     * Continues the chunk upload session with an additional fragment.\n     * The current file content is not changed.\n     * Use the uploadId value that was passed to the StartUpload method that started the upload session.\n     * This method is currently available only on Office 365.\n     *\n     * @param uploadId The unique identifier of the upload session.\n     * @param fileOffset The size of the offset into the file where the fragment starts.\n     * @param fragment The file contents.\n     * @returns The size of the total uploaded data in bytes.\n     */\n    File.prototype.continueUpload = function (uploadId, fileOffset, fragment) {\n        return this.clone(File, \"continueUpload(uploadId=guid'\" + uploadId + \"',fileOffset=\" + fileOffset + \")\").postAsCore({ body: fragment }).then(function (n) { return parseFloat(n); });\n    };\n    /**\n     * Uploads the last file fragment and commits the file. The current file content is changed when this method completes.\n     * Use the uploadId value that was passed to the StartUpload method that started the upload session.\n     * This method is currently available only on Office 365.\n     *\n     * @param uploadId The unique identifier of the upload session.\n     * @param fileOffset The size of the offset into the file where the fragment starts.\n     * @param fragment The file contents.\n     * @returns The newly uploaded file.\n     */\n    File.prototype.finishUpload = function (uploadId, fileOffset, fragment) {\n        return this.clone(File, \"finishUpload(uploadId=guid'\" + uploadId + \"',fileOffset=\" + fileOffset + \")\")\n            .postAsCore({ body: fragment }).then(function (response) {\n            return {\n                data: response,\n                file: new File(response.ServerRelativeUrl),\n            };\n        });\n    };\n    return File;\n}(queryableshareable_1.QueryableShareableFile));\nexports.File = File;\n/**\n * Describes a collection of Version objects\n *\n */\nvar Versions = (function (_super) {\n    __extends(Versions, _super);\n    /**\n     * Creates a new instance of the File class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    function Versions(baseUrl, path) {\n        if (path === void 0) { path = \"versions\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a version by id\n     *\n     * @param versionId The id of the version to retrieve\n     */\n    Versions.prototype.getById = function (versionId) {\n        var v = new Version(this);\n        v.concat(\"(\" + versionId + \")\");\n        return v;\n    };\n    /**\n     * Deletes all the file version objects in the collection.\n     *\n     */\n    Versions.prototype.deleteAll = function () {\n        return new Versions(this, \"deleteAll\").postCore();\n    };\n    /**\n     * Deletes the specified version of the file.\n     *\n     * @param versionId The ID of the file version to delete.\n     */\n    Versions.prototype.deleteById = function (versionId) {\n        return this.clone(Versions, \"deleteById(vid=\" + versionId + \")\", true).postCore();\n    };\n    /**\n     * Deletes the file version object with the specified version label.\n     *\n     * @param label The version label of the file version to delete, for example: 1.2\n     */\n    Versions.prototype.deleteByLabel = function (label) {\n        return this.clone(Versions, \"deleteByLabel(versionlabel='\" + label + \"')\", true).postCore();\n    };\n    /**\n     * Creates a new file version from the file specified by the version label.\n     *\n     * @param label The version label of the file version to restore, for example: 1.2\n     */\n    Versions.prototype.restoreByLabel = function (label) {\n        return this.clone(Versions, \"restoreByLabel(versionlabel='\" + label + \"')\", true).postCore();\n    };\n    return Versions;\n}(queryable_1.QueryableCollection));\nexports.Versions = Versions;\n/**\n * Describes a single Version instance\n *\n */\nvar Version = (function (_super) {\n    __extends(Version, _super);\n    function Version() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n    * Delete a specific version of a file.\n    *\n    * @param eTag Value used in the IF-Match header, by default \"*\"\n    */\n    Version.prototype.delete = function (eTag) {\n        if (eTag === void 0) { eTag = \"*\"; }\n        return this.postCore({\n            headers: {\n                \"IF-Match\": eTag,\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    return Version;\n}(queryable_1.QueryableInstance));\nexports.Version = Version;\nvar CheckinType;\n(function (CheckinType) {\n    CheckinType[CheckinType[\"Minor\"] = 0] = \"Minor\";\n    CheckinType[CheckinType[\"Major\"] = 1] = \"Major\";\n    CheckinType[CheckinType[\"Overwrite\"] = 2] = \"Overwrite\";\n})(CheckinType = exports.CheckinType || (exports.CheckinType = {}));\nvar WebPartsPersonalizationScope;\n(function (WebPartsPersonalizationScope) {\n    WebPartsPersonalizationScope[WebPartsPersonalizationScope[\"User\"] = 0] = \"User\";\n    WebPartsPersonalizationScope[WebPartsPersonalizationScope[\"Shared\"] = 1] = \"Shared\";\n})(WebPartsPersonalizationScope = exports.WebPartsPersonalizationScope || (exports.WebPartsPersonalizationScope = {}));\nvar MoveOperations;\n(function (MoveOperations) {\n    MoveOperations[MoveOperations[\"Overwrite\"] = 1] = \"Overwrite\";\n    MoveOperations[MoveOperations[\"AllowBrokenThickets\"] = 8] = \"AllowBrokenThickets\";\n})(MoveOperations = exports.MoveOperations || (exports.MoveOperations = {}));\nvar TemplateFileType;\n(function (TemplateFileType) {\n    TemplateFileType[TemplateFileType[\"StandardPage\"] = 0] = \"StandardPage\";\n    TemplateFileType[TemplateFileType[\"WikiPage\"] = 1] = \"WikiPage\";\n    TemplateFileType[TemplateFileType[\"FormPage\"] = 2] = \"FormPage\";\n})(TemplateFileType = exports.TemplateFileType || (exports.TemplateFileType = {}));\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar digestcache_1 = __webpack_require__(37);\nvar util_1 = __webpack_require__(0);\nvar pnplibconfig_1 = __webpack_require__(4);\nvar exceptions_1 = __webpack_require__(3);\nvar HttpClient = (function () {\n    function HttpClient() {\n        this._impl = pnplibconfig_1.RuntimeConfig.fetchClientFactory();\n        this._digestCache = new digestcache_1.DigestCache(this);\n    }\n    HttpClient.prototype.fetch = function (url, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        var opts = util_1.Util.extend(options, { cache: \"no-cache\", credentials: \"same-origin\" }, true);\n        var headers = new Headers();\n        // first we add the global headers so they can be overwritten by any passed in locally to this call\n        mergeHeaders(headers, pnplibconfig_1.RuntimeConfig.headers);\n        // second we add the local options so we can overwrite the globals\n        mergeHeaders(headers, options.headers);\n        // lastly we apply any default headers we need that may not exist\n        if (!headers.has(\"Accept\")) {\n            headers.append(\"Accept\", \"application/json\");\n        }\n        if (!headers.has(\"Content-Type\")) {\n            headers.append(\"Content-Type\", \"application/json;odata=verbose;charset=utf-8\");\n        }\n        if (!headers.has(\"X-ClientService-ClientTag\")) {\n            headers.append(\"X-ClientService-ClientTag\", \"PnPCoreJS:2.0.8\");\n        }\n        opts = util_1.Util.extend(opts, { headers: headers });\n        if (opts.method && opts.method.toUpperCase() !== \"GET\") {\n            // if we have either a request digest or an authorization header we don't need a digest\n            if (!headers.has(\"X-RequestDigest\") && !headers.has(\"Authorization\")) {\n                var index = url.indexOf(\"_api/\");\n                if (index < 0) {\n                    throw new exceptions_1.APIUrlException();\n                }\n                var webUrl = url.substr(0, index);\n                return this._digestCache.getDigest(webUrl)\n                    .then(function (digest) {\n                    headers.append(\"X-RequestDigest\", digest);\n                    return _this.fetchRaw(url, opts);\n                });\n            }\n        }\n        return this.fetchRaw(url, opts);\n    };\n    HttpClient.prototype.fetchRaw = function (url, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        // here we need to normalize the headers\n        var rawHeaders = new Headers();\n        mergeHeaders(rawHeaders, options.headers);\n        options = util_1.Util.extend(options, { headers: rawHeaders });\n        var retry = function (ctx) {\n            _this._impl.fetch(url, options).then(function (response) { return ctx.resolve(response); }).catch(function (response) {\n                // grab our current delay\n                var delay = ctx.delay;\n                // Check if request was throttled - http status code 429\n                // Check is request failed due to server unavailable - http status code 503\n                if (response.status !== 429 && response.status !== 503) {\n                    ctx.reject(response);\n                }\n                // Increment our counters.\n                ctx.delay *= 2;\n                ctx.attempts++;\n                // If we have exceeded the retry count, reject.\n                if (ctx.retryCount <= ctx.attempts) {\n                    ctx.reject(response);\n                }\n                // Set our retry timeout for {delay} milliseconds.\n                setTimeout(util_1.Util.getCtxCallback(_this, retry, ctx), delay);\n            });\n        };\n        return new Promise(function (resolve, reject) {\n            var retryContext = {\n                attempts: 0,\n                delay: 100,\n                reject: reject,\n                resolve: resolve,\n                retryCount: 7,\n            };\n            retry.call(_this, retryContext);\n        });\n    };\n    HttpClient.prototype.get = function (url, options) {\n        if (options === void 0) { options = {}; }\n        var opts = util_1.Util.extend(options, { method: \"GET\" });\n        return this.fetch(url, opts);\n    };\n    HttpClient.prototype.post = function (url, options) {\n        if (options === void 0) { options = {}; }\n        var opts = util_1.Util.extend(options, { method: \"POST\" });\n        return this.fetch(url, opts);\n    };\n    HttpClient.prototype.patch = function (url, options) {\n        if (options === void 0) { options = {}; }\n        var opts = util_1.Util.extend(options, { method: \"PATCH\" });\n        return this.fetch(url, opts);\n    };\n    HttpClient.prototype.delete = function (url, options) {\n        if (options === void 0) { options = {}; }\n        var opts = util_1.Util.extend(options, { method: \"DELETE\" });\n        return this.fetch(url, opts);\n    };\n    return HttpClient;\n}());\nexports.HttpClient = HttpClient;\nfunction mergeOptions(target, source) {\n    target.headers = target.headers || {};\n    var headers = util_1.Util.extend(target.headers, source.headers);\n    target = util_1.Util.extend(target, source);\n    target.headers = headers;\n}\nexports.mergeOptions = mergeOptions;\nfunction mergeHeaders(target, source) {\n    if (typeof source !== \"undefined\" && source !== null) {\n        var temp = new Request(\"\", { headers: source });\n        temp.headers.forEach(function (value, name) {\n            target.append(name, value);\n        });\n    }\n}\nexports.mergeHeaders = mergeHeaders;\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar items_1 = __webpack_require__(11);\nvar views_1 = __webpack_require__(40);\nvar contenttypes_1 = __webpack_require__(18);\nvar fields_1 = __webpack_require__(29);\nvar forms_1 = __webpack_require__(41);\nvar subscriptions_1 = __webpack_require__(42);\nvar queryable_1 = __webpack_require__(1);\nvar queryablesecurable_1 = __webpack_require__(26);\nvar util_1 = __webpack_require__(0);\nvar usercustomactions_1 = __webpack_require__(19);\nvar odata_1 = __webpack_require__(2);\nvar exceptions_1 = __webpack_require__(3);\nvar folders_1 = __webpack_require__(14);\n/**\n * Describes a collection of List objects\n *\n */\nvar Lists = (function (_super) {\n    __extends(Lists, _super);\n    /**\n     * Creates a new instance of the Lists class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    function Lists(baseUrl, path) {\n        if (path === void 0) { path = \"lists\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a list from the collection by title\n     *\n     * @param title The title of the list\n     */\n    Lists.prototype.getByTitle = function (title) {\n        return new List(this, \"getByTitle('\" + title + \"')\");\n    };\n    /**\n     * Gets a list from the collection by guid id\n     *\n     * @param id The Id of the list (GUID)\n     */\n    Lists.prototype.getById = function (id) {\n        var list = new List(this);\n        list.concat(\"('\" + id + \"')\");\n        return list;\n    };\n    /**\n     * Adds a new list to the collection\n     *\n     * @param title The new list's title\n     * @param description The new list's description\n     * @param template The list template value\n     * @param enableContentTypes If true content types will be allowed and enabled, otherwise they will be disallowed and not enabled\n     * @param additionalSettings Will be passed as part of the list creation body\n     */\n    Lists.prototype.add = function (title, description, template, enableContentTypes, additionalSettings) {\n        var _this = this;\n        if (description === void 0) { description = \"\"; }\n        if (template === void 0) { template = 100; }\n        if (enableContentTypes === void 0) { enableContentTypes = false; }\n        if (additionalSettings === void 0) { additionalSettings = {}; }\n        var addSettings = util_1.Util.extend({\n            \"AllowContentTypes\": enableContentTypes,\n            \"BaseTemplate\": template,\n            \"ContentTypesEnabled\": enableContentTypes,\n            \"Description\": description,\n            \"Title\": title,\n            \"__metadata\": { \"type\": \"SP.List\" },\n        }, additionalSettings);\n        return this.postCore({ body: JSON.stringify(addSettings) }).then(function (data) {\n            return { data: data, list: _this.getByTitle(addSettings.Title) };\n        });\n    };\n    /**\n     * Ensures that the specified list exists in the collection (note: this method not supported for batching)\n     *\n     * @param title The new list's title\n     * @param description The new list's description\n     * @param template The list template value\n     * @param enableContentTypes If true content types will be allowed and enabled, otherwise they will be disallowed and not enabled\n     * @param additionalSettings Will be passed as part of the list creation body or used to update an existing list\n     */\n    Lists.prototype.ensure = function (title, description, template, enableContentTypes, additionalSettings) {\n        var _this = this;\n        if (description === void 0) { description = \"\"; }\n        if (template === void 0) { template = 100; }\n        if (enableContentTypes === void 0) { enableContentTypes = false; }\n        if (additionalSettings === void 0) { additionalSettings = {}; }\n        if (this.hasBatch) {\n            throw new exceptions_1.NotSupportedInBatchException(\"The ensure list method\");\n        }\n        return new Promise(function (resolve, reject) {\n            var addOrUpdateSettings = util_1.Util.extend(additionalSettings, { Title: title, Description: description, ContentTypesEnabled: enableContentTypes }, true);\n            var list = _this.getByTitle(addOrUpdateSettings.Title);\n            list.get().then(function (_) {\n                list.update(addOrUpdateSettings).then(function (d) {\n                    resolve({ created: false, data: d, list: _this.getByTitle(addOrUpdateSettings.Title) });\n                }).catch(function (e) { return reject(e); });\n            }).catch(function (_) {\n                _this.add(title, description, template, enableContentTypes, addOrUpdateSettings).then(function (r) {\n                    resolve({ created: true, data: r.data, list: _this.getByTitle(addOrUpdateSettings.Title) });\n                }).catch(function (e) { return reject(e); });\n            });\n        });\n    };\n    /**\n     * Gets a list that is the default asset location for images or other files, which the users upload to their wiki pages.\n     */\n    Lists.prototype.ensureSiteAssetsLibrary = function () {\n        return this.clone(Lists, \"ensuresiteassetslibrary\", true).postCore().then(function (json) {\n            return new List(odata_1.extractOdataId(json));\n        });\n    };\n    /**\n     * Gets a list that is the default location for wiki pages.\n     */\n    Lists.prototype.ensureSitePagesLibrary = function () {\n        return this.clone(Lists, \"ensuresitepageslibrary\", true).postCore().then(function (json) {\n            return new List(odata_1.extractOdataId(json));\n        });\n    };\n    return Lists;\n}(queryable_1.QueryableCollection));\nexports.Lists = Lists;\n/**\n * Describes a single List instance\n *\n */\nvar List = (function (_super) {\n    __extends(List, _super);\n    function List() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(List.prototype, \"contentTypes\", {\n        /**\n         * Gets the content types in this list\n         *\n         */\n        get: function () {\n            return new contenttypes_1.ContentTypes(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"items\", {\n        /**\n         * Gets the items in this list\n         *\n         */\n        get: function () {\n            return new items_1.Items(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"views\", {\n        /**\n         * Gets the views in this list\n         *\n         */\n        get: function () {\n            return new views_1.Views(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"fields\", {\n        /**\n         * Gets the fields in this list\n         *\n         */\n        get: function () {\n            return new fields_1.Fields(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"forms\", {\n        /**\n         * Gets the forms in this list\n         *\n         */\n        get: function () {\n            return new forms_1.Forms(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"defaultView\", {\n        /**\n         * Gets the default view of this list\n         *\n         */\n        get: function () {\n            return new queryable_1.QueryableInstance(this, \"DefaultView\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"userCustomActions\", {\n        /**\n         * Get all custom actions on a site collection\n         *\n         */\n        get: function () {\n            return new usercustomactions_1.UserCustomActions(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"effectiveBasePermissions\", {\n        /**\n         * Gets the effective base permissions of this list\n         *\n         */\n        get: function () {\n            return new queryable_1.Queryable(this, \"EffectiveBasePermissions\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"eventReceivers\", {\n        /**\n         * Gets the event receivers attached to this list\n         *\n         */\n        get: function () {\n            return new queryable_1.QueryableCollection(this, \"EventReceivers\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"relatedFields\", {\n        /**\n         * Gets the related fields of this list\n         *\n         */\n        get: function () {\n            return new queryable_1.Queryable(this, \"getRelatedFields\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"informationRightsManagementSettings\", {\n        /**\n         * Gets the IRM settings for this list\n         *\n         */\n        get: function () {\n            return new queryable_1.Queryable(this, \"InformationRightsManagementSettings\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"subscriptions\", {\n        /**\n         * Gets the webhook subscriptions of this list\n         *\n         */\n        get: function () {\n            return new subscriptions_1.Subscriptions(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"rootFolder\", {\n        /**\n         * The root folder of the list\n         */\n        get: function () {\n            return new folders_1.Folder(this, \"rootFolder\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets a view by view guid id\n     *\n     */\n    List.prototype.getView = function (viewId) {\n        return new views_1.View(this, \"getView('\" + viewId + \"')\");\n    };\n    /**\n     * Updates this list intance with the supplied properties\n     *\n     * @param properties A plain object hash of values to update for the list\n     * @param eTag Value used in the IF-Match header, by default \"*\"\n     */\n    /* tslint:disable no-string-literal */\n    List.prototype.update = function (properties, eTag) {\n        var _this = this;\n        if (eTag === void 0) { eTag = \"*\"; }\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"__metadata\": { \"type\": \"SP.List\" },\n        }, properties));\n        return this.postCore({\n            body: postBody,\n            headers: {\n                \"IF-Match\": eTag,\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then(function (data) {\n            var retList = _this;\n            if (properties.hasOwnProperty(\"Title\")) {\n                retList = _this.getParent(List, _this.parentUrl, \"getByTitle('\" + properties[\"Title\"] + \"')\");\n            }\n            return {\n                data: data,\n                list: retList,\n            };\n        });\n    };\n    /* tslint:enable */\n    /**\n     * Delete this list\n     *\n     * @param eTag Value used in the IF-Match header, by default \"*\"\n     */\n    List.prototype.delete = function (eTag) {\n        if (eTag === void 0) { eTag = \"*\"; }\n        return this.postCore({\n            headers: {\n                \"IF-Match\": eTag,\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    /**\n     * Returns the collection of changes from the change log that have occurred within the list, based on the specified query.\n     */\n    List.prototype.getChanges = function (query) {\n        return this.clone(List, \"getchanges\", true).postCore({\n            body: JSON.stringify({ \"query\": util_1.Util.extend({ \"__metadata\": { \"type\": \"SP.ChangeQuery\" } }, query) }),\n        });\n    };\n    /**\n     * Returns a collection of items from the list based on the specified query.\n     *\n     * @param CamlQuery The Query schema of Collaborative Application Markup\n     * Language (CAML) is used in various ways within the context of Microsoft SharePoint Foundation\n     * to define queries against list data.\n     * see:\n     *\n     * https://msdn.microsoft.com/en-us/library/office/ms467521.aspx\n     *\n     * @param expands A URI with a $expand System Query Option indicates that Entries associated with\n     * the Entry or Collection of Entries identified by the Resource Path\n     * section of the URI must be represented inline (i.e. eagerly loaded).\n     * see:\n     *\n     * https://msdn.microsoft.com/en-us/library/office/fp142385.aspx\n     *\n     * http://www.odata.org/documentation/odata-version-2-0/uri-conventions/#ExpandSystemQueryOption\n     */\n    List.prototype.getItemsByCAMLQuery = function (query) {\n        var expands = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            expands[_i - 1] = arguments[_i];\n        }\n        var q = this.clone(List, \"getitems\", true);\n        return q.expand.apply(q, expands).postCore({\n            body: JSON.stringify({ \"query\": util_1.Util.extend({ \"__metadata\": { \"type\": \"SP.CamlQuery\" } }, query) }),\n        });\n    };\n    /**\n     * See: https://msdn.microsoft.com/en-us/library/office/dn292554.aspx\n     */\n    List.prototype.getListItemChangesSinceToken = function (query) {\n        return this.clone(List, \"getlistitemchangessincetoken\", true).postCore({\n            body: JSON.stringify({ \"query\": util_1.Util.extend({ \"__metadata\": { \"type\": \"SP.ChangeLogItemQuery\" } }, query) }),\n        }, { parse: function (r) { return r.text(); } });\n    };\n    /**\n     * Moves the list to the Recycle Bin and returns the identifier of the new Recycle Bin item.\n     */\n    List.prototype.recycle = function () {\n        return this.clone(List, \"recycle\", true).postCore().then(function (data) {\n            if (data.hasOwnProperty(\"Recycle\")) {\n                return data.Recycle;\n            }\n            else {\n                return data;\n            }\n        });\n    };\n    /**\n     * Renders list data based on the view xml provided\n     */\n    List.prototype.renderListData = function (viewXml) {\n        var q = this.clone(List, \"renderlistdata(@viewXml)\");\n        q.query.add(\"@viewXml\", \"'\" + viewXml + \"'\");\n        return q.postCore().then(function (data) {\n            // data will be a string, so we parse it again\n            data = JSON.parse(data);\n            if (data.hasOwnProperty(\"RenderListData\")) {\n                return data.RenderListData;\n            }\n            else {\n                return data;\n            }\n        });\n    };\n    /**\n     * Gets the field values and field schema attributes for a list item.\n     */\n    List.prototype.renderListFormData = function (itemId, formId, mode) {\n        return this.clone(List, \"renderlistformdata(itemid=\" + itemId + \", formid='\" + formId + \"', mode='\" + mode + \"')\", true).postCore().then(function (data) {\n            // data will be a string, so we parse it again\n            data = JSON.parse(data);\n            if (data.hasOwnProperty(\"ListData\")) {\n                return data.ListData;\n            }\n            else {\n                return data;\n            }\n        });\n    };\n    /**\n     * Reserves a list item ID for idempotent list item creation.\n     */\n    List.prototype.reserveListItemId = function () {\n        return this.clone(List, \"reservelistitemid\", true).postCore().then(function (data) {\n            if (data.hasOwnProperty(\"ReserveListItemId\")) {\n                return data.ReserveListItemId;\n            }\n            else {\n                return data;\n            }\n        });\n    };\n    /**\n     * Returns the ListItemEntityTypeFullName for this list, used when adding/updating list items. Does not support batching.\n     *\n     */\n    List.prototype.getListItemEntityTypeFullName = function () {\n        return this.clone(List, null).select(\"ListItemEntityTypeFullName\").getAs().then(function (o) { return o.ListItemEntityTypeFullName; });\n    };\n    return List;\n}(queryablesecurable_1.QueryableSecurable));\nexports.List = List;\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = __webpack_require__(1);\nvar queryableshareable_1 = __webpack_require__(12);\nvar folders_1 = __webpack_require__(14);\nvar files_1 = __webpack_require__(8);\nvar contenttypes_1 = __webpack_require__(18);\nvar util_1 = __webpack_require__(0);\nvar odata_1 = __webpack_require__(2);\nvar attachmentfiles_1 = __webpack_require__(39);\nvar lists_1 = __webpack_require__(10);\n/**\n * Describes a collection of Item objects\n *\n */\nvar Items = (function (_super) {\n    __extends(Items, _super);\n    /**\n     * Creates a new instance of the Items class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    function Items(baseUrl, path) {\n        if (path === void 0) { path = \"items\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets an Item by id\n     *\n     * @param id The integer id of the item to retrieve\n     */\n    Items.prototype.getById = function (id) {\n        var i = new Item(this);\n        i.concat(\"(\" + id + \")\");\n        return i;\n    };\n    /**\n     * Skips the specified number of items (https://msdn.microsoft.com/en-us/library/office/fp142385.aspx#sectionSection6)\n     *\n     * @param skip The starting id where the page should start, use with top to specify pages\n     */\n    Items.prototype.skip = function (skip) {\n        this._query.add(\"$skiptoken\", encodeURIComponent(\"Paged=TRUE&p_ID=\" + skip));\n        return this;\n    };\n    /**\n     * Gets a collection designed to aid in paging through data\n     *\n     */\n    Items.prototype.getPaged = function () {\n        return this.getAs(new PagedItemCollectionParser());\n    };\n    //\n    /**\n     * Adds a new item to the collection\n     *\n     * @param properties The new items's properties\n     */\n    Items.prototype.add = function (properties, listItemEntityTypeFullName) {\n        var _this = this;\n        if (properties === void 0) { properties = {}; }\n        if (listItemEntityTypeFullName === void 0) { listItemEntityTypeFullName = null; }\n        var removeDependency = this.addBatchDependency();\n        return this.ensureListItemEntityTypeName(listItemEntityTypeFullName).then(function (listItemEntityType) {\n            var postBody = JSON.stringify(util_1.Util.extend({\n                \"__metadata\": { \"type\": listItemEntityType },\n            }, properties));\n            var promise = _this.clone(Items, null, true).postAsCore({ body: postBody }).then(function (data) {\n                return {\n                    data: data,\n                    item: _this.getById(data.Id),\n                };\n            });\n            removeDependency();\n            return promise;\n        });\n    };\n    /**\n     * Ensures we have the proper list item entity type name, either from the value provided or from the list\n     *\n     * @param candidatelistItemEntityTypeFullName The potential type name\n     */\n    Items.prototype.ensureListItemEntityTypeName = function (candidatelistItemEntityTypeFullName) {\n        return candidatelistItemEntityTypeFullName ?\n            Promise.resolve(candidatelistItemEntityTypeFullName) :\n            this.getParent(lists_1.List).getListItemEntityTypeFullName();\n    };\n    return Items;\n}(queryable_1.QueryableCollection));\nexports.Items = Items;\n/**\n * Descrines a single Item instance\n *\n */\nvar Item = (function (_super) {\n    __extends(Item, _super);\n    function Item() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(Item.prototype, \"attachmentFiles\", {\n        /**\n         * Gets the set of attachments for this item\n         *\n         */\n        get: function () {\n            return new attachmentfiles_1.AttachmentFiles(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Item.prototype, \"contentType\", {\n        /**\n         * Gets the content type for this item\n         *\n         */\n        get: function () {\n            return new contenttypes_1.ContentType(this, \"ContentType\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Item.prototype, \"effectiveBasePermissions\", {\n        /**\n         * Gets the effective base permissions for the item\n         *\n         */\n        get: function () {\n            return new queryable_1.Queryable(this, \"EffectiveBasePermissions\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Item.prototype, \"effectiveBasePermissionsForUI\", {\n        /**\n         * Gets the effective base permissions for the item in a UI context\n         *\n         */\n        get: function () {\n            return new queryable_1.Queryable(this, \"EffectiveBasePermissionsForUI\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Item.prototype, \"fieldValuesAsHTML\", {\n        /**\n         * Gets the field values for this list item in their HTML representation\n         *\n         */\n        get: function () {\n            return new queryable_1.QueryableInstance(this, \"FieldValuesAsHTML\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Item.prototype, \"fieldValuesAsText\", {\n        /**\n         * Gets the field values for this list item in their text representation\n         *\n         */\n        get: function () {\n            return new queryable_1.QueryableInstance(this, \"FieldValuesAsText\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Item.prototype, \"fieldValuesForEdit\", {\n        /**\n         * Gets the field values for this list item for use in editing controls\n         *\n         */\n        get: function () {\n            return new queryable_1.QueryableInstance(this, \"FieldValuesForEdit\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Item.prototype, \"folder\", {\n        /**\n         * Gets the folder associated with this list item (if this item represents a folder)\n         *\n         */\n        get: function () {\n            return new folders_1.Folder(this, \"folder\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Item.prototype, \"file\", {\n        /**\n         * Gets the folder associated with this list item (if this item represents a folder)\n         *\n         */\n        get: function () {\n            return new files_1.File(this, \"file\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Updates this list intance with the supplied properties\n     *\n     * @param properties A plain object hash of values to update for the list\n     * @param eTag Value used in the IF-Match header, by default \"*\"\n     */\n    Item.prototype.update = function (properties, eTag) {\n        var _this = this;\n        if (eTag === void 0) { eTag = \"*\"; }\n        return new Promise(function (resolve, reject) {\n            var removeDependency = _this.addBatchDependency();\n            var parentList = _this.getParent(queryable_1.QueryableInstance, _this.parentUrl.substr(0, _this.parentUrl.lastIndexOf(\"/\")));\n            parentList.select(\"ListItemEntityTypeFullName\").getAs().then(function (d) {\n                var postBody = JSON.stringify(util_1.Util.extend({\n                    \"__metadata\": { \"type\": d.ListItemEntityTypeFullName },\n                }, properties));\n                removeDependency();\n                return _this.postCore({\n                    body: postBody,\n                    headers: {\n                        \"IF-Match\": eTag,\n                        \"X-HTTP-Method\": \"MERGE\",\n                    },\n                }, new ItemUpdatedParser()).then(function (data) {\n                    resolve({\n                        data: data,\n                        item: _this,\n                    });\n                });\n            }).catch(function (e) { return reject(e); });\n        });\n    };\n    /**\n     * Delete this item\n     *\n     * @param eTag Value used in the IF-Match header, by default \"*\"\n     */\n    Item.prototype.delete = function (eTag) {\n        if (eTag === void 0) { eTag = \"*\"; }\n        return this.postCore({\n            headers: {\n                \"IF-Match\": eTag,\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    /**\n     * Moves the list item to the Recycle Bin and returns the identifier of the new Recycle Bin item.\n     */\n    Item.prototype.recycle = function () {\n        return this.clone(Item, \"recycle\", true).postCore();\n    };\n    /**\n     * Gets a string representation of the full URL to the WOPI frame.\n     * If there is no associated WOPI application, or no associated action, an empty string is returned.\n     *\n     * @param action Display mode: 0: view, 1: edit, 2: mobileView, 3: interactivePreview\n     */\n    Item.prototype.getWopiFrameUrl = function (action) {\n        if (action === void 0) { action = 0; }\n        var i = this.clone(Item, \"getWOPIFrameUrl(@action)\", true);\n        i._query.add(\"@action\", action);\n        return i.postCore().then(function (data) {\n            // handle verbose mode\n            if (data.hasOwnProperty(\"GetWOPIFrameUrl\")) {\n                return data.GetWOPIFrameUrl;\n            }\n            return data;\n        });\n    };\n    /**\n     * Validates and sets the values of the specified collection of fields for the list item.\n     *\n     * @param formValues The fields to change and their new values.\n     * @param newDocumentUpdate true if the list item is a document being updated after upload; otherwise false.\n     */\n    Item.prototype.validateUpdateListItem = function (formValues, newDocumentUpdate) {\n        if (newDocumentUpdate === void 0) { newDocumentUpdate = false; }\n        return this.clone(Item, \"validateupdatelistitem\", true).postCore({\n            body: JSON.stringify({ \"formValues\": formValues, bNewDocumentUpdate: newDocumentUpdate }),\n        });\n    };\n    return Item;\n}(queryableshareable_1.QueryableShareableItem));\nexports.Item = Item;\n/**\n * Provides paging functionality for list items\n */\nvar PagedItemCollection = (function () {\n    function PagedItemCollection(nextUrl, results) {\n        this.nextUrl = nextUrl;\n        this.results = results;\n    }\n    Object.defineProperty(PagedItemCollection.prototype, \"hasNext\", {\n        /**\n         * If true there are more results available in the set, otherwise there are not\n         */\n        get: function () {\n            return typeof this.nextUrl === \"string\" && this.nextUrl.length > 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the next set of results, or resolves to null if no results are available\n     */\n    PagedItemCollection.prototype.getNext = function () {\n        if (this.hasNext) {\n            var items = new Items(this.nextUrl, null);\n            return items.getPaged();\n        }\n        return new Promise(function (r) { return r(null); });\n    };\n    return PagedItemCollection;\n}());\nexports.PagedItemCollection = PagedItemCollection;\nvar PagedItemCollectionParser = (function (_super) {\n    __extends(PagedItemCollectionParser, _super);\n    function PagedItemCollectionParser() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    PagedItemCollectionParser.prototype.parse = function (r) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            if (_this.handleError(r, reject)) {\n                r.json().then(function (json) {\n                    var nextUrl = json.hasOwnProperty(\"d\") && json.d.hasOwnProperty(\"__next\") ? json.d.__next : json[\"odata.nextLink\"];\n                    resolve(new PagedItemCollection(nextUrl, _this.parseODataJSON(json)));\n                });\n            }\n        });\n    };\n    return PagedItemCollectionParser;\n}(odata_1.ODataParserBase));\nvar ItemUpdatedParser = (function (_super) {\n    __extends(ItemUpdatedParser, _super);\n    function ItemUpdatedParser() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ItemUpdatedParser.prototype.parse = function (r) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            if (_this.handleError(r, reject)) {\n                resolve({\n                    \"odata.etag\": r.headers.get(\"etag\"),\n                });\n            }\n        });\n    };\n    return ItemUpdatedParser;\n}(odata_1.ODataParserBase));\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = __webpack_require__(0);\nvar webs_1 = __webpack_require__(7);\nvar odata_1 = __webpack_require__(2);\nvar queryable_1 = __webpack_require__(1);\nvar queryablesecurable_1 = __webpack_require__(26);\nvar types_1 = __webpack_require__(13);\n/**\n * Internal helper class used to augment classes to include sharing functionality\n */\nvar QueryableShareable = (function (_super) {\n    __extends(QueryableShareable, _super);\n    function QueryableShareable() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Gets a sharing link for the supplied\n     *\n     * @param kind The kind of link to share\n     * @param expiration The optional expiration for this link\n     */\n    QueryableShareable.prototype.getShareLink = function (kind, expiration) {\n        if (expiration === void 0) { expiration = null; }\n        // date needs to be an ISO string or null\n        var expString = expiration !== null ? expiration.toISOString() : null;\n        // clone using the factory and send the request\n        return this.clone(QueryableShareable, \"shareLink\", true).postAsCore({\n            body: JSON.stringify({\n                request: {\n                    createLink: true,\n                    emailData: null,\n                    settings: {\n                        expiration: expString,\n                        linkKind: kind,\n                    },\n                },\n            }),\n        });\n    };\n    /**\n     * Shares this instance with the supplied users\n     *\n     * @param loginNames Resolved login names to share\n     * @param role The role\n     * @param requireSignin True to require the user is authenticated, otherwise false\n     * @param propagateAcl True to apply this share to all children\n     * @param emailData If supplied an email will be sent with the indicated properties\n     */\n    QueryableShareable.prototype.shareWith = function (loginNames, role, requireSignin, propagateAcl, emailData) {\n        var _this = this;\n        if (requireSignin === void 0) { requireSignin = false; }\n        if (propagateAcl === void 0) { propagateAcl = false; }\n        // handle the multiple input types\n        if (!Array.isArray(loginNames)) {\n            loginNames = [loginNames];\n        }\n        var userStr = JSON.stringify(loginNames.map(function (login) { return { Key: login }; }));\n        var roleFilter = role === types_1.SharingRole.Edit ? types_1.RoleType.Contributor : types_1.RoleType.Reader;\n        // start by looking up the role definition id we need to set the roleValue\n        return webs_1.Web.fromUrl(this.toUrl()).roleDefinitions.select(\"Id\").filter(\"RoleTypeKind eq \" + roleFilter).get().then(function (def) {\n            if (!Array.isArray(def) || def.length < 1) {\n                throw new Error(\"Could not locate a role defintion with RoleTypeKind \" + roleFilter);\n            }\n            var postBody = {\n                includeAnonymousLinkInEmail: requireSignin,\n                peoplePickerInput: userStr,\n                propagateAcl: propagateAcl,\n                roleValue: \"role:\" + def[0].Id,\n                useSimplifiedRoles: true,\n            };\n            if (typeof emailData !== \"undefined\") {\n                postBody = util_1.Util.extend(postBody, {\n                    emailBody: emailData.body,\n                    emailSubject: typeof emailData.subject !== \"undefined\" ? emailData.subject : \"\",\n                    sendEmail: true,\n                });\n            }\n            return _this.clone(QueryableShareable, \"shareObject\", true).postAsCore({\n                body: JSON.stringify(postBody),\n            });\n        });\n    };\n    /**\n     * Shares an object based on the supplied options\n     *\n     * @param options The set of options to send to the ShareObject method\n     * @param bypass If true any processing is skipped and the options are sent directly to the ShareObject method\n     */\n    QueryableShareable.prototype.shareObject = function (options, bypass) {\n        var _this = this;\n        if (bypass === void 0) { bypass = false; }\n        if (bypass) {\n            // if the bypass flag is set send the supplied parameters directly to the service\n            return this.sendShareObjectRequest(options);\n        }\n        // extend our options with some defaults\n        options = util_1.Util.extend(options, {\n            group: null,\n            includeAnonymousLinkInEmail: false,\n            propagateAcl: false,\n            useSimplifiedRoles: true,\n        }, true);\n        return this.getRoleValue(options.role, options.group).then(function (roleValue) {\n            // handle the multiple input types\n            if (!Array.isArray(options.loginNames)) {\n                options.loginNames = [options.loginNames];\n            }\n            var userStr = JSON.stringify(options.loginNames.map(function (login) { return { Key: login }; }));\n            var postBody = {\n                peoplePickerInput: userStr,\n                roleValue: roleValue,\n                url: options.url,\n            };\n            if (typeof options.emailData !== \"undefined\" && options.emailData !== null) {\n                postBody = util_1.Util.extend(postBody, {\n                    emailBody: options.emailData.body,\n                    emailSubject: typeof options.emailData.subject !== \"undefined\" ? options.emailData.subject : \"Shared with you.\",\n                    sendEmail: true,\n                });\n            }\n            return _this.sendShareObjectRequest(postBody);\n        });\n    };\n    /**\n     * Calls the web's UnshareObject method\n     *\n     * @param url The url of the object to unshare\n     */\n    QueryableShareable.prototype.unshareObjectWeb = function (url) {\n        return this.clone(QueryableShareable, \"unshareObject\", true).postAsCore({\n            body: JSON.stringify({\n                url: url,\n            }),\n        });\n    };\n    /**\n     * Checks Permissions on the list of Users and returns back role the users have on the Item.\n     *\n     * @param recipients The array of Entities for which Permissions need to be checked.\n     */\n    QueryableShareable.prototype.checkPermissions = function (recipients) {\n        return this.clone(QueryableShareable, \"checkPermissions\", true).postAsCore({\n            body: JSON.stringify({\n                recipients: recipients,\n            }),\n        });\n    };\n    /**\n     * Get Sharing Information.\n     *\n     * @param request The SharingInformationRequest Object.\n     */\n    QueryableShareable.prototype.getSharingInformation = function (request) {\n        if (request === void 0) { request = null; }\n        return this.clone(QueryableShareable, \"getSharingInformation\", true).postAsCore({\n            body: JSON.stringify({\n                request: request,\n            }),\n        });\n    };\n    /**\n     * Gets the sharing settings of an item.\n     *\n     * @param useSimplifiedRoles Determines whether to use simplified roles.\n     */\n    QueryableShareable.prototype.getObjectSharingSettings = function (useSimplifiedRoles) {\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\n        return this.clone(QueryableShareable, \"getObjectSharingSettings\", true).postAsCore({\n            body: JSON.stringify({\n                useSimplifiedRoles: useSimplifiedRoles,\n            }),\n        });\n    };\n    /**\n     * Unshares this object\n     */\n    QueryableShareable.prototype.unshareObject = function () {\n        return this.clone(QueryableShareable, \"unshareObject\", true).postAsCore();\n    };\n    /**\n     * Deletes a link by type\n     *\n     * @param kind Deletes a sharing link by the kind of link\n     */\n    QueryableShareable.prototype.deleteLinkByKind = function (kind) {\n        return this.clone(QueryableShareable, \"deleteLinkByKind\", true).postCore({\n            body: JSON.stringify({ linkKind: kind }),\n        });\n    };\n    /**\n     * Removes the specified link to the item.\n     *\n     * @param kind The kind of link to be deleted.\n     * @param shareId\n     */\n    QueryableShareable.prototype.unshareLink = function (kind, shareId) {\n        if (shareId === void 0) { shareId = \"00000000-0000-0000-0000-000000000000\"; }\n        return this.clone(QueryableShareable, \"unshareLink\", true).postCore({\n            body: JSON.stringify({ linkKind: kind, shareId: shareId }),\n        });\n    };\n    /**\n     * Calculates the roleValue string used in the sharing query\n     *\n     * @param role The Sharing Role\n     * @param group The Group type\n     */\n    QueryableShareable.prototype.getRoleValue = function (role, group) {\n        // we will give group precedence, because we had to make a choice\n        if (typeof group !== \"undefined\" && group !== null) {\n            switch (group) {\n                case types_1.RoleType.Contributor:\n                    return webs_1.Web.fromUrl(this.toUrl()).associatedMemberGroup.select(\"Id\").getAs().then(function (g) { return \"group: \" + g.Id; });\n                case types_1.RoleType.Reader:\n                case types_1.RoleType.Guest:\n                    return webs_1.Web.fromUrl(this.toUrl()).associatedVisitorGroup.select(\"Id\").getAs().then(function (g) { return \"group: \" + g.Id; });\n                default:\n                    throw new Error(\"Could not determine role value for supplied value. Contributor, Reader, and Guest are supported\");\n            }\n        }\n        else {\n            var roleFilter = role === types_1.SharingRole.Edit ? types_1.RoleType.Contributor : types_1.RoleType.Reader;\n            return webs_1.Web.fromUrl(this.toUrl()).roleDefinitions.select(\"Id\").top(1).filter(\"RoleTypeKind eq \" + roleFilter).getAs().then(function (def) {\n                if (def.length < 1) {\n                    throw new Error(\"Could not locate associated role definition for supplied role. Edit and View are supported\");\n                }\n                return \"role: \" + def[0].Id;\n            });\n        }\n    };\n    QueryableShareable.prototype.getShareObjectWeb = function (candidate) {\n        return Promise.resolve(webs_1.Web.fromUrl(candidate, \"/_api/SP.Web.ShareObject\"));\n    };\n    QueryableShareable.prototype.sendShareObjectRequest = function (options) {\n        return this.getShareObjectWeb(this.toUrl()).then(function (web) {\n            return web.expand(\"UsersWithAccessRequests\", \"GroupsSharedWith\").as(QueryableShareable).postCore({\n                body: JSON.stringify(options),\n            });\n        });\n    };\n    return QueryableShareable;\n}(queryable_1.Queryable));\nexports.QueryableShareable = QueryableShareable;\nvar QueryableShareableWeb = (function (_super) {\n    __extends(QueryableShareableWeb, _super);\n    function QueryableShareableWeb() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Shares this web with the supplied users\n     * @param loginNames The resolved login names to share\n     * @param role The role to share this web\n     * @param emailData Optional email data\n     */\n    QueryableShareableWeb.prototype.shareWith = function (loginNames, role, emailData) {\n        var _this = this;\n        if (role === void 0) { role = types_1.SharingRole.View; }\n        var dependency = this.addBatchDependency();\n        return webs_1.Web.fromUrl(this.toUrl(), \"/_api/web/url\").get().then(function (url) {\n            dependency();\n            return _this.shareObject(util_1.Util.combinePaths(url, \"/_layouts/15/aclinv.aspx?forSharing=1&mbypass=1\"), loginNames, role, emailData);\n        });\n    };\n    /**\n     * Provides direct access to the static web.ShareObject method\n     *\n     * @param url The url to share\n     * @param loginNames Resolved loginnames string[] of a single login name string\n     * @param roleValue Role value\n     * @param emailData Optional email data\n     * @param groupId Optional group id\n     * @param propagateAcl\n     * @param includeAnonymousLinkInEmail\n     * @param useSimplifiedRoles\n     */\n    QueryableShareableWeb.prototype.shareObject = function (url, loginNames, role, emailData, group, propagateAcl, includeAnonymousLinkInEmail, useSimplifiedRoles) {\n        if (propagateAcl === void 0) { propagateAcl = false; }\n        if (includeAnonymousLinkInEmail === void 0) { includeAnonymousLinkInEmail = false; }\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\n        return this.clone(QueryableShareable, null, true).shareObject({\n            emailData: emailData,\n            group: group,\n            includeAnonymousLinkInEmail: includeAnonymousLinkInEmail,\n            loginNames: loginNames,\n            propagateAcl: propagateAcl,\n            role: role,\n            url: url,\n            useSimplifiedRoles: useSimplifiedRoles,\n        });\n    };\n    /**\n     * Supplies a method to pass any set of arguments to ShareObject\n     *\n     * @param options The set of options to send to ShareObject\n     */\n    QueryableShareableWeb.prototype.shareObjectRaw = function (options) {\n        return this.clone(QueryableShareable, null, true).shareObject(options, true);\n    };\n    /**\n     * Unshares the object\n     *\n     * @param url The url of the object to stop sharing\n     */\n    QueryableShareableWeb.prototype.unshareObject = function (url) {\n        return this.clone(QueryableShareable, null, true).unshareObjectWeb(url);\n    };\n    return QueryableShareableWeb;\n}(queryablesecurable_1.QueryableSecurable));\nexports.QueryableShareableWeb = QueryableShareableWeb;\nvar QueryableShareableItem = (function (_super) {\n    __extends(QueryableShareableItem, _super);\n    function QueryableShareableItem() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Gets a link suitable for sharing for this item\n     *\n     * @param kind The type of link to share\n     * @param expiration The optional expiration date\n     */\n    QueryableShareableItem.prototype.getShareLink = function (kind, expiration) {\n        if (kind === void 0) { kind = types_1.SharingLinkKind.OrganizationView; }\n        if (expiration === void 0) { expiration = null; }\n        return this.clone(QueryableShareable, null, true).getShareLink(kind, expiration);\n    };\n    /**\n     * Shares this item with one or more users\n     *\n     * @param loginNames string or string[] of resolved login names to which this item will be shared\n     * @param role The role (View | Edit) applied to the share\n     * @param emailData Optional, if inlucded an email will be sent. Note subject currently has no effect.\n     */\n    QueryableShareableItem.prototype.shareWith = function (loginNames, role, requireSignin, emailData) {\n        if (role === void 0) { role = types_1.SharingRole.View; }\n        if (requireSignin === void 0) { requireSignin = false; }\n        return this.clone(QueryableShareable, null, true).shareWith(loginNames, role, requireSignin, false, emailData);\n    };\n    /**\n     * Checks Permissions on the list of Users and returns back role the users have on the Item.\n     *\n     * @param recipients The array of Entities for which Permissions need to be checked.\n     */\n    QueryableShareableItem.prototype.checkSharingPermissions = function (recipients) {\n        return this.clone(QueryableShareable, null, true).checkPermissions(recipients);\n    };\n    /**\n     * Get Sharing Information.\n     *\n     * @param request The SharingInformationRequest Object.\n     */\n    QueryableShareableItem.prototype.getSharingInformation = function (request) {\n        if (request === void 0) { request = null; }\n        return this.clone(QueryableShareable, null, true).getSharingInformation(request);\n    };\n    /**\n     * Gets the sharing settings of an item.\n     *\n     * @param useSimplifiedRoles Determines whether to use simplified roles.\n     */\n    QueryableShareableItem.prototype.getObjectSharingSettings = function (useSimplifiedRoles) {\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\n        return this.clone(QueryableShareable, null, true).getObjectSharingSettings(useSimplifiedRoles);\n    };\n    /**\n     * Unshare this item\n     */\n    QueryableShareableItem.prototype.unshare = function () {\n        return this.clone(QueryableShareable, null, true).unshareObject();\n    };\n    /**\n     * Deletes a sharing link by kind\n     *\n     * @param kind Deletes a sharing link by the kind of link\n     */\n    QueryableShareableItem.prototype.deleteSharingLinkByKind = function (kind) {\n        return this.clone(QueryableShareable, null, true).deleteLinkByKind(kind);\n    };\n    /**\n     * Removes the specified link to the item.\n     *\n     * @param kind The kind of link to be deleted.\n     * @param shareId\n     */\n    QueryableShareableItem.prototype.unshareLink = function (kind, shareId) {\n        return this.clone(QueryableShareable, null, true).unshareLink(kind, shareId);\n    };\n    return QueryableShareableItem;\n}(queryablesecurable_1.QueryableSecurable));\nexports.QueryableShareableItem = QueryableShareableItem;\nvar FileFolderShared = (function (_super) {\n    __extends(FileFolderShared, _super);\n    function FileFolderShared() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Gets a link suitable for sharing\n     *\n     * @param kind The kind of link to get\n     * @param expiration Optional, an expiration for this link\n     */\n    FileFolderShared.prototype.getShareLink = function (kind, expiration) {\n        if (kind === void 0) { kind = types_1.SharingLinkKind.OrganizationView; }\n        if (expiration === void 0) { expiration = null; }\n        var dependency = this.addBatchDependency();\n        return this.getShareable().then(function (shareable) {\n            dependency();\n            return shareable.getShareLink(kind, expiration);\n        });\n    };\n    /**\n         * Checks Permissions on the list of Users and returns back role the users have on the Item.\n         *\n         * @param recipients The array of Entities for which Permissions need to be checked.\n         */\n    FileFolderShared.prototype.checkSharingPermissions = function (recipients) {\n        var dependency = this.addBatchDependency();\n        return this.getShareable().then(function (shareable) {\n            dependency();\n            return shareable.checkPermissions(recipients);\n        });\n    };\n    /**\n     * Get Sharing Information.\n     *\n     * @param request The SharingInformationRequest Object.\n     */\n    FileFolderShared.prototype.getSharingInformation = function (request) {\n        if (request === void 0) { request = null; }\n        var dependency = this.addBatchDependency();\n        return this.getShareable().then(function (shareable) {\n            dependency();\n            return shareable.getSharingInformation(request);\n        });\n    };\n    /**\n     * Gets the sharing settings of an item.\n     *\n     * @param useSimplifiedRoles Determines whether to use simplified roles.\n     */\n    FileFolderShared.prototype.getObjectSharingSettings = function (useSimplifiedRoles) {\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\n        var dependency = this.addBatchDependency();\n        return this.getShareable().then(function (shareable) {\n            dependency();\n            return shareable.getObjectSharingSettings(useSimplifiedRoles);\n        });\n    };\n    /**\n     * Unshare this item\n     */\n    FileFolderShared.prototype.unshare = function () {\n        var dependency = this.addBatchDependency();\n        return this.getShareable().then(function (shareable) {\n            dependency();\n            return shareable.unshareObject();\n        });\n    };\n    /**\n     * Deletes a sharing link by the kind of link\n     *\n     * @param kind The kind of link to be deleted.\n     */\n    FileFolderShared.prototype.deleteSharingLinkByKind = function (kind) {\n        var dependency = this.addBatchDependency();\n        return this.getShareable().then(function (shareable) {\n            dependency();\n            return shareable.deleteLinkByKind(kind);\n        });\n    };\n    /**\n     * Removes the specified link to the item.\n     *\n     * @param kind The kind of link to be deleted.\n     * @param shareId The share id to delete\n     */\n    FileFolderShared.prototype.unshareLink = function (kind, shareId) {\n        var dependency = this.addBatchDependency();\n        return this.getShareable().then(function (shareable) {\n            dependency();\n            return shareable.unshareLink(kind, shareId);\n        });\n    };\n    /**\n     * For files and folders we need to use the associated item end point\n     */\n    FileFolderShared.prototype.getShareable = function () {\n        var _this = this;\n        // sharing only works on the item end point, not the file one - so we create a folder instance with the item url internally\n        return this.clone(QueryableShareableFile, \"listItemAllFields\", false).select(\"odata.editlink\").get().then(function (d) {\n            var shareable = new QueryableShareable(odata_1.getEntityUrl(d));\n            // we need to handle batching\n            if (_this.hasBatch) {\n                shareable = shareable.inBatch(_this.batch);\n            }\n            return shareable;\n        });\n    };\n    return FileFolderShared;\n}(queryable_1.QueryableInstance));\nexports.FileFolderShared = FileFolderShared;\nvar QueryableShareableFile = (function (_super) {\n    __extends(QueryableShareableFile, _super);\n    function QueryableShareableFile() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Shares this item with one or more users\n     *\n     * @param loginNames string or string[] of resolved login names to which this item will be shared\n     * @param role The role (View | Edit) applied to the share\n     * @param shareEverything Share everything in this folder, even items with unique permissions.\n     * @param requireSignin If true the user must signin to view link, otherwise anyone with the link can access the resource\n     * @param emailData Optional, if inlucded an email will be sent. Note subject currently has no effect.\n     */\n    QueryableShareableFile.prototype.shareWith = function (loginNames, role, requireSignin, emailData) {\n        if (role === void 0) { role = types_1.SharingRole.View; }\n        if (requireSignin === void 0) { requireSignin = false; }\n        var dependency = this.addBatchDependency();\n        return this.getShareable().then(function (shareable) {\n            dependency();\n            return shareable.shareWith(loginNames, role, requireSignin, false, emailData);\n        });\n    };\n    return QueryableShareableFile;\n}(FileFolderShared));\nexports.QueryableShareableFile = QueryableShareableFile;\nvar QueryableShareableFolder = (function (_super) {\n    __extends(QueryableShareableFolder, _super);\n    function QueryableShareableFolder() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Shares this item with one or more users\n     *\n     * @param loginNames string or string[] of resolved login names to which this item will be shared\n     * @param role The role (View | Edit) applied to the share\n     * @param shareEverything Share everything in this folder, even items with unique permissions.\n     * @param requireSignin If true the user must signin to view link, otherwise anyone with the link can access the resource\n     * @param emailData Optional, if inlucded an email will be sent. Note subject currently has no effect.\n     */\n    QueryableShareableFolder.prototype.shareWith = function (loginNames, role, requireSignin, shareEverything, emailData) {\n        if (role === void 0) { role = types_1.SharingRole.View; }\n        if (requireSignin === void 0) { requireSignin = false; }\n        if (shareEverything === void 0) { shareEverything = false; }\n        var dependency = this.addBatchDependency();\n        return this.getShareable().then(function (shareable) {\n            dependency();\n            return shareable.shareWith(loginNames, role, requireSignin, shareEverything, emailData);\n        });\n    };\n    return QueryableShareableFolder;\n}(FileFolderShared));\nexports.QueryableShareableFolder = QueryableShareableFolder;\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// reference: https://msdn.microsoft.com/en-us/library/office/dn600183.aspx\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Determines the display mode of the given control or view\n */\nvar ControlMode;\n(function (ControlMode) {\n    ControlMode[ControlMode[\"Display\"] = 1] = \"Display\";\n    ControlMode[ControlMode[\"Edit\"] = 2] = \"Edit\";\n    ControlMode[ControlMode[\"New\"] = 3] = \"New\";\n})(ControlMode = exports.ControlMode || (exports.ControlMode = {}));\n/**\n * Specifies the type of the field.\n */\nvar FieldTypes;\n(function (FieldTypes) {\n    FieldTypes[FieldTypes[\"Invalid\"] = 0] = \"Invalid\";\n    FieldTypes[FieldTypes[\"Integer\"] = 1] = \"Integer\";\n    FieldTypes[FieldTypes[\"Text\"] = 2] = \"Text\";\n    FieldTypes[FieldTypes[\"Note\"] = 3] = \"Note\";\n    FieldTypes[FieldTypes[\"DateTime\"] = 4] = \"DateTime\";\n    FieldTypes[FieldTypes[\"Counter\"] = 5] = \"Counter\";\n    FieldTypes[FieldTypes[\"Choice\"] = 6] = \"Choice\";\n    FieldTypes[FieldTypes[\"Lookup\"] = 7] = \"Lookup\";\n    FieldTypes[FieldTypes[\"Boolean\"] = 8] = \"Boolean\";\n    FieldTypes[FieldTypes[\"Number\"] = 9] = \"Number\";\n    FieldTypes[FieldTypes[\"Currency\"] = 10] = \"Currency\";\n    FieldTypes[FieldTypes[\"URL\"] = 11] = \"URL\";\n    FieldTypes[FieldTypes[\"Computed\"] = 12] = \"Computed\";\n    FieldTypes[FieldTypes[\"Threading\"] = 13] = \"Threading\";\n    FieldTypes[FieldTypes[\"Guid\"] = 14] = \"Guid\";\n    FieldTypes[FieldTypes[\"MultiChoice\"] = 15] = \"MultiChoice\";\n    FieldTypes[FieldTypes[\"GridChoice\"] = 16] = \"GridChoice\";\n    FieldTypes[FieldTypes[\"Calculated\"] = 17] = \"Calculated\";\n    FieldTypes[FieldTypes[\"File\"] = 18] = \"File\";\n    FieldTypes[FieldTypes[\"Attachments\"] = 19] = \"Attachments\";\n    FieldTypes[FieldTypes[\"User\"] = 20] = \"User\";\n    FieldTypes[FieldTypes[\"Recurrence\"] = 21] = \"Recurrence\";\n    FieldTypes[FieldTypes[\"CrossProjectLink\"] = 22] = \"CrossProjectLink\";\n    FieldTypes[FieldTypes[\"ModStat\"] = 23] = \"ModStat\";\n    FieldTypes[FieldTypes[\"Error\"] = 24] = \"Error\";\n    FieldTypes[FieldTypes[\"ContentTypeId\"] = 25] = \"ContentTypeId\";\n    FieldTypes[FieldTypes[\"PageSeparator\"] = 26] = \"PageSeparator\";\n    FieldTypes[FieldTypes[\"ThreadIndex\"] = 27] = \"ThreadIndex\";\n    FieldTypes[FieldTypes[\"WorkflowStatus\"] = 28] = \"WorkflowStatus\";\n    FieldTypes[FieldTypes[\"AllDayEvent\"] = 29] = \"AllDayEvent\";\n    FieldTypes[FieldTypes[\"WorkflowEventType\"] = 30] = \"WorkflowEventType\";\n})(FieldTypes = exports.FieldTypes || (exports.FieldTypes = {}));\nvar DateTimeFieldFormatType;\n(function (DateTimeFieldFormatType) {\n    DateTimeFieldFormatType[DateTimeFieldFormatType[\"DateOnly\"] = 0] = \"DateOnly\";\n    DateTimeFieldFormatType[DateTimeFieldFormatType[\"DateTime\"] = 1] = \"DateTime\";\n})(DateTimeFieldFormatType = exports.DateTimeFieldFormatType || (exports.DateTimeFieldFormatType = {}));\n/**\n * Specifies the control settings while adding a field.\n */\nvar AddFieldOptions;\n(function (AddFieldOptions) {\n    /**\n     *  Specify that a new field added to the list must also be added to the default content type in the site collection\n     */\n    AddFieldOptions[AddFieldOptions[\"DefaultValue\"] = 0] = \"DefaultValue\";\n    /**\n     * Specify that a new field added to the list must also be added to the default content type in the site collection.\n     */\n    AddFieldOptions[AddFieldOptions[\"AddToDefaultContentType\"] = 1] = \"AddToDefaultContentType\";\n    /**\n     * Specify that a new field must not be added to any other content type\n     */\n    AddFieldOptions[AddFieldOptions[\"AddToNoContentType\"] = 2] = \"AddToNoContentType\";\n    /**\n     *  Specify that a new field that is added to the specified list must also be added to all content types in the site collection\n     */\n    AddFieldOptions[AddFieldOptions[\"AddToAllContentTypes\"] = 4] = \"AddToAllContentTypes\";\n    /**\n     * Specify adding an internal field name hint for the purpose of avoiding possible database locking or field renaming operations\n     */\n    AddFieldOptions[AddFieldOptions[\"AddFieldInternalNameHint\"] = 8] = \"AddFieldInternalNameHint\";\n    /**\n     * Specify that a new field that is added to the specified list must also be added to the default list view\n     */\n    AddFieldOptions[AddFieldOptions[\"AddFieldToDefaultView\"] = 16] = \"AddFieldToDefaultView\";\n    /**\n     * Specify to confirm that no other field has the same display name\n     */\n    AddFieldOptions[AddFieldOptions[\"AddFieldCheckDisplayName\"] = 32] = \"AddFieldCheckDisplayName\";\n})(AddFieldOptions = exports.AddFieldOptions || (exports.AddFieldOptions = {}));\nvar CalendarType;\n(function (CalendarType) {\n    CalendarType[CalendarType[\"Gregorian\"] = 1] = \"Gregorian\";\n    CalendarType[CalendarType[\"Japan\"] = 3] = \"Japan\";\n    CalendarType[CalendarType[\"Taiwan\"] = 4] = \"Taiwan\";\n    CalendarType[CalendarType[\"Korea\"] = 5] = \"Korea\";\n    CalendarType[CalendarType[\"Hijri\"] = 6] = \"Hijri\";\n    CalendarType[CalendarType[\"Thai\"] = 7] = \"Thai\";\n    CalendarType[CalendarType[\"Hebrew\"] = 8] = \"Hebrew\";\n    CalendarType[CalendarType[\"GregorianMEFrench\"] = 9] = \"GregorianMEFrench\";\n    CalendarType[CalendarType[\"GregorianArabic\"] = 10] = \"GregorianArabic\";\n    CalendarType[CalendarType[\"GregorianXLITEnglish\"] = 11] = \"GregorianXLITEnglish\";\n    CalendarType[CalendarType[\"GregorianXLITFrench\"] = 12] = \"GregorianXLITFrench\";\n    CalendarType[CalendarType[\"KoreaJapanLunar\"] = 14] = \"KoreaJapanLunar\";\n    CalendarType[CalendarType[\"ChineseLunar\"] = 15] = \"ChineseLunar\";\n    CalendarType[CalendarType[\"SakaEra\"] = 16] = \"SakaEra\";\n    CalendarType[CalendarType[\"UmAlQura\"] = 23] = \"UmAlQura\";\n})(CalendarType = exports.CalendarType || (exports.CalendarType = {}));\nvar UrlFieldFormatType;\n(function (UrlFieldFormatType) {\n    UrlFieldFormatType[UrlFieldFormatType[\"Hyperlink\"] = 0] = \"Hyperlink\";\n    UrlFieldFormatType[UrlFieldFormatType[\"Image\"] = 1] = \"Image\";\n})(UrlFieldFormatType = exports.UrlFieldFormatType || (exports.UrlFieldFormatType = {}));\nvar PermissionKind;\n(function (PermissionKind) {\n    /**\n     * Has no permissions on the Site. Not available through the user interface.\n     */\n    PermissionKind[PermissionKind[\"EmptyMask\"] = 0] = \"EmptyMask\";\n    /**\n     * View items in lists, documents in document libraries, and Web discussion comments.\n     */\n    PermissionKind[PermissionKind[\"ViewListItems\"] = 1] = \"ViewListItems\";\n    /**\n     * Add items to lists, documents to document libraries, and Web discussion comments.\n     */\n    PermissionKind[PermissionKind[\"AddListItems\"] = 2] = \"AddListItems\";\n    /**\n     * Edit items in lists, edit documents in document libraries, edit Web discussion comments\n     * in documents, and customize Web Part Pages in document libraries.\n     */\n    PermissionKind[PermissionKind[\"EditListItems\"] = 3] = \"EditListItems\";\n    /**\n     * Delete items from a list, documents from a document library, and Web discussion\n     * comments in documents.\n     */\n    PermissionKind[PermissionKind[\"DeleteListItems\"] = 4] = \"DeleteListItems\";\n    /**\n     * Approve a minor version of a list item or document.\n     */\n    PermissionKind[PermissionKind[\"ApproveItems\"] = 5] = \"ApproveItems\";\n    /**\n     * View the source of documents with server-side file handlers.\n     */\n    PermissionKind[PermissionKind[\"OpenItems\"] = 6] = \"OpenItems\";\n    /**\n     * View past versions of a list item or document.\n     */\n    PermissionKind[PermissionKind[\"ViewVersions\"] = 7] = \"ViewVersions\";\n    /**\n     * Delete past versions of a list item or document.\n     */\n    PermissionKind[PermissionKind[\"DeleteVersions\"] = 8] = \"DeleteVersions\";\n    /**\n     * Discard or check in a document which is checked out to another user.\n     */\n    PermissionKind[PermissionKind[\"CancelCheckout\"] = 9] = \"CancelCheckout\";\n    /**\n     * Create, change, and delete personal views of lists.\n     */\n    PermissionKind[PermissionKind[\"ManagePersonalViews\"] = 10] = \"ManagePersonalViews\";\n    /**\n     * Create and delete lists, add or remove columns in a list, and add or remove public views of a list.\n     */\n    PermissionKind[PermissionKind[\"ManageLists\"] = 12] = \"ManageLists\";\n    /**\n     * View forms, views, and application pages, and enumerate lists.\n     */\n    PermissionKind[PermissionKind[\"ViewFormPages\"] = 13] = \"ViewFormPages\";\n    /**\n     * Make content of a list or document library retrieveable for anonymous users through SharePoint search.\n     * The list permissions in the site do not change.\n     */\n    PermissionKind[PermissionKind[\"AnonymousSearchAccessList\"] = 14] = \"AnonymousSearchAccessList\";\n    /**\n     * Allow users to open a Site, list, or folder to access items inside that container.\n     */\n    PermissionKind[PermissionKind[\"Open\"] = 17] = \"Open\";\n    /**\n     * View pages in a Site.\n     */\n    PermissionKind[PermissionKind[\"ViewPages\"] = 18] = \"ViewPages\";\n    /**\n     * Add, change, or delete HTML pages or Web Part Pages, and edit the Site using\n     * a Windows SharePoint Services compatible editor.\n     */\n    PermissionKind[PermissionKind[\"AddAndCustomizePages\"] = 19] = \"AddAndCustomizePages\";\n    /**\n     * Apply a theme or borders to the entire Site.\n     */\n    PermissionKind[PermissionKind[\"ApplyThemeAndBorder\"] = 20] = \"ApplyThemeAndBorder\";\n    /**\n     * Apply a style sheet (.css file) to the Site.\n     */\n    PermissionKind[PermissionKind[\"ApplyStyleSheets\"] = 21] = \"ApplyStyleSheets\";\n    /**\n     * View reports on Site usage.\n     */\n    PermissionKind[PermissionKind[\"ViewUsageData\"] = 22] = \"ViewUsageData\";\n    /**\n     * Create a Site using Self-Service Site Creation.\n     */\n    PermissionKind[PermissionKind[\"CreateSSCSite\"] = 23] = \"CreateSSCSite\";\n    /**\n     * Create subsites such as team sites, Meeting Workspace sites, and Document Workspace sites.\n     */\n    PermissionKind[PermissionKind[\"ManageSubwebs\"] = 24] = \"ManageSubwebs\";\n    /**\n     * Create a group of users that can be used anywhere within the site collection.\n     */\n    PermissionKind[PermissionKind[\"CreateGroups\"] = 25] = \"CreateGroups\";\n    /**\n     * Create and change permission levels on the Site and assign permissions to users\n     * and groups.\n     */\n    PermissionKind[PermissionKind[\"ManagePermissions\"] = 26] = \"ManagePermissions\";\n    /**\n     * Enumerate files and folders in a Site using Microsoft Office SharePoint Designer\n     * and WebDAV interfaces.\n     */\n    PermissionKind[PermissionKind[\"BrowseDirectories\"] = 27] = \"BrowseDirectories\";\n    /**\n     * View information about users of the Site.\n     */\n    PermissionKind[PermissionKind[\"BrowseUserInfo\"] = 28] = \"BrowseUserInfo\";\n    /**\n     * Add or remove personal Web Parts on a Web Part Page.\n     */\n    PermissionKind[PermissionKind[\"AddDelPrivateWebParts\"] = 29] = \"AddDelPrivateWebParts\";\n    /**\n     * Update Web Parts to display personalized information.\n     */\n    PermissionKind[PermissionKind[\"UpdatePersonalWebParts\"] = 30] = \"UpdatePersonalWebParts\";\n    /**\n     * Grant the ability to perform all administration tasks for the Site as well as\n     * manage content, activate, deactivate, or edit properties of Site scoped Features\n     * through the object model or through the user interface (UI). When granted on the\n     * root Site of a Site Collection, activate, deactivate, or edit properties of\n     * site collection scoped Features through the object model. To browse to the Site\n     * Collection Features page and activate or deactivate Site Collection scoped Features\n     * through the UI, you must be a Site Collection administrator.\n     */\n    PermissionKind[PermissionKind[\"ManageWeb\"] = 31] = \"ManageWeb\";\n    /**\n     * Content of lists and document libraries in the Web site will be retrieveable for anonymous users through\n     * SharePoint search if the list or document library has AnonymousSearchAccessList set.\n     */\n    PermissionKind[PermissionKind[\"AnonymousSearchAccessWebLists\"] = 32] = \"AnonymousSearchAccessWebLists\";\n    /**\n     * Use features that launch client applications. Otherwise, users must work on documents\n     * locally and upload changes.\n     */\n    PermissionKind[PermissionKind[\"UseClientIntegration\"] = 37] = \"UseClientIntegration\";\n    /**\n     * Use SOAP, WebDAV, or Microsoft Office SharePoint Designer interfaces to access the Site.\n     */\n    PermissionKind[PermissionKind[\"UseRemoteAPIs\"] = 38] = \"UseRemoteAPIs\";\n    /**\n     * Manage alerts for all users of the Site.\n     */\n    PermissionKind[PermissionKind[\"ManageAlerts\"] = 39] = \"ManageAlerts\";\n    /**\n     * Create e-mail alerts.\n     */\n    PermissionKind[PermissionKind[\"CreateAlerts\"] = 40] = \"CreateAlerts\";\n    /**\n     * Allows a user to change his or her user information, such as adding a picture.\n     */\n    PermissionKind[PermissionKind[\"EditMyUserInfo\"] = 41] = \"EditMyUserInfo\";\n    /**\n     * Enumerate permissions on Site, list, folder, document, or list item.\n     */\n    PermissionKind[PermissionKind[\"EnumeratePermissions\"] = 63] = \"EnumeratePermissions\";\n    /**\n     * Has all permissions on the Site. Not available through the user interface.\n     */\n    PermissionKind[PermissionKind[\"FullMask\"] = 65] = \"FullMask\";\n})(PermissionKind = exports.PermissionKind || (exports.PermissionKind = {}));\nvar PrincipalType;\n(function (PrincipalType) {\n    PrincipalType[PrincipalType[\"None\"] = 0] = \"None\";\n    PrincipalType[PrincipalType[\"User\"] = 1] = \"User\";\n    PrincipalType[PrincipalType[\"DistributionList\"] = 2] = \"DistributionList\";\n    PrincipalType[PrincipalType[\"SecurityGroup\"] = 4] = \"SecurityGroup\";\n    PrincipalType[PrincipalType[\"SharePointGroup\"] = 8] = \"SharePointGroup\";\n    PrincipalType[PrincipalType[\"All\"] = 15] = \"All\";\n})(PrincipalType = exports.PrincipalType || (exports.PrincipalType = {}));\nvar PrincipalSource;\n(function (PrincipalSource) {\n    PrincipalSource[PrincipalSource[\"None\"] = 0] = \"None\";\n    PrincipalSource[PrincipalSource[\"UserInfoList\"] = 1] = \"UserInfoList\";\n    PrincipalSource[PrincipalSource[\"Windows\"] = 2] = \"Windows\";\n    PrincipalSource[PrincipalSource[\"MembershipProvider\"] = 4] = \"MembershipProvider\";\n    PrincipalSource[PrincipalSource[\"RoleProvider\"] = 8] = \"RoleProvider\";\n    PrincipalSource[PrincipalSource[\"All\"] = 15] = \"All\";\n})(PrincipalSource = exports.PrincipalSource || (exports.PrincipalSource = {}));\nvar RoleType;\n(function (RoleType) {\n    RoleType[RoleType[\"None\"] = 0] = \"None\";\n    RoleType[RoleType[\"Guest\"] = 1] = \"Guest\";\n    RoleType[RoleType[\"Reader\"] = 2] = \"Reader\";\n    RoleType[RoleType[\"Contributor\"] = 3] = \"Contributor\";\n    RoleType[RoleType[\"WebDesigner\"] = 4] = \"WebDesigner\";\n    RoleType[RoleType[\"Administrator\"] = 5] = \"Administrator\";\n})(RoleType = exports.RoleType || (exports.RoleType = {}));\nvar PageType;\n(function (PageType) {\n    PageType[PageType[\"Invalid\"] = -1] = \"Invalid\";\n    PageType[PageType[\"DefaultView\"] = 0] = \"DefaultView\";\n    PageType[PageType[\"NormalView\"] = 1] = \"NormalView\";\n    PageType[PageType[\"DialogView\"] = 2] = \"DialogView\";\n    PageType[PageType[\"View\"] = 3] = \"View\";\n    PageType[PageType[\"DisplayForm\"] = 4] = \"DisplayForm\";\n    PageType[PageType[\"DisplayFormDialog\"] = 5] = \"DisplayFormDialog\";\n    PageType[PageType[\"EditForm\"] = 6] = \"EditForm\";\n    PageType[PageType[\"EditFormDialog\"] = 7] = \"EditFormDialog\";\n    PageType[PageType[\"NewForm\"] = 8] = \"NewForm\";\n    PageType[PageType[\"NewFormDialog\"] = 9] = \"NewFormDialog\";\n    PageType[PageType[\"SolutionForm\"] = 10] = \"SolutionForm\";\n    PageType[PageType[\"PAGE_MAXITEMS\"] = 11] = \"PAGE_MAXITEMS\";\n})(PageType = exports.PageType || (exports.PageType = {}));\nvar SharingLinkKind;\n(function (SharingLinkKind) {\n    /**\n     * Uninitialized link\n     */\n    SharingLinkKind[SharingLinkKind[\"Uninitialized\"] = 0] = \"Uninitialized\";\n    /**\n     * Direct link to the object being shared\n     */\n    SharingLinkKind[SharingLinkKind[\"Direct\"] = 1] = \"Direct\";\n    /**\n     * Organization-shareable link to the object being shared with view permissions\n     */\n    SharingLinkKind[SharingLinkKind[\"OrganizationView\"] = 2] = \"OrganizationView\";\n    /**\n     * Organization-shareable link to the object being shared with edit permissions\n     */\n    SharingLinkKind[SharingLinkKind[\"OrganizationEdit\"] = 3] = \"OrganizationEdit\";\n    /**\n     * View only anonymous link\n     */\n    SharingLinkKind[SharingLinkKind[\"AnonymousView\"] = 4] = \"AnonymousView\";\n    /**\n     * Read/Write anonymous link\n     */\n    SharingLinkKind[SharingLinkKind[\"AnonymousEdit\"] = 5] = \"AnonymousEdit\";\n    /**\n     * Flexible sharing Link where properties can change without affecting link URL\n     */\n    SharingLinkKind[SharingLinkKind[\"Flexible\"] = 6] = \"Flexible\";\n})(SharingLinkKind = exports.SharingLinkKind || (exports.SharingLinkKind = {}));\n/**\n * Indicates the role of the sharing link\n */\nvar SharingRole;\n(function (SharingRole) {\n    SharingRole[SharingRole[\"None\"] = 0] = \"None\";\n    SharingRole[SharingRole[\"View\"] = 1] = \"View\";\n    SharingRole[SharingRole[\"Edit\"] = 2] = \"Edit\";\n    SharingRole[SharingRole[\"Owner\"] = 3] = \"Owner\";\n})(SharingRole = exports.SharingRole || (exports.SharingRole = {}));\nvar SharingOperationStatusCode;\n(function (SharingOperationStatusCode) {\n    /**\n     * The share operation completed without errors.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"CompletedSuccessfully\"] = 0] = \"CompletedSuccessfully\";\n    /**\n     * The share operation completed and generated requests for access.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"AccessRequestsQueued\"] = 1] = \"AccessRequestsQueued\";\n    /**\n     * The share operation failed as there were no resolved users.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"NoResolvedUsers\"] = -1] = \"NoResolvedUsers\";\n    /**\n     * The share operation failed due to insufficient permissions.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"AccessDenied\"] = -2] = \"AccessDenied\";\n    /**\n     * The share operation failed when attempting a cross site share, which is not supported.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"CrossSiteRequestNotSupported\"] = -3] = \"CrossSiteRequestNotSupported\";\n    /**\n     * The sharing operation failed due to an unknown error.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"UnknowError\"] = -4] = \"UnknowError\";\n    /**\n     * The text you typed is too long. Please shorten it.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"EmailBodyTooLong\"] = -5] = \"EmailBodyTooLong\";\n    /**\n     * The maximum number of unique scopes in the list has been exceeded.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"ListUniqueScopesExceeded\"] = -6] = \"ListUniqueScopesExceeded\";\n    /**\n     * The share operation failed because a sharing capability is disabled in the site.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"CapabilityDisabled\"] = -7] = \"CapabilityDisabled\";\n    /**\n     * The specified object for the share operation is not supported.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"ObjectNotSupported\"] = -8] = \"ObjectNotSupported\";\n    /**\n     * A SharePoint group cannot contain another SharePoint group.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"NestedGroupsNotSupported\"] = -9] = \"NestedGroupsNotSupported\";\n})(SharingOperationStatusCode = exports.SharingOperationStatusCode || (exports.SharingOperationStatusCode = {}));\nvar SPSharedObjectType;\n(function (SPSharedObjectType) {\n    SPSharedObjectType[SPSharedObjectType[\"Unknown\"] = 0] = \"Unknown\";\n    SPSharedObjectType[SPSharedObjectType[\"File\"] = 1] = \"File\";\n    SPSharedObjectType[SPSharedObjectType[\"Folder\"] = 2] = \"Folder\";\n    SPSharedObjectType[SPSharedObjectType[\"Item\"] = 3] = \"Item\";\n    SPSharedObjectType[SPSharedObjectType[\"List\"] = 4] = \"List\";\n    SPSharedObjectType[SPSharedObjectType[\"Web\"] = 5] = \"Web\";\n    SPSharedObjectType[SPSharedObjectType[\"Max\"] = 6] = \"Max\";\n})(SPSharedObjectType = exports.SPSharedObjectType || (exports.SPSharedObjectType = {}));\nvar SharingDomainRestrictionMode;\n(function (SharingDomainRestrictionMode) {\n    SharingDomainRestrictionMode[SharingDomainRestrictionMode[\"None\"] = 0] = \"None\";\n    SharingDomainRestrictionMode[SharingDomainRestrictionMode[\"AllowList\"] = 1] = \"AllowList\";\n    SharingDomainRestrictionMode[SharingDomainRestrictionMode[\"BlockList\"] = 2] = \"BlockList\";\n})(SharingDomainRestrictionMode = exports.SharingDomainRestrictionMode || (exports.SharingDomainRestrictionMode = {}));\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = __webpack_require__(1);\nvar queryableshareable_1 = __webpack_require__(12);\nvar files_1 = __webpack_require__(8);\nvar util_1 = __webpack_require__(0);\nvar odata_1 = __webpack_require__(2);\nvar items_1 = __webpack_require__(11);\n/**\n * Describes a collection of Folder objects\n *\n */\nvar Folders = (function (_super) {\n    __extends(Folders, _super);\n    /**\n     * Creates a new instance of the Folders class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    function Folders(baseUrl, path) {\n        if (path === void 0) { path = \"folders\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a folder by folder name\n     *\n     */\n    Folders.prototype.getByName = function (name) {\n        var f = new Folder(this);\n        f.concat(\"('\" + name + \"')\");\n        return f;\n    };\n    /**\n     * Adds a new folder to the current folder (relative) or any folder (absolute)\n     *\n     * @param url The relative or absolute url where the new folder will be created. Urls starting with a forward slash are absolute.\n     * @returns The new Folder and the raw response.\n     */\n    Folders.prototype.add = function (url) {\n        var _this = this;\n        return this.clone(Folders, \"add('\" + url + \"')\", true).postCore().then(function (response) {\n            return {\n                data: response,\n                folder: _this.getByName(url),\n            };\n        });\n    };\n    return Folders;\n}(queryable_1.QueryableCollection));\nexports.Folders = Folders;\n/**\n * Describes a single Folder instance\n *\n */\nvar Folder = (function (_super) {\n    __extends(Folder, _super);\n    function Folder() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(Folder.prototype, \"contentTypeOrder\", {\n        /**\n         * Specifies the sequence in which content types are displayed.\n         *\n         */\n        get: function () {\n            return new queryable_1.QueryableCollection(this, \"contentTypeOrder\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Folder.prototype, \"files\", {\n        /**\n         * Gets this folder's files\n         *\n         */\n        get: function () {\n            return new files_1.Files(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Folder.prototype, \"folders\", {\n        /**\n         * Gets this folder's sub folders\n         *\n         */\n        get: function () {\n            return new Folders(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Folder.prototype, \"listItemAllFields\", {\n        /**\n         * Gets this folder's list item field values\n         *\n         */\n        get: function () {\n            return new queryable_1.QueryableCollection(this, \"listItemAllFields\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Folder.prototype, \"parentFolder\", {\n        /**\n         * Gets the parent folder, if available\n         *\n         */\n        get: function () {\n            return new Folder(this, \"parentFolder\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Folder.prototype, \"properties\", {\n        /**\n         * Gets this folder's properties\n         *\n         */\n        get: function () {\n            return new queryable_1.QueryableInstance(this, \"properties\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Folder.prototype, \"serverRelativeUrl\", {\n        /**\n         * Gets this folder's server relative url\n         *\n         */\n        get: function () {\n            return new queryable_1.Queryable(this, \"serverRelativeUrl\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Folder.prototype, \"uniqueContentTypeOrder\", {\n        /**\n         * Gets a value that specifies the content type order.\n         *\n         */\n        get: function () {\n            return new queryable_1.QueryableCollection(this, \"uniqueContentTypeOrder\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Folder.prototype.update = function (properties) {\n        var _this = this;\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"__metadata\": { \"type\": \"SP.Folder\" },\n        }, properties));\n        return this.postCore({\n            body: postBody,\n            headers: {\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then(function (data) {\n            return {\n                data: data,\n                folder: _this,\n            };\n        });\n    };\n    /**\n    * Delete this folder\n    *\n    * @param eTag Value used in the IF-Match header, by default \"*\"\n    */\n    Folder.prototype.delete = function (eTag) {\n        if (eTag === void 0) { eTag = \"*\"; }\n        return this.clone(Folder, null, true).postCore({\n            headers: {\n                \"IF-Match\": eTag,\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    /**\n     * Moves the folder to the Recycle Bin and returns the identifier of the new Recycle Bin item.\n     */\n    Folder.prototype.recycle = function () {\n        return this.clone(Folder, \"recycle\", true).postCore();\n    };\n    /**\n     * Gets the associated list item for this folder, loading the default properties\n     */\n    Folder.prototype.getItem = function () {\n        var selects = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            selects[_i] = arguments[_i];\n        }\n        var q = this.listItemAllFields;\n        return q.select.apply(q, selects).get().then(function (d) {\n            return util_1.Util.extend(new items_1.Item(odata_1.getEntityUrl(d)), d);\n        });\n    };\n    return Folder;\n}(queryableshareable_1.QueryableShareableFolder));\nexports.Folder = Folder;\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = __webpack_require__(0);\nvar collections_1 = __webpack_require__(6);\nvar pnplibconfig_1 = __webpack_require__(4);\nvar logging_1 = __webpack_require__(5);\n/**\n * A wrapper class to provide a consistent interface to browser based storage\n *\n */\nvar PnPClientStorageWrapper = (function () {\n    /**\n     * Creates a new instance of the PnPClientStorageWrapper class\n     *\n     * @constructor\n     */\n    function PnPClientStorageWrapper(store, defaultTimeoutMinutes) {\n        this.store = store;\n        this.defaultTimeoutMinutes = defaultTimeoutMinutes;\n        this.defaultTimeoutMinutes = (defaultTimeoutMinutes === void 0) ? -1 : defaultTimeoutMinutes;\n        this.enabled = this.test();\n        // if the cache timeout is enabled call the handler\n        // this will clear any expired items and set the timeout function\n        if (pnplibconfig_1.RuntimeConfig.enableCacheExpiration) {\n            logging_1.Logger.write(\"Enabling cache expiration.\", logging_1.LogLevel.Info);\n            this.cacheExpirationHandler();\n        }\n    }\n    /**\n     * Get a value from storage, or null if that value does not exist\n     *\n     * @param key The key whose value we want to retrieve\n     */\n    PnPClientStorageWrapper.prototype.get = function (key) {\n        if (!this.enabled) {\n            return null;\n        }\n        var o = this.store.getItem(key);\n        if (o == null) {\n            return null;\n        }\n        var persistable = JSON.parse(o);\n        if (new Date(persistable.expiration) <= new Date()) {\n            logging_1.Logger.write(\"Removing item with key '\" + key + \"' from cache due to expiration.\", logging_1.LogLevel.Info);\n            this.delete(key);\n            return null;\n        }\n        else {\n            return persistable.value;\n        }\n    };\n    /**\n     * Adds a value to the underlying storage\n     *\n     * @param key The key to use when storing the provided value\n     * @param o The value to store\n     * @param expire Optional, if provided the expiration of the item, otherwise the default is used\n     */\n    PnPClientStorageWrapper.prototype.put = function (key, o, expire) {\n        if (this.enabled) {\n            this.store.setItem(key, this.createPersistable(o, expire));\n        }\n    };\n    /**\n     * Deletes a value from the underlying storage\n     *\n     * @param key The key of the pair we want to remove from storage\n     */\n    PnPClientStorageWrapper.prototype.delete = function (key) {\n        if (this.enabled) {\n            this.store.removeItem(key);\n        }\n    };\n    /**\n     * Gets an item from the underlying storage, or adds it if it does not exist using the supplied getter function\n     *\n     * @param key The key to use when storing the provided value\n     * @param getter A function which will upon execution provide the desired value\n     * @param expire Optional, if provided the expiration of the item, otherwise the default is used\n     */\n    PnPClientStorageWrapper.prototype.getOrPut = function (key, getter, expire) {\n        var _this = this;\n        if (!this.enabled) {\n            return getter();\n        }\n        return new Promise(function (resolve) {\n            var o = _this.get(key);\n            if (o == null) {\n                getter().then(function (d) {\n                    _this.put(key, d, expire);\n                    resolve(d);\n                });\n            }\n            else {\n                resolve(o);\n            }\n        });\n    };\n    /**\n     * Deletes any expired items placed in the store by the pnp library, leaves other items untouched\n     */\n    PnPClientStorageWrapper.prototype.deleteExpired = function () {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            if (!_this.enabled) {\n                resolve();\n            }\n            try {\n                for (var i = 0; i < _this.store.length; i++) {\n                    var key = _this.store.key(i);\n                    // test the stored item to see if we stored it\n                    if (/[\"|']?pnp[\"|']? ?: ?1/i.test(_this.store.getItem(key))) {\n                        // get those items as get will delete from cache if they are expired\n                        _this.get(key);\n                    }\n                }\n                resolve();\n            }\n            catch (e) {\n                reject(e);\n            }\n        });\n    };\n    /**\n     * Used to determine if the wrapped storage is available currently\n     */\n    PnPClientStorageWrapper.prototype.test = function () {\n        var str = \"test\";\n        try {\n            this.store.setItem(str, str);\n            this.store.removeItem(str);\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    };\n    /**\n     * Creates the persistable to store\n     */\n    PnPClientStorageWrapper.prototype.createPersistable = function (o, expire) {\n        if (typeof expire === \"undefined\") {\n            // ensure we are by default inline with the global library setting\n            var defaultTimeout = pnplibconfig_1.RuntimeConfig.defaultCachingTimeoutSeconds;\n            if (this.defaultTimeoutMinutes > 0) {\n                defaultTimeout = this.defaultTimeoutMinutes * 60;\n            }\n            expire = util_1.Util.dateAdd(new Date(), \"second\", defaultTimeout);\n        }\n        return JSON.stringify({ pnp: 1, expiration: expire, value: o });\n    };\n    /**\n     * Deletes expired items added by this library in this.store and sets a timeout to call itself\n     */\n    PnPClientStorageWrapper.prototype.cacheExpirationHandler = function () {\n        var _this = this;\n        logging_1.Logger.write(\"Called cache expiration handler.\", logging_1.LogLevel.Verbose);\n        this.deleteExpired().then(function (_) {\n            // call ourself in the future\n            setTimeout(util_1.Util.getCtxCallback(_this, _this.cacheExpirationHandler), pnplibconfig_1.RuntimeConfig.cacheExpirationIntervalMilliseconds);\n        }).catch(function (e) {\n            // we've got some error - so just stop the loop and report the error\n            logging_1.Logger.log({\n                data: e,\n                level: logging_1.LogLevel.Error,\n                message: \"Error deleting expired cache entries, see data for details. Timeout not reset.\",\n            });\n        });\n    };\n    return PnPClientStorageWrapper;\n}());\nexports.PnPClientStorageWrapper = PnPClientStorageWrapper;\n/**\n * A thin implementation of in-memory storage for use in nodejs\n */\nvar MemoryStorage = (function () {\n    function MemoryStorage(_store) {\n        if (_store === void 0) { _store = new collections_1.Dictionary(); }\n        this._store = _store;\n    }\n    Object.defineProperty(MemoryStorage.prototype, \"length\", {\n        get: function () {\n            return this._store.count();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MemoryStorage.prototype.clear = function () {\n        this._store.clear();\n    };\n    MemoryStorage.prototype.getItem = function (key) {\n        return this._store.get(key);\n    };\n    MemoryStorage.prototype.key = function (index) {\n        return this._store.getKeys()[index];\n    };\n    MemoryStorage.prototype.removeItem = function (key) {\n        this._store.remove(key);\n    };\n    MemoryStorage.prototype.setItem = function (key, data) {\n        this._store.add(key, data);\n    };\n    return MemoryStorage;\n}());\n/**\n * A class that will establish wrappers for both local and session storage\n */\nvar PnPClientStorage = (function () {\n    /**\n     * Creates a new instance of the PnPClientStorage class\n     *\n     * @constructor\n     */\n    function PnPClientStorage(_local, _session) {\n        if (_local === void 0) { _local = null; }\n        if (_session === void 0) { _session = null; }\n        this._local = _local;\n        this._session = _session;\n    }\n    Object.defineProperty(PnPClientStorage.prototype, \"local\", {\n        /**\n         * Provides access to the local storage of the browser\n         */\n        get: function () {\n            if (this._local === null) {\n                this._local = typeof localStorage !== \"undefined\" ? new PnPClientStorageWrapper(localStorage) : new PnPClientStorageWrapper(new MemoryStorage());\n            }\n            return this._local;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PnPClientStorage.prototype, \"session\", {\n        /**\n         * Provides access to the session storage of the browser\n         */\n        get: function () {\n            if (this._session === null) {\n                this._session = typeof sessionStorage !== \"undefined\" ? new PnPClientStorageWrapper(sessionStorage) : new PnPClientStorageWrapper(new MemoryStorage());\n            }\n            return this._session;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PnPClientStorage;\n}());\nexports.PnPClientStorage = PnPClientStorage;\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = __webpack_require__(1);\nvar sitegroups_1 = __webpack_require__(17);\nvar util_1 = __webpack_require__(0);\n/**\n * Describes a set of role assignments for the current scope\n *\n */\nvar RoleAssignments = (function (_super) {\n    __extends(RoleAssignments, _super);\n    /**\n     * Creates a new instance of the RoleAssignments class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this role assignments collection\n     */\n    function RoleAssignments(baseUrl, path) {\n        if (path === void 0) { path = \"roleassignments\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Adds a new role assignment with the specified principal and role definitions to the collection\n     *\n     * @param principalId The id of the user or group to assign permissions to\n     * @param roleDefId The id of the role definition that defines the permissions to assign\n     *\n     */\n    RoleAssignments.prototype.add = function (principalId, roleDefId) {\n        return this.clone(RoleAssignments, \"addroleassignment(principalid=\" + principalId + \", roledefid=\" + roleDefId + \")\", true).postCore();\n    };\n    /**\n     * Removes the role assignment with the specified principal and role definition from the collection\n     *\n     * @param principalId The id of the user or group in the role assignment\n     * @param roleDefId The id of the role definition in the role assignment\n     *\n     */\n    RoleAssignments.prototype.remove = function (principalId, roleDefId) {\n        return this.clone(RoleAssignments, \"removeroleassignment(principalid=\" + principalId + \", roledefid=\" + roleDefId + \")\", true).postCore();\n    };\n    /**\n     * Gets the role assignment associated with the specified principal id from the collection.\n     *\n     * @param id The id of the role assignment\n     */\n    RoleAssignments.prototype.getById = function (id) {\n        var ra = new RoleAssignment(this);\n        ra.concat(\"(\" + id + \")\");\n        return ra;\n    };\n    return RoleAssignments;\n}(queryable_1.QueryableCollection));\nexports.RoleAssignments = RoleAssignments;\n/**\n * Describes a role assignment\n *\n */\nvar RoleAssignment = (function (_super) {\n    __extends(RoleAssignment, _super);\n    function RoleAssignment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(RoleAssignment.prototype, \"groups\", {\n        /**\n         * Gets the groups that directly belong to the access control list (ACL) for this securable object\n         *\n         */\n        get: function () {\n            return new sitegroups_1.SiteGroups(this, \"groups\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RoleAssignment.prototype, \"bindings\", {\n        /**\n         * Gets the role definition bindings for this role assignment\n         *\n         */\n        get: function () {\n            return new RoleDefinitionBindings(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Deletes this role assignment\n     *\n     */\n    RoleAssignment.prototype.delete = function () {\n        return this.postCore({\n            headers: {\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    return RoleAssignment;\n}(queryable_1.QueryableInstance));\nexports.RoleAssignment = RoleAssignment;\n/**\n * Describes a collection of role definitions\n *\n */\nvar RoleDefinitions = (function (_super) {\n    __extends(RoleDefinitions, _super);\n    /**\n     * Creates a new instance of the RoleDefinitions class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this role definitions collection\n     *\n     */\n    function RoleDefinitions(baseUrl, path) {\n        if (path === void 0) { path = \"roledefinitions\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets the role definition with the specified id from the collection\n     *\n     * @param id The id of the role definition\n     *\n     */\n    RoleDefinitions.prototype.getById = function (id) {\n        return new RoleDefinition(this, \"getById(\" + id + \")\");\n    };\n    /**\n     * Gets the role definition with the specified name\n     *\n     * @param name The name of the role definition\n     *\n     */\n    RoleDefinitions.prototype.getByName = function (name) {\n        return new RoleDefinition(this, \"getbyname('\" + name + \"')\");\n    };\n    /**\n     * Gets the role definition with the specified role type\n     *\n     * @param roleTypeKind The roletypekind of the role definition (None=0, Guest=1, Reader=2, Contributor=3, WebDesigner=4, Administrator=5, Editor=6, System=7)\n     *\n     */\n    RoleDefinitions.prototype.getByType = function (roleTypeKind) {\n        return new RoleDefinition(this, \"getbytype(\" + roleTypeKind + \")\");\n    };\n    /**\n     * Creates a role definition\n     *\n     * @param name The new role definition's name\n     * @param description The new role definition's description\n     * @param order The order in which the role definition appears\n     * @param basePermissions The permissions mask for this role definition\n     *\n     */\n    RoleDefinitions.prototype.add = function (name, description, order, basePermissions) {\n        var _this = this;\n        var postBody = JSON.stringify({\n            BasePermissions: util_1.Util.extend({ __metadata: { type: \"SP.BasePermissions\" } }, basePermissions),\n            Description: description,\n            Name: name,\n            Order: order,\n            __metadata: { \"type\": \"SP.RoleDefinition\" },\n        });\n        return this.postCore({ body: postBody }).then(function (data) {\n            return {\n                data: data,\n                definition: _this.getById(data.Id),\n            };\n        });\n    };\n    return RoleDefinitions;\n}(queryable_1.QueryableCollection));\nexports.RoleDefinitions = RoleDefinitions;\n/**\n * Describes a role definition\n *\n */\nvar RoleDefinition = (function (_super) {\n    __extends(RoleDefinition, _super);\n    function RoleDefinition() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Updates this role definition with the supplied properties\n     *\n     * @param properties A plain object hash of values to update for the role definition\n     */\n    /* tslint:disable no-string-literal */\n    RoleDefinition.prototype.update = function (properties) {\n        var _this = this;\n        if (typeof properties.hasOwnProperty(\"BasePermissions\") !== \"undefined\") {\n            properties[\"BasePermissions\"] = util_1.Util.extend({ __metadata: { type: \"SP.BasePermissions\" } }, properties[\"BasePermissions\"]);\n        }\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"__metadata\": { \"type\": \"SP.RoleDefinition\" },\n        }, properties));\n        return this.postCore({\n            body: postBody,\n            headers: {\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then(function (data) {\n            var retDef = _this;\n            if (properties.hasOwnProperty(\"Name\")) {\n                var parent_1 = _this.getParent(RoleDefinitions, _this.parentUrl, \"\");\n                retDef = parent_1.getByName(properties[\"Name\"]);\n            }\n            return {\n                data: data,\n                definition: retDef,\n            };\n        });\n    };\n    /* tslint:enable */\n    /**\n     * Deletes this role definition\n     *\n     */\n    RoleDefinition.prototype.delete = function () {\n        return this.postCore({\n            headers: {\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    return RoleDefinition;\n}(queryable_1.QueryableInstance));\nexports.RoleDefinition = RoleDefinition;\n/**\n * Describes the role definitons bound to a role assignment object\n *\n */\nvar RoleDefinitionBindings = (function (_super) {\n    __extends(RoleDefinitionBindings, _super);\n    /**\n     * Creates a new instance of the RoleDefinitionBindings class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this role definition bindings collection\n     */\n    function RoleDefinitionBindings(baseUrl, path) {\n        if (path === void 0) { path = \"roledefinitionbindings\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    return RoleDefinitionBindings;\n}(queryable_1.QueryableCollection));\nexports.RoleDefinitionBindings = RoleDefinitionBindings;\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = __webpack_require__(1);\nvar siteusers_1 = __webpack_require__(27);\nvar util_1 = __webpack_require__(0);\n/**\n * Principal Type enum\n *\n */\nvar PrincipalType;\n(function (PrincipalType) {\n    PrincipalType[PrincipalType[\"None\"] = 0] = \"None\";\n    PrincipalType[PrincipalType[\"User\"] = 1] = \"User\";\n    PrincipalType[PrincipalType[\"DistributionList\"] = 2] = \"DistributionList\";\n    PrincipalType[PrincipalType[\"SecurityGroup\"] = 4] = \"SecurityGroup\";\n    PrincipalType[PrincipalType[\"SharePointGroup\"] = 8] = \"SharePointGroup\";\n    PrincipalType[PrincipalType[\"All\"] = 15] = \"All\";\n})(PrincipalType = exports.PrincipalType || (exports.PrincipalType = {}));\n/**\n * Describes a collection of site groups\n *\n */\nvar SiteGroups = (function (_super) {\n    __extends(SiteGroups, _super);\n    /**\n     * Creates a new instance of the SiteGroups class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this group collection\n     */\n    function SiteGroups(baseUrl, path) {\n        if (path === void 0) { path = \"sitegroups\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Adds a new group to the site collection\n     *\n     * @param props The group properties object of property names and values to be set for the group\n     */\n    SiteGroups.prototype.add = function (properties) {\n        var _this = this;\n        var postBody = JSON.stringify(util_1.Util.extend({ \"__metadata\": { \"type\": \"SP.Group\" } }, properties));\n        return this.postCore({ body: postBody }).then(function (data) {\n            return {\n                data: data,\n                group: _this.getById(data.Id),\n            };\n        });\n    };\n    /**\n     * Gets a group from the collection by name\n     *\n     * @param groupName The name of the group to retrieve\n     */\n    SiteGroups.prototype.getByName = function (groupName) {\n        return new SiteGroup(this, \"getByName('\" + groupName + \"')\");\n    };\n    /**\n     * Gets a group from the collection by id\n     *\n     * @param id The id of the group to retrieve\n     */\n    SiteGroups.prototype.getById = function (id) {\n        var sg = new SiteGroup(this);\n        sg.concat(\"(\" + id + \")\");\n        return sg;\n    };\n    /**\n     * Removes the group with the specified member id from the collection\n     *\n     * @param id The id of the group to remove\n     */\n    SiteGroups.prototype.removeById = function (id) {\n        return this.clone(SiteGroups, \"removeById('\" + id + \"')\", true).postCore();\n    };\n    /**\n     * Removes the cross-site group with the specified name from the collection\n     *\n     * @param loginName The name of the group to remove\n     */\n    SiteGroups.prototype.removeByLoginName = function (loginName) {\n        return this.clone(SiteGroups, \"removeByLoginName('\" + loginName + \"')\", true).postCore();\n    };\n    return SiteGroups;\n}(queryable_1.QueryableCollection));\nexports.SiteGroups = SiteGroups;\n/**\n * Describes a single group\n *\n */\nvar SiteGroup = (function (_super) {\n    __extends(SiteGroup, _super);\n    function SiteGroup() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(SiteGroup.prototype, \"users\", {\n        /**\n         * Gets the users for this group\n         *\n         */\n        get: function () {\n            return new siteusers_1.SiteUsers(this, \"users\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n    * Updates this group instance with the supplied properties\n    *\n    * @param properties A GroupWriteableProperties object of property names and values to update for the group\n    */\n    /* tslint:disable no-string-literal */\n    SiteGroup.prototype.update = function (properties) {\n        var _this = this;\n        var postBody = util_1.Util.extend({ \"__metadata\": { \"type\": \"SP.Group\" } }, properties);\n        return this.postCore({\n            body: JSON.stringify(postBody),\n            headers: {\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then(function (data) {\n            var retGroup = _this;\n            if (properties.hasOwnProperty(\"Title\")) {\n                retGroup = _this.getParent(SiteGroup, _this.parentUrl, \"getByName('\" + properties[\"Title\"] + \"')\");\n            }\n            return {\n                data: data,\n                group: retGroup,\n            };\n        });\n    };\n    return SiteGroup;\n}(queryable_1.QueryableInstance));\nexports.SiteGroup = SiteGroup;\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = __webpack_require__(0);\nvar queryable_1 = __webpack_require__(1);\n/**\n * Describes a collection of content types\n *\n */\nvar ContentTypes = (function (_super) {\n    __extends(ContentTypes, _super);\n    /**\n     * Creates a new instance of the ContentTypes class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this content types collection\n     */\n    function ContentTypes(baseUrl, path) {\n        if (path === void 0) { path = \"contenttypes\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a ContentType by content type id\n     */\n    ContentTypes.prototype.getById = function (id) {\n        var ct = new ContentType(this);\n        ct.concat(\"('\" + id + \"')\");\n        return ct;\n    };\n    /**\n     * Adds an existing contenttype to a content type collection\n     *\n     * @param contentTypeId in the following format, for example: 0x010102\n     */\n    ContentTypes.prototype.addAvailableContentType = function (contentTypeId) {\n        var _this = this;\n        var postBody = JSON.stringify({\n            \"contentTypeId\": contentTypeId,\n        });\n        return this.clone(ContentTypes, \"addAvailableContentType\", true).postAsCore({ body: postBody }).then(function (data) {\n            return {\n                contentType: _this.getById(data.id),\n                data: data,\n            };\n        });\n    };\n    /**\n     * Adds a new content type to the collection\n     *\n     * @param id The desired content type id for the new content type (also determines the parent content type)\n     * @param name The name of the content type\n     * @param description The description of the content type\n     * @param group The group in which to add the content type\n     * @param additionalSettings Any additional settings to provide when creating the content type\n     *\n     */\n    ContentTypes.prototype.add = function (id, name, description, group, additionalSettings) {\n        var _this = this;\n        if (description === void 0) { description = \"\"; }\n        if (group === void 0) { group = \"Custom Content Types\"; }\n        if (additionalSettings === void 0) { additionalSettings = {}; }\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"Description\": description,\n            \"Group\": group,\n            \"Id\": { \"StringValue\": id },\n            \"Name\": name,\n            \"__metadata\": { \"type\": \"SP.ContentType\" },\n        }, additionalSettings));\n        return this.postCore({ body: postBody }).then(function (data) {\n            return { contentType: _this.getById(data.id), data: data };\n        });\n    };\n    return ContentTypes;\n}(queryable_1.QueryableCollection));\nexports.ContentTypes = ContentTypes;\n/**\n * Describes a single ContentType instance\n *\n */\nvar ContentType = (function (_super) {\n    __extends(ContentType, _super);\n    function ContentType() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(ContentType.prototype, \"fieldLinks\", {\n        /**\n         * Gets the column (also known as field) references in the content type.\n        */\n        get: function () {\n            return new FieldLinks(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ContentType.prototype, \"fields\", {\n        /**\n         * Gets a value that specifies the collection of fields for the content type.\n         */\n        get: function () {\n            return new queryable_1.QueryableCollection(this, \"fields\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ContentType.prototype, \"parent\", {\n        /**\n         * Gets the parent content type of the content type.\n         */\n        get: function () {\n            return new ContentType(this, \"parent\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ContentType.prototype, \"workflowAssociations\", {\n        /**\n         * Gets a value that specifies the collection of workflow associations for the content type.\n         */\n        get: function () {\n            return new queryable_1.QueryableCollection(this, \"workflowAssociations\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Delete this content type\n     */\n    ContentType.prototype.delete = function () {\n        return this.postCore({\n            headers: {\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    return ContentType;\n}(queryable_1.QueryableInstance));\nexports.ContentType = ContentType;\n/**\n * Represents a collection of field link instances\n */\nvar FieldLinks = (function (_super) {\n    __extends(FieldLinks, _super);\n    /**\n     * Creates a new instance of the ContentType class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this content type instance\n     */\n    function FieldLinks(baseUrl, path) {\n        if (path === void 0) { path = \"fieldlinks\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a FieldLink by GUID id\n     *\n     * @param id The GUID id of the field link\n     */\n    FieldLinks.prototype.getById = function (id) {\n        var fl = new FieldLink(this);\n        fl.concat(\"(guid'\" + id + \"')\");\n        return fl;\n    };\n    return FieldLinks;\n}(queryable_1.QueryableCollection));\nexports.FieldLinks = FieldLinks;\n/**\n * Represents a field link instance\n */\nvar FieldLink = (function (_super) {\n    __extends(FieldLink, _super);\n    function FieldLink() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return FieldLink;\n}(queryable_1.QueryableInstance));\nexports.FieldLink = FieldLink;\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = __webpack_require__(1);\nvar util_1 = __webpack_require__(0);\n/**\n * Describes a collection of user custom actions\n *\n */\nvar UserCustomActions = (function (_super) {\n    __extends(UserCustomActions, _super);\n    /**\n     * Creates a new instance of the UserCustomActions class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this user custom actions collection\n     */\n    function UserCustomActions(baseUrl, path) {\n        if (path === void 0) { path = \"usercustomactions\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Returns the user custom action with the specified id\n     *\n     * @param id The GUID id of the user custom action to retrieve\n     */\n    UserCustomActions.prototype.getById = function (id) {\n        var uca = new UserCustomAction(this);\n        uca.concat(\"('\" + id + \"')\");\n        return uca;\n    };\n    /**\n     * Creates a user custom action\n     *\n     * @param properties The information object of property names and values which define the new user custom action\n     *\n     */\n    UserCustomActions.prototype.add = function (properties) {\n        var _this = this;\n        var postBody = JSON.stringify(util_1.Util.extend({ __metadata: { \"type\": \"SP.UserCustomAction\" } }, properties));\n        return this.postCore({ body: postBody }).then(function (data) {\n            return {\n                action: _this.getById(data.Id),\n                data: data,\n            };\n        });\n    };\n    /**\n     * Deletes all user custom actions in the collection\n     *\n     */\n    UserCustomActions.prototype.clear = function () {\n        return this.clone(UserCustomActions, \"clear\", true).postCore();\n    };\n    return UserCustomActions;\n}(queryable_1.QueryableCollection));\nexports.UserCustomActions = UserCustomActions;\n/**\n * Describes a single user custom action\n *\n */\nvar UserCustomAction = (function (_super) {\n    __extends(UserCustomAction, _super);\n    function UserCustomAction() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n    * Updates this user custom action with the supplied properties\n    *\n    * @param properties An information object of property names and values to update for this user custom action\n    */\n    UserCustomAction.prototype.update = function (properties) {\n        var _this = this;\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"__metadata\": { \"type\": \"SP.UserCustomAction\" },\n        }, properties));\n        return this.postCore({\n            body: postBody,\n            headers: {\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then(function (data) {\n            return {\n                action: _this,\n                data: data,\n            };\n        });\n    };\n    /**\n    * Removes this user custom action\n    *\n    */\n    UserCustomAction.prototype.delete = function () {\n        return _super.prototype.deleteCore.call(this);\n    };\n    return UserCustomAction;\n}(queryable_1.QueryableInstance));\nexports.UserCustomAction = UserCustomAction;\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Makes requests using the fetch API\n */\nvar FetchClient = (function () {\n    function FetchClient() {\n    }\n    FetchClient.prototype.fetch = function (url, options) {\n        return global.fetch(url, options);\n    };\n    return FetchClient;\n}());\nexports.FetchClient = FetchClient;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(20)))\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = __webpack_require__(1);\nvar util_1 = __webpack_require__(0);\n/**\n * Allows for the fluent construction of search queries\n */\nvar SearchQueryBuilder = (function () {\n    function SearchQueryBuilder(queryText, _query) {\n        if (queryText === void 0) { queryText = \"\"; }\n        if (_query === void 0) { _query = {}; }\n        this._query = _query;\n        if (typeof queryText === \"string\" && queryText.length > 0) {\n            this.extendQuery({ Querytext: queryText });\n        }\n    }\n    SearchQueryBuilder.create = function (queryText, queryTemplate) {\n        if (queryText === void 0) { queryText = \"\"; }\n        if (queryTemplate === void 0) { queryTemplate = {}; }\n        return new SearchQueryBuilder(queryText, queryTemplate);\n    };\n    SearchQueryBuilder.prototype.text = function (queryText) {\n        return this.extendQuery({ Querytext: queryText });\n    };\n    SearchQueryBuilder.prototype.template = function (template) {\n        return this.extendQuery({ QueryTemplate: template });\n    };\n    SearchQueryBuilder.prototype.sourceId = function (id) {\n        return this.extendQuery({ SourceId: id });\n    };\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enableInterleaving\", {\n        get: function () {\n            return this.extendQuery({ EnableInterleaving: true });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enableStemming\", {\n        get: function () {\n            return this.extendQuery({ EnableStemming: true });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchQueryBuilder.prototype, \"trimDuplicates\", {\n        get: function () {\n            return this.extendQuery({ TrimDuplicates: true });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    SearchQueryBuilder.prototype.trimDuplicatesIncludeId = function (n) {\n        return this.extendQuery({ TrimDuplicatesIncludeId: n });\n    };\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enableNicknames\", {\n        get: function () {\n            return this.extendQuery({ EnableNicknames: true });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enableFql\", {\n        get: function () {\n            return this.extendQuery({ EnableFQL: true });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enablePhonetic\", {\n        get: function () {\n            return this.extendQuery({ EnablePhonetic: true });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchQueryBuilder.prototype, \"bypassResultTypes\", {\n        get: function () {\n            return this.extendQuery({ BypassResultTypes: true });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchQueryBuilder.prototype, \"processBestBets\", {\n        get: function () {\n            return this.extendQuery({ ProcessBestBets: true });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enableQueryRules\", {\n        get: function () {\n            return this.extendQuery({ EnableQueryRules: true });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enableSorting\", {\n        get: function () {\n            return this.extendQuery({ EnableSorting: true });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchQueryBuilder.prototype, \"generateBlockRankLog\", {\n        get: function () {\n            return this.extendQuery({ GenerateBlockRankLog: true });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    SearchQueryBuilder.prototype.rankingModelId = function (id) {\n        return this.extendQuery({ RankingModelId: id });\n    };\n    SearchQueryBuilder.prototype.startRow = function (n) {\n        return this.extendQuery({ StartRow: n });\n    };\n    SearchQueryBuilder.prototype.rowLimit = function (n) {\n        return this.extendQuery({ RowLimit: n });\n    };\n    SearchQueryBuilder.prototype.rowsPerPage = function (n) {\n        return this.extendQuery({ RowsPerPage: n });\n    };\n    SearchQueryBuilder.prototype.selectProperties = function () {\n        var properties = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            properties[_i] = arguments[_i];\n        }\n        return this.extendQuery({ SelectProperties: properties });\n    };\n    SearchQueryBuilder.prototype.culture = function (culture) {\n        return this.extendQuery({ Culture: culture });\n    };\n    SearchQueryBuilder.prototype.timeZoneId = function (id) {\n        return this.extendQuery({ TimeZoneId: id });\n    };\n    SearchQueryBuilder.prototype.refinementFilters = function () {\n        var filters = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            filters[_i] = arguments[_i];\n        }\n        return this.extendQuery({ RefinementFilters: filters });\n    };\n    SearchQueryBuilder.prototype.refiners = function (refiners) {\n        return this.extendQuery({ Refiners: refiners });\n    };\n    SearchQueryBuilder.prototype.hiddenConstraints = function (constraints) {\n        return this.extendQuery({ HiddenConstraints: constraints });\n    };\n    SearchQueryBuilder.prototype.sortList = function () {\n        var sorts = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sorts[_i] = arguments[_i];\n        }\n        return this.extendQuery({ SortList: sorts });\n    };\n    SearchQueryBuilder.prototype.timeout = function (milliseconds) {\n        return this.extendQuery({ Timeout: milliseconds });\n    };\n    SearchQueryBuilder.prototype.hithighlightedProperties = function () {\n        var properties = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            properties[_i] = arguments[_i];\n        }\n        return this.extendQuery({ HitHighlightedProperties: properties });\n    };\n    SearchQueryBuilder.prototype.clientType = function (clientType) {\n        return this.extendQuery({ ClientType: clientType });\n    };\n    SearchQueryBuilder.prototype.personalizationData = function (data) {\n        return this.extendQuery({ PersonalizationData: data });\n    };\n    SearchQueryBuilder.prototype.resultsURL = function (url) {\n        return this.extendQuery({ ResultsUrl: url });\n    };\n    SearchQueryBuilder.prototype.queryTag = function () {\n        var tags = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            tags[_i] = arguments[_i];\n        }\n        return this.extendQuery({ QueryTag: tags });\n    };\n    SearchQueryBuilder.prototype.properties = function () {\n        var properties = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            properties[_i] = arguments[_i];\n        }\n        return this.extendQuery({ Properties: properties });\n    };\n    Object.defineProperty(SearchQueryBuilder.prototype, \"processPersonalFavorites\", {\n        get: function () {\n            return this.extendQuery({ ProcessPersonalFavorites: true });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    SearchQueryBuilder.prototype.queryTemplatePropertiesUrl = function (url) {\n        return this.extendQuery({ QueryTemplatePropertiesUrl: url });\n    };\n    SearchQueryBuilder.prototype.reorderingRules = function () {\n        var rules = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            rules[_i] = arguments[_i];\n        }\n        return this.extendQuery({ ReorderingRules: rules });\n    };\n    SearchQueryBuilder.prototype.hitHighlightedMultivaluePropertyLimit = function (limit) {\n        return this.extendQuery({ HitHighlightedMultivaluePropertyLimit: limit });\n    };\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enableOrderingHitHighlightedProperty\", {\n        get: function () {\n            return this.extendQuery({ EnableOrderingHitHighlightedProperty: true });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    SearchQueryBuilder.prototype.collapseSpecification = function (spec) {\n        return this.extendQuery({ CollapseSpecification: spec });\n    };\n    SearchQueryBuilder.prototype.uiLanguage = function (lang) {\n        return this.extendQuery({ UILanguage: lang });\n    };\n    SearchQueryBuilder.prototype.desiredSnippetLength = function (len) {\n        return this.extendQuery({ DesiredSnippetLength: len });\n    };\n    SearchQueryBuilder.prototype.maxSnippetLength = function (len) {\n        return this.extendQuery({ MaxSnippetLength: len });\n    };\n    SearchQueryBuilder.prototype.summaryLength = function (len) {\n        return this.extendQuery({ SummaryLength: len });\n    };\n    SearchQueryBuilder.prototype.toSearchQuery = function () {\n        return this._query;\n    };\n    SearchQueryBuilder.prototype.extendQuery = function (part) {\n        this._query = util_1.Util.extend(this._query, part);\n        return this;\n    };\n    return SearchQueryBuilder;\n}());\nexports.SearchQueryBuilder = SearchQueryBuilder;\n/**\n * Describes the search API\n *\n */\nvar Search = (function (_super) {\n    __extends(Search, _super);\n    /**\n     * Creates a new instance of the Search class\n     *\n     * @param baseUrl The url for the search context\n     * @param query The SearchQuery object to execute\n     */\n    function Search(baseUrl, path) {\n        if (path === void 0) { path = \"_api/search/postquery\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * .......\n     * @returns Promise\n     */\n    Search.prototype.execute = function (query) {\n        var _this = this;\n        var formattedBody;\n        formattedBody = query;\n        if (formattedBody.SelectProperties) {\n            formattedBody.SelectProperties = this.fixupProp(query.SelectProperties);\n        }\n        if (formattedBody.RefinementFilters) {\n            formattedBody.RefinementFilters = this.fixupProp(query.RefinementFilters);\n        }\n        if (formattedBody.SortList) {\n            formattedBody.SortList = this.fixupProp(query.SortList);\n        }\n        if (formattedBody.HithighlightedProperties) {\n            formattedBody.HithighlightedProperties = this.fixupProp(query.HitHighlightedProperties);\n        }\n        if (formattedBody.ReorderingRules) {\n            formattedBody.ReorderingRules = this.fixupProp(query.ReorderingRules);\n        }\n        if (formattedBody.Properties) {\n            formattedBody.Properties = this.fixupProp(query.Properties);\n        }\n        var postBody = JSON.stringify({\n            request: util_1.Util.extend({\n                \"__metadata\": { \"type\": \"Microsoft.Office.Server.Search.REST.SearchRequest\" },\n            }, formattedBody),\n        });\n        return this.postCore({ body: postBody }).then(function (data) { return new SearchResults(data, _this.toUrl(), query); });\n    };\n    /**\n     * Fixes up properties that expect to consist of a \"results\" collection when needed\n     *\n     * @param prop property to fixup for container struct\n     */\n    Search.prototype.fixupProp = function (prop) {\n        if (prop.hasOwnProperty(\"results\")) {\n            return prop;\n        }\n        return { results: prop };\n    };\n    return Search;\n}(queryable_1.QueryableInstance));\nexports.Search = Search;\n/**\n * Describes the SearchResults class, which returns the formatted and raw version of the query response\n */\nvar SearchResults = (function () {\n    /**\n     * Creates a new instance of the SearchResult class\n     *\n     */\n    function SearchResults(rawResponse, _url, _query, _raw, _primary) {\n        if (_raw === void 0) { _raw = null; }\n        if (_primary === void 0) { _primary = null; }\n        this._url = _url;\n        this._query = _query;\n        this._raw = _raw;\n        this._primary = _primary;\n        this._raw = rawResponse.postquery ? rawResponse.postquery : rawResponse;\n    }\n    Object.defineProperty(SearchResults.prototype, \"ElapsedTime\", {\n        get: function () {\n            return this.RawSearchResults.ElapsedTime;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchResults.prototype, \"RowCount\", {\n        get: function () {\n            return this.RawSearchResults.PrimaryQueryResult.RelevantResults.RowCount;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchResults.prototype, \"TotalRows\", {\n        get: function () {\n            return this.RawSearchResults.PrimaryQueryResult.RelevantResults.TotalRows;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchResults.prototype, \"TotalRowsIncludingDuplicates\", {\n        get: function () {\n            return this.RawSearchResults.PrimaryQueryResult.RelevantResults.TotalRowsIncludingDuplicates;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchResults.prototype, \"RawSearchResults\", {\n        get: function () {\n            return this._raw;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchResults.prototype, \"PrimarySearchResults\", {\n        get: function () {\n            if (this._primary === null) {\n                this._primary = this.formatSearchResults(this._raw.PrimaryQueryResult.RelevantResults.Table.Rows);\n            }\n            return this._primary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets a page of results\n     *\n     * @param pageNumber Index of the page to return. Used to determine StartRow\n     * @param pageSize Optional, items per page (default = 10)\n     */\n    SearchResults.prototype.getPage = function (pageNumber, pageSize) {\n        // if we got all the available rows we don't have another page\n        if (this.TotalRows < this.RowCount) {\n            return Promise.resolve(null);\n        }\n        // if pageSize is supplied, then we use that regardless of any previous values\n        // otherwise get the previous RowLimit or default to 10\n        var rows = typeof pageSize !== \"undefined\" ? pageSize : this._query.hasOwnProperty(\"RowLimit\") ? this._query.RowLimit : 10;\n        var query = util_1.Util.extend(this._query, {\n            RowLimit: rows,\n            StartRow: rows * (pageNumber - 1),\n        });\n        // we have reached the end\n        if (query.StartRow > this.TotalRows) {\n            return Promise.resolve(null);\n        }\n        var search = new Search(this._url, null);\n        return search.execute(query);\n    };\n    /**\n     * Formats a search results array\n     *\n     * @param rawResults The array to process\n     */\n    SearchResults.prototype.formatSearchResults = function (rawResults) {\n        var results = new Array();\n        var tempResults = rawResults.results ? rawResults.results : rawResults;\n        for (var _i = 0, tempResults_1 = tempResults; _i < tempResults_1.length; _i++) {\n            var tempResult = tempResults_1[_i];\n            var cells = tempResult.Cells.results ? tempResult.Cells.results : tempResult.Cells;\n            results.push(cells.reduce(function (res, cell) {\n                Object.defineProperty(res, cell.Key, {\n                    configurable: false,\n                    enumerable: false,\n                    value: cell.Value,\n                    writable: false,\n                });\n                return res;\n            }, {}));\n        }\n        return results;\n    };\n    return SearchResults;\n}());\nexports.SearchResults = SearchResults;\n/**\n * defines the SortDirection enum\n */\nvar SortDirection;\n(function (SortDirection) {\n    SortDirection[SortDirection[\"Ascending\"] = 0] = \"Ascending\";\n    SortDirection[SortDirection[\"Descending\"] = 1] = \"Descending\";\n    SortDirection[SortDirection[\"FQLFormula\"] = 2] = \"FQLFormula\";\n})(SortDirection = exports.SortDirection || (exports.SortDirection = {}));\n/**\n * defines the ReorderingRuleMatchType  enum\n */\nvar ReorderingRuleMatchType;\n(function (ReorderingRuleMatchType) {\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ResultContainsKeyword\"] = 0] = \"ResultContainsKeyword\";\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"TitleContainsKeyword\"] = 1] = \"TitleContainsKeyword\";\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"TitleMatchesKeyword\"] = 2] = \"TitleMatchesKeyword\";\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"UrlStartsWith\"] = 3] = \"UrlStartsWith\";\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"UrlExactlyMatches\"] = 4] = \"UrlExactlyMatches\";\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ContentTypeIs\"] = 5] = \"ContentTypeIs\";\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"FileExtensionMatches\"] = 6] = \"FileExtensionMatches\";\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ResultHasTag\"] = 7] = \"ResultHasTag\";\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ManualCondition\"] = 8] = \"ManualCondition\";\n})(ReorderingRuleMatchType = exports.ReorderingRuleMatchType || (exports.ReorderingRuleMatchType = {}));\n/**\n * Specifies the type value for the property\n */\nvar QueryPropertyValueType;\n(function (QueryPropertyValueType) {\n    QueryPropertyValueType[QueryPropertyValueType[\"None\"] = 0] = \"None\";\n    QueryPropertyValueType[QueryPropertyValueType[\"StringType\"] = 1] = \"StringType\";\n    QueryPropertyValueType[QueryPropertyValueType[\"Int32TYpe\"] = 2] = \"Int32TYpe\";\n    QueryPropertyValueType[QueryPropertyValueType[\"BooleanType\"] = 3] = \"BooleanType\";\n    QueryPropertyValueType[QueryPropertyValueType[\"StringArrayType\"] = 4] = \"StringArrayType\";\n    QueryPropertyValueType[QueryPropertyValueType[\"UnSupportedType\"] = 5] = \"UnSupportedType\";\n})(QueryPropertyValueType = exports.QueryPropertyValueType || (exports.QueryPropertyValueType = {}));\nvar SearchBuiltInSourceId = (function () {\n    function SearchBuiltInSourceId() {\n    }\n    SearchBuiltInSourceId.Documents = \"e7ec8cee-ded8-43c9-beb5-436b54b31e84\";\n    SearchBuiltInSourceId.ItemsMatchingContentType = \"5dc9f503-801e-4ced-8a2c-5d1237132419\";\n    SearchBuiltInSourceId.ItemsMatchingTag = \"e1327b9c-2b8c-4b23-99c9-3730cb29c3f7\";\n    SearchBuiltInSourceId.ItemsRelatedToCurrentUser = \"48fec42e-4a92-48ce-8363-c2703a40e67d\";\n    SearchBuiltInSourceId.ItemsWithSameKeywordAsThisItem = \"5c069288-1d17-454a-8ac6-9c642a065f48\";\n    SearchBuiltInSourceId.LocalPeopleResults = \"b09a7990-05ea-4af9-81ef-edfab16c4e31\";\n    SearchBuiltInSourceId.LocalReportsAndDataResults = \"203fba36-2763-4060-9931-911ac8c0583b\";\n    SearchBuiltInSourceId.LocalSharePointResults = \"8413cd39-2156-4e00-b54d-11efd9abdb89\";\n    SearchBuiltInSourceId.LocalVideoResults = \"78b793ce-7956-4669-aa3b-451fc5defebf\";\n    SearchBuiltInSourceId.Pages = \"5e34578e-4d08-4edc-8bf3-002acf3cdbcc\";\n    SearchBuiltInSourceId.Pictures = \"38403c8c-3975-41a8-826e-717f2d41568a\";\n    SearchBuiltInSourceId.Popular = \"97c71db1-58ce-4891-8b64-585bc2326c12\";\n    SearchBuiltInSourceId.RecentlyChangedItems = \"ba63bbae-fa9c-42c0-b027-9a878f16557c\";\n    SearchBuiltInSourceId.RecommendedItems = \"ec675252-14fa-4fbe-84dd-8d098ed74181\";\n    SearchBuiltInSourceId.Wiki = \"9479bf85-e257-4318-b5a8-81a180f5faa1\";\n    return SearchBuiltInSourceId;\n}());\nexports.SearchBuiltInSourceId = SearchBuiltInSourceId;\n\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar storage_1 = __webpack_require__(15);\nvar util_1 = __webpack_require__(0);\nvar pnplibconfig_1 = __webpack_require__(4);\nvar CachingOptions = (function () {\n    function CachingOptions(key) {\n        this.key = key;\n        this.expiration = util_1.Util.dateAdd(new Date(), \"second\", pnplibconfig_1.RuntimeConfig.defaultCachingTimeoutSeconds);\n        this.storeName = pnplibconfig_1.RuntimeConfig.defaultCachingStore;\n    }\n    Object.defineProperty(CachingOptions.prototype, \"store\", {\n        get: function () {\n            if (this.storeName === \"local\") {\n                return CachingOptions.storage.local;\n            }\n            else {\n                return CachingOptions.storage.session;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CachingOptions.storage = new storage_1.PnPClientStorage();\n    return CachingOptions;\n}());\nexports.CachingOptions = CachingOptions;\nvar CachingParserWrapper = (function () {\n    function CachingParserWrapper(_parser, _cacheOptions) {\n        this._parser = _parser;\n        this._cacheOptions = _cacheOptions;\n    }\n    CachingParserWrapper.prototype.parse = function (response) {\n        var _this = this;\n        // add this to the cache based on the options\n        return this._parser.parse(response).then(function (data) {\n            if (_this._cacheOptions.store !== null) {\n                _this._cacheOptions.store.put(_this._cacheOptions.key, data, _this._cacheOptions.expiration);\n            }\n            return data;\n        });\n    };\n    return CachingParserWrapper;\n}());\nexports.CachingParserWrapper = CachingParserWrapper;\n\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = __webpack_require__(1);\nvar SearchSuggest = (function (_super) {\n    __extends(SearchSuggest, _super);\n    function SearchSuggest(baseUrl, path) {\n        if (path === void 0) { path = \"_api/search/suggest\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    SearchSuggest.prototype.execute = function (query) {\n        this.mapQueryToQueryString(query);\n        return this.get().then(function (response) { return new SearchSuggestResult(response); });\n    };\n    SearchSuggest.prototype.mapQueryToQueryString = function (query) {\n        this.query.add(\"querytext\", \"'\" + query.querytext + \"'\");\n        if (query.hasOwnProperty(\"count\")) {\n            this.query.add(\"inumberofquerysuggestions\", query.count.toString());\n        }\n        if (query.hasOwnProperty(\"personalCount\")) {\n            this.query.add(\"inumberofresultsuggestions\", query.personalCount.toString());\n        }\n        if (query.hasOwnProperty(\"preQuery\")) {\n            this.query.add(\"fprequerysuggestions\", query.preQuery.toString());\n        }\n        if (query.hasOwnProperty(\"hitHighlighting\")) {\n            this.query.add(\"fhithighlighting\", query.hitHighlighting.toString());\n        }\n        if (query.hasOwnProperty(\"capitalize\")) {\n            this.query.add(\"fcapitalizefirstletters\", query.capitalize.toString());\n        }\n        if (query.hasOwnProperty(\"culture\")) {\n            this.query.add(\"culture\", query.culture.toString());\n        }\n        if (query.hasOwnProperty(\"stemming\")) {\n            this.query.add(\"enablestemming\", query.stemming.toString());\n        }\n        if (query.hasOwnProperty(\"includePeople\")) {\n            this.query.add(\"showpeoplenamesuggestions\", query.includePeople.toString());\n        }\n        if (query.hasOwnProperty(\"queryRules\")) {\n            this.query.add(\"enablequeryrules\", query.queryRules.toString());\n        }\n        if (query.hasOwnProperty(\"prefixMatch\")) {\n            this.query.add(\"fprefixmatchallterms\", query.prefixMatch.toString());\n        }\n    };\n    return SearchSuggest;\n}(queryable_1.QueryableInstance));\nexports.SearchSuggest = SearchSuggest;\nvar SearchSuggestResult = (function () {\n    function SearchSuggestResult(json) {\n        if (json.hasOwnProperty(\"suggest\")) {\n            // verbose\n            this.PeopleNames = json.suggest.PeopleNames.results;\n            this.PersonalResults = json.suggest.PersonalResults.results;\n            this.Queries = json.suggest.Queries.results;\n        }\n        else {\n            this.PeopleNames = json.PeopleNames;\n            this.PersonalResults = json.PersonalResults;\n            this.Queries = json.Queries;\n        }\n    }\n    return SearchSuggestResult;\n}());\nexports.SearchSuggestResult = SearchSuggestResult;\n\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = __webpack_require__(1);\nvar webs_1 = __webpack_require__(7);\nvar usercustomactions_1 = __webpack_require__(19);\nvar odata_1 = __webpack_require__(2);\nvar features_1 = __webpack_require__(31);\n/**\n * Describes a site collection\n *\n */\nvar Site = (function (_super) {\n    __extends(Site, _super);\n    /**\n     * Creates a new instance of the Site class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this site collection\n     */\n    function Site(baseUrl, path) {\n        if (path === void 0) { path = \"_api/site\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    Object.defineProperty(Site.prototype, \"rootWeb\", {\n        /**\n         * Gets the root web of the site collection\n         *\n         */\n        get: function () {\n            return new webs_1.Web(this, \"rootweb\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Site.prototype, \"features\", {\n        /**\n         * Gets the active features for this site collection\n         *\n         */\n        get: function () {\n            return new features_1.Features(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Site.prototype, \"userCustomActions\", {\n        /**\n         * Gets all custom actions for this site collection\n         *\n         */\n        get: function () {\n            return new usercustomactions_1.UserCustomActions(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the context information for this site collection\n     */\n    Site.prototype.getContextInfo = function () {\n        var q = new Site(this.parentUrl, \"_api/contextinfo\");\n        return q.postCore().then(function (data) {\n            if (data.hasOwnProperty(\"GetContextWebInformation\")) {\n                var info = data.GetContextWebInformation;\n                info.SupportedSchemaVersions = info.SupportedSchemaVersions.results;\n                return info;\n            }\n            else {\n                return data;\n            }\n        });\n    };\n    /**\n     * Gets the document libraries on a site. Static method. (SharePoint Online only)\n     *\n     * @param absoluteWebUrl The absolute url of the web whose document libraries should be returned\n     */\n    Site.prototype.getDocumentLibraries = function (absoluteWebUrl) {\n        var q = new queryable_1.Queryable(\"\", \"_api/sp.web.getdocumentlibraries(@v)\");\n        q.query.add(\"@v\", \"'\" + absoluteWebUrl + \"'\");\n        return q.get().then(function (data) {\n            if (data.hasOwnProperty(\"GetDocumentLibraries\")) {\n                return data.GetDocumentLibraries;\n            }\n            else {\n                return data;\n            }\n        });\n    };\n    /**\n     * Gets the site url from a page url\n     *\n     * @param absolutePageUrl The absolute url of the page\n     */\n    Site.prototype.getWebUrlFromPageUrl = function (absolutePageUrl) {\n        var q = new queryable_1.Queryable(\"\", \"_api/sp.web.getweburlfrompageurl(@v)\");\n        q.query.add(\"@v\", \"'\" + absolutePageUrl + \"'\");\n        return q.get().then(function (data) {\n            if (data.hasOwnProperty(\"GetWebUrlFromPageUrl\")) {\n                return data.GetWebUrlFromPageUrl;\n            }\n            else {\n                return data;\n            }\n        });\n    };\n    /**\n     * Creates a new batch for requests within the context of this site collection\n     *\n     */\n    Site.prototype.createBatch = function () {\n        return new odata_1.ODataBatch(this.parentUrl);\n    };\n    /**\n     * Opens a web by id (using POST)\n     *\n     * @param webId The GUID id of the web to open\n     */\n    Site.prototype.openWebById = function (webId) {\n        return this.clone(Site, \"openWebById('\" + webId + \"')\", true).postCore().then(function (d) {\n            return {\n                data: d,\n                web: webs_1.Web.fromUrl(odata_1.extractOdataId(d)),\n            };\n        });\n    };\n    return Site;\n}(queryable_1.QueryableInstance));\nexports.Site = Site;\n\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar webs_1 = __webpack_require__(7);\nvar roles_1 = __webpack_require__(16);\nvar types_1 = __webpack_require__(13);\nvar queryable_1 = __webpack_require__(1);\nvar QueryableSecurable = (function (_super) {\n    __extends(QueryableSecurable, _super);\n    function QueryableSecurable() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(QueryableSecurable.prototype, \"roleAssignments\", {\n        /**\n         * Gets the set of role assignments for this item\n         *\n         */\n        get: function () {\n            return new roles_1.RoleAssignments(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(QueryableSecurable.prototype, \"firstUniqueAncestorSecurableObject\", {\n        /**\n         * Gets the closest securable up the security hierarchy whose permissions are applied to this list item\n         *\n         */\n        get: function () {\n            return new queryable_1.QueryableInstance(this, \"FirstUniqueAncestorSecurableObject\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the effective permissions for the user supplied\n     *\n     * @param loginName The claims username for the user (ex: i:0#.f|membership|user@domain.com)\n     */\n    QueryableSecurable.prototype.getUserEffectivePermissions = function (loginName) {\n        var q = this.clone(queryable_1.Queryable, \"getUserEffectivePermissions(@user)\", true);\n        q.query.add(\"@user\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return q.get().then(function (r) {\n            // handle verbose mode\n            return r.hasOwnProperty(\"GetUserEffectivePermissions\") ? r.GetUserEffectivePermissions : r;\n        });\n    };\n    /**\n     * Gets the effective permissions for the current user\n     */\n    QueryableSecurable.prototype.getCurrentUserEffectivePermissions = function () {\n        var _this = this;\n        var w = webs_1.Web.fromUrl(this.toUrl());\n        return w.currentUser.select(\"LoginName\").getAs().then(function (user) {\n            return _this.getUserEffectivePermissions(user.LoginName);\n        });\n    };\n    /**\n     * Breaks the security inheritance at this level optinally copying permissions and clearing subscopes\n     *\n     * @param copyRoleAssignments If true the permissions are copied from the current parent scope\n     * @param clearSubscopes Optional. true to make all child securable objects inherit role assignments from the current object\n     */\n    QueryableSecurable.prototype.breakRoleInheritance = function (copyRoleAssignments, clearSubscopes) {\n        if (copyRoleAssignments === void 0) { copyRoleAssignments = false; }\n        if (clearSubscopes === void 0) { clearSubscopes = false; }\n        return this.clone(QueryableSecurable, \"breakroleinheritance(copyroleassignments=\" + copyRoleAssignments + \", clearsubscopes=\" + clearSubscopes + \")\", true).postCore();\n    };\n    /**\n     * Removes the local role assignments so that it re-inherit role assignments from the parent object.\n     *\n     */\n    QueryableSecurable.prototype.resetRoleInheritance = function () {\n        return this.clone(QueryableSecurable, \"resetroleinheritance\", true).postCore();\n    };\n    /**\n     * Determines if a given user has the appropriate permissions\n     *\n     * @param loginName The user to check\n     * @param permission The permission being checked\n     */\n    QueryableSecurable.prototype.userHasPermissions = function (loginName, permission) {\n        var _this = this;\n        return this.getUserEffectivePermissions(loginName).then(function (perms) {\n            return _this.hasPermissions(perms, permission);\n        });\n    };\n    /**\n     * Determines if the current user has the requested permissions\n     *\n     * @param permission The permission we wish to check\n     */\n    QueryableSecurable.prototype.currentUserHasPermissions = function (permission) {\n        var _this = this;\n        return this.getCurrentUserEffectivePermissions().then(function (perms) {\n            return _this.hasPermissions(perms, permission);\n        });\n    };\n    /**\n     * Taken from sp.js, checks the supplied permissions against the mask\n     *\n     * @param value The security principal's permissions on the given object\n     * @param perm The permission checked against the value\n     */\n    /* tslint:disable:no-bitwise */\n    QueryableSecurable.prototype.hasPermissions = function (value, perm) {\n        if (!perm) {\n            return true;\n        }\n        if (perm === types_1.PermissionKind.FullMask) {\n            return (value.High & 32767) === 32767 && value.Low === 65535;\n        }\n        perm = perm - 1;\n        var num = 1;\n        if (perm >= 0 && perm < 32) {\n            num = num << perm;\n            return 0 !== (value.Low & num);\n        }\n        else if (perm >= 32 && perm < 64) {\n            num = num << perm - 32;\n            return 0 !== (value.High & num);\n        }\n        return false;\n    };\n    return QueryableSecurable;\n}(queryable_1.QueryableInstance));\nexports.QueryableSecurable = QueryableSecurable;\n\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = __webpack_require__(1);\nvar sitegroups_1 = __webpack_require__(17);\nvar util_1 = __webpack_require__(0);\n/**\n * Describes a collection of all site collection users\n *\n */\nvar SiteUsers = (function (_super) {\n    __extends(SiteUsers, _super);\n    /**\n     * Creates a new instance of the SiteUsers class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this user collection\n     */\n    function SiteUsers(baseUrl, path) {\n        if (path === void 0) { path = \"siteusers\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a user from the collection by email\n     *\n     * @param email The email address of the user to retrieve\n     */\n    SiteUsers.prototype.getByEmail = function (email) {\n        return new SiteUser(this, \"getByEmail('\" + email + \"')\");\n    };\n    /**\n     * Gets a user from the collection by id\n     *\n     * @param id The id of the user to retrieve\n     */\n    SiteUsers.prototype.getById = function (id) {\n        return new SiteUser(this, \"getById(\" + id + \")\");\n    };\n    /**\n     * Gets a user from the collection by login name\n     *\n     * @param loginName The login name of the user to retrieve\n     */\n    SiteUsers.prototype.getByLoginName = function (loginName) {\n        var su = new SiteUser(this);\n        su.concat(\"(@v)\");\n        su.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return su;\n    };\n    /**\n     * Removes a user from the collection by id\n     *\n     * @param id The id of the user to remove\n     */\n    SiteUsers.prototype.removeById = function (id) {\n        return this.clone(SiteUsers, \"removeById(\" + id + \")\", true).postCore();\n    };\n    /**\n     * Removes a user from the collection by login name\n     *\n     * @param loginName The login name of the user to remove\n     */\n    SiteUsers.prototype.removeByLoginName = function (loginName) {\n        var o = this.clone(SiteUsers, \"removeByLoginName(@v)\", true);\n        o.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return o.postCore();\n    };\n    /**\n     * Adds a user to a group\n     *\n     * @param loginName The login name of the user to add to the group\n     *\n     */\n    SiteUsers.prototype.add = function (loginName) {\n        var _this = this;\n        return this.clone(SiteUsers, null, true).postCore({\n            body: JSON.stringify({ \"__metadata\": { \"type\": \"SP.User\" }, LoginName: loginName }),\n        }).then(function () { return _this.getByLoginName(loginName); });\n    };\n    return SiteUsers;\n}(queryable_1.QueryableCollection));\nexports.SiteUsers = SiteUsers;\n/**\n * Describes a single user\n *\n */\nvar SiteUser = (function (_super) {\n    __extends(SiteUser, _super);\n    function SiteUser() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(SiteUser.prototype, \"groups\", {\n        /**\n         * Gets the groups for this user\n         *\n         */\n        get: function () {\n            return new sitegroups_1.SiteGroups(this, \"groups\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n    * Updates this user instance with the supplied properties\n    *\n    * @param properties A plain object of property names and values to update for the user\n    */\n    SiteUser.prototype.update = function (properties) {\n        var _this = this;\n        var postBody = util_1.Util.extend({ \"__metadata\": { \"type\": \"SP.User\" } }, properties);\n        return this.postCore({\n            body: JSON.stringify(postBody),\n            headers: {\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then(function (data) {\n            return {\n                data: data,\n                user: _this,\n            };\n        });\n    };\n    /**\n     * Delete this user\n     *\n     */\n    SiteUser.prototype.delete = function () {\n        return this.postCore({\n            headers: {\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    return SiteUser;\n}(queryable_1.QueryableInstance));\nexports.SiteUser = SiteUser;\n/**\n * Represents the current user\n */\nvar CurrentUser = (function (_super) {\n    __extends(CurrentUser, _super);\n    function CurrentUser(baseUrl, path) {\n        if (path === void 0) { path = \"currentuser\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    return CurrentUser;\n}(queryable_1.QueryableInstance));\nexports.CurrentUser = CurrentUser;\n\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = __webpack_require__(1);\nvar LimitedWebPartManager = (function (_super) {\n    __extends(LimitedWebPartManager, _super);\n    function LimitedWebPartManager() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(LimitedWebPartManager.prototype, \"webparts\", {\n        /**\n         * Gets the set of web part definitions contained by this web part manager\n         *\n         */\n        get: function () {\n            return new WebPartDefinitions(this, \"webparts\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Exports a webpart definition\n     *\n     * @param id the GUID id of the definition to export\n     */\n    LimitedWebPartManager.prototype.export = function (id) {\n        return this.clone(LimitedWebPartManager, \"ExportWebPart\", true).postCore({\n            body: JSON.stringify({ webPartId: id }),\n        });\n    };\n    /**\n     * Imports a webpart\n     *\n     * @param xml webpart definition which must be valid XML in the .dwp or .webpart format\n     */\n    LimitedWebPartManager.prototype.import = function (xml) {\n        return this.clone(LimitedWebPartManager, \"ImportWebPart\", true).postCore({\n            body: JSON.stringify({ webPartXml: xml }),\n        });\n    };\n    return LimitedWebPartManager;\n}(queryable_1.Queryable));\nexports.LimitedWebPartManager = LimitedWebPartManager;\nvar WebPartDefinitions = (function (_super) {\n    __extends(WebPartDefinitions, _super);\n    function WebPartDefinitions() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Gets a web part definition from the collection by id\n     *\n     * @param id The storage ID of the SPWebPartDefinition to retrieve\n     */\n    WebPartDefinitions.prototype.getById = function (id) {\n        return new WebPartDefinition(this, \"getbyid('\" + id + \"')\");\n    };\n    /**\n     * Gets a web part definition from the collection by storage id\n     *\n     * @param id The WebPart.ID of the SPWebPartDefinition to retrieve\n     */\n    WebPartDefinitions.prototype.getByControlId = function (id) {\n        return new WebPartDefinition(this, \"getByControlId('\" + id + \"')\");\n    };\n    return WebPartDefinitions;\n}(queryable_1.QueryableCollection));\nexports.WebPartDefinitions = WebPartDefinitions;\nvar WebPartDefinition = (function (_super) {\n    __extends(WebPartDefinition, _super);\n    function WebPartDefinition() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(WebPartDefinition.prototype, \"webpart\", {\n        /**\n         * Gets the webpart information associated with this definition\n         */\n        get: function () {\n            return new WebPart(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Saves changes to the Web Part made using other properties and methods on the SPWebPartDefinition object\n     */\n    WebPartDefinition.prototype.saveChanges = function () {\n        return this.clone(WebPartDefinition, \"SaveWebPartChanges\", true).postCore();\n    };\n    /**\n     * Moves the Web Part to a different location on a Web Part Page\n     *\n     * @param zoneId The ID of the Web Part Zone to which to move the Web Part\n     * @param zoneIndex A Web Part zone index that specifies the position at which the Web Part is to be moved within the destination Web Part zone\n     */\n    WebPartDefinition.prototype.moveTo = function (zoneId, zoneIndex) {\n        return this.clone(WebPartDefinition, \"MoveWebPartTo(zoneID='\" + zoneId + \"', zoneIndex=\" + zoneIndex + \")\", true).postCore();\n    };\n    /**\n     * Closes the Web Part. If the Web Part is already closed, this method does nothing\n     */\n    WebPartDefinition.prototype.close = function () {\n        return this.clone(WebPartDefinition, \"CloseWebPart\", true).postCore();\n    };\n    /**\n     * Opens the Web Part. If the Web Part is already closed, this method does nothing\n     */\n    WebPartDefinition.prototype.open = function () {\n        return this.clone(WebPartDefinition, \"OpenWebPart\", true).postCore();\n    };\n    /**\n     * Removes a webpart from a page, all settings will be lost\n     */\n    WebPartDefinition.prototype.delete = function () {\n        return this.clone(WebPartDefinition, \"DeleteWebPart\", true).postCore();\n    };\n    return WebPartDefinition;\n}(queryable_1.QueryableInstance));\nexports.WebPartDefinition = WebPartDefinition;\nvar WebPart = (function (_super) {\n    __extends(WebPart, _super);\n    /**\n     * Creates a new instance of the WebPart class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     * @param path Optional, if supplied will be appended to the supplied baseUrl\n     */\n    function WebPart(baseUrl, path) {\n        if (path === void 0) { path = \"webpart\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    return WebPart;\n}(queryable_1.QueryableInstance));\nexports.WebPart = WebPart;\n\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = __webpack_require__(1);\nvar util_1 = __webpack_require__(0);\nvar types_1 = __webpack_require__(13);\n/**\n * Describes a collection of Field objects\n *\n */\nvar Fields = (function (_super) {\n    __extends(Fields, _super);\n    /**\n     * Creates a new instance of the Fields class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    function Fields(baseUrl, path) {\n        if (path === void 0) { path = \"fields\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a field from the collection by title\n     *\n     * @param title The case-sensitive title of the field\n     */\n    Fields.prototype.getByTitle = function (title) {\n        return new Field(this, \"getByTitle('\" + title + \"')\");\n    };\n    /**\n     * Gets a field from the collection by using internal name or title\n     *\n     * @param name The case-sensitive internal name or title of the field\n     */\n    Fields.prototype.getByInternalNameOrTitle = function (name) {\n        return new Field(this, \"getByInternalNameOrTitle('\" + name + \"')\");\n    };\n    /**\n     * Gets a list from the collection by guid id\n     *\n     * @param title The Id of the list\n     */\n    Fields.prototype.getById = function (id) {\n        var f = new Field(this);\n        f.concat(\"('\" + id + \"')\");\n        return f;\n    };\n    /**\n     * Creates a field based on the specified schema\n     */\n    Fields.prototype.createFieldAsXml = function (xml) {\n        var _this = this;\n        var info;\n        if (typeof xml === \"string\") {\n            info = { SchemaXml: xml };\n        }\n        else {\n            info = xml;\n        }\n        var postBody = JSON.stringify({\n            \"parameters\": util_1.Util.extend({\n                \"__metadata\": {\n                    \"type\": \"SP.XmlSchemaFieldCreationInformation\",\n                },\n            }, info),\n        });\n        return this.clone(Fields, \"createfieldasxml\", true).postAsCore({ body: postBody }).then(function (data) {\n            return {\n                data: data,\n                field: _this.getById(data.Id),\n            };\n        });\n    };\n    /**\n     * Adds a new list to the collection\n     *\n     * @param title The new field's title\n     * @param fieldType The new field's type (ex: SP.FieldText)\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\n     */\n    Fields.prototype.add = function (title, fieldType, properties) {\n        var _this = this;\n        if (properties === void 0) { properties = {}; }\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"Title\": title,\n            \"__metadata\": { \"type\": fieldType },\n        }, properties));\n        return this.clone(Fields, null, true).postAsCore({ body: postBody }).then(function (data) {\n            return {\n                data: data,\n                field: _this.getById(data.Id),\n            };\n        });\n    };\n    /**\n     * Adds a new SP.FieldText to the collection\n     *\n     * @param title The field title\n     * @param maxLength The maximum number of characters allowed in the value of the field.\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\n     */\n    Fields.prototype.addText = function (title, maxLength, properties) {\n        if (maxLength === void 0) { maxLength = 255; }\n        var props = {\n            FieldTypeKind: 2,\n            MaxLength: maxLength,\n        };\n        return this.add(title, \"SP.FieldText\", util_1.Util.extend(props, properties));\n    };\n    /**\n     * Adds a new SP.FieldCalculated to the collection\n     *\n     * @param title The field title.\n     * @param formula The formula for the field.\n     * @param dateFormat The date and time format that is displayed in the field.\n     * @param outputType Specifies the output format for the field. Represents a FieldType value.\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\n     */\n    Fields.prototype.addCalculated = function (title, formula, dateFormat, outputType, properties) {\n        if (outputType === void 0) { outputType = types_1.FieldTypes.Text; }\n        var props = {\n            DateFormat: dateFormat,\n            FieldTypeKind: 17,\n            Formula: formula,\n            OutputType: outputType,\n        };\n        return this.add(title, \"SP.FieldCalculated\", util_1.Util.extend(props, properties));\n    };\n    /**\n     * Adds a new SP.FieldDateTime to the collection\n     *\n     * @param title The field title\n     * @param displayFormat The format of the date and time that is displayed in the field.\n     * @param calendarType Specifies the calendar type of the field.\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\n     */\n    Fields.prototype.addDateTime = function (title, displayFormat, calendarType, friendlyDisplayFormat, properties) {\n        if (displayFormat === void 0) { displayFormat = types_1.DateTimeFieldFormatType.DateOnly; }\n        if (calendarType === void 0) { calendarType = types_1.CalendarType.Gregorian; }\n        if (friendlyDisplayFormat === void 0) { friendlyDisplayFormat = 0; }\n        var props = {\n            DateTimeCalendarType: calendarType,\n            DisplayFormat: displayFormat,\n            FieldTypeKind: 4,\n            FriendlyDisplayFormat: friendlyDisplayFormat,\n        };\n        return this.add(title, \"SP.FieldDateTime\", util_1.Util.extend(props, properties));\n    };\n    /**\n     * Adds a new SP.FieldNumber to the collection\n     *\n     * @param title The field title\n     * @param minValue The field's minimum value\n     * @param maxValue The field's maximum value\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\n     */\n    Fields.prototype.addNumber = function (title, minValue, maxValue, properties) {\n        var props = { FieldTypeKind: 9 };\n        if (typeof minValue !== \"undefined\") {\n            props = util_1.Util.extend({ MinimumValue: minValue }, props);\n        }\n        if (typeof maxValue !== \"undefined\") {\n            props = util_1.Util.extend({ MaximumValue: maxValue }, props);\n        }\n        return this.add(title, \"SP.FieldNumber\", util_1.Util.extend(props, properties));\n    };\n    /**\n     * Adds a new SP.FieldCurrency to the collection\n     *\n     * @param title The field title\n     * @param minValue The field's minimum value\n     * @param maxValue The field's maximum value\n     * @param currencyLocalId Specifies the language code identifier (LCID) used to format the value of the field\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\n     */\n    Fields.prototype.addCurrency = function (title, minValue, maxValue, currencyLocalId, properties) {\n        if (currencyLocalId === void 0) { currencyLocalId = 1033; }\n        var props = {\n            CurrencyLocaleId: currencyLocalId,\n            FieldTypeKind: 10,\n        };\n        if (typeof minValue !== \"undefined\") {\n            props = util_1.Util.extend({ MinimumValue: minValue }, props);\n        }\n        if (typeof maxValue !== \"undefined\") {\n            props = util_1.Util.extend({ MaximumValue: maxValue }, props);\n        }\n        return this.add(title, \"SP.FieldCurrency\", util_1.Util.extend(props, properties));\n    };\n    /**\n     * Adds a new SP.FieldMultiLineText to the collection\n     *\n     * @param title The field title\n     * @param numberOfLines Specifies the number of lines of text to display for the field.\n     * @param richText Specifies whether the field supports rich formatting.\n     * @param restrictedMode Specifies whether the field supports a subset of rich formatting.\n     * @param appendOnly Specifies whether all changes to the value of the field are displayed in list forms.\n     * @param allowHyperlink Specifies whether a hyperlink is allowed as a value of the field.\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\n     *\n     */\n    Fields.prototype.addMultilineText = function (title, numberOfLines, richText, restrictedMode, appendOnly, allowHyperlink, properties) {\n        if (numberOfLines === void 0) { numberOfLines = 6; }\n        if (richText === void 0) { richText = true; }\n        if (restrictedMode === void 0) { restrictedMode = false; }\n        if (appendOnly === void 0) { appendOnly = false; }\n        if (allowHyperlink === void 0) { allowHyperlink = true; }\n        var props = {\n            AllowHyperlink: allowHyperlink,\n            AppendOnly: appendOnly,\n            FieldTypeKind: 3,\n            NumberOfLines: numberOfLines,\n            RestrictedMode: restrictedMode,\n            RichText: richText,\n        };\n        return this.add(title, \"SP.FieldMultiLineText\", util_1.Util.extend(props, properties));\n    };\n    /**\n     * Adds a new SP.FieldUrl to the collection\n     *\n     * @param title The field title\n     */\n    Fields.prototype.addUrl = function (title, displayFormat, properties) {\n        if (displayFormat === void 0) { displayFormat = types_1.UrlFieldFormatType.Hyperlink; }\n        var props = {\n            DisplayFormat: displayFormat,\n            FieldTypeKind: 11,\n        };\n        return this.add(title, \"SP.FieldUrl\", util_1.Util.extend(props, properties));\n    };\n    return Fields;\n}(queryable_1.QueryableCollection));\nexports.Fields = Fields;\n/**\n * Describes a single of Field instance\n *\n */\nvar Field = (function (_super) {\n    __extends(Field, _super);\n    function Field() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Updates this field intance with the supplied properties\n     *\n     * @param properties A plain object hash of values to update for the list\n     * @param fieldType The type value, required to update child field type properties\n     */\n    Field.prototype.update = function (properties, fieldType) {\n        var _this = this;\n        if (fieldType === void 0) { fieldType = \"SP.Field\"; }\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"__metadata\": { \"type\": fieldType },\n        }, properties));\n        return this.postCore({\n            body: postBody,\n            headers: {\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then(function (data) {\n            return {\n                data: data,\n                field: _this,\n            };\n        });\n    };\n    /**\n     * Delete this fields\n     *\n     */\n    Field.prototype.delete = function () {\n        return this.postCore({\n            headers: {\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    /**\n     * Sets the value of the ShowInDisplayForm property for this field.\n     */\n    Field.prototype.setShowInDisplayForm = function (show) {\n        return this.clone(Field, \"setshowindisplayform(\" + show + \")\", true).postCore();\n    };\n    /**\n     * Sets the value of the ShowInEditForm property for this field.\n     */\n    Field.prototype.setShowInEditForm = function (show) {\n        return this.clone(Field, \"setshowineditform(\" + show + \")\", true).postCore();\n    };\n    /**\n     * Sets the value of the ShowInNewForm property for this field.\n     */\n    Field.prototype.setShowInNewForm = function (show) {\n        return this.clone(Field, \"setshowinnewform(\" + show + \")\", true).postCore();\n    };\n    return Field;\n}(queryable_1.QueryableInstance));\nexports.Field = Field;\n\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = __webpack_require__(0);\nvar queryable_1 = __webpack_require__(1);\n/**\n * Represents a collection of navigation nodes\n *\n */\nvar NavigationNodes = (function (_super) {\n    __extends(NavigationNodes, _super);\n    function NavigationNodes() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Gets a navigation node by id\n     *\n     * @param id The id of the node\n     */\n    NavigationNodes.prototype.getById = function (id) {\n        var node = new NavigationNode(this);\n        node.concat(\"(\" + id + \")\");\n        return node;\n    };\n    /**\n     * Adds a new node to the collection\n     *\n     * @param title Display name of the node\n     * @param url The url of the node\n     * @param visible If true the node is visible, otherwise it is hidden (default: true)\n     */\n    NavigationNodes.prototype.add = function (title, url, visible) {\n        var _this = this;\n        if (visible === void 0) { visible = true; }\n        var postBody = JSON.stringify({\n            IsVisible: visible,\n            Title: title,\n            Url: url,\n            \"__metadata\": { \"type\": \"SP.NavigationNode\" },\n        });\n        return this.clone(NavigationNodes, null, true).postCore({ body: postBody }).then(function (data) {\n            return {\n                data: data,\n                node: _this.getById(data.Id),\n            };\n        });\n    };\n    /**\n     * Moves a node to be after another node in the navigation\n     *\n     * @param nodeId Id of the node to move\n     * @param previousNodeId Id of the node after which we move the node specified by nodeId\n     */\n    NavigationNodes.prototype.moveAfter = function (nodeId, previousNodeId) {\n        var postBody = JSON.stringify({\n            nodeId: nodeId,\n            previousNodeId: previousNodeId,\n        });\n        return this.clone(NavigationNodes, \"MoveAfter\", true).postCore({ body: postBody });\n    };\n    return NavigationNodes;\n}(queryable_1.QueryableCollection));\nexports.NavigationNodes = NavigationNodes;\n/**\n * Represents an instance of a navigation node\n *\n */\nvar NavigationNode = (function (_super) {\n    __extends(NavigationNode, _super);\n    function NavigationNode() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(NavigationNode.prototype, \"children\", {\n        /**\n         * Represents the child nodes of this node\n         */\n        get: function () {\n            return new NavigationNodes(this, \"Children\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Updates this node based on the supplied properties\n     *\n     * @param properties The hash of key/value pairs to update\n     */\n    NavigationNode.prototype.update = function (properties) {\n        var _this = this;\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"__metadata\": { \"type\": \"SP.NavigationNode\" },\n        }, properties));\n        return this.postCore({\n            body: postBody,\n            headers: {\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then(function (data) {\n            return {\n                data: data,\n                node: _this,\n            };\n        });\n    };\n    /**\n     * Deletes this node and any child nodes\n     */\n    NavigationNode.prototype.delete = function () {\n        return _super.prototype.deleteCore.call(this);\n    };\n    return NavigationNode;\n}(queryable_1.QueryableInstance));\nexports.NavigationNode = NavigationNode;\n/**\n * Exposes the navigation components\n *\n */\nvar Navigation = (function (_super) {\n    __extends(Navigation, _super);\n    /**\n     * Creates a new instance of the Navigation class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of these navigation components\n     */\n    function Navigation(baseUrl, path) {\n        if (path === void 0) { path = \"navigation\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    Object.defineProperty(Navigation.prototype, \"quicklaunch\", {\n        /**\n         * Gets the quicklaunch navigation nodes for the current context\n         *\n         */\n        get: function () {\n            return new NavigationNodes(this, \"quicklaunch\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Navigation.prototype, \"topNavigationBar\", {\n        /**\n         * Gets the top bar navigation nodes for the current context\n         *\n         */\n        get: function () {\n            return new NavigationNodes(this, \"topnavigationbar\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Navigation;\n}(queryable_1.Queryable));\nexports.Navigation = Navigation;\n\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = __webpack_require__(1);\n/**\n * Describes a collection of List objects\n *\n */\nvar Features = (function (_super) {\n    __extends(Features, _super);\n    /**\n     * Creates a new instance of the Lists class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    function Features(baseUrl, path) {\n        if (path === void 0) { path = \"features\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a list from the collection by guid id\n     *\n     * @param id The Id of the feature (GUID)\n     */\n    Features.prototype.getById = function (id) {\n        var feature = new Feature(this);\n        feature.concat(\"('\" + id + \"')\");\n        return feature;\n    };\n    /**\n     * Adds a new list to the collection\n     *\n     * @param id The Id of the feature (GUID)\n     * @param force If true the feature activation will be forced\n     */\n    Features.prototype.add = function (id, force) {\n        var _this = this;\n        if (force === void 0) { force = false; }\n        return this.clone(Features, \"add\", true).postCore({\n            body: JSON.stringify({\n                featdefScope: 0,\n                featureId: id,\n                force: force,\n            }),\n        }).then(function (data) {\n            return {\n                data: data,\n                feature: _this.getById(id),\n            };\n        });\n    };\n    /**\n     * Removes (deactivates) a feature from the collection\n     *\n     * @param id The Id of the feature (GUID)\n     * @param force If true the feature deactivation will be forced\n     */\n    Features.prototype.remove = function (id, force) {\n        if (force === void 0) { force = false; }\n        return this.clone(Features, \"remove\", true).postCore({\n            body: JSON.stringify({\n                featureId: id,\n                force: force,\n            }),\n        });\n    };\n    return Features;\n}(queryable_1.QueryableCollection));\nexports.Features = Features;\nvar Feature = (function (_super) {\n    __extends(Feature, _super);\n    function Feature() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Removes (deactivates) a feature from the collection\n     *\n     * @param force If true the feature deactivation will be forced\n     */\n    Feature.prototype.deactivate = function (force) {\n        var _this = this;\n        if (force === void 0) { force = false; }\n        var removeDependency = this.addBatchDependency();\n        var idGet = new Feature(this).select(\"DefinitionId\");\n        return idGet.getAs().then(function (feature) {\n            var promise = _this.getParent(Features, _this.parentUrl, \"\", _this.batch).remove(feature.DefinitionId, force);\n            removeDependency();\n            return promise;\n        });\n    };\n    return Feature;\n}(queryable_1.QueryableInstance));\nexports.Feature = Feature;\n\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = __webpack_require__(1);\nvar util_1 = __webpack_require__(0);\nvar files_1 = __webpack_require__(8);\nvar odata_1 = __webpack_require__(2);\n/**\n * Allows for calling of the static SP.Utilities.Utility methods by supplying the method name\n */\nvar UtilityMethod = (function (_super) {\n    __extends(UtilityMethod, _super);\n    /**\n     * Creates a new instance of the Utility method class\n     *\n     * @param baseUrl The parent url provider\n     * @param methodName The static method name to call on the utility class\n     */\n    function UtilityMethod(baseUrl, methodName) {\n        return _super.call(this, UtilityMethod.getBaseUrl(baseUrl), \"_api/SP.Utilities.Utility.\" + methodName) || this;\n    }\n    UtilityMethod.getBaseUrl = function (candidate) {\n        if (typeof candidate === \"string\") {\n            return candidate;\n        }\n        var c = candidate;\n        var url = c.toUrl();\n        var index = url.indexOf(\"_api/\");\n        if (index < 0) {\n            return url;\n        }\n        return url.substr(0, index);\n    };\n    UtilityMethod.prototype.excute = function (props) {\n        return this.postAsCore({\n            body: JSON.stringify(props),\n        });\n    };\n    /**\n     * Clones this queryable into a new queryable instance of T\n     * @param factory Constructor used to create the new instance\n     * @param additionalPath Any additional path to include in the clone\n     * @param includeBatch If true this instance's batch will be added to the cloned instance\n     */\n    UtilityMethod.prototype.create = function (methodName, includeBatch) {\n        var clone = new UtilityMethod(this.parentUrl, methodName);\n        var target = this.query.get(\"@target\");\n        if (target !== null) {\n            clone.query.add(\"@target\", target);\n        }\n        if (includeBatch && this.hasBatch) {\n            clone = clone.inBatch(this.batch);\n        }\n        return clone;\n    };\n    /**\n     * Sends an email based on the supplied properties\n     *\n     * @param props The properties of the email to send\n     */\n    UtilityMethod.prototype.sendEmail = function (props) {\n        var params = {\n            properties: {\n                Body: props.Body,\n                From: props.From,\n                Subject: props.Subject,\n                \"__metadata\": { \"type\": \"SP.Utilities.EmailProperties\" },\n            },\n        };\n        if (props.To && props.To.length > 0) {\n            params.properties = util_1.Util.extend(params.properties, {\n                To: { results: props.To },\n            });\n        }\n        if (props.CC && props.CC.length > 0) {\n            params.properties = util_1.Util.extend(params.properties, {\n                CC: { results: props.CC },\n            });\n        }\n        if (props.BCC && props.BCC.length > 0) {\n            params.properties = util_1.Util.extend(params.properties, {\n                BCC: { results: props.BCC },\n            });\n        }\n        if (props.AdditionalHeaders) {\n            params.properties = util_1.Util.extend(params.properties, {\n                AdditionalHeaders: props.AdditionalHeaders,\n            });\n        }\n        return this.create(\"SendEmail\", true).excute(params);\n    };\n    UtilityMethod.prototype.getCurrentUserEmailAddresses = function () {\n        return this.create(\"GetCurrentUserEmailAddresses\", true).excute({});\n    };\n    UtilityMethod.prototype.resolvePrincipal = function (input, scopes, sources, inputIsEmailOnly, addToUserInfoList, matchUserInfoList) {\n        if (matchUserInfoList === void 0) { matchUserInfoList = false; }\n        var params = {\n            addToUserInfoList: addToUserInfoList,\n            input: input,\n            inputIsEmailOnly: inputIsEmailOnly,\n            matchUserInfoList: matchUserInfoList,\n            scopes: scopes,\n            sources: sources,\n        };\n        return this.create(\"ResolvePrincipalInCurrentContext\", true).excute(params);\n    };\n    UtilityMethod.prototype.searchPrincipals = function (input, scopes, sources, groupName, maxCount) {\n        var params = {\n            groupName: groupName,\n            input: input,\n            maxCount: maxCount,\n            scopes: scopes,\n            sources: sources,\n        };\n        return this.create(\"SearchPrincipalsUsingContextWeb\", true).excute(params);\n    };\n    UtilityMethod.prototype.createEmailBodyForInvitation = function (pageAddress) {\n        var params = {\n            pageAddress: pageAddress,\n        };\n        return this.create(\"CreateEmailBodyForInvitation\", true).excute(params);\n    };\n    UtilityMethod.prototype.expandGroupsToPrincipals = function (inputs, maxCount) {\n        if (maxCount === void 0) { maxCount = 30; }\n        var params = {\n            inputs: inputs,\n            maxCount: maxCount,\n        };\n        return this.create(\"ExpandGroupsToPrincipals\", true).excute(params);\n    };\n    UtilityMethod.prototype.createWikiPage = function (info) {\n        return this.create(\"CreateWikiPageInContextWeb\", true).excute({\n            parameters: info,\n        }).then(function (r) {\n            return {\n                data: r,\n                file: new files_1.File(odata_1.extractOdataId(r)),\n            };\n        });\n    };\n    return UtilityMethod;\n}(queryable_1.Queryable));\nexports.UtilityMethod = UtilityMethod;\n\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar storage = __webpack_require__(15);\nvar exceptions_1 = __webpack_require__(3);\n/**\n * A caching provider which can wrap other non-caching providers\n *\n */\nvar CachingConfigurationProvider = (function () {\n    /**\n     * Creates a new caching configuration provider\n     * @constructor\n     * @param {IConfigurationProvider} wrappedProvider Provider which will be used to fetch the configuration\n     * @param {string} cacheKey Key that will be used to store cached items to the cache\n     * @param {IPnPClientStore} cacheStore OPTIONAL storage, which will be used to store cached settings.\n     */\n    function CachingConfigurationProvider(wrappedProvider, cacheKey, cacheStore) {\n        this.wrappedProvider = wrappedProvider;\n        this.store = (cacheStore) ? cacheStore : this.selectPnPCache();\n        this.cacheKey = \"_configcache_\" + cacheKey;\n    }\n    /**\n     * Gets the wrapped configuration providers\n     *\n     * @return {IConfigurationProvider} Wrapped configuration provider\n     */\n    CachingConfigurationProvider.prototype.getWrappedProvider = function () {\n        return this.wrappedProvider;\n    };\n    /**\n     * Loads the configuration values either from the cache or from the wrapped provider\n     *\n     * @return {Promise<TypedHash<string>>} Promise of loaded configuration values\n     */\n    CachingConfigurationProvider.prototype.getConfiguration = function () {\n        var _this = this;\n        // Cache not available, pass control to  the wrapped provider\n        if ((!this.store) || (!this.store.enabled)) {\n            return this.wrappedProvider.getConfiguration();\n        }\n        // Value is found in cache, return it directly\n        var cachedConfig = this.store.get(this.cacheKey);\n        if (cachedConfig) {\n            return new Promise(function (resolve) {\n                resolve(cachedConfig);\n            });\n        }\n        // Get and cache value from the wrapped provider\n        var providerPromise = this.wrappedProvider.getConfiguration();\n        providerPromise.then(function (providedConfig) {\n            _this.store.put(_this.cacheKey, providedConfig);\n        });\n        return providerPromise;\n    };\n    CachingConfigurationProvider.prototype.selectPnPCache = function () {\n        var pnpCache = new storage.PnPClientStorage();\n        if ((pnpCache.local) && (pnpCache.local.enabled)) {\n            return pnpCache.local;\n        }\n        if ((pnpCache.session) && (pnpCache.session.enabled)) {\n            return pnpCache.session;\n        }\n        throw new exceptions_1.NoCacheAvailableException();\n    };\n    return CachingConfigurationProvider;\n}());\nexports.default = CachingConfigurationProvider;\n\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = __webpack_require__(0);\nvar storage_1 = __webpack_require__(15);\nvar configuration_1 = __webpack_require__(35);\nvar logging_1 = __webpack_require__(5);\nvar rest_1 = __webpack_require__(36);\nvar pnplibconfig_1 = __webpack_require__(4);\n/**\n * Root class of the Patterns and Practices namespace, provides an entry point to the library\n */\n/**\n * Utility methods\n */\nexports.util = util_1.Util;\n/**\n * Provides access to the SharePoint REST interface\n */\nexports.sp = new rest_1.SPRest();\n/**\n * Provides access to local and session storage\n */\nexports.storage = new storage_1.PnPClientStorage();\n/**\n * Global configuration instance to which providers can be added\n */\nexports.config = new configuration_1.Settings();\n/**\n * Global logging instance to which subscribers can be registered and messages written\n */\nexports.log = logging_1.Logger;\n/**\n * Allows for the configuration of the library\n */\nexports.setup = pnplibconfig_1.setRuntimeConfig;\n/**\n * Expose a subset of classes from the library for public consumption\n */\n__export(__webpack_require__(46));\n// creating this class instead of directly assigning to default fixes issue #116\nvar Def = {\n    /**\n     * Global configuration instance to which providers can be added\n     */\n    config: exports.config,\n    /**\n     * Global logging instance to which subscribers can be registered and messages written\n     */\n    log: exports.log,\n    /**\n     * Provides access to local and session storage\n     */\n    setup: exports.setup,\n    /**\n     * Provides access to the REST interface\n     */\n    sp: exports.sp,\n    /**\n     * Provides access to local and session storage\n     */\n    storage: exports.storage,\n    /**\n     * Utility methods\n     */\n    util: exports.util,\n};\n/**\n * Enables use of the import pnp from syntax\n */\nexports.default = Def;\n\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar collections_1 = __webpack_require__(6);\n/**\n * Class used to manage the current application settings\n *\n */\nvar Settings = (function () {\n    /**\n     * Creates a new instance of the settings class\n     *\n     * @constructor\n     */\n    function Settings() {\n        this._settings = new collections_1.Dictionary();\n    }\n    /**\n     * Adds a new single setting, or overwrites a previous setting with the same key\n     *\n     * @param {string} key The key used to store this setting\n     * @param {string} value The setting value to store\n     */\n    Settings.prototype.add = function (key, value) {\n        this._settings.add(key, value);\n    };\n    /**\n     * Adds a JSON value to the collection as a string, you must use getJSON to rehydrate the object when read\n     *\n     * @param {string} key The key used to store this setting\n     * @param {any} value The setting value to store\n     */\n    Settings.prototype.addJSON = function (key, value) {\n        this._settings.add(key, JSON.stringify(value));\n    };\n    /**\n     * Applies the supplied hash to the setting collection overwriting any existing value, or created new values\n     *\n     * @param {TypedHash<any>} hash The set of values to add\n     */\n    Settings.prototype.apply = function (hash) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            try {\n                _this._settings.merge(hash);\n                resolve();\n            }\n            catch (e) {\n                reject(e);\n            }\n        });\n    };\n    /**\n     * Loads configuration settings into the collection from the supplied provider and returns a Promise\n     *\n     * @param {IConfigurationProvider} provider The provider from which we will load the settings\n     */\n    Settings.prototype.load = function (provider) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            provider.getConfiguration().then(function (value) {\n                _this._settings.merge(value);\n                resolve();\n            }).catch(function (reason) {\n                reject(reason);\n            });\n        });\n    };\n    /**\n     * Gets a value from the configuration\n     *\n     * @param {string} key The key whose value we want to return. Returns null if the key does not exist\n     * @return {string} string value from the configuration\n     */\n    Settings.prototype.get = function (key) {\n        return this._settings.get(key);\n    };\n    /**\n     * Gets a JSON value, rehydrating the stored string to the original object\n     *\n     * @param {string} key The key whose value we want to return. Returns null if the key does not exist\n     * @return {any} object from the configuration\n     */\n    Settings.prototype.getJSON = function (key) {\n        var o = this.get(key);\n        if (typeof o === \"undefined\" || o === null) {\n            return o;\n        }\n        return JSON.parse(o);\n    };\n    return Settings;\n}());\nexports.Settings = Settings;\n\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar search_1 = __webpack_require__(22);\nvar searchsuggest_1 = __webpack_require__(24);\nvar site_1 = __webpack_require__(25);\nvar webs_1 = __webpack_require__(7);\nvar util_1 = __webpack_require__(0);\nvar userprofiles_1 = __webpack_require__(44);\nvar exceptions_1 = __webpack_require__(3);\nvar utilities_1 = __webpack_require__(32);\n/**\n * Root of the SharePoint REST module\n */\nvar SPRest = (function () {\n    /**\n     * Creates a new instance of the SPRest class\n     *\n     * @param options Additional options\n     * @param baseUrl A string that should form the base part of the url\n     */\n    function SPRest(options, baseUrl) {\n        if (options === void 0) { options = {}; }\n        if (baseUrl === void 0) { baseUrl = \"\"; }\n        this._options = options;\n        this._baseUrl = baseUrl;\n    }\n    /**\n     * Configures instance with additional options and baseUrl.\n     * Provided configuration used by other objects in a chain\n     *\n     * @param options Additional options\n     * @param baseUrl A string that should form the base part of the url\n     */\n    SPRest.prototype.configure = function (options, baseUrl) {\n        if (baseUrl === void 0) { baseUrl = \"\"; }\n        return new SPRest(options, baseUrl);\n    };\n    /**\n     * Executes a search against this web context\n     *\n     * @param query The SearchQuery definition\n     */\n    SPRest.prototype.searchSuggest = function (query) {\n        var finalQuery;\n        if (typeof query === \"string\") {\n            finalQuery = { querytext: query };\n        }\n        else {\n            finalQuery = query;\n        }\n        return new searchsuggest_1.SearchSuggest(this._baseUrl).configure(this._options).execute(finalQuery);\n    };\n    /**\n     * Executes a search against this web context\n     *\n     * @param query The SearchQuery definition\n     */\n    SPRest.prototype.search = function (query) {\n        var finalQuery;\n        if (typeof query === \"string\") {\n            finalQuery = { Querytext: query };\n        }\n        else if (query instanceof search_1.SearchQueryBuilder) {\n            finalQuery = query.toSearchQuery();\n        }\n        else {\n            finalQuery = query;\n        }\n        return new search_1.Search(this._baseUrl).configure(this._options).execute(finalQuery);\n    };\n    Object.defineProperty(SPRest.prototype, \"site\", {\n        /**\n         * Begins a site collection scoped REST request\n         *\n         */\n        get: function () {\n            return new site_1.Site(this._baseUrl).configure(this._options);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SPRest.prototype, \"web\", {\n        /**\n         * Begins a web scoped REST request\n         *\n         */\n        get: function () {\n            return new webs_1.Web(this._baseUrl).configure(this._options);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SPRest.prototype, \"profiles\", {\n        /**\n         * Access to user profile methods\n         *\n         */\n        get: function () {\n            return new userprofiles_1.UserProfileQuery(this._baseUrl).configure(this._options);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Creates a new batch object for use with the Queryable.addToBatch method\n     *\n     */\n    SPRest.prototype.createBatch = function () {\n        return this.web.createBatch();\n    };\n    Object.defineProperty(SPRest.prototype, \"utility\", {\n        /**\n         * Static utilities methods from SP.Utilities.Utility\n         */\n        get: function () {\n            return new utilities_1.UtilityMethod(this._baseUrl, \"\").configure(this._options);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Begins a cross-domain, host site scoped REST request, for use in add-in webs\n     *\n     * @param addInWebUrl The absolute url of the add-in web\n     * @param hostWebUrl The absolute url of the host web\n     */\n    SPRest.prototype.crossDomainSite = function (addInWebUrl, hostWebUrl) {\n        return this._cdImpl(site_1.Site, addInWebUrl, hostWebUrl, \"site\");\n    };\n    /**\n     * Begins a cross-domain, host web scoped REST request, for use in add-in webs\n     *\n     * @param addInWebUrl The absolute url of the add-in web\n     * @param hostWebUrl The absolute url of the host web\n     */\n    SPRest.prototype.crossDomainWeb = function (addInWebUrl, hostWebUrl) {\n        return this._cdImpl(webs_1.Web, addInWebUrl, hostWebUrl, \"web\");\n    };\n    /**\n     * Implements the creation of cross domain REST urls\n     *\n     * @param factory The constructor of the object to create Site | Web\n     * @param addInWebUrl The absolute url of the add-in web\n     * @param hostWebUrl The absolute url of the host web\n     * @param urlPart String part to append to the url \"site\" | \"web\"\n     */\n    SPRest.prototype._cdImpl = function (factory, addInWebUrl, hostWebUrl, urlPart) {\n        if (!util_1.Util.isUrlAbsolute(addInWebUrl)) {\n            throw new exceptions_1.UrlException(\"The addInWebUrl parameter must be an absolute url.\");\n        }\n        if (!util_1.Util.isUrlAbsolute(hostWebUrl)) {\n            throw new exceptions_1.UrlException(\"The hostWebUrl parameter must be an absolute url.\");\n        }\n        var url = util_1.Util.combinePaths(addInWebUrl, \"_api/SP.AppContextSite(@target)\");\n        var instance = new factory(url, urlPart);\n        instance.query.add(\"@target\", \"'\" + encodeURIComponent(hostWebUrl) + \"'\");\n        return instance.configure(this._options);\n    };\n    return SPRest;\n}());\nexports.SPRest = SPRest;\n\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar collections_1 = __webpack_require__(6);\nvar util_1 = __webpack_require__(0);\nvar odata_1 = __webpack_require__(2);\nvar pnplibconfig_1 = __webpack_require__(4);\nvar CachedDigest = (function () {\n    function CachedDigest() {\n    }\n    return CachedDigest;\n}());\nexports.CachedDigest = CachedDigest;\n// allows for the caching of digests across all HttpClient's which each have their own DigestCache wrapper.\nvar digests = new collections_1.Dictionary();\nvar DigestCache = (function () {\n    function DigestCache(_httpClient, _digests) {\n        if (_digests === void 0) { _digests = digests; }\n        this._httpClient = _httpClient;\n        this._digests = _digests;\n    }\n    DigestCache.prototype.getDigest = function (webUrl) {\n        var _this = this;\n        var cachedDigest = this._digests.get(webUrl);\n        if (cachedDigest !== null) {\n            var now = new Date();\n            if (now < cachedDigest.expiration) {\n                return Promise.resolve(cachedDigest.value);\n            }\n        }\n        var url = util_1.Util.combinePaths(webUrl, \"/_api/contextinfo\");\n        var headers = {\n            \"Accept\": \"application/json;odata=verbose\",\n            \"Content-Type\": \"application/json;odata=verbose;charset=utf-8\",\n        };\n        return this._httpClient.fetchRaw(url, {\n            cache: \"no-cache\",\n            credentials: \"same-origin\",\n            headers: util_1.Util.extend(headers, pnplibconfig_1.RuntimeConfig.headers, true),\n            method: \"POST\",\n        }).then(function (response) {\n            var parser = new odata_1.ODataDefaultParser();\n            return parser.parse(response).then(function (d) { return d.GetContextWebInformation; });\n        }).then(function (data) {\n            var newCachedDigest = new CachedDigest();\n            newCachedDigest.value = data.FormDigestValue;\n            var seconds = data.FormDigestTimeoutSeconds;\n            var expiration = new Date();\n            expiration.setTime(expiration.getTime() + 1000 * seconds);\n            newCachedDigest.expiration = expiration;\n            _this._digests.add(webUrl, newCachedDigest);\n            return newCachedDigest.value;\n        });\n    };\n    DigestCache.prototype.clear = function () {\n        this._digests.clear();\n    };\n    return DigestCache;\n}());\nexports.DigestCache = DigestCache;\n\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar caching_1 = __webpack_require__(23);\nvar httpclient_1 = __webpack_require__(9);\nvar logging_1 = __webpack_require__(5);\nvar util_1 = __webpack_require__(0);\n/**\n * Resolves the context's result value\n *\n * @param context The current context\n */\nfunction returnResult(context) {\n    logging_1.Logger.log({\n        data: context.result,\n        level: logging_1.LogLevel.Verbose,\n        message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Returning result, see data property for value.\",\n    });\n    return Promise.resolve(context.result);\n}\n/**\n * Sets the result on the context\n */\nfunction setResult(context, value) {\n    return new Promise(function (resolve) {\n        context.result = value;\n        context.hasResult = true;\n        resolve(context);\n    });\n}\nexports.setResult = setResult;\n/**\n * Invokes the next method in the provided context's pipeline\n *\n * @param c The current request context\n */\nfunction next(c) {\n    if (c.pipeline.length < 1) {\n        return Promise.resolve(c);\n    }\n    return c.pipeline.shift()(c);\n}\n/**\n * Executes the current request context's pipeline\n *\n * @param context Current context\n */\nfunction pipe(context) {\n    return next(context)\n        .then(function (ctx) { return returnResult(ctx); })\n        .catch(function (e) {\n        logging_1.Logger.log({\n            data: e,\n            level: logging_1.LogLevel.Error,\n            message: \"Error in request pipeline: \" + e.message,\n        });\n        throw e;\n    });\n}\nexports.pipe = pipe;\n/**\n * decorator factory applied to methods in the pipeline to control behavior\n */\nfunction requestPipelineMethod(alwaysRun) {\n    if (alwaysRun === void 0) { alwaysRun = false; }\n    return function (target, propertyKey, descriptor) {\n        var method = descriptor.value;\n        descriptor.value = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            // if we have a result already in the pipeline, pass it along and don't call the tagged method\n            if (!alwaysRun && args.length > 0 && args[0].hasOwnProperty(\"hasResult\") && args[0].hasResult) {\n                logging_1.Logger.write(\"[\" + args[0].requestId + \"] (\" + (new Date()).getTime() + \") Skipping request pipeline method \" + propertyKey + \", existing result in pipeline.\", logging_1.LogLevel.Verbose);\n                return Promise.resolve(args[0]);\n            }\n            // apply the tagged method\n            logging_1.Logger.write(\"[\" + args[0].requestId + \"] (\" + (new Date()).getTime() + \") Calling request pipeline method \" + propertyKey + \".\", logging_1.LogLevel.Verbose);\n            // then chain the next method in the context's pipeline - allows for dynamic pipeline\n            return method.apply(target, args).then(function (ctx) { return next(ctx); });\n        };\n    };\n}\nexports.requestPipelineMethod = requestPipelineMethod;\n/**\n * Contains the methods used within the request pipeline\n */\nvar PipelineMethods = (function () {\n    function PipelineMethods() {\n    }\n    /**\n     * Logs the start of the request\n     */\n    PipelineMethods.logStart = function (context) {\n        return new Promise(function (resolve) {\n            logging_1.Logger.log({\n                data: logging_1.Logger.activeLogLevel === logging_1.LogLevel.Info ? {} : context,\n                level: logging_1.LogLevel.Info,\n                message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Beginning \" + context.verb + \" request (\" + context.requestAbsoluteUrl + \")\",\n            });\n            resolve(context);\n        });\n    };\n    /**\n     * Handles caching of the request\n     */\n    PipelineMethods.caching = function (context) {\n        return new Promise(function (resolve) {\n            // handle caching, if applicable\n            if (context.verb === \"GET\" && context.isCached) {\n                logging_1.Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Caching is enabled for request, checking cache...\", logging_1.LogLevel.Info);\n                var cacheOptions = new caching_1.CachingOptions(context.requestAbsoluteUrl.toLowerCase());\n                if (typeof context.cachingOptions !== \"undefined\") {\n                    cacheOptions = util_1.Util.extend(cacheOptions, context.cachingOptions);\n                }\n                // we may not have a valid store\n                if (cacheOptions.store !== null) {\n                    // check if we have the data in cache and if so resolve the promise and return\n                    var data = cacheOptions.store.get(cacheOptions.key);\n                    if (data !== null) {\n                        // ensure we clear any help batch dependency we are resolving from the cache\n                        logging_1.Logger.log({\n                            data: logging_1.Logger.activeLogLevel === logging_1.LogLevel.Info ? {} : data,\n                            level: logging_1.LogLevel.Info,\n                            message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Value returned from cache.\",\n                        });\n                        context.batchDependency();\n                        return setResult(context, data).then(function (ctx) { return resolve(ctx); });\n                    }\n                }\n                logging_1.Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Value not found in cache.\", logging_1.LogLevel.Info);\n                // if we don't then wrap the supplied parser in the caching parser wrapper\n                // and send things on their way\n                context.parser = new caching_1.CachingParserWrapper(context.parser, cacheOptions);\n            }\n            return resolve(context);\n        });\n    };\n    /**\n     * Sends the request\n     */\n    PipelineMethods.send = function (context) {\n        return new Promise(function (resolve, reject) {\n            // send or batch the request\n            if (context.isBatched) {\n                // we are in a batch, so add to batch, remove dependency, and resolve with the batch's promise\n                var p = context.batch.add(context.requestAbsoluteUrl, context.verb, context.options, context.parser);\n                // we release the dependency here to ensure the batch does not execute until the request is added to the batch\n                context.batchDependency();\n                logging_1.Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Batching request in batch \" + context.batch.batchId + \".\", logging_1.LogLevel.Info);\n                // we set the result as the promise which will be resolved by the batch's execution\n                resolve(setResult(context, p));\n            }\n            else {\n                logging_1.Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Sending request.\", logging_1.LogLevel.Info);\n                // we are not part of a batch, so proceed as normal\n                var client = new httpclient_1.HttpClient();\n                var opts = util_1.Util.extend(context.options || {}, { method: context.verb });\n                client.fetch(context.requestAbsoluteUrl, opts)\n                    .then(function (response) { return context.parser.parse(response); })\n                    .then(function (result) { return setResult(context, result); })\n                    .then(function (ctx) { return resolve(ctx); })\n                    .catch(function (e) { return reject(e); });\n            }\n        });\n    };\n    /**\n     * Logs the end of the request\n     */\n    PipelineMethods.logEnd = function (context) {\n        return new Promise(function (resolve) {\n            if (context.isBatched) {\n                logging_1.Logger.log({\n                    data: logging_1.Logger.activeLogLevel === logging_1.LogLevel.Info ? {} : context,\n                    level: logging_1.LogLevel.Info,\n                    message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") \" + context.verb + \" request will complete in batch \" + context.batch.batchId + \".\",\n                });\n            }\n            else {\n                logging_1.Logger.log({\n                    data: logging_1.Logger.activeLogLevel === logging_1.LogLevel.Info ? {} : context,\n                    level: logging_1.LogLevel.Info,\n                    message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Completing \" + context.verb + \" request.\",\n                });\n            }\n            resolve(context);\n        });\n    };\n    Object.defineProperty(PipelineMethods, \"default\", {\n        get: function () {\n            return [\n                PipelineMethods.logStart,\n                PipelineMethods.caching,\n                PipelineMethods.send,\n                PipelineMethods.logEnd,\n            ];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    __decorate([\n        requestPipelineMethod(true)\n    ], PipelineMethods, \"logStart\", null);\n    __decorate([\n        requestPipelineMethod()\n    ], PipelineMethods, \"caching\", null);\n    __decorate([\n        requestPipelineMethod()\n    ], PipelineMethods, \"send\", null);\n    __decorate([\n        requestPipelineMethod(true)\n    ], PipelineMethods, \"logEnd\", null);\n    return PipelineMethods;\n}());\nexports.PipelineMethods = PipelineMethods;\n\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = __webpack_require__(1);\nvar odata_1 = __webpack_require__(2);\n/**\n * Describes a collection of Item objects\n *\n */\nvar AttachmentFiles = (function (_super) {\n    __extends(AttachmentFiles, _super);\n    /**\n     * Creates a new instance of the AttachmentFiles class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this attachments collection\n     */\n    function AttachmentFiles(baseUrl, path) {\n        if (path === void 0) { path = \"AttachmentFiles\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a Attachment File by filename\n     *\n     * @param name The name of the file, including extension.\n     */\n    AttachmentFiles.prototype.getByName = function (name) {\n        var f = new AttachmentFile(this);\n        f.concat(\"('\" + name + \"')\");\n        return f;\n    };\n    /**\n     * Adds a new attachment to the collection. Not supported for batching.\n     *\n     * @param name The name of the file, including extension.\n     * @param content The Base64 file content.\n     */\n    AttachmentFiles.prototype.add = function (name, content) {\n        var _this = this;\n        return this.clone(AttachmentFiles, \"add(FileName='\" + name + \"')\").postCore({\n            body: content,\n        }).then(function (response) {\n            return {\n                data: response,\n                file: _this.getByName(name),\n            };\n        });\n    };\n    /**\n     * Adds mjultiple new attachment to the collection. Not supported for batching.\n     *\n     * @files name The collection of files to add\n     */\n    AttachmentFiles.prototype.addMultiple = function (files) {\n        var _this = this;\n        // add the files in series so we don't get update conflicts\n        return files.reduce(function (chain, file) { return chain.then(function () { return _this.clone(AttachmentFiles, \"add(FileName='\" + file.name + \"')\").postCore({\n            body: file.content,\n        }); }); }, Promise.resolve());\n    };\n    return AttachmentFiles;\n}(queryable_1.QueryableCollection));\nexports.AttachmentFiles = AttachmentFiles;\n/**\n * Describes a single attachment file instance\n *\n */\nvar AttachmentFile = (function (_super) {\n    __extends(AttachmentFile, _super);\n    function AttachmentFile() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Gets the contents of the file as text\n     *\n     */\n    AttachmentFile.prototype.getText = function () {\n        return this.clone(AttachmentFile, \"$value\").get(new odata_1.TextFileParser());\n    };\n    /**\n     * Gets the contents of the file as a blob, does not work in Node.js\n     *\n     */\n    AttachmentFile.prototype.getBlob = function () {\n        return this.clone(AttachmentFile, \"$value\").get(new odata_1.BlobFileParser());\n    };\n    /**\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js\n     */\n    AttachmentFile.prototype.getBuffer = function () {\n        return this.clone(AttachmentFile, \"$value\").get(new odata_1.BufferFileParser());\n    };\n    /**\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js\n     */\n    AttachmentFile.prototype.getJSON = function () {\n        return this.clone(AttachmentFile, \"$value\").get(new odata_1.JSONFileParser());\n    };\n    /**\n     * Sets the content of a file. Not supported for batching\n     *\n     * @param content The value to set for the file contents\n     */\n    AttachmentFile.prototype.setContent = function (content) {\n        var _this = this;\n        return this.clone(AttachmentFile, \"$value\").postCore({\n            body: content,\n            headers: {\n                \"X-HTTP-Method\": \"PUT\",\n            },\n        }).then(function (_) { return new AttachmentFile(_this); });\n    };\n    /**\n     * Delete this attachment file\n     *\n     * @param eTag Value used in the IF-Match header, by default \"*\"\n     */\n    AttachmentFile.prototype.delete = function (eTag) {\n        if (eTag === void 0) { eTag = \"*\"; }\n        return this.postCore({\n            headers: {\n                \"IF-Match\": eTag,\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    return AttachmentFile;\n}(queryable_1.QueryableInstance));\nexports.AttachmentFile = AttachmentFile;\n\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = __webpack_require__(1);\nvar util_1 = __webpack_require__(0);\n/**\n * Describes the views available in the current context\n *\n */\nvar Views = (function (_super) {\n    __extends(Views, _super);\n    /**\n     * Creates a new instance of the Views class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    function Views(baseUrl, path) {\n        if (path === void 0) { path = \"views\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a view by guid id\n     *\n     * @param id The GUID id of the view\n     */\n    Views.prototype.getById = function (id) {\n        var v = new View(this);\n        v.concat(\"('\" + id + \"')\");\n        return v;\n    };\n    /**\n     * Gets a view by title (case-sensitive)\n     *\n     * @param title The case-sensitive title of the view\n     */\n    Views.prototype.getByTitle = function (title) {\n        return new View(this, \"getByTitle('\" + title + \"')\");\n    };\n    /**\n     * Adds a new view to the collection\n     *\n     * @param title The new views's title\n     * @param personalView True if this is a personal view, otherwise false, default = false\n     * @param additionalSettings Will be passed as part of the view creation body\n     */\n    Views.prototype.add = function (title, personalView, additionalSettings) {\n        var _this = this;\n        if (personalView === void 0) { personalView = false; }\n        if (additionalSettings === void 0) { additionalSettings = {}; }\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"PersonalView\": personalView,\n            \"Title\": title,\n            \"__metadata\": { \"type\": \"SP.View\" },\n        }, additionalSettings));\n        return this.clone(Views, null, true).postAsCore({ body: postBody }).then(function (data) {\n            return {\n                data: data,\n                view: _this.getById(data.Id),\n            };\n        });\n    };\n    return Views;\n}(queryable_1.QueryableCollection));\nexports.Views = Views;\n/**\n * Describes a single View instance\n *\n */\nvar View = (function (_super) {\n    __extends(View, _super);\n    function View() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(View.prototype, \"fields\", {\n        get: function () {\n            return new ViewFields(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Updates this view intance with the supplied properties\n     *\n     * @param properties A plain object hash of values to update for the view\n     */\n    View.prototype.update = function (properties) {\n        var _this = this;\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"__metadata\": { \"type\": \"SP.View\" },\n        }, properties));\n        return this.postCore({\n            body: postBody,\n            headers: {\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then(function (data) {\n            return {\n                data: data,\n                view: _this,\n            };\n        });\n    };\n    /**\n     * Delete this view\n     *\n     */\n    View.prototype.delete = function () {\n        return this.postCore({\n            headers: {\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    /**\n     * Returns the list view as HTML.\n     *\n     */\n    View.prototype.renderAsHtml = function () {\n        return this.clone(queryable_1.Queryable, \"renderashtml\", true).get();\n    };\n    return View;\n}(queryable_1.QueryableInstance));\nexports.View = View;\nvar ViewFields = (function (_super) {\n    __extends(ViewFields, _super);\n    function ViewFields(baseUrl, path) {\n        if (path === void 0) { path = \"viewfields\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a value that specifies the XML schema that represents the collection.\n     */\n    ViewFields.prototype.getSchemaXml = function () {\n        return this.clone(queryable_1.Queryable, \"schemaxml\", true).get();\n    };\n    /**\n     * Adds the field with the specified field internal name or display name to the collection.\n     *\n     * @param fieldTitleOrInternalName The case-sensitive internal name or display name of the field to add.\n     */\n    ViewFields.prototype.add = function (fieldTitleOrInternalName) {\n        return this.clone(ViewFields, \"addviewfield('\" + fieldTitleOrInternalName + \"')\", true).postCore();\n    };\n    /**\n     * Moves the field with the specified field internal name to the specified position in the collection.\n     *\n     * @param fieldInternalName The case-sensitive internal name of the field to move.\n     * @param index The zero-based index of the new position for the field.\n     */\n    ViewFields.prototype.move = function (fieldInternalName, index) {\n        return this.clone(ViewFields, \"moveviewfieldto\", true).postCore({\n            body: JSON.stringify({ \"field\": fieldInternalName, \"index\": index }),\n        });\n    };\n    /**\n     * Removes all the fields from the collection.\n     */\n    ViewFields.prototype.removeAll = function () {\n        return this.clone(ViewFields, \"removeallviewfields\", true).postCore();\n    };\n    /**\n     * Removes the field with the specified field internal name from the collection.\n     *\n     * @param fieldInternalName The case-sensitive internal name of the field to remove from the view.\n     */\n    ViewFields.prototype.remove = function (fieldInternalName) {\n        return this.clone(ViewFields, \"removeviewfield('\" + fieldInternalName + \"')\", true).postCore();\n    };\n    return ViewFields;\n}(queryable_1.QueryableCollection));\nexports.ViewFields = ViewFields;\n\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = __webpack_require__(1);\n/**\n * Describes a collection of Field objects\n *\n */\nvar Forms = (function (_super) {\n    __extends(Forms, _super);\n    /**\n     * Creates a new instance of the Fields class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    function Forms(baseUrl, path) {\n        if (path === void 0) { path = \"forms\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a form by id\n     *\n     * @param id The guid id of the item to retrieve\n     */\n    Forms.prototype.getById = function (id) {\n        var i = new Form(this);\n        i.concat(\"('\" + id + \"')\");\n        return i;\n    };\n    return Forms;\n}(queryable_1.QueryableCollection));\nexports.Forms = Forms;\n/**\n * Describes a single of Form instance\n *\n */\nvar Form = (function (_super) {\n    __extends(Form, _super);\n    function Form() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return Form;\n}(queryable_1.QueryableInstance));\nexports.Form = Form;\n\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = __webpack_require__(1);\n/**\n * Describes a collection of webhook subscriptions\n *\n */\nvar Subscriptions = (function (_super) {\n    __extends(Subscriptions, _super);\n    /**\n     * Creates a new instance of the Subscriptions class\n     *\n     * @param baseUrl - The url or Queryable which forms the parent of this webhook subscriptions collection\n     */\n    function Subscriptions(baseUrl, path) {\n        if (path === void 0) { path = \"subscriptions\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Returns all the webhook subscriptions or the specified webhook subscription\n     *\n     * @param subscriptionId The id of a specific webhook subscription to retrieve, omit to retrieve all the webhook subscriptions\n     */\n    Subscriptions.prototype.getById = function (subscriptionId) {\n        var subscription = new Subscription(this);\n        subscription.concat(\"('\" + subscriptionId + \"')\");\n        return subscription;\n    };\n    /**\n     * Creates a new webhook subscription\n     *\n     * @param notificationUrl The url to receive the notifications\n     * @param expirationDate The date and time to expire the subscription in the form YYYY-MM-ddTHH:mm:ss+00:00 (maximum of 6 months)\n     * @param clientState A client specific string (defaults to pnp-js-core-subscription when omitted)\n     */\n    Subscriptions.prototype.add = function (notificationUrl, expirationDate, clientState) {\n        var _this = this;\n        var postBody = JSON.stringify({\n            \"clientState\": clientState || \"pnp-js-core-subscription\",\n            \"expirationDateTime\": expirationDate,\n            \"notificationUrl\": notificationUrl,\n            \"resource\": this.toUrl(),\n        });\n        return this.postCore({ body: postBody, headers: { \"Content-Type\": \"application/json\" } }).then(function (result) {\n            return { data: result, subscription: _this.getById(result.id) };\n        });\n    };\n    return Subscriptions;\n}(queryable_1.QueryableCollection));\nexports.Subscriptions = Subscriptions;\n/**\n * Describes a single webhook subscription instance\n *\n */\nvar Subscription = (function (_super) {\n    __extends(Subscription, _super);\n    function Subscription() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Renews this webhook subscription\n     *\n     * @param expirationDate The date and time to expire the subscription in the form YYYY-MM-ddTHH:mm:ss+00:00 (maximum of 6 months)\n     */\n    Subscription.prototype.update = function (expirationDate) {\n        var _this = this;\n        var postBody = JSON.stringify({\n            \"expirationDateTime\": expirationDate,\n        });\n        return this.patchCore({ body: postBody, headers: { \"Content-Type\": \"application/json\" } }).then(function (data) {\n            return { data: data, subscription: _this };\n        });\n    };\n    /**\n     * Removes this webhook subscription\n     *\n     */\n    Subscription.prototype.delete = function () {\n        return _super.prototype.deleteCore.call(this);\n    };\n    return Subscription;\n}(queryable_1.QueryableInstance));\nexports.Subscription = Subscription;\n\n\n/***/ }),\n/* 43 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = __webpack_require__(1);\nvar RelatedItemManagerImpl = (function (_super) {\n    __extends(RelatedItemManagerImpl, _super);\n    function RelatedItemManagerImpl(baseUrl, path) {\n        if (path === void 0) { path = \"_api/SP.RelatedItemManager\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    RelatedItemManagerImpl.FromUrl = function (url) {\n        if (url === null) {\n            return new RelatedItemManagerImpl(\"\");\n        }\n        var index = url.indexOf(\"_api/\");\n        if (index > -1) {\n            return new RelatedItemManagerImpl(url.substr(0, index));\n        }\n        return new RelatedItemManagerImpl(url);\n    };\n    RelatedItemManagerImpl.prototype.getRelatedItems = function (sourceListName, sourceItemId) {\n        var query = this.clone(RelatedItemManagerImpl, null, true);\n        query.concat(\".GetRelatedItems\");\n        return query.postCore({\n            body: JSON.stringify({\n                SourceItemID: sourceItemId,\n                SourceListName: sourceListName,\n            }),\n        });\n    };\n    RelatedItemManagerImpl.prototype.getPageOneRelatedItems = function (sourceListName, sourceItemId) {\n        var query = this.clone(RelatedItemManagerImpl, null, true);\n        query.concat(\".GetPageOneRelatedItems\");\n        return query.postCore({\n            body: JSON.stringify({\n                SourceItemID: sourceItemId,\n                SourceListName: sourceListName,\n            }),\n        });\n    };\n    RelatedItemManagerImpl.prototype.addSingleLink = function (sourceListName, sourceItemId, sourceWebUrl, targetListName, targetItemID, targetWebUrl, tryAddReverseLink) {\n        if (tryAddReverseLink === void 0) { tryAddReverseLink = false; }\n        var query = this.clone(RelatedItemManagerImpl, null, true);\n        query.concat(\".AddSingleLink\");\n        return query.postCore({\n            body: JSON.stringify({\n                SourceItemID: sourceItemId,\n                SourceListName: sourceListName,\n                SourceWebUrl: sourceWebUrl,\n                TargetItemID: targetItemID,\n                TargetListName: targetListName,\n                TargetWebUrl: targetWebUrl,\n                TryAddReverseLink: tryAddReverseLink,\n            }),\n        });\n    };\n    /**\n     * Adds a related item link from an item specified by list name and item id, to an item specified by url\n     *\n     * @param sourceListName The source list name or list id\n     * @param sourceItemId The source item id\n     * @param targetItemUrl The target item url\n     * @param tryAddReverseLink If set to true try to add the reverse link (will not return error if it fails)\n     */\n    RelatedItemManagerImpl.prototype.addSingleLinkToUrl = function (sourceListName, sourceItemId, targetItemUrl, tryAddReverseLink) {\n        if (tryAddReverseLink === void 0) { tryAddReverseLink = false; }\n        var query = this.clone(RelatedItemManagerImpl, null, true);\n        query.concat(\".AddSingleLinkToUrl\");\n        return query.postCore({\n            body: JSON.stringify({\n                SourceItemID: sourceItemId,\n                SourceListName: sourceListName,\n                TargetItemUrl: targetItemUrl,\n                TryAddReverseLink: tryAddReverseLink,\n            }),\n        });\n    };\n    /**\n     * Adds a related item link from an item specified by url, to an item specified by list name and item id\n     *\n     * @param sourceItemUrl The source item url\n     * @param targetListName The target list name or list id\n     * @param targetItemId The target item id\n     * @param tryAddReverseLink If set to true try to add the reverse link (will not return error if it fails)\n     */\n    RelatedItemManagerImpl.prototype.addSingleLinkFromUrl = function (sourceItemUrl, targetListName, targetItemId, tryAddReverseLink) {\n        if (tryAddReverseLink === void 0) { tryAddReverseLink = false; }\n        var query = this.clone(RelatedItemManagerImpl, null, true);\n        query.concat(\".AddSingleLinkFromUrl\");\n        return query.postCore({\n            body: JSON.stringify({\n                SourceItemUrl: sourceItemUrl,\n                TargetItemID: targetItemId,\n                TargetListName: targetListName,\n                TryAddReverseLink: tryAddReverseLink,\n            }),\n        });\n    };\n    RelatedItemManagerImpl.prototype.deleteSingleLink = function (sourceListName, sourceItemId, sourceWebUrl, targetListName, targetItemId, targetWebUrl, tryDeleteReverseLink) {\n        if (tryDeleteReverseLink === void 0) { tryDeleteReverseLink = false; }\n        var query = this.clone(RelatedItemManagerImpl, null, true);\n        query.concat(\".DeleteSingleLink\");\n        return query.postCore({\n            body: JSON.stringify({\n                SourceItemID: sourceItemId,\n                SourceListName: sourceListName,\n                SourceWebUrl: sourceWebUrl,\n                TargetItemID: targetItemId,\n                TargetListName: targetListName,\n                TargetWebUrl: targetWebUrl,\n                TryDeleteReverseLink: tryDeleteReverseLink,\n            }),\n        });\n    };\n    return RelatedItemManagerImpl;\n}(queryable_1.Queryable));\nexports.RelatedItemManagerImpl = RelatedItemManagerImpl;\n\n\n/***/ }),\n/* 44 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = __webpack_require__(1);\nvar files_1 = __webpack_require__(45);\nvar odata_1 = __webpack_require__(2);\nvar UserProfileQuery = (function (_super) {\n    __extends(UserProfileQuery, _super);\n    /**\n     * Creates a new instance of the UserProfileQuery class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this user profile query\n     */\n    function UserProfileQuery(baseUrl, path) {\n        if (path === void 0) { path = \"_api/sp.userprofiles.peoplemanager\"; }\n        var _this = _super.call(this, baseUrl, path) || this;\n        _this.profileLoader = new ProfileLoader(baseUrl);\n        return _this;\n    }\n    Object.defineProperty(UserProfileQuery.prototype, \"editProfileLink\", {\n        /**\n         * The url of the edit profile page for the current user\n         */\n        get: function () {\n            return this.clone(UserProfileQuery, \"EditProfileLink\").getAs(odata_1.ODataValue());\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(UserProfileQuery.prototype, \"isMyPeopleListPublic\", {\n        /**\n         * A boolean value that indicates whether the current user's \"People I'm Following\" list is public\n         */\n        get: function () {\n            return this.clone(UserProfileQuery, \"IsMyPeopleListPublic\").getAs(odata_1.ODataValue());\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * A boolean value that indicates whether the current user is being followed by the specified user\n     *\n     * @param loginName The account name of the user\n     */\n    UserProfileQuery.prototype.amIFollowedBy = function (loginName) {\n        var q = this.clone(UserProfileQuery, \"amifollowedby(@v)\", true);\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return q.get();\n    };\n    /**\n     * A boolean value that indicates whether the current user is following the specified user\n     *\n     * @param loginName The account name of the user\n     */\n    UserProfileQuery.prototype.amIFollowing = function (loginName) {\n        var q = this.clone(UserProfileQuery, \"amifollowing(@v)\", true);\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return q.get();\n    };\n    /**\n     * Gets tags that the current user is following\n     *\n     * @param maxCount The maximum number of tags to retrieve (default is 20)\n     */\n    UserProfileQuery.prototype.getFollowedTags = function (maxCount) {\n        if (maxCount === void 0) { maxCount = 20; }\n        return this.clone(UserProfileQuery, \"getfollowedtags(\" + maxCount + \")\", true).get();\n    };\n    /**\n     * Gets the people who are following the specified user\n     *\n     * @param loginName The account name of the user\n     */\n    UserProfileQuery.prototype.getFollowersFor = function (loginName) {\n        var q = this.clone(UserProfileQuery, \"getfollowersfor(@v)\", true);\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return q.get();\n    };\n    Object.defineProperty(UserProfileQuery.prototype, \"myFollowers\", {\n        /**\n         * Gets the people who are following the current user\n         *\n         */\n        get: function () {\n            return new queryable_1.QueryableCollection(this, \"getmyfollowers\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(UserProfileQuery.prototype, \"myProperties\", {\n        /**\n         * Gets user properties for the current user\n         *\n         */\n        get: function () {\n            return new UserProfileQuery(this, \"getmyproperties\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the people who the specified user is following\n     *\n     * @param loginName The account name of the user.\n     */\n    UserProfileQuery.prototype.getPeopleFollowedBy = function (loginName) {\n        var q = this.clone(UserProfileQuery, \"getpeoplefollowedby(@v)\", true);\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return q.get();\n    };\n    /**\n     * Gets user properties for the specified user.\n     *\n     * @param loginName The account name of the user.\n     */\n    UserProfileQuery.prototype.getPropertiesFor = function (loginName) {\n        var q = this.clone(UserProfileQuery, \"getpropertiesfor(@v)\", true);\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return q.get();\n    };\n    Object.defineProperty(UserProfileQuery.prototype, \"trendingTags\", {\n        /**\n         * Gets the 20 most popular hash tags over the past week, sorted so that the most popular tag appears first\n         *\n         */\n        get: function () {\n            var q = this.clone(UserProfileQuery, null, true);\n            q.concat(\".gettrendingtags\");\n            return q.get();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the specified user profile property for the specified user\n     *\n     * @param loginName The account name of the user\n     * @param propertyName The case-sensitive name of the property to get\n     */\n    UserProfileQuery.prototype.getUserProfilePropertyFor = function (loginName, propertyName) {\n        var q = this.clone(UserProfileQuery, \"getuserprofilepropertyfor(accountname=@v, propertyname='\" + propertyName + \"')\", true);\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return q.get();\n    };\n    /**\n     * Removes the specified user from the user's list of suggested people to follow\n     *\n     * @param loginName The account name of the user\n     */\n    UserProfileQuery.prototype.hideSuggestion = function (loginName) {\n        var q = this.clone(UserProfileQuery, \"hidesuggestion(@v)\", true);\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return q.postCore();\n    };\n    /**\n     * A boolean values that indicates whether the first user is following the second user\n     *\n     * @param follower The account name of the user who might be following the followee\n     * @param followee The account name of the user who might be followed by the follower\n     */\n    UserProfileQuery.prototype.isFollowing = function (follower, followee) {\n        var q = this.clone(UserProfileQuery, null, true);\n        q.concat(\".isfollowing(possiblefolloweraccountname=@v, possiblefolloweeaccountname=@y)\");\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(follower) + \"'\");\n        q.query.add(\"@y\", \"'\" + encodeURIComponent(followee) + \"'\");\n        return q.get();\n    };\n    /**\n     * Uploads and sets the user profile picture (Users can upload a picture to their own profile only). Not supported for batching.\n     *\n     * @param profilePicSource Blob data representing the user's picture in BMP, JPEG, or PNG format of up to 4.76MB\n     */\n    UserProfileQuery.prototype.setMyProfilePic = function (profilePicSource) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            files_1.readBlobAsArrayBuffer(profilePicSource).then(function (buffer) {\n                var request = new UserProfileQuery(_this, \"setmyprofilepicture\");\n                request.postCore({\n                    body: String.fromCharCode.apply(null, new Uint16Array(buffer)),\n                }).then(function (_) { return resolve(); });\n            }).catch(function (e) { return reject(e); });\n        });\n    };\n    /**\n     * Provisions one or more users' personal sites. (My Site administrator on SharePoint Online only)\n     *\n     * @param emails The email addresses of the users to provision sites for\n     */\n    UserProfileQuery.prototype.createPersonalSiteEnqueueBulk = function () {\n        var emails = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            emails[_i] = arguments[_i];\n        }\n        return this.profileLoader.createPersonalSiteEnqueueBulk(emails);\n    };\n    Object.defineProperty(UserProfileQuery.prototype, \"ownerUserProfile\", {\n        /**\n         * Gets the user profile of the site owner\n         *\n         */\n        get: function () {\n            return this.profileLoader.ownerUserProfile;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(UserProfileQuery.prototype, \"userProfile\", {\n        /**\n         * Gets the user profile for the current user\n         */\n        get: function () {\n            return this.profileLoader.userProfile;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Enqueues creating a personal site for this user, which can be used to share documents, web pages, and other files\n     *\n     * @param interactiveRequest true if interactively (web) initiated request, or false (default) if non-interactively (client) initiated request\n     */\n    UserProfileQuery.prototype.createPersonalSite = function (interactiveRequest) {\n        if (interactiveRequest === void 0) { interactiveRequest = false; }\n        return this.profileLoader.createPersonalSite(interactiveRequest);\n    };\n    /**\n     * Sets the privacy settings for this profile\n     *\n     * @param share true to make all social data public; false to make all social data private\n     */\n    UserProfileQuery.prototype.shareAllSocialData = function (share) {\n        return this.profileLoader.shareAllSocialData(share);\n    };\n    return UserProfileQuery;\n}(queryable_1.QueryableInstance));\nexports.UserProfileQuery = UserProfileQuery;\nvar ProfileLoader = (function (_super) {\n    __extends(ProfileLoader, _super);\n    /**\n   * Creates a new instance of the ProfileLoader class\n   *\n   * @param baseUrl The url or Queryable which forms the parent of this profile loader\n   */\n    function ProfileLoader(baseUrl, path) {\n        if (path === void 0) { path = \"_api/sp.userprofiles.profileloader.getprofileloader\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Provisions one or more users' personal sites. (My Site administrator on SharePoint Online only)\n     *\n     * @param emails The email addresses of the users to provision sites for\n     */\n    ProfileLoader.prototype.createPersonalSiteEnqueueBulk = function (emails) {\n        return this.clone(ProfileLoader, \"createpersonalsiteenqueuebulk\").postCore({\n            body: JSON.stringify({ \"emailIDs\": emails }),\n        });\n    };\n    Object.defineProperty(ProfileLoader.prototype, \"ownerUserProfile\", {\n        /**\n         * Gets the user profile of the site owner.\n         *\n         */\n        get: function () {\n            var q = this.getParent(ProfileLoader, this.parentUrl, \"_api/sp.userprofiles.profileloader.getowneruserprofile\");\n            if (this.hasBatch) {\n                q = q.inBatch(this.batch);\n            }\n            return q.postAsCore();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProfileLoader.prototype, \"userProfile\", {\n        /**\n         * Gets the user profile of the current user.\n         *\n         */\n        get: function () {\n            return this.clone(ProfileLoader, \"getuserprofile\", true).postAsCore();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Enqueues creating a personal site for this user, which can be used to share documents, web pages, and other files.\n     *\n     * @param interactiveRequest true if interactively (web) initiated request, or false (default) if non-interactively (client) initiated request\n     */\n    ProfileLoader.prototype.createPersonalSite = function (interactiveRequest) {\n        if (interactiveRequest === void 0) { interactiveRequest = false; }\n        return this.clone(ProfileLoader, \"getuserprofile/createpersonalsiteenque(\" + interactiveRequest + \")\", true).postCore();\n    };\n    /**\n     * Sets the privacy settings for this profile\n     *\n     * @param share true to make all social data public; false to make all social data private.\n     */\n    ProfileLoader.prototype.shareAllSocialData = function (share) {\n        return this.clone(ProfileLoader, \"getuserprofile/shareallsocialdata(\" + share + \")\", true).postCore();\n    };\n    return ProfileLoader;\n}(queryable_1.Queryable));\n\n\n/***/ }),\n/* 45 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Reads a blob as text\n *\n * @param blob The data to read\n */\nfunction readBlobAsText(blob) {\n    return readBlobAs(blob, \"string\");\n}\nexports.readBlobAsText = readBlobAsText;\n/**\n * Reads a blob into an array buffer\n *\n * @param blob The data to read\n */\nfunction readBlobAsArrayBuffer(blob) {\n    return readBlobAs(blob, \"buffer\");\n}\nexports.readBlobAsArrayBuffer = readBlobAsArrayBuffer;\n/**\n * Generic method to read blob's content\n *\n * @param blob The data to read\n * @param mode The read mode\n */\nfunction readBlobAs(blob, mode) {\n    return new Promise(function (resolve, reject) {\n        try {\n            var reader = new FileReader();\n            reader.onload = function (e) {\n                resolve(e.target.result);\n            };\n            switch (mode) {\n                case \"string\":\n                    reader.readAsText(blob);\n                    break;\n                case \"buffer\":\n                    reader.readAsArrayBuffer(blob);\n                    break;\n            }\n        }\n        catch (e) {\n            reject(e);\n        }\n    });\n}\n\n\n/***/ }),\n/* 46 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(__webpack_require__(47));\nvar httpclient_1 = __webpack_require__(9);\nexports.HttpClient = httpclient_1.HttpClient;\nvar sprequestexecutorclient_1 = __webpack_require__(48);\nexports.SPRequestExecutorClient = sprequestexecutorclient_1.SPRequestExecutorClient;\nvar nodefetchclient_1 = __webpack_require__(49);\nexports.NodeFetchClient = nodefetchclient_1.NodeFetchClient;\nvar fetchclient_1 = __webpack_require__(21);\nexports.FetchClient = fetchclient_1.FetchClient;\n__export(__webpack_require__(50));\nvar collections_1 = __webpack_require__(6);\nexports.Dictionary = collections_1.Dictionary;\nvar util_1 = __webpack_require__(0);\nexports.Util = util_1.Util;\n__export(__webpack_require__(5));\n__export(__webpack_require__(3));\n\n\n/***/ }),\n/* 47 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(__webpack_require__(23));\nvar files_1 = __webpack_require__(8);\nexports.CheckinType = files_1.CheckinType;\nexports.WebPartsPersonalizationScope = files_1.WebPartsPersonalizationScope;\nexports.MoveOperations = files_1.MoveOperations;\nexports.TemplateFileType = files_1.TemplateFileType;\nexports.File = files_1.File;\nexports.Files = files_1.Files;\nvar folders_1 = __webpack_require__(14);\nexports.Folder = folders_1.Folder;\nexports.Folders = folders_1.Folders;\nvar items_1 = __webpack_require__(11);\nexports.Item = items_1.Item;\nexports.Items = items_1.Items;\nexports.PagedItemCollection = items_1.PagedItemCollection;\nvar navigation_1 = __webpack_require__(30);\nexports.NavigationNodes = navigation_1.NavigationNodes;\nexports.NavigationNode = navigation_1.NavigationNode;\nvar lists_1 = __webpack_require__(10);\nexports.List = lists_1.List;\nexports.Lists = lists_1.Lists;\nvar odata_1 = __webpack_require__(2);\nexports.extractOdataId = odata_1.extractOdataId;\nexports.ODataParserBase = odata_1.ODataParserBase;\nexports.ODataDefaultParser = odata_1.ODataDefaultParser;\nexports.ODataRaw = odata_1.ODataRaw;\nexports.ODataValue = odata_1.ODataValue;\nexports.ODataEntity = odata_1.ODataEntity;\nexports.ODataEntityArray = odata_1.ODataEntityArray;\nexports.TextFileParser = odata_1.TextFileParser;\nexports.BlobFileParser = odata_1.BlobFileParser;\nexports.BufferFileParser = odata_1.BufferFileParser;\nexports.JSONFileParser = odata_1.JSONFileParser;\nvar queryable_1 = __webpack_require__(1);\nexports.Queryable = queryable_1.Queryable;\nexports.QueryableInstance = queryable_1.QueryableInstance;\nexports.QueryableCollection = queryable_1.QueryableCollection;\nvar roles_1 = __webpack_require__(16);\nexports.RoleDefinitionBindings = roles_1.RoleDefinitionBindings;\nvar search_1 = __webpack_require__(22);\nexports.Search = search_1.Search;\nexports.SearchQueryBuilder = search_1.SearchQueryBuilder;\nexports.SearchResults = search_1.SearchResults;\nexports.SortDirection = search_1.SortDirection;\nexports.ReorderingRuleMatchType = search_1.ReorderingRuleMatchType;\nexports.QueryPropertyValueType = search_1.QueryPropertyValueType;\nexports.SearchBuiltInSourceId = search_1.SearchBuiltInSourceId;\nvar searchsuggest_1 = __webpack_require__(24);\nexports.SearchSuggest = searchsuggest_1.SearchSuggest;\nexports.SearchSuggestResult = searchsuggest_1.SearchSuggestResult;\nvar site_1 = __webpack_require__(25);\nexports.Site = site_1.Site;\n__export(__webpack_require__(13));\nvar utilities_1 = __webpack_require__(32);\nexports.UtilityMethod = utilities_1.UtilityMethod;\nvar webparts_1 = __webpack_require__(28);\nexports.WebPartDefinitions = webparts_1.WebPartDefinitions;\nexports.WebPartDefinition = webparts_1.WebPartDefinition;\nexports.WebPart = webparts_1.WebPart;\nvar webs_1 = __webpack_require__(7);\nexports.Web = webs_1.Web;\n\n\n/***/ }),\n/* 48 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = __webpack_require__(0);\nvar exceptions_1 = __webpack_require__(3);\n/**\n * Makes requests using the SP.RequestExecutor library.\n */\nvar SPRequestExecutorClient = (function () {\n    function SPRequestExecutorClient() {\n        /**\n         * Converts a SharePoint REST API response to a fetch API response.\n         */\n        this.convertToResponse = function (spResponse) {\n            var responseHeaders = new Headers();\n            for (var h in spResponse.headers) {\n                if (spResponse.headers[h]) {\n                    responseHeaders.append(h, spResponse.headers[h]);\n                }\n            }\n            // issue #256, Cannot have an empty string body when creating a Response with status 204\n            var body = spResponse.statusCode === 204 ? null : spResponse.body;\n            return new Response(body, {\n                headers: responseHeaders,\n                status: spResponse.statusCode,\n                statusText: spResponse.statusText,\n            });\n        };\n    }\n    /**\n     * Fetches a URL using the SP.RequestExecutor library.\n     */\n    SPRequestExecutorClient.prototype.fetch = function (url, options) {\n        var _this = this;\n        if (typeof SP === \"undefined\" || typeof SP.RequestExecutor === \"undefined\") {\n            throw new exceptions_1.SPRequestExecutorUndefinedException();\n        }\n        var addinWebUrl = url.substring(0, url.indexOf(\"/_api\")), executor = new SP.RequestExecutor(addinWebUrl);\n        var headers = {}, iterator, temp;\n        if (options.headers && options.headers instanceof Headers) {\n            iterator = options.headers.entries();\n            temp = iterator.next();\n            while (!temp.done) {\n                headers[temp.value[0]] = temp.value[1];\n                temp = iterator.next();\n            }\n        }\n        else {\n            headers = options.headers;\n        }\n        return new Promise(function (resolve, reject) {\n            var requestOptions = {\n                error: function (error) {\n                    reject(_this.convertToResponse(error));\n                },\n                headers: headers,\n                method: options.method,\n                success: function (response) {\n                    resolve(_this.convertToResponse(response));\n                },\n                url: url,\n            };\n            if (options.body) {\n                requestOptions = util_1.Util.extend(requestOptions, { body: options.body });\n            }\n            else {\n                requestOptions = util_1.Util.extend(requestOptions, { binaryStringRequestBody: true });\n            }\n            executor.executeAsync(requestOptions);\n        });\n    };\n    return SPRequestExecutorClient;\n}());\nexports.SPRequestExecutorClient = SPRequestExecutorClient;\n\n\n/***/ }),\n/* 49 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar exceptions_1 = __webpack_require__(3);\n/**\n * This module is substituted for the NodeFetchClient.ts during the packaging process. This helps to reduce the pnp.js file size by\n * not including all of the node dependencies\n */\nvar NodeFetchClient = (function () {\n    function NodeFetchClient() {\n    }\n    /**\n     * Always throws an error that NodeFetchClient is not supported for use in the browser\n     */\n    NodeFetchClient.prototype.fetch = function () {\n        throw new exceptions_1.NodeFetchClientUnsupportedException();\n    };\n    return NodeFetchClient;\n}());\nexports.NodeFetchClient = NodeFetchClient;\n\n\n/***/ }),\n/* 50 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar cachingConfigurationProvider_1 = __webpack_require__(33);\nexports.CachingConfigurationProvider = cachingConfigurationProvider_1.default;\nvar spListConfigurationProvider_1 = __webpack_require__(51);\nexports.SPListConfigurationProvider = spListConfigurationProvider_1.default;\n\n\n/***/ }),\n/* 51 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar cachingConfigurationProvider_1 = __webpack_require__(33);\n/**\n * A configuration provider which loads configuration values from a SharePoint list\n *\n */\nvar SPListConfigurationProvider = (function () {\n    /**\n     * Creates a new SharePoint list based configuration provider\n     * @constructor\n     * @param {string} webUrl Url of the SharePoint site, where the configuration list is located\n     * @param {string} listTitle Title of the SharePoint list, which contains the configuration settings (optional, default = \"config\")\n     */\n    function SPListConfigurationProvider(sourceWeb, sourceListTitle) {\n        if (sourceListTitle === void 0) { sourceListTitle = \"config\"; }\n        this.sourceWeb = sourceWeb;\n        this.sourceListTitle = sourceListTitle;\n    }\n    Object.defineProperty(SPListConfigurationProvider.prototype, \"web\", {\n        /**\n         * Gets the url of the SharePoint site, where the configuration list is located\n         *\n         * @return {string} Url address of the site\n         */\n        get: function () {\n            return this.sourceWeb;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SPListConfigurationProvider.prototype, \"listTitle\", {\n        /**\n         * Gets the title of the SharePoint list, which contains the configuration settings\n         *\n         * @return {string} List title\n         */\n        get: function () {\n            return this.sourceListTitle;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Loads the configuration values from the SharePoint list\n     *\n     * @return {Promise<TypedHash<string>>} Promise of loaded configuration values\n     */\n    SPListConfigurationProvider.prototype.getConfiguration = function () {\n        return this.web.lists.getByTitle(this.listTitle).items.select(\"Title\", \"Value\")\n            .getAs().then(function (data) {\n            return data.reduce(function (configuration, item) {\n                return Object.defineProperty(configuration, item.Title, {\n                    configurable: false,\n                    enumerable: false,\n                    value: item.Value,\n                    writable: false,\n                });\n            }, {});\n        });\n    };\n    /**\n     * Wraps the current provider in a cache enabled provider\n     *\n     * @return {CachingConfigurationProvider} Caching providers which wraps the current provider\n     */\n    SPListConfigurationProvider.prototype.asCaching = function () {\n        var cacheKey = \"splist_\" + this.web.toUrl() + \"+\" + this.listTitle;\n        return new cachingConfigurationProvider_1.default(this, cacheKey);\n    };\n    return SPListConfigurationProvider;\n}());\nexports.default = SPListConfigurationProvider;\n\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// pnp.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/assets/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 34);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 1992e9638d8baf287427","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar pnplibconfig_1 = require(\"../configuration/pnplibconfig\");\nfunction extractWebUrl(candidateUrl) {\n    if (candidateUrl === null) {\n        return \"\";\n    }\n    var index = candidateUrl.indexOf(\"_api/\");\n    if (index > -1) {\n        return candidateUrl.substr(0, index);\n    }\n    // if all else fails just give them what they gave us back\n    return candidateUrl;\n}\nexports.extractWebUrl = extractWebUrl;\nvar Util = (function () {\n    function Util() {\n    }\n    /**\n     * Gets a callback function which will maintain context across async calls.\n     * Allows for the calling pattern getCtxCallback(thisobj, method, methodarg1, methodarg2, ...)\n     *\n     * @param context The object that will be the 'this' value in the callback\n     * @param method The method to which we will apply the context and parameters\n     * @param params Optional, additional arguments to supply to the wrapped method when it is invoked\n     */\n    Util.getCtxCallback = function (context, method) {\n        var params = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            params[_i - 2] = arguments[_i];\n        }\n        return function () {\n            method.apply(context, params);\n        };\n    };\n    /**\n     * Tests if a url param exists\n     *\n     * @param name The name of the url paramter to check\n     */\n    Util.urlParamExists = function (name) {\n        name = name.replace(/[\\[]/, \"\\\\[\").replace(/[\\]]/, \"\\\\]\");\n        var regex = new RegExp(\"[\\\\?&]\" + name + \"=([^&#]*)\");\n        return regex.test(location.search);\n    };\n    /**\n     * Gets a url param value by name\n     *\n     * @param name The name of the paramter for which we want the value\n     */\n    Util.getUrlParamByName = function (name) {\n        name = name.replace(/[\\[]/, \"\\\\[\").replace(/[\\]]/, \"\\\\]\");\n        var regex = new RegExp(\"[\\\\?&]\" + name + \"=([^&#]*)\");\n        var results = regex.exec(location.search);\n        return results == null ? \"\" : decodeURIComponent(results[1].replace(/\\+/g, \" \"));\n    };\n    /**\n     * Gets a url param by name and attempts to parse a bool value\n     *\n     * @param name The name of the paramter for which we want the boolean value\n     */\n    Util.getUrlParamBoolByName = function (name) {\n        var p = this.getUrlParamByName(name);\n        var isFalse = (p === \"\" || /false|0/i.test(p));\n        return !isFalse;\n    };\n    /**\n     * Inserts the string s into the string target as the index specified by index\n     *\n     * @param target The string into which we will insert s\n     * @param index The location in target to insert s (zero based)\n     * @param s The string to insert into target at position index\n     */\n    Util.stringInsert = function (target, index, s) {\n        if (index > 0) {\n            return target.substring(0, index) + s + target.substring(index, target.length);\n        }\n        return s + target;\n    };\n    /**\n     * Adds a value to a date\n     *\n     * @param date The date to which we will add units, done in local time\n     * @param interval The name of the interval to add, one of: ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second']\n     * @param units The amount to add to date of the given interval\n     *\n     * http://stackoverflow.com/questions/1197928/how-to-add-30-minutes-to-a-javascript-date-object\n     */\n    Util.dateAdd = function (date, interval, units) {\n        var ret = new Date(date); // don't change original date\n        switch (interval.toLowerCase()) {\n            case \"year\":\n                ret.setFullYear(ret.getFullYear() + units);\n                break;\n            case \"quarter\":\n                ret.setMonth(ret.getMonth() + 3 * units);\n                break;\n            case \"month\":\n                ret.setMonth(ret.getMonth() + units);\n                break;\n            case \"week\":\n                ret.setDate(ret.getDate() + 7 * units);\n                break;\n            case \"day\":\n                ret.setDate(ret.getDate() + units);\n                break;\n            case \"hour\":\n                ret.setTime(ret.getTime() + units * 3600000);\n                break;\n            case \"minute\":\n                ret.setTime(ret.getTime() + units * 60000);\n                break;\n            case \"second\":\n                ret.setTime(ret.getTime() + units * 1000);\n                break;\n            default:\n                ret = undefined;\n                break;\n        }\n        return ret;\n    };\n    /**\n     * Loads a stylesheet into the current page\n     *\n     * @param path The url to the stylesheet\n     * @param avoidCache If true a value will be appended as a query string to avoid browser caching issues\n     */\n    Util.loadStylesheet = function (path, avoidCache) {\n        if (avoidCache) {\n            path += \"?\" + encodeURIComponent((new Date()).getTime().toString());\n        }\n        var head = document.getElementsByTagName(\"head\");\n        if (head.length > 0) {\n            var e = document.createElement(\"link\");\n            head[0].appendChild(e);\n            e.setAttribute(\"type\", \"text/css\");\n            e.setAttribute(\"rel\", \"stylesheet\");\n            e.setAttribute(\"href\", path);\n        }\n    };\n    /**\n     * Combines an arbitrary set of paths ensuring that the slashes are normalized\n     *\n     * @param paths 0 to n path parts to combine\n     */\n    Util.combinePaths = function () {\n        var paths = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            paths[_i] = arguments[_i];\n        }\n        return paths\n            .filter(function (path) { return !Util.stringIsNullOrEmpty(path); })\n            .map(function (path) { return path.replace(/^[\\\\|\\/]/, \"\").replace(/[\\\\|\\/]$/, \"\"); })\n            .join(\"/\")\n            .replace(/\\\\/g, \"/\");\n    };\n    /**\n     * Gets a random string of chars length\n     *\n     * @param chars The length of the random string to generate\n     */\n    Util.getRandomString = function (chars) {\n        var text = new Array(chars);\n        var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n        for (var i = 0; i < chars; i++) {\n            text[i] = possible.charAt(Math.floor(Math.random() * possible.length));\n        }\n        return text.join(\"\");\n    };\n    /**\n     * Gets a random GUID value\n     *\n     * http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n     */\n    /* tslint:disable no-bitwise */\n    Util.getGUID = function () {\n        var d = new Date().getTime();\n        var guid = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\n            var r = (d + Math.random() * 16) % 16 | 0;\n            d = Math.floor(d / 16);\n            return (c === \"x\" ? r : (r & 0x3 | 0x8)).toString(16);\n        });\n        return guid;\n    };\n    /* tslint:enable */\n    /**\n     * Determines if a given value is a function\n     *\n     * @param candidateFunction The thing to test for being a function\n     */\n    Util.isFunction = function (candidateFunction) {\n        return typeof candidateFunction === \"function\";\n    };\n    /**\n     * @returns whether the provided parameter is a JavaScript Array or not.\n    */\n    Util.isArray = function (array) {\n        if (Array.isArray) {\n            return Array.isArray(array);\n        }\n        return array && typeof array.length === \"number\" && array.constructor === Array;\n    };\n    /**\n     * Determines if a string is null or empty or undefined\n     *\n     * @param s The string to test\n     */\n    Util.stringIsNullOrEmpty = function (s) {\n        return typeof s === \"undefined\" || s === null || s.length < 1;\n    };\n    /**\n     * Provides functionality to extend the given object by doing a shallow copy\n     *\n     * @param target The object to which properties will be copied\n     * @param source The source object from which properties will be copied\n     * @param noOverwrite If true existing properties on the target are not overwritten from the source\n     *\n     */\n    Util.extend = function (target, source, noOverwrite) {\n        if (noOverwrite === void 0) { noOverwrite = false; }\n        if (source === null || typeof source === \"undefined\") {\n            return target;\n        }\n        // ensure we don't overwrite things we don't want overwritten\n        var check = noOverwrite ? function (o, i) { return !(i in o); } : function () { return true; };\n        return Object.getOwnPropertyNames(source)\n            .filter(function (v) { return check(target, v); })\n            .reduce(function (t, v) {\n            t[v] = source[v];\n            return t;\n        }, target);\n    };\n    /**\n     * Determines if a given url is absolute\n     *\n     * @param url The url to check to see if it is absolute\n     */\n    Util.isUrlAbsolute = function (url) {\n        return /^https?:\\/\\/|^\\/\\//i.test(url);\n    };\n    /**\n     * Ensures that a given url is absolute for the current web based on context\n     *\n     * @param candidateUrl The url to make absolute\n     *\n     */\n    Util.toAbsoluteUrl = function (candidateUrl) {\n        return new Promise(function (resolve) {\n            if (Util.isUrlAbsolute(candidateUrl)) {\n                // if we are already absolute, then just return the url\n                return resolve(candidateUrl);\n            }\n            if (pnplibconfig_1.RuntimeConfig.baseUrl !== null) {\n                // base url specified either with baseUrl of spfxContext config property\n                return resolve(Util.combinePaths(pnplibconfig_1.RuntimeConfig.baseUrl, candidateUrl));\n            }\n            if (typeof global._spPageContextInfo !== \"undefined\") {\n                // operating in classic pages\n                if (global._spPageContextInfo.hasOwnProperty(\"webAbsoluteUrl\")) {\n                    return resolve(Util.combinePaths(global._spPageContextInfo.webAbsoluteUrl, candidateUrl));\n                }\n                else if (global._spPageContextInfo.hasOwnProperty(\"webServerRelativeUrl\")) {\n                    return resolve(Util.combinePaths(global._spPageContextInfo.webServerRelativeUrl, candidateUrl));\n                }\n            }\n            // does window.location exist and have a certain path part in it?\n            if (typeof global.location !== \"undefined\") {\n                var baseUrl_1 = global.location.toString().toLowerCase();\n                [\"/_layouts/\", \"/siteassets/\"].forEach(function (s) {\n                    var index = baseUrl_1.indexOf(s);\n                    if (index > 0) {\n                        return resolve(Util.combinePaths(baseUrl_1.substr(0, index), candidateUrl));\n                    }\n                });\n            }\n            return resolve(candidateUrl);\n        });\n    };\n    return Util;\n}());\nexports.Util = Util;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/utils/util.js\n// module id = 0\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"../utils/util\");\nvar collections_1 = require(\"../collections/collections\");\nvar httpclient_1 = require(\"../net/httpclient\");\nvar odata_1 = require(\"./odata\");\nvar pnplibconfig_1 = require(\"../configuration/pnplibconfig\");\nvar exceptions_1 = require(\"../utils/exceptions\");\nvar logging_1 = require(\"../utils/logging\");\nvar pipeline_1 = require(\"./pipeline\");\n/**\n * Queryable Base Class\n *\n */\nvar Queryable = (function () {\n    /**\n     * Creates a new instance of the Queryable class\n     *\n     * @constructor\n     * @param baseUrl A string or Queryable that should form the base part of the url\n     *\n     */\n    function Queryable(baseUrl, path) {\n        this._options = {};\n        this._query = new collections_1.Dictionary();\n        this._batch = null;\n        if (typeof baseUrl === \"string\") {\n            // we need to do some extra parsing to get the parent url correct if we are\n            // being created from just a string.\n            var urlStr = baseUrl;\n            if (util_1.Util.isUrlAbsolute(urlStr) || urlStr.lastIndexOf(\"/\") < 0) {\n                this._parentUrl = urlStr;\n                this._url = util_1.Util.combinePaths(urlStr, path);\n            }\n            else if (urlStr.lastIndexOf(\"/\") > urlStr.lastIndexOf(\"(\")) {\n                // .../items(19)/fields\n                var index = urlStr.lastIndexOf(\"/\");\n                this._parentUrl = urlStr.slice(0, index);\n                path = util_1.Util.combinePaths(urlStr.slice(index), path);\n                this._url = util_1.Util.combinePaths(this._parentUrl, path);\n            }\n            else {\n                // .../items(19)\n                var index = urlStr.lastIndexOf(\"(\");\n                this._parentUrl = urlStr.slice(0, index);\n                this._url = util_1.Util.combinePaths(urlStr, path);\n            }\n        }\n        else {\n            var q = baseUrl;\n            this._parentUrl = q._url;\n            this._options = q._options;\n            var target = q._query.get(\"@target\");\n            if (target !== null) {\n                this._query.add(\"@target\", target);\n            }\n            this._url = util_1.Util.combinePaths(this._parentUrl, path);\n        }\n    }\n    /**\n     * Directly concatonates the supplied string to the current url, not normalizing \"/\" chars\n     *\n     * @param pathPart The string to concatonate to the url\n     */\n    Queryable.prototype.concat = function (pathPart) {\n        this._url += pathPart;\n        return this;\n    };\n    /**\n     * Appends the given string and normalizes \"/\" chars\n     *\n     * @param pathPart The string to append\n     */\n    Queryable.prototype.append = function (pathPart) {\n        this._url = util_1.Util.combinePaths(this._url, pathPart);\n    };\n    /**\n     * Blocks a batch call from occuring, MUST be cleared by calling the returned function\n     */\n    Queryable.prototype.addBatchDependency = function () {\n        if (this.hasBatch) {\n            return this._batch.addDependency();\n        }\n        return function () { return null; };\n    };\n    Object.defineProperty(Queryable.prototype, \"hasBatch\", {\n        /**\n         * Indicates if the current query has a batch associated\n         *\n         */\n        get: function () {\n            return this._batch !== null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Queryable.prototype, \"batch\", {\n        /**\n         * The batch currently associated with this query or null\n         *\n         */\n        get: function () {\n            return this.hasBatch ? this._batch : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Queryable.prototype, \"parentUrl\", {\n        /**\n         * Gets the parent url used when creating this instance\n         *\n         */\n        get: function () {\n            return this._parentUrl;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Queryable.prototype, \"query\", {\n        /**\n         * Provides access to the query builder for this url\n         *\n         */\n        get: function () {\n            return this._query;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Sets custom options for current object and all derived objects accessible via chaining\n     *\n     * @param options custom options\n     */\n    Queryable.prototype.configure = function (options) {\n        httpclient_1.mergeOptions(this._options, options);\n        return this;\n    };\n    /**\n     * Creates a new instance of the supplied factory and extends this into that new instance\n     *\n     * @param factory constructor for the new queryable\n     */\n    Queryable.prototype.as = function (factory) {\n        var o = new factory(this._url, null);\n        return util_1.Util.extend(o, this, true);\n    };\n    /**\n     * Adds this query to the supplied batch\n     *\n     * @example\n     * ```\n     *\n     * let b = pnp.sp.createBatch();\n     * pnp.sp.web.inBatch(b).get().then(...);\n     * b.execute().then(...)\n     * ```\n     */\n    Queryable.prototype.inBatch = function (batch) {\n        if (this._batch !== null) {\n            throw new exceptions_1.AlreadyInBatchException();\n        }\n        this._batch = batch;\n        return this;\n    };\n    /**\n     * Enables caching for this request\n     *\n     * @param options Defines the options used when caching this request\n     */\n    Queryable.prototype.usingCaching = function (options) {\n        if (!pnplibconfig_1.RuntimeConfig.globalCacheDisable) {\n            this._useCaching = true;\n            this._cachingOptions = options;\n        }\n        return this;\n    };\n    /**\n     * Gets the currentl url, made absolute based on the availability of the _spPageContextInfo object\n     *\n     */\n    Queryable.prototype.toUrl = function () {\n        return this._url;\n    };\n    /**\n     * Gets the full url with query information\n     *\n     */\n    Queryable.prototype.toUrlAndQuery = function () {\n        var aliasedParams = new collections_1.Dictionary();\n        var url = this.toUrl().replace(/'!(@.*?)::(.*?)'/ig, function (match, labelName, value) {\n            logging_1.Logger.write(\"Rewriting aliased parameter from match \" + match + \" to label: \" + labelName + \" value: \" + value, logging_1.LogLevel.Verbose);\n            aliasedParams.add(labelName, \"'\" + value + \"'\");\n            return labelName;\n        });\n        // inlude our explicitly set query string params\n        aliasedParams.merge(this._query);\n        if (aliasedParams.count() > 0) {\n            url += \"?\" + aliasedParams.getKeys().map(function (key) { return key + \"=\" + aliasedParams.get(key); }).join(\"&\");\n        }\n        return url;\n    };\n    /**\n     * Gets a parent for this instance as specified\n     *\n     * @param factory The contructor for the class to create\n     */\n    Queryable.prototype.getParent = function (factory, baseUrl, path, batch) {\n        if (baseUrl === void 0) { baseUrl = this.parentUrl; }\n        var parent = new factory(baseUrl, path);\n        parent.configure(this._options);\n        var target = this.query.get(\"@target\");\n        if (target !== null) {\n            parent.query.add(\"@target\", target);\n        }\n        if (typeof batch !== \"undefined\") {\n            parent = parent.inBatch(batch);\n        }\n        return parent;\n    };\n    /**\n     * Clones this queryable into a new queryable instance of T\n     * @param factory Constructor used to create the new instance\n     * @param additionalPath Any additional path to include in the clone\n     * @param includeBatch If true this instance's batch will be added to the cloned instance\n     */\n    Queryable.prototype.clone = function (factory, additionalPath, includeBatch) {\n        if (includeBatch === void 0) { includeBatch = false; }\n        var clone = new factory(this, additionalPath);\n        var target = this.query.get(\"@target\");\n        if (target !== null) {\n            clone.query.add(\"@target\", target);\n        }\n        if (includeBatch && this.hasBatch) {\n            clone = clone.inBatch(this.batch);\n        }\n        return clone;\n    };\n    /**\n     * Executes the currently built request\n     *\n     * @param parser Allows you to specify a parser to handle the result\n     * @param getOptions The options used for this request\n     */\n    Queryable.prototype.get = function (parser, getOptions) {\n        if (parser === void 0) { parser = new odata_1.ODataDefaultParser(); }\n        if (getOptions === void 0) { getOptions = {}; }\n        return this.toRequestContext(\"GET\", getOptions, parser).then(function (context) { return pipeline_1.pipe(context); });\n    };\n    Queryable.prototype.getAs = function (parser, getOptions) {\n        if (parser === void 0) { parser = new odata_1.ODataDefaultParser(); }\n        if (getOptions === void 0) { getOptions = {}; }\n        return this.toRequestContext(\"GET\", getOptions, parser).then(function (context) { return pipeline_1.pipe(context); });\n    };\n    Queryable.prototype.postCore = function (postOptions, parser) {\n        if (postOptions === void 0) { postOptions = {}; }\n        if (parser === void 0) { parser = new odata_1.ODataDefaultParser(); }\n        return this.toRequestContext(\"POST\", postOptions, parser).then(function (context) { return pipeline_1.pipe(context); });\n    };\n    Queryable.prototype.postAsCore = function (postOptions, parser) {\n        if (postOptions === void 0) { postOptions = {}; }\n        if (parser === void 0) { parser = new odata_1.ODataDefaultParser(); }\n        return this.toRequestContext(\"POST\", postOptions, parser).then(function (context) { return pipeline_1.pipe(context); });\n    };\n    Queryable.prototype.patchCore = function (patchOptions, parser) {\n        if (patchOptions === void 0) { patchOptions = {}; }\n        if (parser === void 0) { parser = new odata_1.ODataDefaultParser(); }\n        return this.toRequestContext(\"PATCH\", patchOptions, parser).then(function (context) { return pipeline_1.pipe(context); });\n    };\n    Queryable.prototype.deleteCore = function (deleteOptions, parser) {\n        if (deleteOptions === void 0) { deleteOptions = {}; }\n        if (parser === void 0) { parser = new odata_1.ODataDefaultParser(); }\n        return this.toRequestContext(\"DELETE\", deleteOptions, parser).then(function (context) { return pipeline_1.pipe(context); });\n    };\n    /**\n     * Converts the current instance to a request context\n     *\n     * @param verb The request verb\n     * @param options The set of supplied request options\n     * @param parser The supplied ODataParser instance\n     * @param pipeline Optional request processing pipeline\n     */\n    Queryable.prototype.toRequestContext = function (verb, options, parser, pipeline) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        if (pipeline === void 0) { pipeline = pipeline_1.PipelineMethods.default; }\n        var dependencyDispose = this.hasBatch ? this.addBatchDependency() : function () { return; };\n        return util_1.Util.toAbsoluteUrl(this.toUrlAndQuery()).then(function (url) {\n            httpclient_1.mergeOptions(options, _this._options);\n            // build our request context\n            var context = {\n                batch: _this._batch,\n                batchDependency: dependencyDispose,\n                cachingOptions: _this._cachingOptions,\n                isBatched: _this.hasBatch,\n                isCached: _this._useCaching,\n                options: options,\n                parser: parser,\n                pipeline: pipeline,\n                requestAbsoluteUrl: url,\n                requestId: util_1.Util.getGUID(),\n                verb: verb,\n            };\n            return context;\n        });\n    };\n    return Queryable;\n}());\nexports.Queryable = Queryable;\n/**\n * Represents a REST collection which can be filtered, paged, and selected\n *\n */\nvar QueryableCollection = (function (_super) {\n    __extends(QueryableCollection, _super);\n    function QueryableCollection() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Filters the returned collection (https://msdn.microsoft.com/en-us/library/office/fp142385.aspx#bk_supported)\n     *\n     * @param filter The string representing the filter query\n     */\n    QueryableCollection.prototype.filter = function (filter) {\n        this._query.add(\"$filter\", filter);\n        return this;\n    };\n    /**\n     * Choose which fields to return\n     *\n     * @param selects One or more fields to return\n     */\n    QueryableCollection.prototype.select = function () {\n        var selects = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            selects[_i] = arguments[_i];\n        }\n        if (selects.length > 0) {\n            this._query.add(\"$select\", selects.join(\",\"));\n        }\n        return this;\n    };\n    /**\n     * Expands fields such as lookups to get additional data\n     *\n     * @param expands The Fields for which to expand the values\n     */\n    QueryableCollection.prototype.expand = function () {\n        var expands = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            expands[_i] = arguments[_i];\n        }\n        if (expands.length > 0) {\n            this._query.add(\"$expand\", expands.join(\",\"));\n        }\n        return this;\n    };\n    /**\n     * Orders based on the supplied fields ascending\n     *\n     * @param orderby The name of the field to sort on\n     * @param ascending If false DESC is appended, otherwise ASC (default)\n     */\n    QueryableCollection.prototype.orderBy = function (orderBy, ascending) {\n        if (ascending === void 0) { ascending = true; }\n        var keys = this._query.getKeys();\n        var query = [];\n        var asc = ascending ? \" asc\" : \" desc\";\n        for (var i = 0; i < keys.length; i++) {\n            if (keys[i] === \"$orderby\") {\n                query.push(this._query.get(\"$orderby\"));\n                break;\n            }\n        }\n        query.push(\"\" + orderBy + asc);\n        this._query.add(\"$orderby\", query.join(\",\"));\n        return this;\n    };\n    /**\n     * Skips the specified number of items\n     *\n     * @param skip The number of items to skip\n     */\n    QueryableCollection.prototype.skip = function (skip) {\n        this._query.add(\"$skip\", skip.toString());\n        return this;\n    };\n    /**\n     * Limits the query to only return the specified number of items\n     *\n     * @param top The query row limit\n     */\n    QueryableCollection.prototype.top = function (top) {\n        this._query.add(\"$top\", top.toString());\n        return this;\n    };\n    return QueryableCollection;\n}(Queryable));\nexports.QueryableCollection = QueryableCollection;\n/**\n * Represents an instance that can be selected\n *\n */\nvar QueryableInstance = (function (_super) {\n    __extends(QueryableInstance, _super);\n    function QueryableInstance() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Choose which fields to return\n     *\n     * @param selects One or more fields to return\n     */\n    QueryableInstance.prototype.select = function () {\n        var selects = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            selects[_i] = arguments[_i];\n        }\n        if (selects.length > 0) {\n            this._query.add(\"$select\", selects.join(\",\"));\n        }\n        return this;\n    };\n    /**\n     * Expands fields such as lookups to get additional data\n     *\n     * @param expands The Fields for which to expand the values\n     */\n    QueryableInstance.prototype.expand = function () {\n        var expands = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            expands[_i] = arguments[_i];\n        }\n        if (expands.length > 0) {\n            this._query.add(\"$expand\", expands.join(\",\"));\n        }\n        return this;\n    };\n    return QueryableInstance;\n}(Queryable));\nexports.QueryableInstance = QueryableInstance;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/queryable.js\n// module id = 1\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"../utils/util\");\nvar logging_1 = require(\"../utils/logging\");\nvar httpclient_1 = require(\"../net/httpclient\");\nvar pnplibconfig_1 = require(\"../configuration/pnplibconfig\");\nvar exceptions_1 = require(\"../utils/exceptions\");\nfunction extractOdataId(candidate) {\n    if (candidate.hasOwnProperty(\"odata.id\")) {\n        return candidate[\"odata.id\"];\n    }\n    else if (candidate.hasOwnProperty(\"__metadata\") && candidate.__metadata.hasOwnProperty(\"id\")) {\n        return candidate.__metadata.id;\n    }\n    else {\n        throw new exceptions_1.ODataIdException(candidate);\n    }\n}\nexports.extractOdataId = extractOdataId;\nvar ODataParserBase = (function () {\n    function ODataParserBase() {\n    }\n    ODataParserBase.prototype.parse = function (r) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            if (_this.handleError(r, reject)) {\n                if ((r.headers.has(\"Content-Length\") && parseFloat(r.headers.get(\"Content-Length\")) === 0) || r.status === 204) {\n                    resolve({});\n                }\n                else {\n                    // patch to handle cases of 200 response with no or whitespace only bodies (#487 & #545)\n                    r.text()\n                        .then(function (txt) { return txt.replace(/\\s/ig, \"\").length > 0 ? JSON.parse(txt) : {}; })\n                        .then(function (json) { return resolve(_this.parseODataJSON(json)); })\n                        .catch(function (e) { return reject(e); });\n                }\n            }\n        });\n    };\n    ODataParserBase.prototype.handleError = function (r, reject) {\n        if (!r.ok) {\n            r.json().then(function (json) {\n                // include the headers as they contain diagnostic information\n                var data = {\n                    responseBody: json,\n                    responseHeaders: r.headers,\n                };\n                reject(new exceptions_1.ProcessHttpClientResponseException(r.status, r.statusText, data));\n            }).catch(function (e) {\n                // we failed to read the body - possibly it is empty. Let's report the original status that caused\n                // the request to fail and log the error with parsing the body if anyone needs it for debugging\n                logging_1.Logger.log({\n                    data: e,\n                    level: logging_1.LogLevel.Warning,\n                    message: \"There was an error parsing the error response body. See data for details.\",\n                });\n                // include the headers as they contain diagnostic information\n                var data = {\n                    responseBody: \"[[body not available]]\",\n                    responseHeaders: r.headers,\n                };\n                reject(new exceptions_1.ProcessHttpClientResponseException(r.status, r.statusText, data));\n            });\n        }\n        return r.ok;\n    };\n    ODataParserBase.prototype.parseODataJSON = function (json) {\n        var result = json;\n        if (json.hasOwnProperty(\"d\")) {\n            if (json.d.hasOwnProperty(\"results\")) {\n                result = json.d.results;\n            }\n            else {\n                result = json.d;\n            }\n        }\n        else if (json.hasOwnProperty(\"value\")) {\n            result = json.value;\n        }\n        return result;\n    };\n    return ODataParserBase;\n}());\nexports.ODataParserBase = ODataParserBase;\nvar ODataDefaultParser = (function (_super) {\n    __extends(ODataDefaultParser, _super);\n    function ODataDefaultParser() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return ODataDefaultParser;\n}(ODataParserBase));\nexports.ODataDefaultParser = ODataDefaultParser;\nvar ODataRawParserImpl = (function () {\n    function ODataRawParserImpl() {\n    }\n    ODataRawParserImpl.prototype.parse = function (r) {\n        return r.json();\n    };\n    return ODataRawParserImpl;\n}());\nexports.ODataRawParserImpl = ODataRawParserImpl;\nvar ODataValueParserImpl = (function (_super) {\n    __extends(ODataValueParserImpl, _super);\n    function ODataValueParserImpl() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ODataValueParserImpl.prototype.parse = function (r) {\n        return _super.prototype.parse.call(this, r).then(function (d) { return d; });\n    };\n    return ODataValueParserImpl;\n}(ODataParserBase));\nvar ODataEntityParserImpl = (function (_super) {\n    __extends(ODataEntityParserImpl, _super);\n    function ODataEntityParserImpl(factory) {\n        var _this = _super.call(this) || this;\n        _this.factory = factory;\n        return _this;\n    }\n    ODataEntityParserImpl.prototype.parse = function (r) {\n        var _this = this;\n        return _super.prototype.parse.call(this, r).then(function (d) {\n            var o = new _this.factory(getEntityUrl(d), null);\n            return util_1.Util.extend(o, d);\n        });\n    };\n    return ODataEntityParserImpl;\n}(ODataParserBase));\nvar ODataEntityArrayParserImpl = (function (_super) {\n    __extends(ODataEntityArrayParserImpl, _super);\n    function ODataEntityArrayParserImpl(factory) {\n        var _this = _super.call(this) || this;\n        _this.factory = factory;\n        return _this;\n    }\n    ODataEntityArrayParserImpl.prototype.parse = function (r) {\n        var _this = this;\n        return _super.prototype.parse.call(this, r).then(function (d) {\n            return d.map(function (v) {\n                var o = new _this.factory(getEntityUrl(v), null);\n                return util_1.Util.extend(o, v);\n            });\n        });\n    };\n    return ODataEntityArrayParserImpl;\n}(ODataParserBase));\nfunction getEntityUrl(entity) {\n    if (entity.hasOwnProperty(\"odata.metadata\") && entity.hasOwnProperty(\"odata.editLink\")) {\n        // we are dealign with minimal metadata (default)\n        return util_1.Util.combinePaths(util_1.extractWebUrl(entity[\"odata.metadata\"]), \"_api\", entity[\"odata.editLink\"]);\n    }\n    else if (entity.hasOwnProperty(\"__metadata\")) {\n        // we are dealing with verbose, which has an absolute uri\n        return entity.__metadata.uri;\n    }\n    else {\n        // we are likely dealing with nometadata, so don't error but we won't be able to\n        // chain off these objects\n        logging_1.Logger.write(\"No uri information found in ODataEntity parsing, chaining will fail for this object.\", logging_1.LogLevel.Warning);\n        return \"\";\n    }\n}\nexports.getEntityUrl = getEntityUrl;\nexports.ODataRaw = new ODataRawParserImpl();\nfunction ODataValue() {\n    return new ODataValueParserImpl();\n}\nexports.ODataValue = ODataValue;\nfunction ODataEntity(factory) {\n    return new ODataEntityParserImpl(factory);\n}\nexports.ODataEntity = ODataEntity;\nfunction ODataEntityArray(factory) {\n    return new ODataEntityArrayParserImpl(factory);\n}\nexports.ODataEntityArray = ODataEntityArray;\n/**\n * Manages a batch of OData operations\n */\nvar ODataBatch = (function () {\n    function ODataBatch(baseUrl, _batchId) {\n        if (_batchId === void 0) { _batchId = util_1.Util.getGUID(); }\n        this.baseUrl = baseUrl;\n        this._batchId = _batchId;\n        this._requests = [];\n        this._dependencies = [];\n    }\n    Object.defineProperty(ODataBatch.prototype, \"batchId\", {\n        get: function () {\n            return this._batchId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Adds a request to a batch (not designed for public use)\n     *\n     * @param url The full url of the request\n     * @param method The http method GET, POST, etc\n     * @param options Any options to include in the request\n     * @param parser The parser that will hadle the results of the request\n     */\n    ODataBatch.prototype.add = function (url, method, options, parser) {\n        var info = {\n            method: method.toUpperCase(),\n            options: options,\n            parser: parser,\n            reject: null,\n            resolve: null,\n            url: url,\n        };\n        var p = new Promise(function (resolve, reject) {\n            info.resolve = resolve;\n            info.reject = reject;\n        });\n        this._requests.push(info);\n        return p;\n    };\n    /**\n     * Adds a dependency insuring that some set of actions will occur before a batch is processed.\n     * MUST be cleared using the returned resolve delegate to allow batches to run\n     */\n    ODataBatch.prototype.addDependency = function () {\n        var resolver;\n        var promise = new Promise(function (resolve) {\n            resolver = resolve;\n        });\n        this._dependencies.push(promise);\n        return resolver;\n    };\n    /**\n     * Execute the current batch and resolve the associated promises\n     *\n     * @returns A promise which will be resolved once all of the batch's child promises have resolved\n     */\n    ODataBatch.prototype.execute = function () {\n        var _this = this;\n        // we need to check the dependencies twice due to how different engines handle things.\n        // We can get a second set of promises added after the first set resolve\n        return Promise.all(this._dependencies).then(function () { return Promise.all(_this._dependencies); }).then(function () { return _this.executeImpl(); });\n    };\n    ODataBatch.prototype.executeImpl = function () {\n        var _this = this;\n        logging_1.Logger.write(\"[\" + this.batchId + \"] (\" + (new Date()).getTime() + \") Executing batch with \" + this._requests.length + \" requests.\", logging_1.LogLevel.Info);\n        // if we don't have any requests, don't bother sending anything\n        // this could be due to caching further upstream, or just an empty batch\n        if (this._requests.length < 1) {\n            logging_1.Logger.write(\"Resolving empty batch.\", logging_1.LogLevel.Info);\n            return Promise.resolve();\n        }\n        // creating the client here allows the url to be populated for nodejs client as well as potentially\n        // any other hacks needed for other types of clients. Essentially allows the absoluteRequestUrl\n        // below to be correct\n        var client = new httpclient_1.HttpClient();\n        // due to timing we need to get the absolute url here so we can use it for all the individual requests\n        // and for sending the entire batch\n        return util_1.Util.toAbsoluteUrl(this.baseUrl).then(function (absoluteRequestUrl) {\n            // build all the requests, send them, pipe results in order to parsers\n            var batchBody = [];\n            var currentChangeSetId = \"\";\n            for (var i = 0; i < _this._requests.length; i++) {\n                var reqInfo = _this._requests[i];\n                if (reqInfo.method === \"GET\") {\n                    if (currentChangeSetId.length > 0) {\n                        // end an existing change set\n                        batchBody.push(\"--changeset_\" + currentChangeSetId + \"--\\n\\n\");\n                        currentChangeSetId = \"\";\n                    }\n                    batchBody.push(\"--batch_\" + _this._batchId + \"\\n\");\n                }\n                else {\n                    if (currentChangeSetId.length < 1) {\n                        // start new change set\n                        currentChangeSetId = util_1.Util.getGUID();\n                        batchBody.push(\"--batch_\" + _this._batchId + \"\\n\");\n                        batchBody.push(\"Content-Type: multipart/mixed; boundary=\\\"changeset_\" + currentChangeSetId + \"\\\"\\n\\n\");\n                    }\n                    batchBody.push(\"--changeset_\" + currentChangeSetId + \"\\n\");\n                }\n                // common batch part prefix\n                batchBody.push(\"Content-Type: application/http\\n\");\n                batchBody.push(\"Content-Transfer-Encoding: binary\\n\\n\");\n                var headers = new Headers();\n                // this is the url of the individual request within the batch\n                var url = util_1.Util.isUrlAbsolute(reqInfo.url) ? reqInfo.url : util_1.Util.combinePaths(absoluteRequestUrl, reqInfo.url);\n                logging_1.Logger.write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Adding request \" + reqInfo.method + \" \" + url + \" to batch.\", logging_1.LogLevel.Verbose);\n                if (reqInfo.method !== \"GET\") {\n                    var method = reqInfo.method;\n                    if (reqInfo.hasOwnProperty(\"options\") && reqInfo.options.hasOwnProperty(\"headers\") && typeof reqInfo.options.headers[\"X-HTTP-Method\"] !== \"undefined\") {\n                        method = reqInfo.options.headers[\"X-HTTP-Method\"];\n                        delete reqInfo.options.headers[\"X-HTTP-Method\"];\n                    }\n                    batchBody.push(method + \" \" + url + \" HTTP/1.1\\n\");\n                    headers.set(\"Content-Type\", \"application/json;odata=verbose;charset=utf-8\");\n                }\n                else {\n                    batchBody.push(reqInfo.method + \" \" + url + \" HTTP/1.1\\n\");\n                }\n                // merge global config headers\n                httpclient_1.mergeHeaders(headers, pnplibconfig_1.RuntimeConfig.headers);\n                // merge per-request headers\n                if (reqInfo.options) {\n                    httpclient_1.mergeHeaders(headers, reqInfo.options.headers);\n                }\n                // lastly we apply any default headers we need that may not exist\n                if (!headers.has(\"Accept\")) {\n                    headers.append(\"Accept\", \"application/json\");\n                }\n                if (!headers.has(\"Content-Type\")) {\n                    headers.append(\"Content-Type\", \"application/json;odata=verbose;charset=utf-8\");\n                }\n                if (!headers.has(\"X-ClientService-ClientTag\")) {\n                    headers.append(\"X-ClientService-ClientTag\", \"PnPCoreJS:2.0.8\");\n                }\n                // write headers into batch body\n                headers.forEach(function (value, name) {\n                    batchBody.push(name + \": \" + value + \"\\n\");\n                });\n                batchBody.push(\"\\n\");\n                if (reqInfo.options.body) {\n                    batchBody.push(reqInfo.options.body + \"\\n\\n\");\n                }\n            }\n            if (currentChangeSetId.length > 0) {\n                // Close the changeset\n                batchBody.push(\"--changeset_\" + currentChangeSetId + \"--\\n\\n\");\n                currentChangeSetId = \"\";\n            }\n            batchBody.push(\"--batch_\" + _this._batchId + \"--\\n\");\n            var batchHeaders = {\n                \"Content-Type\": \"multipart/mixed; boundary=batch_\" + _this._batchId,\n            };\n            var batchOptions = {\n                \"body\": batchBody.join(\"\"),\n                \"headers\": batchHeaders,\n            };\n            logging_1.Logger.write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Sending batch request.\", logging_1.LogLevel.Info);\n            return client.post(util_1.Util.combinePaths(absoluteRequestUrl, \"/_api/$batch\"), batchOptions)\n                .then(function (r) { return r.text(); })\n                .then(_this._parseResponse)\n                .then(function (responses) {\n                if (responses.length !== _this._requests.length) {\n                    throw new exceptions_1.BatchParseException(\"Could not properly parse responses to match requests in batch.\");\n                }\n                logging_1.Logger.write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Resolving batched requests.\", logging_1.LogLevel.Info);\n                return responses.reduce(function (chain, response, index) {\n                    var request = _this._requests[index];\n                    logging_1.Logger.write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Resolving batched request \" + request.method + \" \" + request.url + \".\", logging_1.LogLevel.Verbose);\n                    return chain.then(function (_) { return request.parser.parse(response).then(request.resolve).catch(request.reject); });\n                }, Promise.resolve());\n            });\n        });\n    };\n    /**\n     * Parses the response from a batch request into an array of Response instances\n     *\n     * @param body Text body of the response from the batch request\n     */\n    ODataBatch.prototype._parseResponse = function (body) {\n        return new Promise(function (resolve, reject) {\n            var responses = [];\n            var header = \"--batchresponse_\";\n            // Ex. \"HTTP/1.1 500 Internal Server Error\"\n            var statusRegExp = new RegExp(\"^HTTP/[0-9.]+ +([0-9]+) +(.*)\", \"i\");\n            var lines = body.split(\"\\n\");\n            var state = \"batch\";\n            var status;\n            var statusText;\n            for (var i = 0; i < lines.length; ++i) {\n                var line = lines[i];\n                switch (state) {\n                    case \"batch\":\n                        if (line.substr(0, header.length) === header) {\n                            state = \"batchHeaders\";\n                        }\n                        else {\n                            if (line.trim() !== \"\") {\n                                throw new exceptions_1.BatchParseException(\"Invalid response, line \" + i);\n                            }\n                        }\n                        break;\n                    case \"batchHeaders\":\n                        if (line.trim() === \"\") {\n                            state = \"status\";\n                        }\n                        break;\n                    case \"status\":\n                        var parts = statusRegExp.exec(line);\n                        if (parts.length !== 3) {\n                            throw new exceptions_1.BatchParseException(\"Invalid status, line \" + i);\n                        }\n                        status = parseInt(parts[1], 10);\n                        statusText = parts[2];\n                        state = \"statusHeaders\";\n                        break;\n                    case \"statusHeaders\":\n                        if (line.trim() === \"\") {\n                            state = \"body\";\n                        }\n                        break;\n                    case \"body\":\n                        responses.push((status === 204) ? new Response() : new Response(line, { status: status, statusText: statusText }));\n                        state = \"batch\";\n                        break;\n                }\n            }\n            if (state !== \"status\") {\n                reject(new exceptions_1.BatchParseException(\"Unexpected end of input\"));\n            }\n            resolve(responses);\n        });\n    };\n    return ODataBatch;\n}());\nexports.ODataBatch = ODataBatch;\nvar TextFileParser = (function () {\n    function TextFileParser() {\n    }\n    TextFileParser.prototype.parse = function (r) {\n        return r.text();\n    };\n    return TextFileParser;\n}());\nexports.TextFileParser = TextFileParser;\nvar BlobFileParser = (function () {\n    function BlobFileParser() {\n    }\n    BlobFileParser.prototype.parse = function (r) {\n        return r.blob();\n    };\n    return BlobFileParser;\n}());\nexports.BlobFileParser = BlobFileParser;\nvar JSONFileParser = (function () {\n    function JSONFileParser() {\n    }\n    JSONFileParser.prototype.parse = function (r) {\n        return r.json();\n    };\n    return JSONFileParser;\n}());\nexports.JSONFileParser = JSONFileParser;\nvar BufferFileParser = (function () {\n    function BufferFileParser() {\n    }\n    BufferFileParser.prototype.parse = function (r) {\n        if (util_1.Util.isFunction(r.arrayBuffer)) {\n            return r.arrayBuffer();\n        }\n        return r.buffer();\n    };\n    return BufferFileParser;\n}());\nexports.BufferFileParser = BufferFileParser;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/odata.js\n// module id = 2\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar logging_1 = require(\"../utils/logging\");\nfunction defaultLog(error) {\n    logging_1.Logger.log({ data: {}, level: logging_1.LogLevel.Error, message: \"[\" + error.name + \"]::\" + error.message });\n}\n/**\n * Represents an exception with an HttpClient request\n *\n */\nvar ProcessHttpClientResponseException = (function (_super) {\n    __extends(ProcessHttpClientResponseException, _super);\n    function ProcessHttpClientResponseException(status, statusText, data) {\n        var _this = _super.call(this, \"Error making HttpClient request in queryable: [\" + status + \"] \" + statusText) || this;\n        _this.status = status;\n        _this.statusText = statusText;\n        _this.data = data;\n        _this.name = \"ProcessHttpClientResponseException\";\n        logging_1.Logger.log({ data: _this.data, level: logging_1.LogLevel.Error, message: _this.message });\n        return _this;\n    }\n    return ProcessHttpClientResponseException;\n}(Error));\nexports.ProcessHttpClientResponseException = ProcessHttpClientResponseException;\nvar NoCacheAvailableException = (function (_super) {\n    __extends(NoCacheAvailableException, _super);\n    function NoCacheAvailableException(msg) {\n        if (msg === void 0) { msg = \"Cannot create a caching configuration provider since cache is not available.\"; }\n        var _this = _super.call(this, msg) || this;\n        _this.name = \"NoCacheAvailableException\";\n        defaultLog(_this);\n        return _this;\n    }\n    return NoCacheAvailableException;\n}(Error));\nexports.NoCacheAvailableException = NoCacheAvailableException;\nvar APIUrlException = (function (_super) {\n    __extends(APIUrlException, _super);\n    function APIUrlException(msg) {\n        if (msg === void 0) { msg = \"Unable to determine API url.\"; }\n        var _this = _super.call(this, msg) || this;\n        _this.name = \"APIUrlException\";\n        defaultLog(_this);\n        return _this;\n    }\n    return APIUrlException;\n}(Error));\nexports.APIUrlException = APIUrlException;\nvar AuthUrlException = (function (_super) {\n    __extends(AuthUrlException, _super);\n    function AuthUrlException(data, msg) {\n        if (msg === void 0) { msg = \"Auth URL Endpoint could not be determined from data. Data logged.\"; }\n        var _this = _super.call(this, msg) || this;\n        _this.name = \"APIUrlException\";\n        logging_1.Logger.log({ data: data, level: logging_1.LogLevel.Error, message: _this.message });\n        return _this;\n    }\n    return AuthUrlException;\n}(Error));\nexports.AuthUrlException = AuthUrlException;\nvar NodeFetchClientUnsupportedException = (function (_super) {\n    __extends(NodeFetchClientUnsupportedException, _super);\n    function NodeFetchClientUnsupportedException(msg) {\n        if (msg === void 0) { msg = \"Using NodeFetchClient in the browser is not supported.\"; }\n        var _this = _super.call(this, msg) || this;\n        _this.name = \"NodeFetchClientUnsupportedException\";\n        defaultLog(_this);\n        return _this;\n    }\n    return NodeFetchClientUnsupportedException;\n}(Error));\nexports.NodeFetchClientUnsupportedException = NodeFetchClientUnsupportedException;\nvar SPRequestExecutorUndefinedException = (function (_super) {\n    __extends(SPRequestExecutorUndefinedException, _super);\n    function SPRequestExecutorUndefinedException() {\n        var _this = this;\n        var msg = [\n            \"SP.RequestExecutor is undefined. \",\n            \"Load the SP.RequestExecutor.js library (/_layouts/15/SP.RequestExecutor.js) before loading the PnP JS Core library.\",\n        ].join(\" \");\n        _this = _super.call(this, msg) || this;\n        _this.name = \"SPRequestExecutorUndefinedException\";\n        defaultLog(_this);\n        return _this;\n    }\n    return SPRequestExecutorUndefinedException;\n}(Error));\nexports.SPRequestExecutorUndefinedException = SPRequestExecutorUndefinedException;\nvar MaxCommentLengthException = (function (_super) {\n    __extends(MaxCommentLengthException, _super);\n    function MaxCommentLengthException(msg) {\n        if (msg === void 0) { msg = \"The maximum comment length is 1023 characters.\"; }\n        var _this = _super.call(this, msg) || this;\n        _this.name = \"MaxCommentLengthException\";\n        defaultLog(_this);\n        return _this;\n    }\n    return MaxCommentLengthException;\n}(Error));\nexports.MaxCommentLengthException = MaxCommentLengthException;\nvar NotSupportedInBatchException = (function (_super) {\n    __extends(NotSupportedInBatchException, _super);\n    function NotSupportedInBatchException(operation) {\n        if (operation === void 0) { operation = \"This operation\"; }\n        var _this = _super.call(this, operation + \" is not supported as part of a batch.\") || this;\n        _this.name = \"NotSupportedInBatchException\";\n        defaultLog(_this);\n        return _this;\n    }\n    return NotSupportedInBatchException;\n}(Error));\nexports.NotSupportedInBatchException = NotSupportedInBatchException;\nvar ODataIdException = (function (_super) {\n    __extends(ODataIdException, _super);\n    function ODataIdException(data, msg) {\n        if (msg === void 0) { msg = \"Could not extract odata id in object, you may be using nometadata. Object data logged to logger.\"; }\n        var _this = _super.call(this, msg) || this;\n        _this.name = \"ODataIdException\";\n        logging_1.Logger.log({ data: data, level: logging_1.LogLevel.Error, message: _this.message });\n        return _this;\n    }\n    return ODataIdException;\n}(Error));\nexports.ODataIdException = ODataIdException;\nvar BatchParseException = (function (_super) {\n    __extends(BatchParseException, _super);\n    function BatchParseException(msg) {\n        var _this = _super.call(this, msg) || this;\n        _this.name = \"BatchParseException\";\n        defaultLog(_this);\n        return _this;\n    }\n    return BatchParseException;\n}(Error));\nexports.BatchParseException = BatchParseException;\nvar AlreadyInBatchException = (function (_super) {\n    __extends(AlreadyInBatchException, _super);\n    function AlreadyInBatchException(msg) {\n        if (msg === void 0) { msg = \"This query is already part of a batch.\"; }\n        var _this = _super.call(this, msg) || this;\n        _this.name = \"AlreadyInBatchException\";\n        defaultLog(_this);\n        return _this;\n    }\n    return AlreadyInBatchException;\n}(Error));\nexports.AlreadyInBatchException = AlreadyInBatchException;\nvar FunctionExpectedException = (function (_super) {\n    __extends(FunctionExpectedException, _super);\n    function FunctionExpectedException(msg) {\n        if (msg === void 0) { msg = \"This query is already part of a batch.\"; }\n        var _this = _super.call(this, msg) || this;\n        _this.name = \"FunctionExpectedException\";\n        defaultLog(_this);\n        return _this;\n    }\n    return FunctionExpectedException;\n}(Error));\nexports.FunctionExpectedException = FunctionExpectedException;\nvar UrlException = (function (_super) {\n    __extends(UrlException, _super);\n    function UrlException(msg) {\n        var _this = _super.call(this, msg) || this;\n        _this.name = \"UrlException\";\n        defaultLog(_this);\n        return _this;\n    }\n    return UrlException;\n}(Error));\nexports.UrlException = UrlException;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/utils/exceptions.js\n// module id = 3\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar fetchclient_1 = require(\"../net/fetchclient\");\nvar RuntimeConfigImpl = (function () {\n    function RuntimeConfigImpl() {\n        // these are our default values for the library\n        this._headers = null;\n        this._defaultCachingStore = \"session\";\n        this._defaultCachingTimeoutSeconds = 60;\n        this._globalCacheDisable = false;\n        this._fetchClientFactory = function () { return new fetchclient_1.FetchClient(); };\n        this._baseUrl = null;\n        this._spfxContext = null;\n        this._enableCacheExpiration = false;\n        this._cacheExpirationIntervalMilliseconds = 750;\n    }\n    RuntimeConfigImpl.prototype.set = function (config) {\n        if (config.hasOwnProperty(\"headers\")) {\n            this._headers = config.headers;\n        }\n        if (config.hasOwnProperty(\"globalCacheDisable\")) {\n            this._globalCacheDisable = config.globalCacheDisable;\n        }\n        if (config.hasOwnProperty(\"defaultCachingStore\")) {\n            this._defaultCachingStore = config.defaultCachingStore;\n        }\n        if (config.hasOwnProperty(\"defaultCachingTimeoutSeconds\")) {\n            this._defaultCachingTimeoutSeconds = config.defaultCachingTimeoutSeconds;\n        }\n        if (config.hasOwnProperty(\"fetchClientFactory\")) {\n            this._fetchClientFactory = config.fetchClientFactory;\n        }\n        if (config.hasOwnProperty(\"baseUrl\")) {\n            this._baseUrl = config.baseUrl;\n        }\n        if (config.hasOwnProperty(\"spfxContext\")) {\n            this._spfxContext = config.spfxContext;\n        }\n        if (config.hasOwnProperty(\"enableCacheExpiration\")) {\n            this._enableCacheExpiration = config.enableCacheExpiration;\n        }\n        if (config.hasOwnProperty(\"cacheExpirationIntervalMilliseconds\")) {\n            // we don't let the interval be less than 300 milliseconds\n            var interval = config.cacheExpirationIntervalMilliseconds < 300 ? 300 : config.cacheExpirationIntervalMilliseconds;\n            this._cacheExpirationIntervalMilliseconds = interval;\n        }\n    };\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"headers\", {\n        get: function () {\n            return this._headers;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"defaultCachingStore\", {\n        get: function () {\n            return this._defaultCachingStore;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"defaultCachingTimeoutSeconds\", {\n        get: function () {\n            return this._defaultCachingTimeoutSeconds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"globalCacheDisable\", {\n        get: function () {\n            return this._globalCacheDisable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"fetchClientFactory\", {\n        get: function () {\n            return this._fetchClientFactory;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"baseUrl\", {\n        get: function () {\n            if (this._baseUrl !== null) {\n                return this._baseUrl;\n            }\n            else if (this._spfxContext !== null) {\n                return this._spfxContext.pageContext.web.absoluteUrl;\n            }\n            return null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"enableCacheExpiration\", {\n        get: function () {\n            return this._enableCacheExpiration;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"cacheExpirationIntervalMilliseconds\", {\n        get: function () {\n            return this._cacheExpirationIntervalMilliseconds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return RuntimeConfigImpl;\n}());\nexports.RuntimeConfigImpl = RuntimeConfigImpl;\nvar _runtimeConfig = new RuntimeConfigImpl();\nexports.RuntimeConfig = _runtimeConfig;\nfunction setRuntimeConfig(config) {\n    _runtimeConfig.set(config);\n}\nexports.setRuntimeConfig = setRuntimeConfig;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/configuration/pnplibconfig.js\n// module id = 4\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * A set of logging levels\n *\n */\nvar LogLevel;\n(function (LogLevel) {\n    LogLevel[LogLevel[\"Verbose\"] = 0] = \"Verbose\";\n    LogLevel[LogLevel[\"Info\"] = 1] = \"Info\";\n    LogLevel[LogLevel[\"Warning\"] = 2] = \"Warning\";\n    LogLevel[LogLevel[\"Error\"] = 3] = \"Error\";\n    LogLevel[LogLevel[\"Off\"] = 99] = \"Off\";\n})(LogLevel = exports.LogLevel || (exports.LogLevel = {}));\n/**\n * Class used to subscribe ILogListener and log messages throughout an application\n *\n */\nvar Logger = (function () {\n    function Logger() {\n    }\n    Object.defineProperty(Logger, \"activeLogLevel\", {\n        get: function () {\n            return Logger.instance.activeLogLevel;\n        },\n        set: function (value) {\n            Logger.instance.activeLogLevel = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Logger, \"instance\", {\n        get: function () {\n            if (typeof Logger._instance === \"undefined\" || Logger._instance === null) {\n                Logger._instance = new LoggerImpl();\n            }\n            return Logger._instance;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Adds ILogListener instances to the set of subscribed listeners\n     *\n     * @param listeners One or more listeners to subscribe to this log\n     */\n    Logger.subscribe = function () {\n        var listeners = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            listeners[_i] = arguments[_i];\n        }\n        listeners.map(function (listener) { return Logger.instance.subscribe(listener); });\n    };\n    /**\n     * Clears the subscribers collection, returning the collection before modifiction\n     */\n    Logger.clearSubscribers = function () {\n        return Logger.instance.clearSubscribers();\n    };\n    Object.defineProperty(Logger, \"count\", {\n        /**\n         * Gets the current subscriber count\n         */\n        get: function () {\n            return Logger.instance.count;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Writes the supplied string to the subscribed listeners\n     *\n     * @param message The message to write\n     * @param level [Optional] if supplied will be used as the level of the entry (Default: LogLevel.Verbose)\n     */\n    Logger.write = function (message, level) {\n        if (level === void 0) { level = LogLevel.Verbose; }\n        Logger.instance.log({ level: level, message: message });\n    };\n    /**\n     * Writes the supplied string to the subscribed listeners\n     *\n     * @param json The json object to stringify and write\n     * @param level [Optional] if supplied will be used as the level of the entry (Default: LogLevel.Verbose)\n     */\n    Logger.writeJSON = function (json, level) {\n        if (level === void 0) { level = LogLevel.Verbose; }\n        Logger.instance.log({ level: level, message: JSON.stringify(json) });\n    };\n    /**\n     * Logs the supplied entry to the subscribed listeners\n     *\n     * @param entry The message to log\n     */\n    Logger.log = function (entry) {\n        Logger.instance.log(entry);\n    };\n    /**\n     * Logs performance tracking data for the the execution duration of the supplied function using console.profile\n     *\n     * @param name The name of this profile boundary\n     * @param f The function to execute and track within this performance boundary\n     */\n    Logger.measure = function (name, f) {\n        return Logger.instance.measure(name, f);\n    };\n    return Logger;\n}());\nexports.Logger = Logger;\nvar LoggerImpl = (function () {\n    function LoggerImpl(activeLogLevel, subscribers) {\n        if (activeLogLevel === void 0) { activeLogLevel = LogLevel.Warning; }\n        if (subscribers === void 0) { subscribers = []; }\n        this.activeLogLevel = activeLogLevel;\n        this.subscribers = subscribers;\n    }\n    LoggerImpl.prototype.subscribe = function (listener) {\n        this.subscribers.push(listener);\n    };\n    LoggerImpl.prototype.clearSubscribers = function () {\n        var s = this.subscribers.slice(0);\n        this.subscribers.length = 0;\n        return s;\n    };\n    Object.defineProperty(LoggerImpl.prototype, \"count\", {\n        get: function () {\n            return this.subscribers.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    LoggerImpl.prototype.write = function (message, level) {\n        if (level === void 0) { level = LogLevel.Verbose; }\n        this.log({ level: level, message: message });\n    };\n    LoggerImpl.prototype.log = function (entry) {\n        if (typeof entry === \"undefined\" || entry.level < this.activeLogLevel) {\n            return;\n        }\n        this.subscribers.map(function (subscriber) { return subscriber.log(entry); });\n    };\n    LoggerImpl.prototype.measure = function (name, f) {\n        console.profile(name);\n        try {\n            return f();\n        }\n        finally {\n            console.profileEnd();\n        }\n    };\n    return LoggerImpl;\n}());\n/**\n * Implementation of ILogListener which logs to the browser console\n *\n */\nvar ConsoleListener = (function () {\n    function ConsoleListener() {\n    }\n    /**\n     * Any associated data that a given logging listener may choose to log or ignore\n     *\n     * @param entry The information to be logged\n     */\n    ConsoleListener.prototype.log = function (entry) {\n        var msg = this.format(entry);\n        switch (entry.level) {\n            case LogLevel.Verbose:\n            case LogLevel.Info:\n                console.log(msg);\n                break;\n            case LogLevel.Warning:\n                console.warn(msg);\n                break;\n            case LogLevel.Error:\n                console.error(msg);\n                break;\n        }\n    };\n    /**\n     * Formats the message\n     *\n     * @param entry The information to format into a string\n     */\n    ConsoleListener.prototype.format = function (entry) {\n        var msg = [];\n        msg.push(\"Message: \" + entry.message);\n        if (typeof entry.data !== \"undefined\") {\n            msg.push(\" Data: \" + JSON.stringify(entry.data));\n        }\n        return msg.join(\"\");\n    };\n    return ConsoleListener;\n}());\nexports.ConsoleListener = ConsoleListener;\n/**\n * Implementation of ILogListener which logs to the supplied function\n *\n */\nvar FunctionListener = (function () {\n    /**\n     * Creates a new instance of the FunctionListener class\n     *\n     * @constructor\n     * @param  method The method to which any logging data will be passed\n     */\n    function FunctionListener(method) {\n        this.method = method;\n    }\n    /**\n     * Any associated data that a given logging listener may choose to log or ignore\n     *\n     * @param entry The information to be logged\n     */\n    FunctionListener.prototype.log = function (entry) {\n        this.method(entry);\n    };\n    return FunctionListener;\n}());\nexports.FunctionListener = FunctionListener;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/utils/logging.js\n// module id = 5\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Generic dictionary\n */\nvar Dictionary = (function () {\n    /**\n     * Creates a new instance of the Dictionary<T> class\n     *\n     * @constructor\n     */\n    function Dictionary(keys, values) {\n        if (keys === void 0) { keys = []; }\n        if (values === void 0) { values = []; }\n        this.keys = keys;\n        this.values = values;\n    }\n    /**\n     * Gets a value from the collection using the specified key\n     *\n     * @param key The key whose value we want to return, returns null if the key does not exist\n     */\n    Dictionary.prototype.get = function (key) {\n        var index = this.keys.indexOf(key);\n        if (index < 0) {\n            return null;\n        }\n        return this.values[index];\n    };\n    /**\n     * Adds the supplied key and value to the dictionary\n     *\n     * @param key The key to add\n     * @param o The value to add\n     */\n    Dictionary.prototype.add = function (key, o) {\n        var index = this.keys.indexOf(key);\n        if (index > -1) {\n            this.values[index] = o;\n        }\n        else {\n            this.keys.push(key);\n            this.values.push(o);\n        }\n    };\n    /**\n     * Merges the supplied typed hash into this dictionary instance. Existing values are updated and new ones are created as appropriate.\n     */\n    Dictionary.prototype.merge = function (source) {\n        var _this = this;\n        if (\"getKeys\" in source) {\n            var sourceAsDictionary_1 = source;\n            sourceAsDictionary_1.getKeys().map(function (key) {\n                _this.add(key, sourceAsDictionary_1.get(key));\n            });\n        }\n        else {\n            var sourceAsHash = source;\n            for (var key in sourceAsHash) {\n                if (sourceAsHash.hasOwnProperty(key)) {\n                    this.add(key, sourceAsHash[key]);\n                }\n            }\n        }\n    };\n    /**\n     * Removes a value from the dictionary\n     *\n     * @param key The key of the key/value pair to remove. Returns null if the key was not found.\n     */\n    Dictionary.prototype.remove = function (key) {\n        var index = this.keys.indexOf(key);\n        if (index < 0) {\n            return null;\n        }\n        var val = this.values[index];\n        this.keys.splice(index, 1);\n        this.values.splice(index, 1);\n        return val;\n    };\n    /**\n     * Returns all the keys currently in the dictionary as an array\n     */\n    Dictionary.prototype.getKeys = function () {\n        return this.keys;\n    };\n    /**\n     * Returns all the values currently in the dictionary as an array\n     */\n    Dictionary.prototype.getValues = function () {\n        return this.values;\n    };\n    /**\n     * Clears the current dictionary\n     */\n    Dictionary.prototype.clear = function () {\n        this.keys = [];\n        this.values = [];\n    };\n    /**\n     * Gets a count of the items currently in the dictionary\n     */\n    Dictionary.prototype.count = function () {\n        return this.keys.length;\n    };\n    return Dictionary;\n}());\nexports.Dictionary = Dictionary;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/collections/collections.js\n// module id = 6\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = require(\"./queryable\");\nvar lists_1 = require(\"./lists\");\nvar fields_1 = require(\"./fields\");\nvar navigation_1 = require(\"./navigation\");\nvar sitegroups_1 = require(\"./sitegroups\");\nvar contenttypes_1 = require(\"./contenttypes\");\nvar folders_1 = require(\"./folders\");\nvar roles_1 = require(\"./roles\");\nvar files_1 = require(\"./files\");\nvar util_1 = require(\"../utils/util\");\nvar lists_2 = require(\"./lists\");\nvar siteusers_1 = require(\"./siteusers\");\nvar usercustomactions_1 = require(\"./usercustomactions\");\nvar odata_1 = require(\"./odata\");\nvar features_1 = require(\"./features\");\nvar queryableshareable_1 = require(\"./queryableshareable\");\nvar relateditems_1 = require(\"./relateditems\");\n/**\n * Describes a collection of webs\n *\n */\nvar Webs = (function (_super) {\n    __extends(Webs, _super);\n    /**\n     * Creates a new instance of the Webs class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this web collection\n     */\n    function Webs(baseUrl, webPath) {\n        if (webPath === void 0) { webPath = \"webs\"; }\n        return _super.call(this, baseUrl, webPath) || this;\n    }\n    /**\n     * Adds a new web to the collection\n     *\n     * @param title The new web's title\n     * @param url The new web's relative url\n     * @param description The new web's description\n     * @param template The new web's template internal name (default = STS)\n     * @param language The locale id that specifies the new web's language (default = 1033 [English, US])\n     * @param inheritPermissions When true, permissions will be inherited from the new web's parent (default = true)\n     */\n    Webs.prototype.add = function (title, url, description, template, language, inheritPermissions) {\n        if (description === void 0) { description = \"\"; }\n        if (template === void 0) { template = \"STS\"; }\n        if (language === void 0) { language = 1033; }\n        if (inheritPermissions === void 0) { inheritPermissions = true; }\n        var props = {\n            Description: description,\n            Language: language,\n            Title: title,\n            Url: url,\n            UseSamePermissionsAsParentSite: inheritPermissions,\n            WebTemplate: template,\n        };\n        var postBody = JSON.stringify({\n            \"parameters\": util_1.Util.extend({\n                \"__metadata\": { \"type\": \"SP.WebCreationInformation\" },\n            }, props),\n        });\n        return this.clone(Webs, \"add\", true).postCore({ body: postBody }).then(function (data) {\n            return {\n                data: data,\n                web: new Web(odata_1.extractOdataId(data).replace(/_api\\/web\\/?/i, \"\")),\n            };\n        });\n    };\n    return Webs;\n}(queryable_1.QueryableCollection));\nexports.Webs = Webs;\n/**\n * Describes a collection of web infos\n *\n */\nvar WebInfos = (function (_super) {\n    __extends(WebInfos, _super);\n    /**\n     * Creates a new instance of the WebInfos class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this web infos collection\n     */\n    function WebInfos(baseUrl, webPath) {\n        if (webPath === void 0) { webPath = \"webinfos\"; }\n        return _super.call(this, baseUrl, webPath) || this;\n    }\n    return WebInfos;\n}(queryable_1.QueryableCollection));\nexports.WebInfos = WebInfos;\n/**\n * Describes a web\n *\n */\nvar Web = (function (_super) {\n    __extends(Web, _super);\n    /**\n     * Creates a new instance of the Web class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this web\n     */\n    function Web(baseUrl, path) {\n        if (path === void 0) { path = \"_api/web\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Creates a new web instance from the given url by indexing the location of the /_api/\n     * segment. If this is not found the method creates a new web with the entire string as\n     * supplied.\n     *\n     * @param url\n     */\n    Web.fromUrl = function (url, path) {\n        return new Web(util_1.extractWebUrl(url), path);\n    };\n    Object.defineProperty(Web.prototype, \"webs\", {\n        /**\n         * Gets this web's subwebs\n         *\n         */\n        get: function () {\n            return new Webs(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"webinfos\", {\n        /**\n         * Gets a collection of WebInfos for this web's subwebs\n         *\n         */\n        get: function () {\n            return new WebInfos(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"contentTypes\", {\n        /**\n         * Gets the content types available in this web\n         *\n         */\n        get: function () {\n            return new contenttypes_1.ContentTypes(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"lists\", {\n        /**\n         * Gets the lists in this web\n         *\n         */\n        get: function () {\n            return new lists_1.Lists(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"fields\", {\n        /**\n         * Gets the fields in this web\n         *\n         */\n        get: function () {\n            return new fields_1.Fields(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"features\", {\n        /**\n         * Gets the active features for this web\n         *\n         */\n        get: function () {\n            return new features_1.Features(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"availablefields\", {\n        /**\n         * Gets the available fields in this web\n         *\n         */\n        get: function () {\n            return new fields_1.Fields(this, \"availablefields\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"navigation\", {\n        /**\n         * Gets the navigation options in this web\n         *\n         */\n        get: function () {\n            return new navigation_1.Navigation(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"siteUsers\", {\n        /**\n         * Gets the site users\n         *\n         */\n        get: function () {\n            return new siteusers_1.SiteUsers(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"siteGroups\", {\n        /**\n         * Gets the site groups\n         *\n         */\n        get: function () {\n            return new sitegroups_1.SiteGroups(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"currentUser\", {\n        /**\n         * Gets the current user\n         */\n        get: function () {\n            return new siteusers_1.CurrentUser(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"folders\", {\n        /**\n         * Gets the top-level folders in this web\n         *\n         */\n        get: function () {\n            return new folders_1.Folders(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"userCustomActions\", {\n        /**\n         * Gets all user custom actions for this web\n         *\n         */\n        get: function () {\n            return new usercustomactions_1.UserCustomActions(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"roleDefinitions\", {\n        /**\n         * Gets the collection of RoleDefinition resources\n         *\n         */\n        get: function () {\n            return new roles_1.RoleDefinitions(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"relatedItems\", {\n        /**\n         * Provides an interface to manage related items\n         *\n         */\n        get: function () {\n            return relateditems_1.RelatedItemManagerImpl.FromUrl(this.toUrl());\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Creates a new batch for requests within the context of this web\n     *\n     */\n    Web.prototype.createBatch = function () {\n        return new odata_1.ODataBatch(this.parentUrl);\n    };\n    Object.defineProperty(Web.prototype, \"rootFolder\", {\n        /**\n         * Gets the root folder of this web\n         *\n         */\n        get: function () {\n            return new folders_1.Folder(this, \"rootFolder\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"associatedOwnerGroup\", {\n        /**\n         * Gets the associated owner group for this web\n         *\n         */\n        get: function () {\n            return new sitegroups_1.SiteGroup(this, \"associatedownergroup\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"associatedMemberGroup\", {\n        /**\n         * Gets the associated member group for this web\n         *\n         */\n        get: function () {\n            return new sitegroups_1.SiteGroup(this, \"associatedmembergroup\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"associatedVisitorGroup\", {\n        /**\n         * Gets the associated visitor group for this web\n         *\n         */\n        get: function () {\n            return new sitegroups_1.SiteGroup(this, \"associatedvisitorgroup\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets a folder by server relative url\n     *\n     * @param folderRelativeUrl The server relative path to the folder (including /sites/ if applicable)\n     */\n    Web.prototype.getFolderByServerRelativeUrl = function (folderRelativeUrl) {\n        return new folders_1.Folder(this, \"getFolderByServerRelativeUrl('\" + folderRelativeUrl + \"')\");\n    };\n    /**\n     * Gets a file by server relative url\n     *\n     * @param fileRelativeUrl The server relative path to the file (including /sites/ if applicable)\n     */\n    Web.prototype.getFileByServerRelativeUrl = function (fileRelativeUrl) {\n        return new files_1.File(this, \"getFileByServerRelativeUrl('\" + fileRelativeUrl + \"')\");\n    };\n    /**\n     * Gets a list by server relative url (list's root folder)\n     *\n     * @param listRelativeUrl The server relative path to the list's root folder (including /sites/ if applicable)\n     */\n    Web.prototype.getList = function (listRelativeUrl) {\n        return new lists_2.List(this, \"getList('\" + listRelativeUrl + \"')\");\n    };\n    /**\n     * Updates this web instance with the supplied properties\n     *\n     * @param properties A plain object hash of values to update for the web\n     */\n    Web.prototype.update = function (properties) {\n        var _this = this;\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"__metadata\": { \"type\": \"SP.Web\" },\n        }, properties));\n        return this.postCore({\n            body: postBody,\n            headers: {\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then(function (data) {\n            return {\n                data: data,\n                web: _this,\n            };\n        });\n    };\n    /**\n     * Deletes this web\n     *\n     */\n    Web.prototype.delete = function () {\n        return _super.prototype.deleteCore.call(this);\n    };\n    /**\n     * Applies the theme specified by the contents of each of the files specified in the arguments to the site\n     *\n     * @param colorPaletteUrl The server-relative URL of the color palette file\n     * @param fontSchemeUrl The server-relative URL of the font scheme\n     * @param backgroundImageUrl The server-relative URL of the background image\n     * @param shareGenerated When true, the generated theme files are stored in the root site. When false, they are stored in this web\n     */\n    Web.prototype.applyTheme = function (colorPaletteUrl, fontSchemeUrl, backgroundImageUrl, shareGenerated) {\n        var postBody = JSON.stringify({\n            backgroundImageUrl: backgroundImageUrl,\n            colorPaletteUrl: colorPaletteUrl,\n            fontSchemeUrl: fontSchemeUrl,\n            shareGenerated: shareGenerated,\n        });\n        return this.clone(Web, \"applytheme\", true).postCore({ body: postBody });\n    };\n    /**\n     * Applies the specified site definition or site template to the Web site that has no template applied to it\n     *\n     * @param template Name of the site definition or the name of the site template\n     */\n    Web.prototype.applyWebTemplate = function (template) {\n        var q = this.clone(Web, \"applywebtemplate\", true);\n        q.concat(\"(@t)\");\n        q.query.add(\"@t\", template);\n        return q.postCore();\n    };\n    /**\n     * Checks whether the specified login name belongs to a valid user in the web. If the user doesn't exist, adds the user to the web.\n     *\n     * @param loginName The login name of the user (ex: i:0#.f|membership|user@domain.onmicrosoft.com)\n     */\n    Web.prototype.ensureUser = function (loginName) {\n        var postBody = JSON.stringify({\n            logonName: loginName,\n        });\n        return this.clone(Web, \"ensureuser\", true).postCore({ body: postBody }).then(function (data) {\n            return {\n                data: data,\n                user: new siteusers_1.SiteUser(odata_1.extractOdataId(data)),\n            };\n        });\n    };\n    /**\n     * Returns a collection of site templates available for the site\n     *\n     * @param language The locale id of the site templates to retrieve (default = 1033 [English, US])\n     * @param includeCrossLanguage When true, includes language-neutral site templates; otherwise false (default = true)\n     */\n    Web.prototype.availableWebTemplates = function (language, includeCrossLanugage) {\n        if (language === void 0) { language = 1033; }\n        if (includeCrossLanugage === void 0) { includeCrossLanugage = true; }\n        return new queryable_1.QueryableCollection(this, \"getavailablewebtemplates(lcid=\" + language + \", doincludecrosslanguage=\" + includeCrossLanugage + \")\");\n    };\n    /**\n     * Returns the list gallery on the site\n     *\n     * @param type The gallery type - WebTemplateCatalog = 111, WebPartCatalog = 113 ListTemplateCatalog = 114,\n     * MasterPageCatalog = 116, SolutionCatalog = 121, ThemeCatalog = 123, DesignCatalog = 124, AppDataCatalog = 125\n     */\n    Web.prototype.getCatalog = function (type) {\n        return this.clone(Web, \"getcatalog(\" + type + \")\", true).select(\"Id\").get().then(function (data) {\n            return new lists_2.List(odata_1.extractOdataId(data));\n        });\n    };\n    /**\n     * Returns the collection of changes from the change log that have occurred within the list, based on the specified query\n     *\n     * @param query The change query\n     */\n    Web.prototype.getChanges = function (query) {\n        var postBody = JSON.stringify({ \"query\": util_1.Util.extend({ \"__metadata\": { \"type\": \"SP.ChangeQuery\" } }, query) });\n        return this.clone(Web, \"getchanges\", true).postCore({ body: postBody });\n    };\n    Object.defineProperty(Web.prototype, \"customListTemplate\", {\n        /**\n         * Gets the custom list templates for the site\n         *\n         */\n        get: function () {\n            return new queryable_1.QueryableCollection(this, \"getcustomlisttemplates\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Returns the user corresponding to the specified member identifier for the current site\n     *\n     * @param id The id of the user\n     */\n    Web.prototype.getUserById = function (id) {\n        return new siteusers_1.SiteUser(this, \"getUserById(\" + id + \")\");\n    };\n    /**\n     * Returns the name of the image file for the icon that is used to represent the specified file\n     *\n     * @param filename The file name. If this parameter is empty, the server returns an empty string\n     * @param size The size of the icon: 16x16 pixels = 0, 32x32 pixels = 1 (default = 0)\n     * @param progId The ProgID of the application that was used to create the file, in the form OLEServerName.ObjectName\n     */\n    Web.prototype.mapToIcon = function (filename, size, progId) {\n        if (size === void 0) { size = 0; }\n        if (progId === void 0) { progId = \"\"; }\n        return this.clone(Web, \"maptoicon(filename='\" + filename + \"', progid='\" + progId + \"', size=\" + size + \")\", true).get();\n    };\n    return Web;\n}(queryableshareable_1.QueryableShareableWeb));\nexports.Web = Web;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/webs.js\n// module id = 7\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = require(\"./queryable\");\nvar odata_1 = require(\"./odata\");\nvar util_1 = require(\"../utils/util\");\nvar exceptions_1 = require(\"../utils/exceptions\");\nvar webparts_1 = require(\"./webparts\");\nvar items_1 = require(\"./items\");\nvar queryableshareable_1 = require(\"./queryableshareable\");\nvar odata_2 = require(\"./odata\");\n/**\n * Describes a collection of File objects\n *\n */\nvar Files = (function (_super) {\n    __extends(Files, _super);\n    /**\n     * Creates a new instance of the Files class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    function Files(baseUrl, path) {\n        if (path === void 0) { path = \"files\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a File by filename\n     *\n     * @param name The name of the file, including extension.\n     */\n    Files.prototype.getByName = function (name) {\n        var f = new File(this);\n        f.concat(\"('\" + name + \"')\");\n        return f;\n    };\n    /**\n     * Uploads a file. Not supported for batching\n     *\n     * @param url The folder-relative url of the file.\n     * @param content The file contents blob.\n     * @param shouldOverWrite Should a file with the same name in the same location be overwritten? (default: true)\n     * @returns The new File and the raw response.\n     */\n    Files.prototype.add = function (url, content, shouldOverWrite) {\n        var _this = this;\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\n        return new Files(this, \"add(overwrite=\" + shouldOverWrite + \",url='\" + url + \"')\")\n            .postCore({\n            body: content,\n        }).then(function (response) {\n            return {\n                data: response,\n                file: _this.getByName(url),\n            };\n        });\n    };\n    /**\n     * Uploads a file. Not supported for batching\n     *\n     * @param url The folder-relative url of the file.\n     * @param content The Blob file content to add\n     * @param progress A callback function which can be used to track the progress of the upload\n     * @param shouldOverWrite Should a file with the same name in the same location be overwritten? (default: true)\n     * @param chunkSize The size of each file slice, in bytes (default: 10485760)\n     * @returns The new File and the raw response.\n     */\n    Files.prototype.addChunked = function (url, content, progress, shouldOverWrite, chunkSize) {\n        var _this = this;\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\n        if (chunkSize === void 0) { chunkSize = 10485760; }\n        var adder = this.clone(Files, \"add(overwrite=\" + shouldOverWrite + \",url='\" + url + \"')\");\n        return adder.postCore().then(function () { return _this.getByName(url); }).then(function (file) { return file.setContentChunked(content, progress, chunkSize); }).then(function (response) {\n            return {\n                data: response,\n                file: _this.getByName(url),\n            };\n        });\n    };\n    /**\n     * Adds a ghosted file to an existing list or document library. Not supported for batching.\n     *\n     * @param fileUrl The server-relative url where you want to save the file.\n     * @param templateFileType The type of use to create the file.\n     * @returns The template file that was added and the raw response.\n     */\n    Files.prototype.addTemplateFile = function (fileUrl, templateFileType) {\n        var _this = this;\n        return this.clone(Files, \"addTemplateFile(urloffile='\" + fileUrl + \"',templatefiletype=\" + templateFileType + \")\")\n            .postCore().then(function (response) {\n            return {\n                data: response,\n                file: _this.getByName(fileUrl),\n            };\n        });\n    };\n    return Files;\n}(queryable_1.QueryableCollection));\nexports.Files = Files;\n/**\n * Describes a single File instance\n *\n */\nvar File = (function (_super) {\n    __extends(File, _super);\n    function File() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(File.prototype, \"listItemAllFields\", {\n        /**\n         * Gets a value that specifies the list item field values for the list item corresponding to the file.\n         *\n         */\n        get: function () {\n            return new queryable_1.QueryableCollection(this, \"listItemAllFields\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(File.prototype, \"versions\", {\n        /**\n         * Gets a collection of versions\n         *\n         */\n        get: function () {\n            return new Versions(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Approves the file submitted for content approval with the specified comment.\n     * Only documents in lists that are enabled for content approval can be approved.\n     *\n     * @param comment The comment for the approval.\n     */\n    File.prototype.approve = function (comment) {\n        if (comment === void 0) { comment = \"\"; }\n        return this.clone(File, \"approve(comment='\" + comment + \"')\", true).postCore();\n    };\n    /**\n     * Stops the chunk upload session without saving the uploaded data. Does not support batching.\n     * If the file doesn’t already exist in the library, the partially uploaded file will be deleted.\n     * Use this in response to user action (as in a request to cancel an upload) or an error or exception.\n     * Use the uploadId value that was passed to the StartUpload method that started the upload session.\n     * This method is currently available only on Office 365.\n     *\n     * @param uploadId The unique identifier of the upload session.\n     */\n    File.prototype.cancelUpload = function (uploadId) {\n        return this.clone(File, \"cancelUpload(uploadId=guid'\" + uploadId + \"')\", false).postCore();\n    };\n    /**\n     * Checks the file in to a document library based on the check-in type.\n     *\n     * @param comment A comment for the check-in. Its length must be <= 1023.\n     * @param checkinType The check-in type for the file.\n     */\n    File.prototype.checkin = function (comment, checkinType) {\n        if (comment === void 0) { comment = \"\"; }\n        if (checkinType === void 0) { checkinType = CheckinType.Major; }\n        if (comment.length > 1023) {\n            throw new exceptions_1.MaxCommentLengthException();\n        }\n        return this.clone(File, \"checkin(comment='\" + comment + \"',checkintype=\" + checkinType + \")\", true).postCore();\n    };\n    /**\n     * Checks out the file from a document library.\n     */\n    File.prototype.checkout = function () {\n        return this.clone(File, \"checkout\", true).postCore();\n    };\n    /**\n     * Copies the file to the destination url.\n     *\n     * @param url The absolute url or server relative url of the destination file path to copy to.\n     * @param shouldOverWrite Should a file with the same name in the same location be overwritten?\n     */\n    File.prototype.copyTo = function (url, shouldOverWrite) {\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\n        return this.clone(File, \"copyTo(strnewurl='\" + url + \"',boverwrite=\" + shouldOverWrite + \")\", true).postCore();\n    };\n    /**\n     * Delete this file.\n     *\n     * @param eTag Value used in the IF-Match header, by default \"*\"\n     */\n    File.prototype.delete = function (eTag) {\n        if (eTag === void 0) { eTag = \"*\"; }\n        return this.clone(File, null, true).postCore({\n            headers: {\n                \"IF-Match\": eTag,\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    /**\n     * Denies approval for a file that was submitted for content approval.\n     * Only documents in lists that are enabled for content approval can be denied.\n     *\n     * @param comment The comment for the denial.\n     */\n    File.prototype.deny = function (comment) {\n        if (comment === void 0) { comment = \"\"; }\n        if (comment.length > 1023) {\n            throw new exceptions_1.MaxCommentLengthException();\n        }\n        return this.clone(File, \"deny(comment='\" + comment + \"')\", true).postCore();\n    };\n    /**\n     * Specifies the control set used to access, modify, or add Web Parts associated with this Web Part Page and view.\n     * An exception is thrown if the file is not an ASPX page.\n     *\n     * @param scope The WebPartsPersonalizationScope view on the Web Parts page.\n     */\n    File.prototype.getLimitedWebPartManager = function (scope) {\n        if (scope === void 0) { scope = WebPartsPersonalizationScope.Shared; }\n        return new webparts_1.LimitedWebPartManager(this, \"getLimitedWebPartManager(scope=\" + scope + \")\");\n    };\n    /**\n     * Moves the file to the specified destination url.\n     *\n     * @param url The absolute url or server relative url of the destination file path to move to.\n     * @param moveOperations The bitwise MoveOperations value for how to move the file.\n     */\n    File.prototype.moveTo = function (url, moveOperations) {\n        if (moveOperations === void 0) { moveOperations = MoveOperations.Overwrite; }\n        return this.clone(File, \"moveTo(newurl='\" + url + \"',flags=\" + moveOperations + \")\", true).postCore();\n    };\n    /**\n     * Submits the file for content approval with the specified comment.\n     *\n     * @param comment The comment for the published file. Its length must be <= 1023.\n     */\n    File.prototype.publish = function (comment) {\n        if (comment === void 0) { comment = \"\"; }\n        if (comment.length > 1023) {\n            throw new exceptions_1.MaxCommentLengthException();\n        }\n        return this.clone(File, \"publish(comment='\" + comment + \"')\", true).postCore();\n    };\n    /**\n     * Moves the file to the Recycle Bin and returns the identifier of the new Recycle Bin item.\n     *\n     * @returns The GUID of the recycled file.\n     */\n    File.prototype.recycle = function () {\n        return this.clone(File, \"recycle\", true).postCore();\n    };\n    /**\n     * Reverts an existing checkout for the file.\n     *\n     */\n    File.prototype.undoCheckout = function () {\n        return this.clone(File, \"undoCheckout\", true).postCore();\n    };\n    /**\n     * Removes the file from content approval or unpublish a major version.\n     *\n     * @param comment The comment for the unpublish operation. Its length must be <= 1023.\n     */\n    File.prototype.unpublish = function (comment) {\n        if (comment === void 0) { comment = \"\"; }\n        if (comment.length > 1023) {\n            throw new exceptions_1.MaxCommentLengthException();\n        }\n        return this.clone(File, \"unpublish(comment='\" + comment + \"')\", true).postCore();\n    };\n    /**\n     * Gets the contents of the file as text. Not supported in batching.\n     *\n     */\n    File.prototype.getText = function () {\n        return this.clone(File, \"$value\").get(new odata_1.TextFileParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\n    };\n    /**\n     * Gets the contents of the file as a blob, does not work in Node.js. Not supported in batching.\n     *\n     */\n    File.prototype.getBlob = function () {\n        return this.clone(File, \"$value\").get(new odata_1.BlobFileParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\n    };\n    /**\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js. Not supported in batching.\n     */\n    File.prototype.getBuffer = function () {\n        return this.clone(File, \"$value\").get(new odata_1.BufferFileParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\n    };\n    /**\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js. Not supported in batching.\n     */\n    File.prototype.getJSON = function () {\n        return this.clone(File, \"$value\").get(new odata_1.JSONFileParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\n    };\n    /**\n     * Sets the content of a file, for large files use setContentChunked. Not supported in batching.\n     *\n     * @param content The file content\n     *\n     */\n    File.prototype.setContent = function (content) {\n        var _this = this;\n        return this.clone(File, \"$value\").postCore({\n            body: content,\n            headers: {\n                \"X-HTTP-Method\": \"PUT\",\n            },\n        }).then(function (_) { return new File(_this); });\n    };\n    /**\n     * Gets the associated list item for this folder, loading the default properties\n     */\n    File.prototype.getItem = function () {\n        var selects = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            selects[_i] = arguments[_i];\n        }\n        var q = this.listItemAllFields;\n        return q.select.apply(q, selects).get().then(function (d) {\n            return util_1.Util.extend(new items_1.Item(odata_2.getEntityUrl(d)), d);\n        });\n    };\n    /**\n     * Sets the contents of a file using a chunked upload approach. Not supported in batching.\n     *\n     * @param file The file to upload\n     * @param progress A callback function which can be used to track the progress of the upload\n     * @param chunkSize The size of each file slice, in bytes (default: 10485760)\n     */\n    File.prototype.setContentChunked = function (file, progress, chunkSize) {\n        if (chunkSize === void 0) { chunkSize = 10485760; }\n        if (typeof progress === \"undefined\") {\n            progress = function () { return null; };\n        }\n        var self = this;\n        var fileSize = file.size;\n        var blockCount = parseInt((file.size / chunkSize).toString(), 10) + ((file.size % chunkSize === 0) ? 1 : 0);\n        var uploadId = util_1.Util.getGUID();\n        // start the chain with the first fragment\n        progress({ blockNumber: 1, chunkSize: chunkSize, currentPointer: 0, fileSize: fileSize, stage: \"starting\", totalBlocks: blockCount });\n        var chain = self.startUpload(uploadId, file.slice(0, chunkSize));\n        var _loop_1 = function (i) {\n            chain = chain.then(function (pointer) {\n                progress({ blockNumber: i, chunkSize: chunkSize, currentPointer: pointer, fileSize: fileSize, stage: \"continue\", totalBlocks: blockCount });\n                return self.continueUpload(uploadId, pointer, file.slice(pointer, pointer + chunkSize));\n            });\n        };\n        // skip the first and last blocks\n        for (var i = 2; i < blockCount; i++) {\n            _loop_1(i);\n        }\n        return chain.then(function (pointer) {\n            progress({ blockNumber: blockCount, chunkSize: chunkSize, currentPointer: pointer, fileSize: fileSize, stage: \"finishing\", totalBlocks: blockCount });\n            return self.finishUpload(uploadId, pointer, file.slice(pointer));\n        }).then(function (_) {\n            return self;\n        });\n    };\n    /**\n     * Starts a new chunk upload session and uploads the first fragment.\n     * The current file content is not changed when this method completes.\n     * The method is idempotent (and therefore does not change the result) as long as you use the same values for uploadId and stream.\n     * The upload session ends either when you use the CancelUpload method or when you successfully\n     * complete the upload session by passing the rest of the file contents through the ContinueUpload and FinishUpload methods.\n     * The StartUpload and ContinueUpload methods return the size of the running total of uploaded data in bytes,\n     * so you can pass those return values to subsequent uses of ContinueUpload and FinishUpload.\n     * This method is currently available only on Office 365.\n     *\n     * @param uploadId The unique identifier of the upload session.\n     * @param fragment The file contents.\n     * @returns The size of the total uploaded data in bytes.\n     */\n    File.prototype.startUpload = function (uploadId, fragment) {\n        return this.clone(File, \"startUpload(uploadId=guid'\" + uploadId + \"')\").postAsCore({ body: fragment }).then(function (n) { return parseFloat(n); });\n    };\n    /**\n     * Continues the chunk upload session with an additional fragment.\n     * The current file content is not changed.\n     * Use the uploadId value that was passed to the StartUpload method that started the upload session.\n     * This method is currently available only on Office 365.\n     *\n     * @param uploadId The unique identifier of the upload session.\n     * @param fileOffset The size of the offset into the file where the fragment starts.\n     * @param fragment The file contents.\n     * @returns The size of the total uploaded data in bytes.\n     */\n    File.prototype.continueUpload = function (uploadId, fileOffset, fragment) {\n        return this.clone(File, \"continueUpload(uploadId=guid'\" + uploadId + \"',fileOffset=\" + fileOffset + \")\").postAsCore({ body: fragment }).then(function (n) { return parseFloat(n); });\n    };\n    /**\n     * Uploads the last file fragment and commits the file. The current file content is changed when this method completes.\n     * Use the uploadId value that was passed to the StartUpload method that started the upload session.\n     * This method is currently available only on Office 365.\n     *\n     * @param uploadId The unique identifier of the upload session.\n     * @param fileOffset The size of the offset into the file where the fragment starts.\n     * @param fragment The file contents.\n     * @returns The newly uploaded file.\n     */\n    File.prototype.finishUpload = function (uploadId, fileOffset, fragment) {\n        return this.clone(File, \"finishUpload(uploadId=guid'\" + uploadId + \"',fileOffset=\" + fileOffset + \")\")\n            .postAsCore({ body: fragment }).then(function (response) {\n            return {\n                data: response,\n                file: new File(response.ServerRelativeUrl),\n            };\n        });\n    };\n    return File;\n}(queryableshareable_1.QueryableShareableFile));\nexports.File = File;\n/**\n * Describes a collection of Version objects\n *\n */\nvar Versions = (function (_super) {\n    __extends(Versions, _super);\n    /**\n     * Creates a new instance of the File class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    function Versions(baseUrl, path) {\n        if (path === void 0) { path = \"versions\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a version by id\n     *\n     * @param versionId The id of the version to retrieve\n     */\n    Versions.prototype.getById = function (versionId) {\n        var v = new Version(this);\n        v.concat(\"(\" + versionId + \")\");\n        return v;\n    };\n    /**\n     * Deletes all the file version objects in the collection.\n     *\n     */\n    Versions.prototype.deleteAll = function () {\n        return new Versions(this, \"deleteAll\").postCore();\n    };\n    /**\n     * Deletes the specified version of the file.\n     *\n     * @param versionId The ID of the file version to delete.\n     */\n    Versions.prototype.deleteById = function (versionId) {\n        return this.clone(Versions, \"deleteById(vid=\" + versionId + \")\", true).postCore();\n    };\n    /**\n     * Deletes the file version object with the specified version label.\n     *\n     * @param label The version label of the file version to delete, for example: 1.2\n     */\n    Versions.prototype.deleteByLabel = function (label) {\n        return this.clone(Versions, \"deleteByLabel(versionlabel='\" + label + \"')\", true).postCore();\n    };\n    /**\n     * Creates a new file version from the file specified by the version label.\n     *\n     * @param label The version label of the file version to restore, for example: 1.2\n     */\n    Versions.prototype.restoreByLabel = function (label) {\n        return this.clone(Versions, \"restoreByLabel(versionlabel='\" + label + \"')\", true).postCore();\n    };\n    return Versions;\n}(queryable_1.QueryableCollection));\nexports.Versions = Versions;\n/**\n * Describes a single Version instance\n *\n */\nvar Version = (function (_super) {\n    __extends(Version, _super);\n    function Version() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n    * Delete a specific version of a file.\n    *\n    * @param eTag Value used in the IF-Match header, by default \"*\"\n    */\n    Version.prototype.delete = function (eTag) {\n        if (eTag === void 0) { eTag = \"*\"; }\n        return this.postCore({\n            headers: {\n                \"IF-Match\": eTag,\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    return Version;\n}(queryable_1.QueryableInstance));\nexports.Version = Version;\nvar CheckinType;\n(function (CheckinType) {\n    CheckinType[CheckinType[\"Minor\"] = 0] = \"Minor\";\n    CheckinType[CheckinType[\"Major\"] = 1] = \"Major\";\n    CheckinType[CheckinType[\"Overwrite\"] = 2] = \"Overwrite\";\n})(CheckinType = exports.CheckinType || (exports.CheckinType = {}));\nvar WebPartsPersonalizationScope;\n(function (WebPartsPersonalizationScope) {\n    WebPartsPersonalizationScope[WebPartsPersonalizationScope[\"User\"] = 0] = \"User\";\n    WebPartsPersonalizationScope[WebPartsPersonalizationScope[\"Shared\"] = 1] = \"Shared\";\n})(WebPartsPersonalizationScope = exports.WebPartsPersonalizationScope || (exports.WebPartsPersonalizationScope = {}));\nvar MoveOperations;\n(function (MoveOperations) {\n    MoveOperations[MoveOperations[\"Overwrite\"] = 1] = \"Overwrite\";\n    MoveOperations[MoveOperations[\"AllowBrokenThickets\"] = 8] = \"AllowBrokenThickets\";\n})(MoveOperations = exports.MoveOperations || (exports.MoveOperations = {}));\nvar TemplateFileType;\n(function (TemplateFileType) {\n    TemplateFileType[TemplateFileType[\"StandardPage\"] = 0] = \"StandardPage\";\n    TemplateFileType[TemplateFileType[\"WikiPage\"] = 1] = \"WikiPage\";\n    TemplateFileType[TemplateFileType[\"FormPage\"] = 2] = \"FormPage\";\n})(TemplateFileType = exports.TemplateFileType || (exports.TemplateFileType = {}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/files.js\n// module id = 8\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar digestcache_1 = require(\"./digestcache\");\nvar util_1 = require(\"../utils/util\");\nvar pnplibconfig_1 = require(\"../configuration/pnplibconfig\");\nvar exceptions_1 = require(\"../utils/exceptions\");\nvar HttpClient = (function () {\n    function HttpClient() {\n        this._impl = pnplibconfig_1.RuntimeConfig.fetchClientFactory();\n        this._digestCache = new digestcache_1.DigestCache(this);\n    }\n    HttpClient.prototype.fetch = function (url, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        var opts = util_1.Util.extend(options, { cache: \"no-cache\", credentials: \"same-origin\" }, true);\n        var headers = new Headers();\n        // first we add the global headers so they can be overwritten by any passed in locally to this call\n        mergeHeaders(headers, pnplibconfig_1.RuntimeConfig.headers);\n        // second we add the local options so we can overwrite the globals\n        mergeHeaders(headers, options.headers);\n        // lastly we apply any default headers we need that may not exist\n        if (!headers.has(\"Accept\")) {\n            headers.append(\"Accept\", \"application/json\");\n        }\n        if (!headers.has(\"Content-Type\")) {\n            headers.append(\"Content-Type\", \"application/json;odata=verbose;charset=utf-8\");\n        }\n        if (!headers.has(\"X-ClientService-ClientTag\")) {\n            headers.append(\"X-ClientService-ClientTag\", \"PnPCoreJS:2.0.8\");\n        }\n        opts = util_1.Util.extend(opts, { headers: headers });\n        if (opts.method && opts.method.toUpperCase() !== \"GET\") {\n            // if we have either a request digest or an authorization header we don't need a digest\n            if (!headers.has(\"X-RequestDigest\") && !headers.has(\"Authorization\")) {\n                var index = url.indexOf(\"_api/\");\n                if (index < 0) {\n                    throw new exceptions_1.APIUrlException();\n                }\n                var webUrl = url.substr(0, index);\n                return this._digestCache.getDigest(webUrl)\n                    .then(function (digest) {\n                    headers.append(\"X-RequestDigest\", digest);\n                    return _this.fetchRaw(url, opts);\n                });\n            }\n        }\n        return this.fetchRaw(url, opts);\n    };\n    HttpClient.prototype.fetchRaw = function (url, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        // here we need to normalize the headers\n        var rawHeaders = new Headers();\n        mergeHeaders(rawHeaders, options.headers);\n        options = util_1.Util.extend(options, { headers: rawHeaders });\n        var retry = function (ctx) {\n            _this._impl.fetch(url, options).then(function (response) { return ctx.resolve(response); }).catch(function (response) {\n                // grab our current delay\n                var delay = ctx.delay;\n                // Check if request was throttled - http status code 429\n                // Check is request failed due to server unavailable - http status code 503\n                if (response.status !== 429 && response.status !== 503) {\n                    ctx.reject(response);\n                }\n                // Increment our counters.\n                ctx.delay *= 2;\n                ctx.attempts++;\n                // If we have exceeded the retry count, reject.\n                if (ctx.retryCount <= ctx.attempts) {\n                    ctx.reject(response);\n                }\n                // Set our retry timeout for {delay} milliseconds.\n                setTimeout(util_1.Util.getCtxCallback(_this, retry, ctx), delay);\n            });\n        };\n        return new Promise(function (resolve, reject) {\n            var retryContext = {\n                attempts: 0,\n                delay: 100,\n                reject: reject,\n                resolve: resolve,\n                retryCount: 7,\n            };\n            retry.call(_this, retryContext);\n        });\n    };\n    HttpClient.prototype.get = function (url, options) {\n        if (options === void 0) { options = {}; }\n        var opts = util_1.Util.extend(options, { method: \"GET\" });\n        return this.fetch(url, opts);\n    };\n    HttpClient.prototype.post = function (url, options) {\n        if (options === void 0) { options = {}; }\n        var opts = util_1.Util.extend(options, { method: \"POST\" });\n        return this.fetch(url, opts);\n    };\n    HttpClient.prototype.patch = function (url, options) {\n        if (options === void 0) { options = {}; }\n        var opts = util_1.Util.extend(options, { method: \"PATCH\" });\n        return this.fetch(url, opts);\n    };\n    HttpClient.prototype.delete = function (url, options) {\n        if (options === void 0) { options = {}; }\n        var opts = util_1.Util.extend(options, { method: \"DELETE\" });\n        return this.fetch(url, opts);\n    };\n    return HttpClient;\n}());\nexports.HttpClient = HttpClient;\nfunction mergeOptions(target, source) {\n    target.headers = target.headers || {};\n    var headers = util_1.Util.extend(target.headers, source.headers);\n    target = util_1.Util.extend(target, source);\n    target.headers = headers;\n}\nexports.mergeOptions = mergeOptions;\nfunction mergeHeaders(target, source) {\n    if (typeof source !== \"undefined\" && source !== null) {\n        var temp = new Request(\"\", { headers: source });\n        temp.headers.forEach(function (value, name) {\n            target.append(name, value);\n        });\n    }\n}\nexports.mergeHeaders = mergeHeaders;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/net/httpclient.js\n// module id = 9\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar items_1 = require(\"./items\");\nvar views_1 = require(\"./views\");\nvar contenttypes_1 = require(\"./contenttypes\");\nvar fields_1 = require(\"./fields\");\nvar forms_1 = require(\"./forms\");\nvar subscriptions_1 = require(\"./subscriptions\");\nvar queryable_1 = require(\"./queryable\");\nvar queryablesecurable_1 = require(\"./queryablesecurable\");\nvar util_1 = require(\"../utils/util\");\nvar usercustomactions_1 = require(\"./usercustomactions\");\nvar odata_1 = require(\"./odata\");\nvar exceptions_1 = require(\"../utils/exceptions\");\nvar folders_1 = require(\"./folders\");\n/**\n * Describes a collection of List objects\n *\n */\nvar Lists = (function (_super) {\n    __extends(Lists, _super);\n    /**\n     * Creates a new instance of the Lists class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    function Lists(baseUrl, path) {\n        if (path === void 0) { path = \"lists\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a list from the collection by title\n     *\n     * @param title The title of the list\n     */\n    Lists.prototype.getByTitle = function (title) {\n        return new List(this, \"getByTitle('\" + title + \"')\");\n    };\n    /**\n     * Gets a list from the collection by guid id\n     *\n     * @param id The Id of the list (GUID)\n     */\n    Lists.prototype.getById = function (id) {\n        var list = new List(this);\n        list.concat(\"('\" + id + \"')\");\n        return list;\n    };\n    /**\n     * Adds a new list to the collection\n     *\n     * @param title The new list's title\n     * @param description The new list's description\n     * @param template The list template value\n     * @param enableContentTypes If true content types will be allowed and enabled, otherwise they will be disallowed and not enabled\n     * @param additionalSettings Will be passed as part of the list creation body\n     */\n    Lists.prototype.add = function (title, description, template, enableContentTypes, additionalSettings) {\n        var _this = this;\n        if (description === void 0) { description = \"\"; }\n        if (template === void 0) { template = 100; }\n        if (enableContentTypes === void 0) { enableContentTypes = false; }\n        if (additionalSettings === void 0) { additionalSettings = {}; }\n        var addSettings = util_1.Util.extend({\n            \"AllowContentTypes\": enableContentTypes,\n            \"BaseTemplate\": template,\n            \"ContentTypesEnabled\": enableContentTypes,\n            \"Description\": description,\n            \"Title\": title,\n            \"__metadata\": { \"type\": \"SP.List\" },\n        }, additionalSettings);\n        return this.postCore({ body: JSON.stringify(addSettings) }).then(function (data) {\n            return { data: data, list: _this.getByTitle(addSettings.Title) };\n        });\n    };\n    /**\n     * Ensures that the specified list exists in the collection (note: this method not supported for batching)\n     *\n     * @param title The new list's title\n     * @param description The new list's description\n     * @param template The list template value\n     * @param enableContentTypes If true content types will be allowed and enabled, otherwise they will be disallowed and not enabled\n     * @param additionalSettings Will be passed as part of the list creation body or used to update an existing list\n     */\n    Lists.prototype.ensure = function (title, description, template, enableContentTypes, additionalSettings) {\n        var _this = this;\n        if (description === void 0) { description = \"\"; }\n        if (template === void 0) { template = 100; }\n        if (enableContentTypes === void 0) { enableContentTypes = false; }\n        if (additionalSettings === void 0) { additionalSettings = {}; }\n        if (this.hasBatch) {\n            throw new exceptions_1.NotSupportedInBatchException(\"The ensure list method\");\n        }\n        return new Promise(function (resolve, reject) {\n            var addOrUpdateSettings = util_1.Util.extend(additionalSettings, { Title: title, Description: description, ContentTypesEnabled: enableContentTypes }, true);\n            var list = _this.getByTitle(addOrUpdateSettings.Title);\n            list.get().then(function (_) {\n                list.update(addOrUpdateSettings).then(function (d) {\n                    resolve({ created: false, data: d, list: _this.getByTitle(addOrUpdateSettings.Title) });\n                }).catch(function (e) { return reject(e); });\n            }).catch(function (_) {\n                _this.add(title, description, template, enableContentTypes, addOrUpdateSettings).then(function (r) {\n                    resolve({ created: true, data: r.data, list: _this.getByTitle(addOrUpdateSettings.Title) });\n                }).catch(function (e) { return reject(e); });\n            });\n        });\n    };\n    /**\n     * Gets a list that is the default asset location for images or other files, which the users upload to their wiki pages.\n     */\n    Lists.prototype.ensureSiteAssetsLibrary = function () {\n        return this.clone(Lists, \"ensuresiteassetslibrary\", true).postCore().then(function (json) {\n            return new List(odata_1.extractOdataId(json));\n        });\n    };\n    /**\n     * Gets a list that is the default location for wiki pages.\n     */\n    Lists.prototype.ensureSitePagesLibrary = function () {\n        return this.clone(Lists, \"ensuresitepageslibrary\", true).postCore().then(function (json) {\n            return new List(odata_1.extractOdataId(json));\n        });\n    };\n    return Lists;\n}(queryable_1.QueryableCollection));\nexports.Lists = Lists;\n/**\n * Describes a single List instance\n *\n */\nvar List = (function (_super) {\n    __extends(List, _super);\n    function List() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(List.prototype, \"contentTypes\", {\n        /**\n         * Gets the content types in this list\n         *\n         */\n        get: function () {\n            return new contenttypes_1.ContentTypes(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"items\", {\n        /**\n         * Gets the items in this list\n         *\n         */\n        get: function () {\n            return new items_1.Items(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"views\", {\n        /**\n         * Gets the views in this list\n         *\n         */\n        get: function () {\n            return new views_1.Views(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"fields\", {\n        /**\n         * Gets the fields in this list\n         *\n         */\n        get: function () {\n            return new fields_1.Fields(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"forms\", {\n        /**\n         * Gets the forms in this list\n         *\n         */\n        get: function () {\n            return new forms_1.Forms(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"defaultView\", {\n        /**\n         * Gets the default view of this list\n         *\n         */\n        get: function () {\n            return new queryable_1.QueryableInstance(this, \"DefaultView\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"userCustomActions\", {\n        /**\n         * Get all custom actions on a site collection\n         *\n         */\n        get: function () {\n            return new usercustomactions_1.UserCustomActions(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"effectiveBasePermissions\", {\n        /**\n         * Gets the effective base permissions of this list\n         *\n         */\n        get: function () {\n            return new queryable_1.Queryable(this, \"EffectiveBasePermissions\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"eventReceivers\", {\n        /**\n         * Gets the event receivers attached to this list\n         *\n         */\n        get: function () {\n            return new queryable_1.QueryableCollection(this, \"EventReceivers\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"relatedFields\", {\n        /**\n         * Gets the related fields of this list\n         *\n         */\n        get: function () {\n            return new queryable_1.Queryable(this, \"getRelatedFields\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"informationRightsManagementSettings\", {\n        /**\n         * Gets the IRM settings for this list\n         *\n         */\n        get: function () {\n            return new queryable_1.Queryable(this, \"InformationRightsManagementSettings\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"subscriptions\", {\n        /**\n         * Gets the webhook subscriptions of this list\n         *\n         */\n        get: function () {\n            return new subscriptions_1.Subscriptions(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"rootFolder\", {\n        /**\n         * The root folder of the list\n         */\n        get: function () {\n            return new folders_1.Folder(this, \"rootFolder\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets a view by view guid id\n     *\n     */\n    List.prototype.getView = function (viewId) {\n        return new views_1.View(this, \"getView('\" + viewId + \"')\");\n    };\n    /**\n     * Updates this list intance with the supplied properties\n     *\n     * @param properties A plain object hash of values to update for the list\n     * @param eTag Value used in the IF-Match header, by default \"*\"\n     */\n    /* tslint:disable no-string-literal */\n    List.prototype.update = function (properties, eTag) {\n        var _this = this;\n        if (eTag === void 0) { eTag = \"*\"; }\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"__metadata\": { \"type\": \"SP.List\" },\n        }, properties));\n        return this.postCore({\n            body: postBody,\n            headers: {\n                \"IF-Match\": eTag,\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then(function (data) {\n            var retList = _this;\n            if (properties.hasOwnProperty(\"Title\")) {\n                retList = _this.getParent(List, _this.parentUrl, \"getByTitle('\" + properties[\"Title\"] + \"')\");\n            }\n            return {\n                data: data,\n                list: retList,\n            };\n        });\n    };\n    /* tslint:enable */\n    /**\n     * Delete this list\n     *\n     * @param eTag Value used in the IF-Match header, by default \"*\"\n     */\n    List.prototype.delete = function (eTag) {\n        if (eTag === void 0) { eTag = \"*\"; }\n        return this.postCore({\n            headers: {\n                \"IF-Match\": eTag,\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    /**\n     * Returns the collection of changes from the change log that have occurred within the list, based on the specified query.\n     */\n    List.prototype.getChanges = function (query) {\n        return this.clone(List, \"getchanges\", true).postCore({\n            body: JSON.stringify({ \"query\": util_1.Util.extend({ \"__metadata\": { \"type\": \"SP.ChangeQuery\" } }, query) }),\n        });\n    };\n    /**\n     * Returns a collection of items from the list based on the specified query.\n     *\n     * @param CamlQuery The Query schema of Collaborative Application Markup\n     * Language (CAML) is used in various ways within the context of Microsoft SharePoint Foundation\n     * to define queries against list data.\n     * see:\n     *\n     * https://msdn.microsoft.com/en-us/library/office/ms467521.aspx\n     *\n     * @param expands A URI with a $expand System Query Option indicates that Entries associated with\n     * the Entry or Collection of Entries identified by the Resource Path\n     * section of the URI must be represented inline (i.e. eagerly loaded).\n     * see:\n     *\n     * https://msdn.microsoft.com/en-us/library/office/fp142385.aspx\n     *\n     * http://www.odata.org/documentation/odata-version-2-0/uri-conventions/#ExpandSystemQueryOption\n     */\n    List.prototype.getItemsByCAMLQuery = function (query) {\n        var expands = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            expands[_i - 1] = arguments[_i];\n        }\n        var q = this.clone(List, \"getitems\", true);\n        return q.expand.apply(q, expands).postCore({\n            body: JSON.stringify({ \"query\": util_1.Util.extend({ \"__metadata\": { \"type\": \"SP.CamlQuery\" } }, query) }),\n        });\n    };\n    /**\n     * See: https://msdn.microsoft.com/en-us/library/office/dn292554.aspx\n     */\n    List.prototype.getListItemChangesSinceToken = function (query) {\n        return this.clone(List, \"getlistitemchangessincetoken\", true).postCore({\n            body: JSON.stringify({ \"query\": util_1.Util.extend({ \"__metadata\": { \"type\": \"SP.ChangeLogItemQuery\" } }, query) }),\n        }, { parse: function (r) { return r.text(); } });\n    };\n    /**\n     * Moves the list to the Recycle Bin and returns the identifier of the new Recycle Bin item.\n     */\n    List.prototype.recycle = function () {\n        return this.clone(List, \"recycle\", true).postCore().then(function (data) {\n            if (data.hasOwnProperty(\"Recycle\")) {\n                return data.Recycle;\n            }\n            else {\n                return data;\n            }\n        });\n    };\n    /**\n     * Renders list data based on the view xml provided\n     */\n    List.prototype.renderListData = function (viewXml) {\n        var q = this.clone(List, \"renderlistdata(@viewXml)\");\n        q.query.add(\"@viewXml\", \"'\" + viewXml + \"'\");\n        return q.postCore().then(function (data) {\n            // data will be a string, so we parse it again\n            data = JSON.parse(data);\n            if (data.hasOwnProperty(\"RenderListData\")) {\n                return data.RenderListData;\n            }\n            else {\n                return data;\n            }\n        });\n    };\n    /**\n     * Gets the field values and field schema attributes for a list item.\n     */\n    List.prototype.renderListFormData = function (itemId, formId, mode) {\n        return this.clone(List, \"renderlistformdata(itemid=\" + itemId + \", formid='\" + formId + \"', mode='\" + mode + \"')\", true).postCore().then(function (data) {\n            // data will be a string, so we parse it again\n            data = JSON.parse(data);\n            if (data.hasOwnProperty(\"ListData\")) {\n                return data.ListData;\n            }\n            else {\n                return data;\n            }\n        });\n    };\n    /**\n     * Reserves a list item ID for idempotent list item creation.\n     */\n    List.prototype.reserveListItemId = function () {\n        return this.clone(List, \"reservelistitemid\", true).postCore().then(function (data) {\n            if (data.hasOwnProperty(\"ReserveListItemId\")) {\n                return data.ReserveListItemId;\n            }\n            else {\n                return data;\n            }\n        });\n    };\n    /**\n     * Returns the ListItemEntityTypeFullName for this list, used when adding/updating list items. Does not support batching.\n     *\n     */\n    List.prototype.getListItemEntityTypeFullName = function () {\n        return this.clone(List, null).select(\"ListItemEntityTypeFullName\").getAs().then(function (o) { return o.ListItemEntityTypeFullName; });\n    };\n    return List;\n}(queryablesecurable_1.QueryableSecurable));\nexports.List = List;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/lists.js\n// module id = 10\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = require(\"./queryable\");\nvar queryableshareable_1 = require(\"./queryableshareable\");\nvar folders_1 = require(\"./folders\");\nvar files_1 = require(\"./files\");\nvar contenttypes_1 = require(\"./contenttypes\");\nvar util_1 = require(\"../utils/util\");\nvar odata_1 = require(\"./odata\");\nvar attachmentfiles_1 = require(\"./attachmentfiles\");\nvar lists_1 = require(\"./lists\");\n/**\n * Describes a collection of Item objects\n *\n */\nvar Items = (function (_super) {\n    __extends(Items, _super);\n    /**\n     * Creates a new instance of the Items class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    function Items(baseUrl, path) {\n        if (path === void 0) { path = \"items\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets an Item by id\n     *\n     * @param id The integer id of the item to retrieve\n     */\n    Items.prototype.getById = function (id) {\n        var i = new Item(this);\n        i.concat(\"(\" + id + \")\");\n        return i;\n    };\n    /**\n     * Skips the specified number of items (https://msdn.microsoft.com/en-us/library/office/fp142385.aspx#sectionSection6)\n     *\n     * @param skip The starting id where the page should start, use with top to specify pages\n     */\n    Items.prototype.skip = function (skip) {\n        this._query.add(\"$skiptoken\", encodeURIComponent(\"Paged=TRUE&p_ID=\" + skip));\n        return this;\n    };\n    /**\n     * Gets a collection designed to aid in paging through data\n     *\n     */\n    Items.prototype.getPaged = function () {\n        return this.getAs(new PagedItemCollectionParser());\n    };\n    //\n    /**\n     * Adds a new item to the collection\n     *\n     * @param properties The new items's properties\n     */\n    Items.prototype.add = function (properties, listItemEntityTypeFullName) {\n        var _this = this;\n        if (properties === void 0) { properties = {}; }\n        if (listItemEntityTypeFullName === void 0) { listItemEntityTypeFullName = null; }\n        var removeDependency = this.addBatchDependency();\n        return this.ensureListItemEntityTypeName(listItemEntityTypeFullName).then(function (listItemEntityType) {\n            var postBody = JSON.stringify(util_1.Util.extend({\n                \"__metadata\": { \"type\": listItemEntityType },\n            }, properties));\n            var promise = _this.clone(Items, null, true).postAsCore({ body: postBody }).then(function (data) {\n                return {\n                    data: data,\n                    item: _this.getById(data.Id),\n                };\n            });\n            removeDependency();\n            return promise;\n        });\n    };\n    /**\n     * Ensures we have the proper list item entity type name, either from the value provided or from the list\n     *\n     * @param candidatelistItemEntityTypeFullName The potential type name\n     */\n    Items.prototype.ensureListItemEntityTypeName = function (candidatelistItemEntityTypeFullName) {\n        return candidatelistItemEntityTypeFullName ?\n            Promise.resolve(candidatelistItemEntityTypeFullName) :\n            this.getParent(lists_1.List).getListItemEntityTypeFullName();\n    };\n    return Items;\n}(queryable_1.QueryableCollection));\nexports.Items = Items;\n/**\n * Descrines a single Item instance\n *\n */\nvar Item = (function (_super) {\n    __extends(Item, _super);\n    function Item() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(Item.prototype, \"attachmentFiles\", {\n        /**\n         * Gets the set of attachments for this item\n         *\n         */\n        get: function () {\n            return new attachmentfiles_1.AttachmentFiles(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Item.prototype, \"contentType\", {\n        /**\n         * Gets the content type for this item\n         *\n         */\n        get: function () {\n            return new contenttypes_1.ContentType(this, \"ContentType\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Item.prototype, \"effectiveBasePermissions\", {\n        /**\n         * Gets the effective base permissions for the item\n         *\n         */\n        get: function () {\n            return new queryable_1.Queryable(this, \"EffectiveBasePermissions\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Item.prototype, \"effectiveBasePermissionsForUI\", {\n        /**\n         * Gets the effective base permissions for the item in a UI context\n         *\n         */\n        get: function () {\n            return new queryable_1.Queryable(this, \"EffectiveBasePermissionsForUI\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Item.prototype, \"fieldValuesAsHTML\", {\n        /**\n         * Gets the field values for this list item in their HTML representation\n         *\n         */\n        get: function () {\n            return new queryable_1.QueryableInstance(this, \"FieldValuesAsHTML\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Item.prototype, \"fieldValuesAsText\", {\n        /**\n         * Gets the field values for this list item in their text representation\n         *\n         */\n        get: function () {\n            return new queryable_1.QueryableInstance(this, \"FieldValuesAsText\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Item.prototype, \"fieldValuesForEdit\", {\n        /**\n         * Gets the field values for this list item for use in editing controls\n         *\n         */\n        get: function () {\n            return new queryable_1.QueryableInstance(this, \"FieldValuesForEdit\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Item.prototype, \"folder\", {\n        /**\n         * Gets the folder associated with this list item (if this item represents a folder)\n         *\n         */\n        get: function () {\n            return new folders_1.Folder(this, \"folder\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Item.prototype, \"file\", {\n        /**\n         * Gets the folder associated with this list item (if this item represents a folder)\n         *\n         */\n        get: function () {\n            return new files_1.File(this, \"file\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Updates this list intance with the supplied properties\n     *\n     * @param properties A plain object hash of values to update for the list\n     * @param eTag Value used in the IF-Match header, by default \"*\"\n     */\n    Item.prototype.update = function (properties, eTag) {\n        var _this = this;\n        if (eTag === void 0) { eTag = \"*\"; }\n        return new Promise(function (resolve, reject) {\n            var removeDependency = _this.addBatchDependency();\n            var parentList = _this.getParent(queryable_1.QueryableInstance, _this.parentUrl.substr(0, _this.parentUrl.lastIndexOf(\"/\")));\n            parentList.select(\"ListItemEntityTypeFullName\").getAs().then(function (d) {\n                var postBody = JSON.stringify(util_1.Util.extend({\n                    \"__metadata\": { \"type\": d.ListItemEntityTypeFullName },\n                }, properties));\n                removeDependency();\n                return _this.postCore({\n                    body: postBody,\n                    headers: {\n                        \"IF-Match\": eTag,\n                        \"X-HTTP-Method\": \"MERGE\",\n                    },\n                }, new ItemUpdatedParser()).then(function (data) {\n                    resolve({\n                        data: data,\n                        item: _this,\n                    });\n                });\n            }).catch(function (e) { return reject(e); });\n        });\n    };\n    /**\n     * Delete this item\n     *\n     * @param eTag Value used in the IF-Match header, by default \"*\"\n     */\n    Item.prototype.delete = function (eTag) {\n        if (eTag === void 0) { eTag = \"*\"; }\n        return this.postCore({\n            headers: {\n                \"IF-Match\": eTag,\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    /**\n     * Moves the list item to the Recycle Bin and returns the identifier of the new Recycle Bin item.\n     */\n    Item.prototype.recycle = function () {\n        return this.clone(Item, \"recycle\", true).postCore();\n    };\n    /**\n     * Gets a string representation of the full URL to the WOPI frame.\n     * If there is no associated WOPI application, or no associated action, an empty string is returned.\n     *\n     * @param action Display mode: 0: view, 1: edit, 2: mobileView, 3: interactivePreview\n     */\n    Item.prototype.getWopiFrameUrl = function (action) {\n        if (action === void 0) { action = 0; }\n        var i = this.clone(Item, \"getWOPIFrameUrl(@action)\", true);\n        i._query.add(\"@action\", action);\n        return i.postCore().then(function (data) {\n            // handle verbose mode\n            if (data.hasOwnProperty(\"GetWOPIFrameUrl\")) {\n                return data.GetWOPIFrameUrl;\n            }\n            return data;\n        });\n    };\n    /**\n     * Validates and sets the values of the specified collection of fields for the list item.\n     *\n     * @param formValues The fields to change and their new values.\n     * @param newDocumentUpdate true if the list item is a document being updated after upload; otherwise false.\n     */\n    Item.prototype.validateUpdateListItem = function (formValues, newDocumentUpdate) {\n        if (newDocumentUpdate === void 0) { newDocumentUpdate = false; }\n        return this.clone(Item, \"validateupdatelistitem\", true).postCore({\n            body: JSON.stringify({ \"formValues\": formValues, bNewDocumentUpdate: newDocumentUpdate }),\n        });\n    };\n    return Item;\n}(queryableshareable_1.QueryableShareableItem));\nexports.Item = Item;\n/**\n * Provides paging functionality for list items\n */\nvar PagedItemCollection = (function () {\n    function PagedItemCollection(nextUrl, results) {\n        this.nextUrl = nextUrl;\n        this.results = results;\n    }\n    Object.defineProperty(PagedItemCollection.prototype, \"hasNext\", {\n        /**\n         * If true there are more results available in the set, otherwise there are not\n         */\n        get: function () {\n            return typeof this.nextUrl === \"string\" && this.nextUrl.length > 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the next set of results, or resolves to null if no results are available\n     */\n    PagedItemCollection.prototype.getNext = function () {\n        if (this.hasNext) {\n            var items = new Items(this.nextUrl, null);\n            return items.getPaged();\n        }\n        return new Promise(function (r) { return r(null); });\n    };\n    return PagedItemCollection;\n}());\nexports.PagedItemCollection = PagedItemCollection;\nvar PagedItemCollectionParser = (function (_super) {\n    __extends(PagedItemCollectionParser, _super);\n    function PagedItemCollectionParser() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    PagedItemCollectionParser.prototype.parse = function (r) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            if (_this.handleError(r, reject)) {\n                r.json().then(function (json) {\n                    var nextUrl = json.hasOwnProperty(\"d\") && json.d.hasOwnProperty(\"__next\") ? json.d.__next : json[\"odata.nextLink\"];\n                    resolve(new PagedItemCollection(nextUrl, _this.parseODataJSON(json)));\n                });\n            }\n        });\n    };\n    return PagedItemCollectionParser;\n}(odata_1.ODataParserBase));\nvar ItemUpdatedParser = (function (_super) {\n    __extends(ItemUpdatedParser, _super);\n    function ItemUpdatedParser() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ItemUpdatedParser.prototype.parse = function (r) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            if (_this.handleError(r, reject)) {\n                resolve({\n                    \"odata.etag\": r.headers.get(\"etag\"),\n                });\n            }\n        });\n    };\n    return ItemUpdatedParser;\n}(odata_1.ODataParserBase));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/items.js\n// module id = 11\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"../utils/util\");\nvar webs_1 = require(\"./webs\");\nvar odata_1 = require(\"./odata\");\nvar queryable_1 = require(\"./queryable\");\nvar queryablesecurable_1 = require(\"./queryablesecurable\");\nvar types_1 = require(\"./types\");\n/**\n * Internal helper class used to augment classes to include sharing functionality\n */\nvar QueryableShareable = (function (_super) {\n    __extends(QueryableShareable, _super);\n    function QueryableShareable() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Gets a sharing link for the supplied\n     *\n     * @param kind The kind of link to share\n     * @param expiration The optional expiration for this link\n     */\n    QueryableShareable.prototype.getShareLink = function (kind, expiration) {\n        if (expiration === void 0) { expiration = null; }\n        // date needs to be an ISO string or null\n        var expString = expiration !== null ? expiration.toISOString() : null;\n        // clone using the factory and send the request\n        return this.clone(QueryableShareable, \"shareLink\", true).postAsCore({\n            body: JSON.stringify({\n                request: {\n                    createLink: true,\n                    emailData: null,\n                    settings: {\n                        expiration: expString,\n                        linkKind: kind,\n                    },\n                },\n            }),\n        });\n    };\n    /**\n     * Shares this instance with the supplied users\n     *\n     * @param loginNames Resolved login names to share\n     * @param role The role\n     * @param requireSignin True to require the user is authenticated, otherwise false\n     * @param propagateAcl True to apply this share to all children\n     * @param emailData If supplied an email will be sent with the indicated properties\n     */\n    QueryableShareable.prototype.shareWith = function (loginNames, role, requireSignin, propagateAcl, emailData) {\n        var _this = this;\n        if (requireSignin === void 0) { requireSignin = false; }\n        if (propagateAcl === void 0) { propagateAcl = false; }\n        // handle the multiple input types\n        if (!Array.isArray(loginNames)) {\n            loginNames = [loginNames];\n        }\n        var userStr = JSON.stringify(loginNames.map(function (login) { return { Key: login }; }));\n        var roleFilter = role === types_1.SharingRole.Edit ? types_1.RoleType.Contributor : types_1.RoleType.Reader;\n        // start by looking up the role definition id we need to set the roleValue\n        return webs_1.Web.fromUrl(this.toUrl()).roleDefinitions.select(\"Id\").filter(\"RoleTypeKind eq \" + roleFilter).get().then(function (def) {\n            if (!Array.isArray(def) || def.length < 1) {\n                throw new Error(\"Could not locate a role defintion with RoleTypeKind \" + roleFilter);\n            }\n            var postBody = {\n                includeAnonymousLinkInEmail: requireSignin,\n                peoplePickerInput: userStr,\n                propagateAcl: propagateAcl,\n                roleValue: \"role:\" + def[0].Id,\n                useSimplifiedRoles: true,\n            };\n            if (typeof emailData !== \"undefined\") {\n                postBody = util_1.Util.extend(postBody, {\n                    emailBody: emailData.body,\n                    emailSubject: typeof emailData.subject !== \"undefined\" ? emailData.subject : \"\",\n                    sendEmail: true,\n                });\n            }\n            return _this.clone(QueryableShareable, \"shareObject\", true).postAsCore({\n                body: JSON.stringify(postBody),\n            });\n        });\n    };\n    /**\n     * Shares an object based on the supplied options\n     *\n     * @param options The set of options to send to the ShareObject method\n     * @param bypass If true any processing is skipped and the options are sent directly to the ShareObject method\n     */\n    QueryableShareable.prototype.shareObject = function (options, bypass) {\n        var _this = this;\n        if (bypass === void 0) { bypass = false; }\n        if (bypass) {\n            // if the bypass flag is set send the supplied parameters directly to the service\n            return this.sendShareObjectRequest(options);\n        }\n        // extend our options with some defaults\n        options = util_1.Util.extend(options, {\n            group: null,\n            includeAnonymousLinkInEmail: false,\n            propagateAcl: false,\n            useSimplifiedRoles: true,\n        }, true);\n        return this.getRoleValue(options.role, options.group).then(function (roleValue) {\n            // handle the multiple input types\n            if (!Array.isArray(options.loginNames)) {\n                options.loginNames = [options.loginNames];\n            }\n            var userStr = JSON.stringify(options.loginNames.map(function (login) { return { Key: login }; }));\n            var postBody = {\n                peoplePickerInput: userStr,\n                roleValue: roleValue,\n                url: options.url,\n            };\n            if (typeof options.emailData !== \"undefined\" && options.emailData !== null) {\n                postBody = util_1.Util.extend(postBody, {\n                    emailBody: options.emailData.body,\n                    emailSubject: typeof options.emailData.subject !== \"undefined\" ? options.emailData.subject : \"Shared with you.\",\n                    sendEmail: true,\n                });\n            }\n            return _this.sendShareObjectRequest(postBody);\n        });\n    };\n    /**\n     * Calls the web's UnshareObject method\n     *\n     * @param url The url of the object to unshare\n     */\n    QueryableShareable.prototype.unshareObjectWeb = function (url) {\n        return this.clone(QueryableShareable, \"unshareObject\", true).postAsCore({\n            body: JSON.stringify({\n                url: url,\n            }),\n        });\n    };\n    /**\n     * Checks Permissions on the list of Users and returns back role the users have on the Item.\n     *\n     * @param recipients The array of Entities for which Permissions need to be checked.\n     */\n    QueryableShareable.prototype.checkPermissions = function (recipients) {\n        return this.clone(QueryableShareable, \"checkPermissions\", true).postAsCore({\n            body: JSON.stringify({\n                recipients: recipients,\n            }),\n        });\n    };\n    /**\n     * Get Sharing Information.\n     *\n     * @param request The SharingInformationRequest Object.\n     */\n    QueryableShareable.prototype.getSharingInformation = function (request) {\n        if (request === void 0) { request = null; }\n        return this.clone(QueryableShareable, \"getSharingInformation\", true).postAsCore({\n            body: JSON.stringify({\n                request: request,\n            }),\n        });\n    };\n    /**\n     * Gets the sharing settings of an item.\n     *\n     * @param useSimplifiedRoles Determines whether to use simplified roles.\n     */\n    QueryableShareable.prototype.getObjectSharingSettings = function (useSimplifiedRoles) {\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\n        return this.clone(QueryableShareable, \"getObjectSharingSettings\", true).postAsCore({\n            body: JSON.stringify({\n                useSimplifiedRoles: useSimplifiedRoles,\n            }),\n        });\n    };\n    /**\n     * Unshares this object\n     */\n    QueryableShareable.prototype.unshareObject = function () {\n        return this.clone(QueryableShareable, \"unshareObject\", true).postAsCore();\n    };\n    /**\n     * Deletes a link by type\n     *\n     * @param kind Deletes a sharing link by the kind of link\n     */\n    QueryableShareable.prototype.deleteLinkByKind = function (kind) {\n        return this.clone(QueryableShareable, \"deleteLinkByKind\", true).postCore({\n            body: JSON.stringify({ linkKind: kind }),\n        });\n    };\n    /**\n     * Removes the specified link to the item.\n     *\n     * @param kind The kind of link to be deleted.\n     * @param shareId\n     */\n    QueryableShareable.prototype.unshareLink = function (kind, shareId) {\n        if (shareId === void 0) { shareId = \"00000000-0000-0000-0000-000000000000\"; }\n        return this.clone(QueryableShareable, \"unshareLink\", true).postCore({\n            body: JSON.stringify({ linkKind: kind, shareId: shareId }),\n        });\n    };\n    /**\n     * Calculates the roleValue string used in the sharing query\n     *\n     * @param role The Sharing Role\n     * @param group The Group type\n     */\n    QueryableShareable.prototype.getRoleValue = function (role, group) {\n        // we will give group precedence, because we had to make a choice\n        if (typeof group !== \"undefined\" && group !== null) {\n            switch (group) {\n                case types_1.RoleType.Contributor:\n                    return webs_1.Web.fromUrl(this.toUrl()).associatedMemberGroup.select(\"Id\").getAs().then(function (g) { return \"group: \" + g.Id; });\n                case types_1.RoleType.Reader:\n                case types_1.RoleType.Guest:\n                    return webs_1.Web.fromUrl(this.toUrl()).associatedVisitorGroup.select(\"Id\").getAs().then(function (g) { return \"group: \" + g.Id; });\n                default:\n                    throw new Error(\"Could not determine role value for supplied value. Contributor, Reader, and Guest are supported\");\n            }\n        }\n        else {\n            var roleFilter = role === types_1.SharingRole.Edit ? types_1.RoleType.Contributor : types_1.RoleType.Reader;\n            return webs_1.Web.fromUrl(this.toUrl()).roleDefinitions.select(\"Id\").top(1).filter(\"RoleTypeKind eq \" + roleFilter).getAs().then(function (def) {\n                if (def.length < 1) {\n                    throw new Error(\"Could not locate associated role definition for supplied role. Edit and View are supported\");\n                }\n                return \"role: \" + def[0].Id;\n            });\n        }\n    };\n    QueryableShareable.prototype.getShareObjectWeb = function (candidate) {\n        return Promise.resolve(webs_1.Web.fromUrl(candidate, \"/_api/SP.Web.ShareObject\"));\n    };\n    QueryableShareable.prototype.sendShareObjectRequest = function (options) {\n        return this.getShareObjectWeb(this.toUrl()).then(function (web) {\n            return web.expand(\"UsersWithAccessRequests\", \"GroupsSharedWith\").as(QueryableShareable).postCore({\n                body: JSON.stringify(options),\n            });\n        });\n    };\n    return QueryableShareable;\n}(queryable_1.Queryable));\nexports.QueryableShareable = QueryableShareable;\nvar QueryableShareableWeb = (function (_super) {\n    __extends(QueryableShareableWeb, _super);\n    function QueryableShareableWeb() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Shares this web with the supplied users\n     * @param loginNames The resolved login names to share\n     * @param role The role to share this web\n     * @param emailData Optional email data\n     */\n    QueryableShareableWeb.prototype.shareWith = function (loginNames, role, emailData) {\n        var _this = this;\n        if (role === void 0) { role = types_1.SharingRole.View; }\n        var dependency = this.addBatchDependency();\n        return webs_1.Web.fromUrl(this.toUrl(), \"/_api/web/url\").get().then(function (url) {\n            dependency();\n            return _this.shareObject(util_1.Util.combinePaths(url, \"/_layouts/15/aclinv.aspx?forSharing=1&mbypass=1\"), loginNames, role, emailData);\n        });\n    };\n    /**\n     * Provides direct access to the static web.ShareObject method\n     *\n     * @param url The url to share\n     * @param loginNames Resolved loginnames string[] of a single login name string\n     * @param roleValue Role value\n     * @param emailData Optional email data\n     * @param groupId Optional group id\n     * @param propagateAcl\n     * @param includeAnonymousLinkInEmail\n     * @param useSimplifiedRoles\n     */\n    QueryableShareableWeb.prototype.shareObject = function (url, loginNames, role, emailData, group, propagateAcl, includeAnonymousLinkInEmail, useSimplifiedRoles) {\n        if (propagateAcl === void 0) { propagateAcl = false; }\n        if (includeAnonymousLinkInEmail === void 0) { includeAnonymousLinkInEmail = false; }\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\n        return this.clone(QueryableShareable, null, true).shareObject({\n            emailData: emailData,\n            group: group,\n            includeAnonymousLinkInEmail: includeAnonymousLinkInEmail,\n            loginNames: loginNames,\n            propagateAcl: propagateAcl,\n            role: role,\n            url: url,\n            useSimplifiedRoles: useSimplifiedRoles,\n        });\n    };\n    /**\n     * Supplies a method to pass any set of arguments to ShareObject\n     *\n     * @param options The set of options to send to ShareObject\n     */\n    QueryableShareableWeb.prototype.shareObjectRaw = function (options) {\n        return this.clone(QueryableShareable, null, true).shareObject(options, true);\n    };\n    /**\n     * Unshares the object\n     *\n     * @param url The url of the object to stop sharing\n     */\n    QueryableShareableWeb.prototype.unshareObject = function (url) {\n        return this.clone(QueryableShareable, null, true).unshareObjectWeb(url);\n    };\n    return QueryableShareableWeb;\n}(queryablesecurable_1.QueryableSecurable));\nexports.QueryableShareableWeb = QueryableShareableWeb;\nvar QueryableShareableItem = (function (_super) {\n    __extends(QueryableShareableItem, _super);\n    function QueryableShareableItem() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Gets a link suitable for sharing for this item\n     *\n     * @param kind The type of link to share\n     * @param expiration The optional expiration date\n     */\n    QueryableShareableItem.prototype.getShareLink = function (kind, expiration) {\n        if (kind === void 0) { kind = types_1.SharingLinkKind.OrganizationView; }\n        if (expiration === void 0) { expiration = null; }\n        return this.clone(QueryableShareable, null, true).getShareLink(kind, expiration);\n    };\n    /**\n     * Shares this item with one or more users\n     *\n     * @param loginNames string or string[] of resolved login names to which this item will be shared\n     * @param role The role (View | Edit) applied to the share\n     * @param emailData Optional, if inlucded an email will be sent. Note subject currently has no effect.\n     */\n    QueryableShareableItem.prototype.shareWith = function (loginNames, role, requireSignin, emailData) {\n        if (role === void 0) { role = types_1.SharingRole.View; }\n        if (requireSignin === void 0) { requireSignin = false; }\n        return this.clone(QueryableShareable, null, true).shareWith(loginNames, role, requireSignin, false, emailData);\n    };\n    /**\n     * Checks Permissions on the list of Users and returns back role the users have on the Item.\n     *\n     * @param recipients The array of Entities for which Permissions need to be checked.\n     */\n    QueryableShareableItem.prototype.checkSharingPermissions = function (recipients) {\n        return this.clone(QueryableShareable, null, true).checkPermissions(recipients);\n    };\n    /**\n     * Get Sharing Information.\n     *\n     * @param request The SharingInformationRequest Object.\n     */\n    QueryableShareableItem.prototype.getSharingInformation = function (request) {\n        if (request === void 0) { request = null; }\n        return this.clone(QueryableShareable, null, true).getSharingInformation(request);\n    };\n    /**\n     * Gets the sharing settings of an item.\n     *\n     * @param useSimplifiedRoles Determines whether to use simplified roles.\n     */\n    QueryableShareableItem.prototype.getObjectSharingSettings = function (useSimplifiedRoles) {\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\n        return this.clone(QueryableShareable, null, true).getObjectSharingSettings(useSimplifiedRoles);\n    };\n    /**\n     * Unshare this item\n     */\n    QueryableShareableItem.prototype.unshare = function () {\n        return this.clone(QueryableShareable, null, true).unshareObject();\n    };\n    /**\n     * Deletes a sharing link by kind\n     *\n     * @param kind Deletes a sharing link by the kind of link\n     */\n    QueryableShareableItem.prototype.deleteSharingLinkByKind = function (kind) {\n        return this.clone(QueryableShareable, null, true).deleteLinkByKind(kind);\n    };\n    /**\n     * Removes the specified link to the item.\n     *\n     * @param kind The kind of link to be deleted.\n     * @param shareId\n     */\n    QueryableShareableItem.prototype.unshareLink = function (kind, shareId) {\n        return this.clone(QueryableShareable, null, true).unshareLink(kind, shareId);\n    };\n    return QueryableShareableItem;\n}(queryablesecurable_1.QueryableSecurable));\nexports.QueryableShareableItem = QueryableShareableItem;\nvar FileFolderShared = (function (_super) {\n    __extends(FileFolderShared, _super);\n    function FileFolderShared() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Gets a link suitable for sharing\n     *\n     * @param kind The kind of link to get\n     * @param expiration Optional, an expiration for this link\n     */\n    FileFolderShared.prototype.getShareLink = function (kind, expiration) {\n        if (kind === void 0) { kind = types_1.SharingLinkKind.OrganizationView; }\n        if (expiration === void 0) { expiration = null; }\n        var dependency = this.addBatchDependency();\n        return this.getShareable().then(function (shareable) {\n            dependency();\n            return shareable.getShareLink(kind, expiration);\n        });\n    };\n    /**\n         * Checks Permissions on the list of Users and returns back role the users have on the Item.\n         *\n         * @param recipients The array of Entities for which Permissions need to be checked.\n         */\n    FileFolderShared.prototype.checkSharingPermissions = function (recipients) {\n        var dependency = this.addBatchDependency();\n        return this.getShareable().then(function (shareable) {\n            dependency();\n            return shareable.checkPermissions(recipients);\n        });\n    };\n    /**\n     * Get Sharing Information.\n     *\n     * @param request The SharingInformationRequest Object.\n     */\n    FileFolderShared.prototype.getSharingInformation = function (request) {\n        if (request === void 0) { request = null; }\n        var dependency = this.addBatchDependency();\n        return this.getShareable().then(function (shareable) {\n            dependency();\n            return shareable.getSharingInformation(request);\n        });\n    };\n    /**\n     * Gets the sharing settings of an item.\n     *\n     * @param useSimplifiedRoles Determines whether to use simplified roles.\n     */\n    FileFolderShared.prototype.getObjectSharingSettings = function (useSimplifiedRoles) {\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\n        var dependency = this.addBatchDependency();\n        return this.getShareable().then(function (shareable) {\n            dependency();\n            return shareable.getObjectSharingSettings(useSimplifiedRoles);\n        });\n    };\n    /**\n     * Unshare this item\n     */\n    FileFolderShared.prototype.unshare = function () {\n        var dependency = this.addBatchDependency();\n        return this.getShareable().then(function (shareable) {\n            dependency();\n            return shareable.unshareObject();\n        });\n    };\n    /**\n     * Deletes a sharing link by the kind of link\n     *\n     * @param kind The kind of link to be deleted.\n     */\n    FileFolderShared.prototype.deleteSharingLinkByKind = function (kind) {\n        var dependency = this.addBatchDependency();\n        return this.getShareable().then(function (shareable) {\n            dependency();\n            return shareable.deleteLinkByKind(kind);\n        });\n    };\n    /**\n     * Removes the specified link to the item.\n     *\n     * @param kind The kind of link to be deleted.\n     * @param shareId The share id to delete\n     */\n    FileFolderShared.prototype.unshareLink = function (kind, shareId) {\n        var dependency = this.addBatchDependency();\n        return this.getShareable().then(function (shareable) {\n            dependency();\n            return shareable.unshareLink(kind, shareId);\n        });\n    };\n    /**\n     * For files and folders we need to use the associated item end point\n     */\n    FileFolderShared.prototype.getShareable = function () {\n        var _this = this;\n        // sharing only works on the item end point, not the file one - so we create a folder instance with the item url internally\n        return this.clone(QueryableShareableFile, \"listItemAllFields\", false).select(\"odata.editlink\").get().then(function (d) {\n            var shareable = new QueryableShareable(odata_1.getEntityUrl(d));\n            // we need to handle batching\n            if (_this.hasBatch) {\n                shareable = shareable.inBatch(_this.batch);\n            }\n            return shareable;\n        });\n    };\n    return FileFolderShared;\n}(queryable_1.QueryableInstance));\nexports.FileFolderShared = FileFolderShared;\nvar QueryableShareableFile = (function (_super) {\n    __extends(QueryableShareableFile, _super);\n    function QueryableShareableFile() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Shares this item with one or more users\n     *\n     * @param loginNames string or string[] of resolved login names to which this item will be shared\n     * @param role The role (View | Edit) applied to the share\n     * @param shareEverything Share everything in this folder, even items with unique permissions.\n     * @param requireSignin If true the user must signin to view link, otherwise anyone with the link can access the resource\n     * @param emailData Optional, if inlucded an email will be sent. Note subject currently has no effect.\n     */\n    QueryableShareableFile.prototype.shareWith = function (loginNames, role, requireSignin, emailData) {\n        if (role === void 0) { role = types_1.SharingRole.View; }\n        if (requireSignin === void 0) { requireSignin = false; }\n        var dependency = this.addBatchDependency();\n        return this.getShareable().then(function (shareable) {\n            dependency();\n            return shareable.shareWith(loginNames, role, requireSignin, false, emailData);\n        });\n    };\n    return QueryableShareableFile;\n}(FileFolderShared));\nexports.QueryableShareableFile = QueryableShareableFile;\nvar QueryableShareableFolder = (function (_super) {\n    __extends(QueryableShareableFolder, _super);\n    function QueryableShareableFolder() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Shares this item with one or more users\n     *\n     * @param loginNames string or string[] of resolved login names to which this item will be shared\n     * @param role The role (View | Edit) applied to the share\n     * @param shareEverything Share everything in this folder, even items with unique permissions.\n     * @param requireSignin If true the user must signin to view link, otherwise anyone with the link can access the resource\n     * @param emailData Optional, if inlucded an email will be sent. Note subject currently has no effect.\n     */\n    QueryableShareableFolder.prototype.shareWith = function (loginNames, role, requireSignin, shareEverything, emailData) {\n        if (role === void 0) { role = types_1.SharingRole.View; }\n        if (requireSignin === void 0) { requireSignin = false; }\n        if (shareEverything === void 0) { shareEverything = false; }\n        var dependency = this.addBatchDependency();\n        return this.getShareable().then(function (shareable) {\n            dependency();\n            return shareable.shareWith(loginNames, role, requireSignin, shareEverything, emailData);\n        });\n    };\n    return QueryableShareableFolder;\n}(FileFolderShared));\nexports.QueryableShareableFolder = QueryableShareableFolder;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/queryableshareable.js\n// module id = 12\n// module chunks = 0","\"use strict\";\n// reference: https://msdn.microsoft.com/en-us/library/office/dn600183.aspx\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Determines the display mode of the given control or view\n */\nvar ControlMode;\n(function (ControlMode) {\n    ControlMode[ControlMode[\"Display\"] = 1] = \"Display\";\n    ControlMode[ControlMode[\"Edit\"] = 2] = \"Edit\";\n    ControlMode[ControlMode[\"New\"] = 3] = \"New\";\n})(ControlMode = exports.ControlMode || (exports.ControlMode = {}));\n/**\n * Specifies the type of the field.\n */\nvar FieldTypes;\n(function (FieldTypes) {\n    FieldTypes[FieldTypes[\"Invalid\"] = 0] = \"Invalid\";\n    FieldTypes[FieldTypes[\"Integer\"] = 1] = \"Integer\";\n    FieldTypes[FieldTypes[\"Text\"] = 2] = \"Text\";\n    FieldTypes[FieldTypes[\"Note\"] = 3] = \"Note\";\n    FieldTypes[FieldTypes[\"DateTime\"] = 4] = \"DateTime\";\n    FieldTypes[FieldTypes[\"Counter\"] = 5] = \"Counter\";\n    FieldTypes[FieldTypes[\"Choice\"] = 6] = \"Choice\";\n    FieldTypes[FieldTypes[\"Lookup\"] = 7] = \"Lookup\";\n    FieldTypes[FieldTypes[\"Boolean\"] = 8] = \"Boolean\";\n    FieldTypes[FieldTypes[\"Number\"] = 9] = \"Number\";\n    FieldTypes[FieldTypes[\"Currency\"] = 10] = \"Currency\";\n    FieldTypes[FieldTypes[\"URL\"] = 11] = \"URL\";\n    FieldTypes[FieldTypes[\"Computed\"] = 12] = \"Computed\";\n    FieldTypes[FieldTypes[\"Threading\"] = 13] = \"Threading\";\n    FieldTypes[FieldTypes[\"Guid\"] = 14] = \"Guid\";\n    FieldTypes[FieldTypes[\"MultiChoice\"] = 15] = \"MultiChoice\";\n    FieldTypes[FieldTypes[\"GridChoice\"] = 16] = \"GridChoice\";\n    FieldTypes[FieldTypes[\"Calculated\"] = 17] = \"Calculated\";\n    FieldTypes[FieldTypes[\"File\"] = 18] = \"File\";\n    FieldTypes[FieldTypes[\"Attachments\"] = 19] = \"Attachments\";\n    FieldTypes[FieldTypes[\"User\"] = 20] = \"User\";\n    FieldTypes[FieldTypes[\"Recurrence\"] = 21] = \"Recurrence\";\n    FieldTypes[FieldTypes[\"CrossProjectLink\"] = 22] = \"CrossProjectLink\";\n    FieldTypes[FieldTypes[\"ModStat\"] = 23] = \"ModStat\";\n    FieldTypes[FieldTypes[\"Error\"] = 24] = \"Error\";\n    FieldTypes[FieldTypes[\"ContentTypeId\"] = 25] = \"ContentTypeId\";\n    FieldTypes[FieldTypes[\"PageSeparator\"] = 26] = \"PageSeparator\";\n    FieldTypes[FieldTypes[\"ThreadIndex\"] = 27] = \"ThreadIndex\";\n    FieldTypes[FieldTypes[\"WorkflowStatus\"] = 28] = \"WorkflowStatus\";\n    FieldTypes[FieldTypes[\"AllDayEvent\"] = 29] = \"AllDayEvent\";\n    FieldTypes[FieldTypes[\"WorkflowEventType\"] = 30] = \"WorkflowEventType\";\n})(FieldTypes = exports.FieldTypes || (exports.FieldTypes = {}));\nvar DateTimeFieldFormatType;\n(function (DateTimeFieldFormatType) {\n    DateTimeFieldFormatType[DateTimeFieldFormatType[\"DateOnly\"] = 0] = \"DateOnly\";\n    DateTimeFieldFormatType[DateTimeFieldFormatType[\"DateTime\"] = 1] = \"DateTime\";\n})(DateTimeFieldFormatType = exports.DateTimeFieldFormatType || (exports.DateTimeFieldFormatType = {}));\n/**\n * Specifies the control settings while adding a field.\n */\nvar AddFieldOptions;\n(function (AddFieldOptions) {\n    /**\n     *  Specify that a new field added to the list must also be added to the default content type in the site collection\n     */\n    AddFieldOptions[AddFieldOptions[\"DefaultValue\"] = 0] = \"DefaultValue\";\n    /**\n     * Specify that a new field added to the list must also be added to the default content type in the site collection.\n     */\n    AddFieldOptions[AddFieldOptions[\"AddToDefaultContentType\"] = 1] = \"AddToDefaultContentType\";\n    /**\n     * Specify that a new field must not be added to any other content type\n     */\n    AddFieldOptions[AddFieldOptions[\"AddToNoContentType\"] = 2] = \"AddToNoContentType\";\n    /**\n     *  Specify that a new field that is added to the specified list must also be added to all content types in the site collection\n     */\n    AddFieldOptions[AddFieldOptions[\"AddToAllContentTypes\"] = 4] = \"AddToAllContentTypes\";\n    /**\n     * Specify adding an internal field name hint for the purpose of avoiding possible database locking or field renaming operations\n     */\n    AddFieldOptions[AddFieldOptions[\"AddFieldInternalNameHint\"] = 8] = \"AddFieldInternalNameHint\";\n    /**\n     * Specify that a new field that is added to the specified list must also be added to the default list view\n     */\n    AddFieldOptions[AddFieldOptions[\"AddFieldToDefaultView\"] = 16] = \"AddFieldToDefaultView\";\n    /**\n     * Specify to confirm that no other field has the same display name\n     */\n    AddFieldOptions[AddFieldOptions[\"AddFieldCheckDisplayName\"] = 32] = \"AddFieldCheckDisplayName\";\n})(AddFieldOptions = exports.AddFieldOptions || (exports.AddFieldOptions = {}));\nvar CalendarType;\n(function (CalendarType) {\n    CalendarType[CalendarType[\"Gregorian\"] = 1] = \"Gregorian\";\n    CalendarType[CalendarType[\"Japan\"] = 3] = \"Japan\";\n    CalendarType[CalendarType[\"Taiwan\"] = 4] = \"Taiwan\";\n    CalendarType[CalendarType[\"Korea\"] = 5] = \"Korea\";\n    CalendarType[CalendarType[\"Hijri\"] = 6] = \"Hijri\";\n    CalendarType[CalendarType[\"Thai\"] = 7] = \"Thai\";\n    CalendarType[CalendarType[\"Hebrew\"] = 8] = \"Hebrew\";\n    CalendarType[CalendarType[\"GregorianMEFrench\"] = 9] = \"GregorianMEFrench\";\n    CalendarType[CalendarType[\"GregorianArabic\"] = 10] = \"GregorianArabic\";\n    CalendarType[CalendarType[\"GregorianXLITEnglish\"] = 11] = \"GregorianXLITEnglish\";\n    CalendarType[CalendarType[\"GregorianXLITFrench\"] = 12] = \"GregorianXLITFrench\";\n    CalendarType[CalendarType[\"KoreaJapanLunar\"] = 14] = \"KoreaJapanLunar\";\n    CalendarType[CalendarType[\"ChineseLunar\"] = 15] = \"ChineseLunar\";\n    CalendarType[CalendarType[\"SakaEra\"] = 16] = \"SakaEra\";\n    CalendarType[CalendarType[\"UmAlQura\"] = 23] = \"UmAlQura\";\n})(CalendarType = exports.CalendarType || (exports.CalendarType = {}));\nvar UrlFieldFormatType;\n(function (UrlFieldFormatType) {\n    UrlFieldFormatType[UrlFieldFormatType[\"Hyperlink\"] = 0] = \"Hyperlink\";\n    UrlFieldFormatType[UrlFieldFormatType[\"Image\"] = 1] = \"Image\";\n})(UrlFieldFormatType = exports.UrlFieldFormatType || (exports.UrlFieldFormatType = {}));\nvar PermissionKind;\n(function (PermissionKind) {\n    /**\n     * Has no permissions on the Site. Not available through the user interface.\n     */\n    PermissionKind[PermissionKind[\"EmptyMask\"] = 0] = \"EmptyMask\";\n    /**\n     * View items in lists, documents in document libraries, and Web discussion comments.\n     */\n    PermissionKind[PermissionKind[\"ViewListItems\"] = 1] = \"ViewListItems\";\n    /**\n     * Add items to lists, documents to document libraries, and Web discussion comments.\n     */\n    PermissionKind[PermissionKind[\"AddListItems\"] = 2] = \"AddListItems\";\n    /**\n     * Edit items in lists, edit documents in document libraries, edit Web discussion comments\n     * in documents, and customize Web Part Pages in document libraries.\n     */\n    PermissionKind[PermissionKind[\"EditListItems\"] = 3] = \"EditListItems\";\n    /**\n     * Delete items from a list, documents from a document library, and Web discussion\n     * comments in documents.\n     */\n    PermissionKind[PermissionKind[\"DeleteListItems\"] = 4] = \"DeleteListItems\";\n    /**\n     * Approve a minor version of a list item or document.\n     */\n    PermissionKind[PermissionKind[\"ApproveItems\"] = 5] = \"ApproveItems\";\n    /**\n     * View the source of documents with server-side file handlers.\n     */\n    PermissionKind[PermissionKind[\"OpenItems\"] = 6] = \"OpenItems\";\n    /**\n     * View past versions of a list item or document.\n     */\n    PermissionKind[PermissionKind[\"ViewVersions\"] = 7] = \"ViewVersions\";\n    /**\n     * Delete past versions of a list item or document.\n     */\n    PermissionKind[PermissionKind[\"DeleteVersions\"] = 8] = \"DeleteVersions\";\n    /**\n     * Discard or check in a document which is checked out to another user.\n     */\n    PermissionKind[PermissionKind[\"CancelCheckout\"] = 9] = \"CancelCheckout\";\n    /**\n     * Create, change, and delete personal views of lists.\n     */\n    PermissionKind[PermissionKind[\"ManagePersonalViews\"] = 10] = \"ManagePersonalViews\";\n    /**\n     * Create and delete lists, add or remove columns in a list, and add or remove public views of a list.\n     */\n    PermissionKind[PermissionKind[\"ManageLists\"] = 12] = \"ManageLists\";\n    /**\n     * View forms, views, and application pages, and enumerate lists.\n     */\n    PermissionKind[PermissionKind[\"ViewFormPages\"] = 13] = \"ViewFormPages\";\n    /**\n     * Make content of a list or document library retrieveable for anonymous users through SharePoint search.\n     * The list permissions in the site do not change.\n     */\n    PermissionKind[PermissionKind[\"AnonymousSearchAccessList\"] = 14] = \"AnonymousSearchAccessList\";\n    /**\n     * Allow users to open a Site, list, or folder to access items inside that container.\n     */\n    PermissionKind[PermissionKind[\"Open\"] = 17] = \"Open\";\n    /**\n     * View pages in a Site.\n     */\n    PermissionKind[PermissionKind[\"ViewPages\"] = 18] = \"ViewPages\";\n    /**\n     * Add, change, or delete HTML pages or Web Part Pages, and edit the Site using\n     * a Windows SharePoint Services compatible editor.\n     */\n    PermissionKind[PermissionKind[\"AddAndCustomizePages\"] = 19] = \"AddAndCustomizePages\";\n    /**\n     * Apply a theme or borders to the entire Site.\n     */\n    PermissionKind[PermissionKind[\"ApplyThemeAndBorder\"] = 20] = \"ApplyThemeAndBorder\";\n    /**\n     * Apply a style sheet (.css file) to the Site.\n     */\n    PermissionKind[PermissionKind[\"ApplyStyleSheets\"] = 21] = \"ApplyStyleSheets\";\n    /**\n     * View reports on Site usage.\n     */\n    PermissionKind[PermissionKind[\"ViewUsageData\"] = 22] = \"ViewUsageData\";\n    /**\n     * Create a Site using Self-Service Site Creation.\n     */\n    PermissionKind[PermissionKind[\"CreateSSCSite\"] = 23] = \"CreateSSCSite\";\n    /**\n     * Create subsites such as team sites, Meeting Workspace sites, and Document Workspace sites.\n     */\n    PermissionKind[PermissionKind[\"ManageSubwebs\"] = 24] = \"ManageSubwebs\";\n    /**\n     * Create a group of users that can be used anywhere within the site collection.\n     */\n    PermissionKind[PermissionKind[\"CreateGroups\"] = 25] = \"CreateGroups\";\n    /**\n     * Create and change permission levels on the Site and assign permissions to users\n     * and groups.\n     */\n    PermissionKind[PermissionKind[\"ManagePermissions\"] = 26] = \"ManagePermissions\";\n    /**\n     * Enumerate files and folders in a Site using Microsoft Office SharePoint Designer\n     * and WebDAV interfaces.\n     */\n    PermissionKind[PermissionKind[\"BrowseDirectories\"] = 27] = \"BrowseDirectories\";\n    /**\n     * View information about users of the Site.\n     */\n    PermissionKind[PermissionKind[\"BrowseUserInfo\"] = 28] = \"BrowseUserInfo\";\n    /**\n     * Add or remove personal Web Parts on a Web Part Page.\n     */\n    PermissionKind[PermissionKind[\"AddDelPrivateWebParts\"] = 29] = \"AddDelPrivateWebParts\";\n    /**\n     * Update Web Parts to display personalized information.\n     */\n    PermissionKind[PermissionKind[\"UpdatePersonalWebParts\"] = 30] = \"UpdatePersonalWebParts\";\n    /**\n     * Grant the ability to perform all administration tasks for the Site as well as\n     * manage content, activate, deactivate, or edit properties of Site scoped Features\n     * through the object model or through the user interface (UI). When granted on the\n     * root Site of a Site Collection, activate, deactivate, or edit properties of\n     * site collection scoped Features through the object model. To browse to the Site\n     * Collection Features page and activate or deactivate Site Collection scoped Features\n     * through the UI, you must be a Site Collection administrator.\n     */\n    PermissionKind[PermissionKind[\"ManageWeb\"] = 31] = \"ManageWeb\";\n    /**\n     * Content of lists and document libraries in the Web site will be retrieveable for anonymous users through\n     * SharePoint search if the list or document library has AnonymousSearchAccessList set.\n     */\n    PermissionKind[PermissionKind[\"AnonymousSearchAccessWebLists\"] = 32] = \"AnonymousSearchAccessWebLists\";\n    /**\n     * Use features that launch client applications. Otherwise, users must work on documents\n     * locally and upload changes.\n     */\n    PermissionKind[PermissionKind[\"UseClientIntegration\"] = 37] = \"UseClientIntegration\";\n    /**\n     * Use SOAP, WebDAV, or Microsoft Office SharePoint Designer interfaces to access the Site.\n     */\n    PermissionKind[PermissionKind[\"UseRemoteAPIs\"] = 38] = \"UseRemoteAPIs\";\n    /**\n     * Manage alerts for all users of the Site.\n     */\n    PermissionKind[PermissionKind[\"ManageAlerts\"] = 39] = \"ManageAlerts\";\n    /**\n     * Create e-mail alerts.\n     */\n    PermissionKind[PermissionKind[\"CreateAlerts\"] = 40] = \"CreateAlerts\";\n    /**\n     * Allows a user to change his or her user information, such as adding a picture.\n     */\n    PermissionKind[PermissionKind[\"EditMyUserInfo\"] = 41] = \"EditMyUserInfo\";\n    /**\n     * Enumerate permissions on Site, list, folder, document, or list item.\n     */\n    PermissionKind[PermissionKind[\"EnumeratePermissions\"] = 63] = \"EnumeratePermissions\";\n    /**\n     * Has all permissions on the Site. Not available through the user interface.\n     */\n    PermissionKind[PermissionKind[\"FullMask\"] = 65] = \"FullMask\";\n})(PermissionKind = exports.PermissionKind || (exports.PermissionKind = {}));\nvar PrincipalType;\n(function (PrincipalType) {\n    PrincipalType[PrincipalType[\"None\"] = 0] = \"None\";\n    PrincipalType[PrincipalType[\"User\"] = 1] = \"User\";\n    PrincipalType[PrincipalType[\"DistributionList\"] = 2] = \"DistributionList\";\n    PrincipalType[PrincipalType[\"SecurityGroup\"] = 4] = \"SecurityGroup\";\n    PrincipalType[PrincipalType[\"SharePointGroup\"] = 8] = \"SharePointGroup\";\n    PrincipalType[PrincipalType[\"All\"] = 15] = \"All\";\n})(PrincipalType = exports.PrincipalType || (exports.PrincipalType = {}));\nvar PrincipalSource;\n(function (PrincipalSource) {\n    PrincipalSource[PrincipalSource[\"None\"] = 0] = \"None\";\n    PrincipalSource[PrincipalSource[\"UserInfoList\"] = 1] = \"UserInfoList\";\n    PrincipalSource[PrincipalSource[\"Windows\"] = 2] = \"Windows\";\n    PrincipalSource[PrincipalSource[\"MembershipProvider\"] = 4] = \"MembershipProvider\";\n    PrincipalSource[PrincipalSource[\"RoleProvider\"] = 8] = \"RoleProvider\";\n    PrincipalSource[PrincipalSource[\"All\"] = 15] = \"All\";\n})(PrincipalSource = exports.PrincipalSource || (exports.PrincipalSource = {}));\nvar RoleType;\n(function (RoleType) {\n    RoleType[RoleType[\"None\"] = 0] = \"None\";\n    RoleType[RoleType[\"Guest\"] = 1] = \"Guest\";\n    RoleType[RoleType[\"Reader\"] = 2] = \"Reader\";\n    RoleType[RoleType[\"Contributor\"] = 3] = \"Contributor\";\n    RoleType[RoleType[\"WebDesigner\"] = 4] = \"WebDesigner\";\n    RoleType[RoleType[\"Administrator\"] = 5] = \"Administrator\";\n})(RoleType = exports.RoleType || (exports.RoleType = {}));\nvar PageType;\n(function (PageType) {\n    PageType[PageType[\"Invalid\"] = -1] = \"Invalid\";\n    PageType[PageType[\"DefaultView\"] = 0] = \"DefaultView\";\n    PageType[PageType[\"NormalView\"] = 1] = \"NormalView\";\n    PageType[PageType[\"DialogView\"] = 2] = \"DialogView\";\n    PageType[PageType[\"View\"] = 3] = \"View\";\n    PageType[PageType[\"DisplayForm\"] = 4] = \"DisplayForm\";\n    PageType[PageType[\"DisplayFormDialog\"] = 5] = \"DisplayFormDialog\";\n    PageType[PageType[\"EditForm\"] = 6] = \"EditForm\";\n    PageType[PageType[\"EditFormDialog\"] = 7] = \"EditFormDialog\";\n    PageType[PageType[\"NewForm\"] = 8] = \"NewForm\";\n    PageType[PageType[\"NewFormDialog\"] = 9] = \"NewFormDialog\";\n    PageType[PageType[\"SolutionForm\"] = 10] = \"SolutionForm\";\n    PageType[PageType[\"PAGE_MAXITEMS\"] = 11] = \"PAGE_MAXITEMS\";\n})(PageType = exports.PageType || (exports.PageType = {}));\nvar SharingLinkKind;\n(function (SharingLinkKind) {\n    /**\n     * Uninitialized link\n     */\n    SharingLinkKind[SharingLinkKind[\"Uninitialized\"] = 0] = \"Uninitialized\";\n    /**\n     * Direct link to the object being shared\n     */\n    SharingLinkKind[SharingLinkKind[\"Direct\"] = 1] = \"Direct\";\n    /**\n     * Organization-shareable link to the object being shared with view permissions\n     */\n    SharingLinkKind[SharingLinkKind[\"OrganizationView\"] = 2] = \"OrganizationView\";\n    /**\n     * Organization-shareable link to the object being shared with edit permissions\n     */\n    SharingLinkKind[SharingLinkKind[\"OrganizationEdit\"] = 3] = \"OrganizationEdit\";\n    /**\n     * View only anonymous link\n     */\n    SharingLinkKind[SharingLinkKind[\"AnonymousView\"] = 4] = \"AnonymousView\";\n    /**\n     * Read/Write anonymous link\n     */\n    SharingLinkKind[SharingLinkKind[\"AnonymousEdit\"] = 5] = \"AnonymousEdit\";\n    /**\n     * Flexible sharing Link where properties can change without affecting link URL\n     */\n    SharingLinkKind[SharingLinkKind[\"Flexible\"] = 6] = \"Flexible\";\n})(SharingLinkKind = exports.SharingLinkKind || (exports.SharingLinkKind = {}));\n/**\n * Indicates the role of the sharing link\n */\nvar SharingRole;\n(function (SharingRole) {\n    SharingRole[SharingRole[\"None\"] = 0] = \"None\";\n    SharingRole[SharingRole[\"View\"] = 1] = \"View\";\n    SharingRole[SharingRole[\"Edit\"] = 2] = \"Edit\";\n    SharingRole[SharingRole[\"Owner\"] = 3] = \"Owner\";\n})(SharingRole = exports.SharingRole || (exports.SharingRole = {}));\nvar SharingOperationStatusCode;\n(function (SharingOperationStatusCode) {\n    /**\n     * The share operation completed without errors.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"CompletedSuccessfully\"] = 0] = \"CompletedSuccessfully\";\n    /**\n     * The share operation completed and generated requests for access.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"AccessRequestsQueued\"] = 1] = \"AccessRequestsQueued\";\n    /**\n     * The share operation failed as there were no resolved users.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"NoResolvedUsers\"] = -1] = \"NoResolvedUsers\";\n    /**\n     * The share operation failed due to insufficient permissions.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"AccessDenied\"] = -2] = \"AccessDenied\";\n    /**\n     * The share operation failed when attempting a cross site share, which is not supported.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"CrossSiteRequestNotSupported\"] = -3] = \"CrossSiteRequestNotSupported\";\n    /**\n     * The sharing operation failed due to an unknown error.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"UnknowError\"] = -4] = \"UnknowError\";\n    /**\n     * The text you typed is too long. Please shorten it.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"EmailBodyTooLong\"] = -5] = \"EmailBodyTooLong\";\n    /**\n     * The maximum number of unique scopes in the list has been exceeded.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"ListUniqueScopesExceeded\"] = -6] = \"ListUniqueScopesExceeded\";\n    /**\n     * The share operation failed because a sharing capability is disabled in the site.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"CapabilityDisabled\"] = -7] = \"CapabilityDisabled\";\n    /**\n     * The specified object for the share operation is not supported.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"ObjectNotSupported\"] = -8] = \"ObjectNotSupported\";\n    /**\n     * A SharePoint group cannot contain another SharePoint group.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"NestedGroupsNotSupported\"] = -9] = \"NestedGroupsNotSupported\";\n})(SharingOperationStatusCode = exports.SharingOperationStatusCode || (exports.SharingOperationStatusCode = {}));\nvar SPSharedObjectType;\n(function (SPSharedObjectType) {\n    SPSharedObjectType[SPSharedObjectType[\"Unknown\"] = 0] = \"Unknown\";\n    SPSharedObjectType[SPSharedObjectType[\"File\"] = 1] = \"File\";\n    SPSharedObjectType[SPSharedObjectType[\"Folder\"] = 2] = \"Folder\";\n    SPSharedObjectType[SPSharedObjectType[\"Item\"] = 3] = \"Item\";\n    SPSharedObjectType[SPSharedObjectType[\"List\"] = 4] = \"List\";\n    SPSharedObjectType[SPSharedObjectType[\"Web\"] = 5] = \"Web\";\n    SPSharedObjectType[SPSharedObjectType[\"Max\"] = 6] = \"Max\";\n})(SPSharedObjectType = exports.SPSharedObjectType || (exports.SPSharedObjectType = {}));\nvar SharingDomainRestrictionMode;\n(function (SharingDomainRestrictionMode) {\n    SharingDomainRestrictionMode[SharingDomainRestrictionMode[\"None\"] = 0] = \"None\";\n    SharingDomainRestrictionMode[SharingDomainRestrictionMode[\"AllowList\"] = 1] = \"AllowList\";\n    SharingDomainRestrictionMode[SharingDomainRestrictionMode[\"BlockList\"] = 2] = \"BlockList\";\n})(SharingDomainRestrictionMode = exports.SharingDomainRestrictionMode || (exports.SharingDomainRestrictionMode = {}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/types.js\n// module id = 13\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = require(\"./queryable\");\nvar queryableshareable_1 = require(\"./queryableshareable\");\nvar files_1 = require(\"./files\");\nvar util_1 = require(\"../utils/util\");\nvar odata_1 = require(\"./odata\");\nvar items_1 = require(\"./items\");\n/**\n * Describes a collection of Folder objects\n *\n */\nvar Folders = (function (_super) {\n    __extends(Folders, _super);\n    /**\n     * Creates a new instance of the Folders class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    function Folders(baseUrl, path) {\n        if (path === void 0) { path = \"folders\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a folder by folder name\n     *\n     */\n    Folders.prototype.getByName = function (name) {\n        var f = new Folder(this);\n        f.concat(\"('\" + name + \"')\");\n        return f;\n    };\n    /**\n     * Adds a new folder to the current folder (relative) or any folder (absolute)\n     *\n     * @param url The relative or absolute url where the new folder will be created. Urls starting with a forward slash are absolute.\n     * @returns The new Folder and the raw response.\n     */\n    Folders.prototype.add = function (url) {\n        var _this = this;\n        return this.clone(Folders, \"add('\" + url + \"')\", true).postCore().then(function (response) {\n            return {\n                data: response,\n                folder: _this.getByName(url),\n            };\n        });\n    };\n    return Folders;\n}(queryable_1.QueryableCollection));\nexports.Folders = Folders;\n/**\n * Describes a single Folder instance\n *\n */\nvar Folder = (function (_super) {\n    __extends(Folder, _super);\n    function Folder() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(Folder.prototype, \"contentTypeOrder\", {\n        /**\n         * Specifies the sequence in which content types are displayed.\n         *\n         */\n        get: function () {\n            return new queryable_1.QueryableCollection(this, \"contentTypeOrder\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Folder.prototype, \"files\", {\n        /**\n         * Gets this folder's files\n         *\n         */\n        get: function () {\n            return new files_1.Files(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Folder.prototype, \"folders\", {\n        /**\n         * Gets this folder's sub folders\n         *\n         */\n        get: function () {\n            return new Folders(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Folder.prototype, \"listItemAllFields\", {\n        /**\n         * Gets this folder's list item field values\n         *\n         */\n        get: function () {\n            return new queryable_1.QueryableCollection(this, \"listItemAllFields\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Folder.prototype, \"parentFolder\", {\n        /**\n         * Gets the parent folder, if available\n         *\n         */\n        get: function () {\n            return new Folder(this, \"parentFolder\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Folder.prototype, \"properties\", {\n        /**\n         * Gets this folder's properties\n         *\n         */\n        get: function () {\n            return new queryable_1.QueryableInstance(this, \"properties\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Folder.prototype, \"serverRelativeUrl\", {\n        /**\n         * Gets this folder's server relative url\n         *\n         */\n        get: function () {\n            return new queryable_1.Queryable(this, \"serverRelativeUrl\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Folder.prototype, \"uniqueContentTypeOrder\", {\n        /**\n         * Gets a value that specifies the content type order.\n         *\n         */\n        get: function () {\n            return new queryable_1.QueryableCollection(this, \"uniqueContentTypeOrder\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Folder.prototype.update = function (properties) {\n        var _this = this;\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"__metadata\": { \"type\": \"SP.Folder\" },\n        }, properties));\n        return this.postCore({\n            body: postBody,\n            headers: {\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then(function (data) {\n            return {\n                data: data,\n                folder: _this,\n            };\n        });\n    };\n    /**\n    * Delete this folder\n    *\n    * @param eTag Value used in the IF-Match header, by default \"*\"\n    */\n    Folder.prototype.delete = function (eTag) {\n        if (eTag === void 0) { eTag = \"*\"; }\n        return this.clone(Folder, null, true).postCore({\n            headers: {\n                \"IF-Match\": eTag,\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    /**\n     * Moves the folder to the Recycle Bin and returns the identifier of the new Recycle Bin item.\n     */\n    Folder.prototype.recycle = function () {\n        return this.clone(Folder, \"recycle\", true).postCore();\n    };\n    /**\n     * Gets the associated list item for this folder, loading the default properties\n     */\n    Folder.prototype.getItem = function () {\n        var selects = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            selects[_i] = arguments[_i];\n        }\n        var q = this.listItemAllFields;\n        return q.select.apply(q, selects).get().then(function (d) {\n            return util_1.Util.extend(new items_1.Item(odata_1.getEntityUrl(d)), d);\n        });\n    };\n    return Folder;\n}(queryableshareable_1.QueryableShareableFolder));\nexports.Folder = Folder;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/folders.js\n// module id = 14\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"./util\");\nvar collections_1 = require(\"../collections/collections\");\nvar pnplibconfig_1 = require(\"../configuration/pnplibconfig\");\nvar logging_1 = require(\"./logging\");\n/**\n * A wrapper class to provide a consistent interface to browser based storage\n *\n */\nvar PnPClientStorageWrapper = (function () {\n    /**\n     * Creates a new instance of the PnPClientStorageWrapper class\n     *\n     * @constructor\n     */\n    function PnPClientStorageWrapper(store, defaultTimeoutMinutes) {\n        this.store = store;\n        this.defaultTimeoutMinutes = defaultTimeoutMinutes;\n        this.defaultTimeoutMinutes = (defaultTimeoutMinutes === void 0) ? -1 : defaultTimeoutMinutes;\n        this.enabled = this.test();\n        // if the cache timeout is enabled call the handler\n        // this will clear any expired items and set the timeout function\n        if (pnplibconfig_1.RuntimeConfig.enableCacheExpiration) {\n            logging_1.Logger.write(\"Enabling cache expiration.\", logging_1.LogLevel.Info);\n            this.cacheExpirationHandler();\n        }\n    }\n    /**\n     * Get a value from storage, or null if that value does not exist\n     *\n     * @param key The key whose value we want to retrieve\n     */\n    PnPClientStorageWrapper.prototype.get = function (key) {\n        if (!this.enabled) {\n            return null;\n        }\n        var o = this.store.getItem(key);\n        if (o == null) {\n            return null;\n        }\n        var persistable = JSON.parse(o);\n        if (new Date(persistable.expiration) <= new Date()) {\n            logging_1.Logger.write(\"Removing item with key '\" + key + \"' from cache due to expiration.\", logging_1.LogLevel.Info);\n            this.delete(key);\n            return null;\n        }\n        else {\n            return persistable.value;\n        }\n    };\n    /**\n     * Adds a value to the underlying storage\n     *\n     * @param key The key to use when storing the provided value\n     * @param o The value to store\n     * @param expire Optional, if provided the expiration of the item, otherwise the default is used\n     */\n    PnPClientStorageWrapper.prototype.put = function (key, o, expire) {\n        if (this.enabled) {\n            this.store.setItem(key, this.createPersistable(o, expire));\n        }\n    };\n    /**\n     * Deletes a value from the underlying storage\n     *\n     * @param key The key of the pair we want to remove from storage\n     */\n    PnPClientStorageWrapper.prototype.delete = function (key) {\n        if (this.enabled) {\n            this.store.removeItem(key);\n        }\n    };\n    /**\n     * Gets an item from the underlying storage, or adds it if it does not exist using the supplied getter function\n     *\n     * @param key The key to use when storing the provided value\n     * @param getter A function which will upon execution provide the desired value\n     * @param expire Optional, if provided the expiration of the item, otherwise the default is used\n     */\n    PnPClientStorageWrapper.prototype.getOrPut = function (key, getter, expire) {\n        var _this = this;\n        if (!this.enabled) {\n            return getter();\n        }\n        return new Promise(function (resolve) {\n            var o = _this.get(key);\n            if (o == null) {\n                getter().then(function (d) {\n                    _this.put(key, d, expire);\n                    resolve(d);\n                });\n            }\n            else {\n                resolve(o);\n            }\n        });\n    };\n    /**\n     * Deletes any expired items placed in the store by the pnp library, leaves other items untouched\n     */\n    PnPClientStorageWrapper.prototype.deleteExpired = function () {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            if (!_this.enabled) {\n                resolve();\n            }\n            try {\n                for (var i = 0; i < _this.store.length; i++) {\n                    var key = _this.store.key(i);\n                    // test the stored item to see if we stored it\n                    if (/[\"|']?pnp[\"|']? ?: ?1/i.test(_this.store.getItem(key))) {\n                        // get those items as get will delete from cache if they are expired\n                        _this.get(key);\n                    }\n                }\n                resolve();\n            }\n            catch (e) {\n                reject(e);\n            }\n        });\n    };\n    /**\n     * Used to determine if the wrapped storage is available currently\n     */\n    PnPClientStorageWrapper.prototype.test = function () {\n        var str = \"test\";\n        try {\n            this.store.setItem(str, str);\n            this.store.removeItem(str);\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    };\n    /**\n     * Creates the persistable to store\n     */\n    PnPClientStorageWrapper.prototype.createPersistable = function (o, expire) {\n        if (typeof expire === \"undefined\") {\n            // ensure we are by default inline with the global library setting\n            var defaultTimeout = pnplibconfig_1.RuntimeConfig.defaultCachingTimeoutSeconds;\n            if (this.defaultTimeoutMinutes > 0) {\n                defaultTimeout = this.defaultTimeoutMinutes * 60;\n            }\n            expire = util_1.Util.dateAdd(new Date(), \"second\", defaultTimeout);\n        }\n        return JSON.stringify({ pnp: 1, expiration: expire, value: o });\n    };\n    /**\n     * Deletes expired items added by this library in this.store and sets a timeout to call itself\n     */\n    PnPClientStorageWrapper.prototype.cacheExpirationHandler = function () {\n        var _this = this;\n        logging_1.Logger.write(\"Called cache expiration handler.\", logging_1.LogLevel.Verbose);\n        this.deleteExpired().then(function (_) {\n            // call ourself in the future\n            setTimeout(util_1.Util.getCtxCallback(_this, _this.cacheExpirationHandler), pnplibconfig_1.RuntimeConfig.cacheExpirationIntervalMilliseconds);\n        }).catch(function (e) {\n            // we've got some error - so just stop the loop and report the error\n            logging_1.Logger.log({\n                data: e,\n                level: logging_1.LogLevel.Error,\n                message: \"Error deleting expired cache entries, see data for details. Timeout not reset.\",\n            });\n        });\n    };\n    return PnPClientStorageWrapper;\n}());\nexports.PnPClientStorageWrapper = PnPClientStorageWrapper;\n/**\n * A thin implementation of in-memory storage for use in nodejs\n */\nvar MemoryStorage = (function () {\n    function MemoryStorage(_store) {\n        if (_store === void 0) { _store = new collections_1.Dictionary(); }\n        this._store = _store;\n    }\n    Object.defineProperty(MemoryStorage.prototype, \"length\", {\n        get: function () {\n            return this._store.count();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MemoryStorage.prototype.clear = function () {\n        this._store.clear();\n    };\n    MemoryStorage.prototype.getItem = function (key) {\n        return this._store.get(key);\n    };\n    MemoryStorage.prototype.key = function (index) {\n        return this._store.getKeys()[index];\n    };\n    MemoryStorage.prototype.removeItem = function (key) {\n        this._store.remove(key);\n    };\n    MemoryStorage.prototype.setItem = function (key, data) {\n        this._store.add(key, data);\n    };\n    return MemoryStorage;\n}());\n/**\n * A class that will establish wrappers for both local and session storage\n */\nvar PnPClientStorage = (function () {\n    /**\n     * Creates a new instance of the PnPClientStorage class\n     *\n     * @constructor\n     */\n    function PnPClientStorage(_local, _session) {\n        if (_local === void 0) { _local = null; }\n        if (_session === void 0) { _session = null; }\n        this._local = _local;\n        this._session = _session;\n    }\n    Object.defineProperty(PnPClientStorage.prototype, \"local\", {\n        /**\n         * Provides access to the local storage of the browser\n         */\n        get: function () {\n            if (this._local === null) {\n                this._local = typeof localStorage !== \"undefined\" ? new PnPClientStorageWrapper(localStorage) : new PnPClientStorageWrapper(new MemoryStorage());\n            }\n            return this._local;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PnPClientStorage.prototype, \"session\", {\n        /**\n         * Provides access to the session storage of the browser\n         */\n        get: function () {\n            if (this._session === null) {\n                this._session = typeof sessionStorage !== \"undefined\" ? new PnPClientStorageWrapper(sessionStorage) : new PnPClientStorageWrapper(new MemoryStorage());\n            }\n            return this._session;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PnPClientStorage;\n}());\nexports.PnPClientStorage = PnPClientStorage;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/utils/storage.js\n// module id = 15\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = require(\"./queryable\");\nvar sitegroups_1 = require(\"./sitegroups\");\nvar util_1 = require(\"../utils/util\");\n/**\n * Describes a set of role assignments for the current scope\n *\n */\nvar RoleAssignments = (function (_super) {\n    __extends(RoleAssignments, _super);\n    /**\n     * Creates a new instance of the RoleAssignments class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this role assignments collection\n     */\n    function RoleAssignments(baseUrl, path) {\n        if (path === void 0) { path = \"roleassignments\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Adds a new role assignment with the specified principal and role definitions to the collection\n     *\n     * @param principalId The id of the user or group to assign permissions to\n     * @param roleDefId The id of the role definition that defines the permissions to assign\n     *\n     */\n    RoleAssignments.prototype.add = function (principalId, roleDefId) {\n        return this.clone(RoleAssignments, \"addroleassignment(principalid=\" + principalId + \", roledefid=\" + roleDefId + \")\", true).postCore();\n    };\n    /**\n     * Removes the role assignment with the specified principal and role definition from the collection\n     *\n     * @param principalId The id of the user or group in the role assignment\n     * @param roleDefId The id of the role definition in the role assignment\n     *\n     */\n    RoleAssignments.prototype.remove = function (principalId, roleDefId) {\n        return this.clone(RoleAssignments, \"removeroleassignment(principalid=\" + principalId + \", roledefid=\" + roleDefId + \")\", true).postCore();\n    };\n    /**\n     * Gets the role assignment associated with the specified principal id from the collection.\n     *\n     * @param id The id of the role assignment\n     */\n    RoleAssignments.prototype.getById = function (id) {\n        var ra = new RoleAssignment(this);\n        ra.concat(\"(\" + id + \")\");\n        return ra;\n    };\n    return RoleAssignments;\n}(queryable_1.QueryableCollection));\nexports.RoleAssignments = RoleAssignments;\n/**\n * Describes a role assignment\n *\n */\nvar RoleAssignment = (function (_super) {\n    __extends(RoleAssignment, _super);\n    function RoleAssignment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(RoleAssignment.prototype, \"groups\", {\n        /**\n         * Gets the groups that directly belong to the access control list (ACL) for this securable object\n         *\n         */\n        get: function () {\n            return new sitegroups_1.SiteGroups(this, \"groups\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RoleAssignment.prototype, \"bindings\", {\n        /**\n         * Gets the role definition bindings for this role assignment\n         *\n         */\n        get: function () {\n            return new RoleDefinitionBindings(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Deletes this role assignment\n     *\n     */\n    RoleAssignment.prototype.delete = function () {\n        return this.postCore({\n            headers: {\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    return RoleAssignment;\n}(queryable_1.QueryableInstance));\nexports.RoleAssignment = RoleAssignment;\n/**\n * Describes a collection of role definitions\n *\n */\nvar RoleDefinitions = (function (_super) {\n    __extends(RoleDefinitions, _super);\n    /**\n     * Creates a new instance of the RoleDefinitions class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this role definitions collection\n     *\n     */\n    function RoleDefinitions(baseUrl, path) {\n        if (path === void 0) { path = \"roledefinitions\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets the role definition with the specified id from the collection\n     *\n     * @param id The id of the role definition\n     *\n     */\n    RoleDefinitions.prototype.getById = function (id) {\n        return new RoleDefinition(this, \"getById(\" + id + \")\");\n    };\n    /**\n     * Gets the role definition with the specified name\n     *\n     * @param name The name of the role definition\n     *\n     */\n    RoleDefinitions.prototype.getByName = function (name) {\n        return new RoleDefinition(this, \"getbyname('\" + name + \"')\");\n    };\n    /**\n     * Gets the role definition with the specified role type\n     *\n     * @param roleTypeKind The roletypekind of the role definition (None=0, Guest=1, Reader=2, Contributor=3, WebDesigner=4, Administrator=5, Editor=6, System=7)\n     *\n     */\n    RoleDefinitions.prototype.getByType = function (roleTypeKind) {\n        return new RoleDefinition(this, \"getbytype(\" + roleTypeKind + \")\");\n    };\n    /**\n     * Creates a role definition\n     *\n     * @param name The new role definition's name\n     * @param description The new role definition's description\n     * @param order The order in which the role definition appears\n     * @param basePermissions The permissions mask for this role definition\n     *\n     */\n    RoleDefinitions.prototype.add = function (name, description, order, basePermissions) {\n        var _this = this;\n        var postBody = JSON.stringify({\n            BasePermissions: util_1.Util.extend({ __metadata: { type: \"SP.BasePermissions\" } }, basePermissions),\n            Description: description,\n            Name: name,\n            Order: order,\n            __metadata: { \"type\": \"SP.RoleDefinition\" },\n        });\n        return this.postCore({ body: postBody }).then(function (data) {\n            return {\n                data: data,\n                definition: _this.getById(data.Id),\n            };\n        });\n    };\n    return RoleDefinitions;\n}(queryable_1.QueryableCollection));\nexports.RoleDefinitions = RoleDefinitions;\n/**\n * Describes a role definition\n *\n */\nvar RoleDefinition = (function (_super) {\n    __extends(RoleDefinition, _super);\n    function RoleDefinition() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Updates this role definition with the supplied properties\n     *\n     * @param properties A plain object hash of values to update for the role definition\n     */\n    /* tslint:disable no-string-literal */\n    RoleDefinition.prototype.update = function (properties) {\n        var _this = this;\n        if (typeof properties.hasOwnProperty(\"BasePermissions\") !== \"undefined\") {\n            properties[\"BasePermissions\"] = util_1.Util.extend({ __metadata: { type: \"SP.BasePermissions\" } }, properties[\"BasePermissions\"]);\n        }\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"__metadata\": { \"type\": \"SP.RoleDefinition\" },\n        }, properties));\n        return this.postCore({\n            body: postBody,\n            headers: {\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then(function (data) {\n            var retDef = _this;\n            if (properties.hasOwnProperty(\"Name\")) {\n                var parent_1 = _this.getParent(RoleDefinitions, _this.parentUrl, \"\");\n                retDef = parent_1.getByName(properties[\"Name\"]);\n            }\n            return {\n                data: data,\n                definition: retDef,\n            };\n        });\n    };\n    /* tslint:enable */\n    /**\n     * Deletes this role definition\n     *\n     */\n    RoleDefinition.prototype.delete = function () {\n        return this.postCore({\n            headers: {\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    return RoleDefinition;\n}(queryable_1.QueryableInstance));\nexports.RoleDefinition = RoleDefinition;\n/**\n * Describes the role definitons bound to a role assignment object\n *\n */\nvar RoleDefinitionBindings = (function (_super) {\n    __extends(RoleDefinitionBindings, _super);\n    /**\n     * Creates a new instance of the RoleDefinitionBindings class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this role definition bindings collection\n     */\n    function RoleDefinitionBindings(baseUrl, path) {\n        if (path === void 0) { path = \"roledefinitionbindings\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    return RoleDefinitionBindings;\n}(queryable_1.QueryableCollection));\nexports.RoleDefinitionBindings = RoleDefinitionBindings;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/roles.js\n// module id = 16\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = require(\"./queryable\");\nvar siteusers_1 = require(\"./siteusers\");\nvar util_1 = require(\"../utils/util\");\n/**\n * Principal Type enum\n *\n */\nvar PrincipalType;\n(function (PrincipalType) {\n    PrincipalType[PrincipalType[\"None\"] = 0] = \"None\";\n    PrincipalType[PrincipalType[\"User\"] = 1] = \"User\";\n    PrincipalType[PrincipalType[\"DistributionList\"] = 2] = \"DistributionList\";\n    PrincipalType[PrincipalType[\"SecurityGroup\"] = 4] = \"SecurityGroup\";\n    PrincipalType[PrincipalType[\"SharePointGroup\"] = 8] = \"SharePointGroup\";\n    PrincipalType[PrincipalType[\"All\"] = 15] = \"All\";\n})(PrincipalType = exports.PrincipalType || (exports.PrincipalType = {}));\n/**\n * Describes a collection of site groups\n *\n */\nvar SiteGroups = (function (_super) {\n    __extends(SiteGroups, _super);\n    /**\n     * Creates a new instance of the SiteGroups class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this group collection\n     */\n    function SiteGroups(baseUrl, path) {\n        if (path === void 0) { path = \"sitegroups\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Adds a new group to the site collection\n     *\n     * @param props The group properties object of property names and values to be set for the group\n     */\n    SiteGroups.prototype.add = function (properties) {\n        var _this = this;\n        var postBody = JSON.stringify(util_1.Util.extend({ \"__metadata\": { \"type\": \"SP.Group\" } }, properties));\n        return this.postCore({ body: postBody }).then(function (data) {\n            return {\n                data: data,\n                group: _this.getById(data.Id),\n            };\n        });\n    };\n    /**\n     * Gets a group from the collection by name\n     *\n     * @param groupName The name of the group to retrieve\n     */\n    SiteGroups.prototype.getByName = function (groupName) {\n        return new SiteGroup(this, \"getByName('\" + groupName + \"')\");\n    };\n    /**\n     * Gets a group from the collection by id\n     *\n     * @param id The id of the group to retrieve\n     */\n    SiteGroups.prototype.getById = function (id) {\n        var sg = new SiteGroup(this);\n        sg.concat(\"(\" + id + \")\");\n        return sg;\n    };\n    /**\n     * Removes the group with the specified member id from the collection\n     *\n     * @param id The id of the group to remove\n     */\n    SiteGroups.prototype.removeById = function (id) {\n        return this.clone(SiteGroups, \"removeById('\" + id + \"')\", true).postCore();\n    };\n    /**\n     * Removes the cross-site group with the specified name from the collection\n     *\n     * @param loginName The name of the group to remove\n     */\n    SiteGroups.prototype.removeByLoginName = function (loginName) {\n        return this.clone(SiteGroups, \"removeByLoginName('\" + loginName + \"')\", true).postCore();\n    };\n    return SiteGroups;\n}(queryable_1.QueryableCollection));\nexports.SiteGroups = SiteGroups;\n/**\n * Describes a single group\n *\n */\nvar SiteGroup = (function (_super) {\n    __extends(SiteGroup, _super);\n    function SiteGroup() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(SiteGroup.prototype, \"users\", {\n        /**\n         * Gets the users for this group\n         *\n         */\n        get: function () {\n            return new siteusers_1.SiteUsers(this, \"users\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n    * Updates this group instance with the supplied properties\n    *\n    * @param properties A GroupWriteableProperties object of property names and values to update for the group\n    */\n    /* tslint:disable no-string-literal */\n    SiteGroup.prototype.update = function (properties) {\n        var _this = this;\n        var postBody = util_1.Util.extend({ \"__metadata\": { \"type\": \"SP.Group\" } }, properties);\n        return this.postCore({\n            body: JSON.stringify(postBody),\n            headers: {\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then(function (data) {\n            var retGroup = _this;\n            if (properties.hasOwnProperty(\"Title\")) {\n                retGroup = _this.getParent(SiteGroup, _this.parentUrl, \"getByName('\" + properties[\"Title\"] + \"')\");\n            }\n            return {\n                data: data,\n                group: retGroup,\n            };\n        });\n    };\n    return SiteGroup;\n}(queryable_1.QueryableInstance));\nexports.SiteGroup = SiteGroup;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/sitegroups.js\n// module id = 17\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"../utils/util\");\nvar queryable_1 = require(\"./queryable\");\n/**\n * Describes a collection of content types\n *\n */\nvar ContentTypes = (function (_super) {\n    __extends(ContentTypes, _super);\n    /**\n     * Creates a new instance of the ContentTypes class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this content types collection\n     */\n    function ContentTypes(baseUrl, path) {\n        if (path === void 0) { path = \"contenttypes\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a ContentType by content type id\n     */\n    ContentTypes.prototype.getById = function (id) {\n        var ct = new ContentType(this);\n        ct.concat(\"('\" + id + \"')\");\n        return ct;\n    };\n    /**\n     * Adds an existing contenttype to a content type collection\n     *\n     * @param contentTypeId in the following format, for example: 0x010102\n     */\n    ContentTypes.prototype.addAvailableContentType = function (contentTypeId) {\n        var _this = this;\n        var postBody = JSON.stringify({\n            \"contentTypeId\": contentTypeId,\n        });\n        return this.clone(ContentTypes, \"addAvailableContentType\", true).postAsCore({ body: postBody }).then(function (data) {\n            return {\n                contentType: _this.getById(data.id),\n                data: data,\n            };\n        });\n    };\n    /**\n     * Adds a new content type to the collection\n     *\n     * @param id The desired content type id for the new content type (also determines the parent content type)\n     * @param name The name of the content type\n     * @param description The description of the content type\n     * @param group The group in which to add the content type\n     * @param additionalSettings Any additional settings to provide when creating the content type\n     *\n     */\n    ContentTypes.prototype.add = function (id, name, description, group, additionalSettings) {\n        var _this = this;\n        if (description === void 0) { description = \"\"; }\n        if (group === void 0) { group = \"Custom Content Types\"; }\n        if (additionalSettings === void 0) { additionalSettings = {}; }\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"Description\": description,\n            \"Group\": group,\n            \"Id\": { \"StringValue\": id },\n            \"Name\": name,\n            \"__metadata\": { \"type\": \"SP.ContentType\" },\n        }, additionalSettings));\n        return this.postCore({ body: postBody }).then(function (data) {\n            return { contentType: _this.getById(data.id), data: data };\n        });\n    };\n    return ContentTypes;\n}(queryable_1.QueryableCollection));\nexports.ContentTypes = ContentTypes;\n/**\n * Describes a single ContentType instance\n *\n */\nvar ContentType = (function (_super) {\n    __extends(ContentType, _super);\n    function ContentType() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(ContentType.prototype, \"fieldLinks\", {\n        /**\n         * Gets the column (also known as field) references in the content type.\n        */\n        get: function () {\n            return new FieldLinks(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ContentType.prototype, \"fields\", {\n        /**\n         * Gets a value that specifies the collection of fields for the content type.\n         */\n        get: function () {\n            return new queryable_1.QueryableCollection(this, \"fields\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ContentType.prototype, \"parent\", {\n        /**\n         * Gets the parent content type of the content type.\n         */\n        get: function () {\n            return new ContentType(this, \"parent\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ContentType.prototype, \"workflowAssociations\", {\n        /**\n         * Gets a value that specifies the collection of workflow associations for the content type.\n         */\n        get: function () {\n            return new queryable_1.QueryableCollection(this, \"workflowAssociations\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Delete this content type\n     */\n    ContentType.prototype.delete = function () {\n        return this.postCore({\n            headers: {\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    return ContentType;\n}(queryable_1.QueryableInstance));\nexports.ContentType = ContentType;\n/**\n * Represents a collection of field link instances\n */\nvar FieldLinks = (function (_super) {\n    __extends(FieldLinks, _super);\n    /**\n     * Creates a new instance of the ContentType class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this content type instance\n     */\n    function FieldLinks(baseUrl, path) {\n        if (path === void 0) { path = \"fieldlinks\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a FieldLink by GUID id\n     *\n     * @param id The GUID id of the field link\n     */\n    FieldLinks.prototype.getById = function (id) {\n        var fl = new FieldLink(this);\n        fl.concat(\"(guid'\" + id + \"')\");\n        return fl;\n    };\n    return FieldLinks;\n}(queryable_1.QueryableCollection));\nexports.FieldLinks = FieldLinks;\n/**\n * Represents a field link instance\n */\nvar FieldLink = (function (_super) {\n    __extends(FieldLink, _super);\n    function FieldLink() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return FieldLink;\n}(queryable_1.QueryableInstance));\nexports.FieldLink = FieldLink;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/contenttypes.js\n// module id = 18\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = require(\"./queryable\");\nvar util_1 = require(\"../utils/util\");\n/**\n * Describes a collection of user custom actions\n *\n */\nvar UserCustomActions = (function (_super) {\n    __extends(UserCustomActions, _super);\n    /**\n     * Creates a new instance of the UserCustomActions class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this user custom actions collection\n     */\n    function UserCustomActions(baseUrl, path) {\n        if (path === void 0) { path = \"usercustomactions\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Returns the user custom action with the specified id\n     *\n     * @param id The GUID id of the user custom action to retrieve\n     */\n    UserCustomActions.prototype.getById = function (id) {\n        var uca = new UserCustomAction(this);\n        uca.concat(\"('\" + id + \"')\");\n        return uca;\n    };\n    /**\n     * Creates a user custom action\n     *\n     * @param properties The information object of property names and values which define the new user custom action\n     *\n     */\n    UserCustomActions.prototype.add = function (properties) {\n        var _this = this;\n        var postBody = JSON.stringify(util_1.Util.extend({ __metadata: { \"type\": \"SP.UserCustomAction\" } }, properties));\n        return this.postCore({ body: postBody }).then(function (data) {\n            return {\n                action: _this.getById(data.Id),\n                data: data,\n            };\n        });\n    };\n    /**\n     * Deletes all user custom actions in the collection\n     *\n     */\n    UserCustomActions.prototype.clear = function () {\n        return this.clone(UserCustomActions, \"clear\", true).postCore();\n    };\n    return UserCustomActions;\n}(queryable_1.QueryableCollection));\nexports.UserCustomActions = UserCustomActions;\n/**\n * Describes a single user custom action\n *\n */\nvar UserCustomAction = (function (_super) {\n    __extends(UserCustomAction, _super);\n    function UserCustomAction() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n    * Updates this user custom action with the supplied properties\n    *\n    * @param properties An information object of property names and values to update for this user custom action\n    */\n    UserCustomAction.prototype.update = function (properties) {\n        var _this = this;\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"__metadata\": { \"type\": \"SP.UserCustomAction\" },\n        }, properties));\n        return this.postCore({\n            body: postBody,\n            headers: {\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then(function (data) {\n            return {\n                action: _this,\n                data: data,\n            };\n        });\n    };\n    /**\n    * Removes this user custom action\n    *\n    */\n    UserCustomAction.prototype.delete = function () {\n        return _super.prototype.deleteCore.call(this);\n    };\n    return UserCustomAction;\n}(queryable_1.QueryableInstance));\nexports.UserCustomAction = UserCustomAction;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/usercustomactions.js\n// module id = 19\n// module chunks = 0","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 20\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Makes requests using the fetch API\n */\nvar FetchClient = (function () {\n    function FetchClient() {\n    }\n    FetchClient.prototype.fetch = function (url, options) {\n        return global.fetch(url, options);\n    };\n    return FetchClient;\n}());\nexports.FetchClient = FetchClient;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/net/fetchclient.js\n// module id = 21\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = require(\"./queryable\");\nvar util_1 = require(\"../utils/util\");\n/**\n * Allows for the fluent construction of search queries\n */\nvar SearchQueryBuilder = (function () {\n    function SearchQueryBuilder(queryText, _query) {\n        if (queryText === void 0) { queryText = \"\"; }\n        if (_query === void 0) { _query = {}; }\n        this._query = _query;\n        if (typeof queryText === \"string\" && queryText.length > 0) {\n            this.extendQuery({ Querytext: queryText });\n        }\n    }\n    SearchQueryBuilder.create = function (queryText, queryTemplate) {\n        if (queryText === void 0) { queryText = \"\"; }\n        if (queryTemplate === void 0) { queryTemplate = {}; }\n        return new SearchQueryBuilder(queryText, queryTemplate);\n    };\n    SearchQueryBuilder.prototype.text = function (queryText) {\n        return this.extendQuery({ Querytext: queryText });\n    };\n    SearchQueryBuilder.prototype.template = function (template) {\n        return this.extendQuery({ QueryTemplate: template });\n    };\n    SearchQueryBuilder.prototype.sourceId = function (id) {\n        return this.extendQuery({ SourceId: id });\n    };\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enableInterleaving\", {\n        get: function () {\n            return this.extendQuery({ EnableInterleaving: true });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enableStemming\", {\n        get: function () {\n            return this.extendQuery({ EnableStemming: true });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchQueryBuilder.prototype, \"trimDuplicates\", {\n        get: function () {\n            return this.extendQuery({ TrimDuplicates: true });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    SearchQueryBuilder.prototype.trimDuplicatesIncludeId = function (n) {\n        return this.extendQuery({ TrimDuplicatesIncludeId: n });\n    };\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enableNicknames\", {\n        get: function () {\n            return this.extendQuery({ EnableNicknames: true });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enableFql\", {\n        get: function () {\n            return this.extendQuery({ EnableFQL: true });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enablePhonetic\", {\n        get: function () {\n            return this.extendQuery({ EnablePhonetic: true });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchQueryBuilder.prototype, \"bypassResultTypes\", {\n        get: function () {\n            return this.extendQuery({ BypassResultTypes: true });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchQueryBuilder.prototype, \"processBestBets\", {\n        get: function () {\n            return this.extendQuery({ ProcessBestBets: true });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enableQueryRules\", {\n        get: function () {\n            return this.extendQuery({ EnableQueryRules: true });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enableSorting\", {\n        get: function () {\n            return this.extendQuery({ EnableSorting: true });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchQueryBuilder.prototype, \"generateBlockRankLog\", {\n        get: function () {\n            return this.extendQuery({ GenerateBlockRankLog: true });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    SearchQueryBuilder.prototype.rankingModelId = function (id) {\n        return this.extendQuery({ RankingModelId: id });\n    };\n    SearchQueryBuilder.prototype.startRow = function (n) {\n        return this.extendQuery({ StartRow: n });\n    };\n    SearchQueryBuilder.prototype.rowLimit = function (n) {\n        return this.extendQuery({ RowLimit: n });\n    };\n    SearchQueryBuilder.prototype.rowsPerPage = function (n) {\n        return this.extendQuery({ RowsPerPage: n });\n    };\n    SearchQueryBuilder.prototype.selectProperties = function () {\n        var properties = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            properties[_i] = arguments[_i];\n        }\n        return this.extendQuery({ SelectProperties: properties });\n    };\n    SearchQueryBuilder.prototype.culture = function (culture) {\n        return this.extendQuery({ Culture: culture });\n    };\n    SearchQueryBuilder.prototype.timeZoneId = function (id) {\n        return this.extendQuery({ TimeZoneId: id });\n    };\n    SearchQueryBuilder.prototype.refinementFilters = function () {\n        var filters = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            filters[_i] = arguments[_i];\n        }\n        return this.extendQuery({ RefinementFilters: filters });\n    };\n    SearchQueryBuilder.prototype.refiners = function (refiners) {\n        return this.extendQuery({ Refiners: refiners });\n    };\n    SearchQueryBuilder.prototype.hiddenConstraints = function (constraints) {\n        return this.extendQuery({ HiddenConstraints: constraints });\n    };\n    SearchQueryBuilder.prototype.sortList = function () {\n        var sorts = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sorts[_i] = arguments[_i];\n        }\n        return this.extendQuery({ SortList: sorts });\n    };\n    SearchQueryBuilder.prototype.timeout = function (milliseconds) {\n        return this.extendQuery({ Timeout: milliseconds });\n    };\n    SearchQueryBuilder.prototype.hithighlightedProperties = function () {\n        var properties = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            properties[_i] = arguments[_i];\n        }\n        return this.extendQuery({ HitHighlightedProperties: properties });\n    };\n    SearchQueryBuilder.prototype.clientType = function (clientType) {\n        return this.extendQuery({ ClientType: clientType });\n    };\n    SearchQueryBuilder.prototype.personalizationData = function (data) {\n        return this.extendQuery({ PersonalizationData: data });\n    };\n    SearchQueryBuilder.prototype.resultsURL = function (url) {\n        return this.extendQuery({ ResultsUrl: url });\n    };\n    SearchQueryBuilder.prototype.queryTag = function () {\n        var tags = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            tags[_i] = arguments[_i];\n        }\n        return this.extendQuery({ QueryTag: tags });\n    };\n    SearchQueryBuilder.prototype.properties = function () {\n        var properties = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            properties[_i] = arguments[_i];\n        }\n        return this.extendQuery({ Properties: properties });\n    };\n    Object.defineProperty(SearchQueryBuilder.prototype, \"processPersonalFavorites\", {\n        get: function () {\n            return this.extendQuery({ ProcessPersonalFavorites: true });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    SearchQueryBuilder.prototype.queryTemplatePropertiesUrl = function (url) {\n        return this.extendQuery({ QueryTemplatePropertiesUrl: url });\n    };\n    SearchQueryBuilder.prototype.reorderingRules = function () {\n        var rules = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            rules[_i] = arguments[_i];\n        }\n        return this.extendQuery({ ReorderingRules: rules });\n    };\n    SearchQueryBuilder.prototype.hitHighlightedMultivaluePropertyLimit = function (limit) {\n        return this.extendQuery({ HitHighlightedMultivaluePropertyLimit: limit });\n    };\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enableOrderingHitHighlightedProperty\", {\n        get: function () {\n            return this.extendQuery({ EnableOrderingHitHighlightedProperty: true });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    SearchQueryBuilder.prototype.collapseSpecification = function (spec) {\n        return this.extendQuery({ CollapseSpecification: spec });\n    };\n    SearchQueryBuilder.prototype.uiLanguage = function (lang) {\n        return this.extendQuery({ UILanguage: lang });\n    };\n    SearchQueryBuilder.prototype.desiredSnippetLength = function (len) {\n        return this.extendQuery({ DesiredSnippetLength: len });\n    };\n    SearchQueryBuilder.prototype.maxSnippetLength = function (len) {\n        return this.extendQuery({ MaxSnippetLength: len });\n    };\n    SearchQueryBuilder.prototype.summaryLength = function (len) {\n        return this.extendQuery({ SummaryLength: len });\n    };\n    SearchQueryBuilder.prototype.toSearchQuery = function () {\n        return this._query;\n    };\n    SearchQueryBuilder.prototype.extendQuery = function (part) {\n        this._query = util_1.Util.extend(this._query, part);\n        return this;\n    };\n    return SearchQueryBuilder;\n}());\nexports.SearchQueryBuilder = SearchQueryBuilder;\n/**\n * Describes the search API\n *\n */\nvar Search = (function (_super) {\n    __extends(Search, _super);\n    /**\n     * Creates a new instance of the Search class\n     *\n     * @param baseUrl The url for the search context\n     * @param query The SearchQuery object to execute\n     */\n    function Search(baseUrl, path) {\n        if (path === void 0) { path = \"_api/search/postquery\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * .......\n     * @returns Promise\n     */\n    Search.prototype.execute = function (query) {\n        var _this = this;\n        var formattedBody;\n        formattedBody = query;\n        if (formattedBody.SelectProperties) {\n            formattedBody.SelectProperties = this.fixupProp(query.SelectProperties);\n        }\n        if (formattedBody.RefinementFilters) {\n            formattedBody.RefinementFilters = this.fixupProp(query.RefinementFilters);\n        }\n        if (formattedBody.SortList) {\n            formattedBody.SortList = this.fixupProp(query.SortList);\n        }\n        if (formattedBody.HithighlightedProperties) {\n            formattedBody.HithighlightedProperties = this.fixupProp(query.HitHighlightedProperties);\n        }\n        if (formattedBody.ReorderingRules) {\n            formattedBody.ReorderingRules = this.fixupProp(query.ReorderingRules);\n        }\n        if (formattedBody.Properties) {\n            formattedBody.Properties = this.fixupProp(query.Properties);\n        }\n        var postBody = JSON.stringify({\n            request: util_1.Util.extend({\n                \"__metadata\": { \"type\": \"Microsoft.Office.Server.Search.REST.SearchRequest\" },\n            }, formattedBody),\n        });\n        return this.postCore({ body: postBody }).then(function (data) { return new SearchResults(data, _this.toUrl(), query); });\n    };\n    /**\n     * Fixes up properties that expect to consist of a \"results\" collection when needed\n     *\n     * @param prop property to fixup for container struct\n     */\n    Search.prototype.fixupProp = function (prop) {\n        if (prop.hasOwnProperty(\"results\")) {\n            return prop;\n        }\n        return { results: prop };\n    };\n    return Search;\n}(queryable_1.QueryableInstance));\nexports.Search = Search;\n/**\n * Describes the SearchResults class, which returns the formatted and raw version of the query response\n */\nvar SearchResults = (function () {\n    /**\n     * Creates a new instance of the SearchResult class\n     *\n     */\n    function SearchResults(rawResponse, _url, _query, _raw, _primary) {\n        if (_raw === void 0) { _raw = null; }\n        if (_primary === void 0) { _primary = null; }\n        this._url = _url;\n        this._query = _query;\n        this._raw = _raw;\n        this._primary = _primary;\n        this._raw = rawResponse.postquery ? rawResponse.postquery : rawResponse;\n    }\n    Object.defineProperty(SearchResults.prototype, \"ElapsedTime\", {\n        get: function () {\n            return this.RawSearchResults.ElapsedTime;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchResults.prototype, \"RowCount\", {\n        get: function () {\n            return this.RawSearchResults.PrimaryQueryResult.RelevantResults.RowCount;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchResults.prototype, \"TotalRows\", {\n        get: function () {\n            return this.RawSearchResults.PrimaryQueryResult.RelevantResults.TotalRows;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchResults.prototype, \"TotalRowsIncludingDuplicates\", {\n        get: function () {\n            return this.RawSearchResults.PrimaryQueryResult.RelevantResults.TotalRowsIncludingDuplicates;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchResults.prototype, \"RawSearchResults\", {\n        get: function () {\n            return this._raw;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchResults.prototype, \"PrimarySearchResults\", {\n        get: function () {\n            if (this._primary === null) {\n                this._primary = this.formatSearchResults(this._raw.PrimaryQueryResult.RelevantResults.Table.Rows);\n            }\n            return this._primary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets a page of results\n     *\n     * @param pageNumber Index of the page to return. Used to determine StartRow\n     * @param pageSize Optional, items per page (default = 10)\n     */\n    SearchResults.prototype.getPage = function (pageNumber, pageSize) {\n        // if we got all the available rows we don't have another page\n        if (this.TotalRows < this.RowCount) {\n            return Promise.resolve(null);\n        }\n        // if pageSize is supplied, then we use that regardless of any previous values\n        // otherwise get the previous RowLimit or default to 10\n        var rows = typeof pageSize !== \"undefined\" ? pageSize : this._query.hasOwnProperty(\"RowLimit\") ? this._query.RowLimit : 10;\n        var query = util_1.Util.extend(this._query, {\n            RowLimit: rows,\n            StartRow: rows * (pageNumber - 1),\n        });\n        // we have reached the end\n        if (query.StartRow > this.TotalRows) {\n            return Promise.resolve(null);\n        }\n        var search = new Search(this._url, null);\n        return search.execute(query);\n    };\n    /**\n     * Formats a search results array\n     *\n     * @param rawResults The array to process\n     */\n    SearchResults.prototype.formatSearchResults = function (rawResults) {\n        var results = new Array();\n        var tempResults = rawResults.results ? rawResults.results : rawResults;\n        for (var _i = 0, tempResults_1 = tempResults; _i < tempResults_1.length; _i++) {\n            var tempResult = tempResults_1[_i];\n            var cells = tempResult.Cells.results ? tempResult.Cells.results : tempResult.Cells;\n            results.push(cells.reduce(function (res, cell) {\n                Object.defineProperty(res, cell.Key, {\n                    configurable: false,\n                    enumerable: false,\n                    value: cell.Value,\n                    writable: false,\n                });\n                return res;\n            }, {}));\n        }\n        return results;\n    };\n    return SearchResults;\n}());\nexports.SearchResults = SearchResults;\n/**\n * defines the SortDirection enum\n */\nvar SortDirection;\n(function (SortDirection) {\n    SortDirection[SortDirection[\"Ascending\"] = 0] = \"Ascending\";\n    SortDirection[SortDirection[\"Descending\"] = 1] = \"Descending\";\n    SortDirection[SortDirection[\"FQLFormula\"] = 2] = \"FQLFormula\";\n})(SortDirection = exports.SortDirection || (exports.SortDirection = {}));\n/**\n * defines the ReorderingRuleMatchType  enum\n */\nvar ReorderingRuleMatchType;\n(function (ReorderingRuleMatchType) {\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ResultContainsKeyword\"] = 0] = \"ResultContainsKeyword\";\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"TitleContainsKeyword\"] = 1] = \"TitleContainsKeyword\";\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"TitleMatchesKeyword\"] = 2] = \"TitleMatchesKeyword\";\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"UrlStartsWith\"] = 3] = \"UrlStartsWith\";\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"UrlExactlyMatches\"] = 4] = \"UrlExactlyMatches\";\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ContentTypeIs\"] = 5] = \"ContentTypeIs\";\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"FileExtensionMatches\"] = 6] = \"FileExtensionMatches\";\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ResultHasTag\"] = 7] = \"ResultHasTag\";\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ManualCondition\"] = 8] = \"ManualCondition\";\n})(ReorderingRuleMatchType = exports.ReorderingRuleMatchType || (exports.ReorderingRuleMatchType = {}));\n/**\n * Specifies the type value for the property\n */\nvar QueryPropertyValueType;\n(function (QueryPropertyValueType) {\n    QueryPropertyValueType[QueryPropertyValueType[\"None\"] = 0] = \"None\";\n    QueryPropertyValueType[QueryPropertyValueType[\"StringType\"] = 1] = \"StringType\";\n    QueryPropertyValueType[QueryPropertyValueType[\"Int32TYpe\"] = 2] = \"Int32TYpe\";\n    QueryPropertyValueType[QueryPropertyValueType[\"BooleanType\"] = 3] = \"BooleanType\";\n    QueryPropertyValueType[QueryPropertyValueType[\"StringArrayType\"] = 4] = \"StringArrayType\";\n    QueryPropertyValueType[QueryPropertyValueType[\"UnSupportedType\"] = 5] = \"UnSupportedType\";\n})(QueryPropertyValueType = exports.QueryPropertyValueType || (exports.QueryPropertyValueType = {}));\nvar SearchBuiltInSourceId = (function () {\n    function SearchBuiltInSourceId() {\n    }\n    SearchBuiltInSourceId.Documents = \"e7ec8cee-ded8-43c9-beb5-436b54b31e84\";\n    SearchBuiltInSourceId.ItemsMatchingContentType = \"5dc9f503-801e-4ced-8a2c-5d1237132419\";\n    SearchBuiltInSourceId.ItemsMatchingTag = \"e1327b9c-2b8c-4b23-99c9-3730cb29c3f7\";\n    SearchBuiltInSourceId.ItemsRelatedToCurrentUser = \"48fec42e-4a92-48ce-8363-c2703a40e67d\";\n    SearchBuiltInSourceId.ItemsWithSameKeywordAsThisItem = \"5c069288-1d17-454a-8ac6-9c642a065f48\";\n    SearchBuiltInSourceId.LocalPeopleResults = \"b09a7990-05ea-4af9-81ef-edfab16c4e31\";\n    SearchBuiltInSourceId.LocalReportsAndDataResults = \"203fba36-2763-4060-9931-911ac8c0583b\";\n    SearchBuiltInSourceId.LocalSharePointResults = \"8413cd39-2156-4e00-b54d-11efd9abdb89\";\n    SearchBuiltInSourceId.LocalVideoResults = \"78b793ce-7956-4669-aa3b-451fc5defebf\";\n    SearchBuiltInSourceId.Pages = \"5e34578e-4d08-4edc-8bf3-002acf3cdbcc\";\n    SearchBuiltInSourceId.Pictures = \"38403c8c-3975-41a8-826e-717f2d41568a\";\n    SearchBuiltInSourceId.Popular = \"97c71db1-58ce-4891-8b64-585bc2326c12\";\n    SearchBuiltInSourceId.RecentlyChangedItems = \"ba63bbae-fa9c-42c0-b027-9a878f16557c\";\n    SearchBuiltInSourceId.RecommendedItems = \"ec675252-14fa-4fbe-84dd-8d098ed74181\";\n    SearchBuiltInSourceId.Wiki = \"9479bf85-e257-4318-b5a8-81a180f5faa1\";\n    return SearchBuiltInSourceId;\n}());\nexports.SearchBuiltInSourceId = SearchBuiltInSourceId;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/search.js\n// module id = 22\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar storage_1 = require(\"../utils/storage\");\nvar util_1 = require(\"../utils/util\");\nvar pnplibconfig_1 = require(\"../configuration/pnplibconfig\");\nvar CachingOptions = (function () {\n    function CachingOptions(key) {\n        this.key = key;\n        this.expiration = util_1.Util.dateAdd(new Date(), \"second\", pnplibconfig_1.RuntimeConfig.defaultCachingTimeoutSeconds);\n        this.storeName = pnplibconfig_1.RuntimeConfig.defaultCachingStore;\n    }\n    Object.defineProperty(CachingOptions.prototype, \"store\", {\n        get: function () {\n            if (this.storeName === \"local\") {\n                return CachingOptions.storage.local;\n            }\n            else {\n                return CachingOptions.storage.session;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CachingOptions.storage = new storage_1.PnPClientStorage();\n    return CachingOptions;\n}());\nexports.CachingOptions = CachingOptions;\nvar CachingParserWrapper = (function () {\n    function CachingParserWrapper(_parser, _cacheOptions) {\n        this._parser = _parser;\n        this._cacheOptions = _cacheOptions;\n    }\n    CachingParserWrapper.prototype.parse = function (response) {\n        var _this = this;\n        // add this to the cache based on the options\n        return this._parser.parse(response).then(function (data) {\n            if (_this._cacheOptions.store !== null) {\n                _this._cacheOptions.store.put(_this._cacheOptions.key, data, _this._cacheOptions.expiration);\n            }\n            return data;\n        });\n    };\n    return CachingParserWrapper;\n}());\nexports.CachingParserWrapper = CachingParserWrapper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/caching.js\n// module id = 23\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = require(\"./queryable\");\nvar SearchSuggest = (function (_super) {\n    __extends(SearchSuggest, _super);\n    function SearchSuggest(baseUrl, path) {\n        if (path === void 0) { path = \"_api/search/suggest\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    SearchSuggest.prototype.execute = function (query) {\n        this.mapQueryToQueryString(query);\n        return this.get().then(function (response) { return new SearchSuggestResult(response); });\n    };\n    SearchSuggest.prototype.mapQueryToQueryString = function (query) {\n        this.query.add(\"querytext\", \"'\" + query.querytext + \"'\");\n        if (query.hasOwnProperty(\"count\")) {\n            this.query.add(\"inumberofquerysuggestions\", query.count.toString());\n        }\n        if (query.hasOwnProperty(\"personalCount\")) {\n            this.query.add(\"inumberofresultsuggestions\", query.personalCount.toString());\n        }\n        if (query.hasOwnProperty(\"preQuery\")) {\n            this.query.add(\"fprequerysuggestions\", query.preQuery.toString());\n        }\n        if (query.hasOwnProperty(\"hitHighlighting\")) {\n            this.query.add(\"fhithighlighting\", query.hitHighlighting.toString());\n        }\n        if (query.hasOwnProperty(\"capitalize\")) {\n            this.query.add(\"fcapitalizefirstletters\", query.capitalize.toString());\n        }\n        if (query.hasOwnProperty(\"culture\")) {\n            this.query.add(\"culture\", query.culture.toString());\n        }\n        if (query.hasOwnProperty(\"stemming\")) {\n            this.query.add(\"enablestemming\", query.stemming.toString());\n        }\n        if (query.hasOwnProperty(\"includePeople\")) {\n            this.query.add(\"showpeoplenamesuggestions\", query.includePeople.toString());\n        }\n        if (query.hasOwnProperty(\"queryRules\")) {\n            this.query.add(\"enablequeryrules\", query.queryRules.toString());\n        }\n        if (query.hasOwnProperty(\"prefixMatch\")) {\n            this.query.add(\"fprefixmatchallterms\", query.prefixMatch.toString());\n        }\n    };\n    return SearchSuggest;\n}(queryable_1.QueryableInstance));\nexports.SearchSuggest = SearchSuggest;\nvar SearchSuggestResult = (function () {\n    function SearchSuggestResult(json) {\n        if (json.hasOwnProperty(\"suggest\")) {\n            // verbose\n            this.PeopleNames = json.suggest.PeopleNames.results;\n            this.PersonalResults = json.suggest.PersonalResults.results;\n            this.Queries = json.suggest.Queries.results;\n        }\n        else {\n            this.PeopleNames = json.PeopleNames;\n            this.PersonalResults = json.PersonalResults;\n            this.Queries = json.Queries;\n        }\n    }\n    return SearchSuggestResult;\n}());\nexports.SearchSuggestResult = SearchSuggestResult;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/searchsuggest.js\n// module id = 24\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = require(\"./queryable\");\nvar webs_1 = require(\"./webs\");\nvar usercustomactions_1 = require(\"./usercustomactions\");\nvar odata_1 = require(\"./odata\");\nvar features_1 = require(\"./features\");\n/**\n * Describes a site collection\n *\n */\nvar Site = (function (_super) {\n    __extends(Site, _super);\n    /**\n     * Creates a new instance of the Site class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this site collection\n     */\n    function Site(baseUrl, path) {\n        if (path === void 0) { path = \"_api/site\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    Object.defineProperty(Site.prototype, \"rootWeb\", {\n        /**\n         * Gets the root web of the site collection\n         *\n         */\n        get: function () {\n            return new webs_1.Web(this, \"rootweb\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Site.prototype, \"features\", {\n        /**\n         * Gets the active features for this site collection\n         *\n         */\n        get: function () {\n            return new features_1.Features(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Site.prototype, \"userCustomActions\", {\n        /**\n         * Gets all custom actions for this site collection\n         *\n         */\n        get: function () {\n            return new usercustomactions_1.UserCustomActions(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the context information for this site collection\n     */\n    Site.prototype.getContextInfo = function () {\n        var q = new Site(this.parentUrl, \"_api/contextinfo\");\n        return q.postCore().then(function (data) {\n            if (data.hasOwnProperty(\"GetContextWebInformation\")) {\n                var info = data.GetContextWebInformation;\n                info.SupportedSchemaVersions = info.SupportedSchemaVersions.results;\n                return info;\n            }\n            else {\n                return data;\n            }\n        });\n    };\n    /**\n     * Gets the document libraries on a site. Static method. (SharePoint Online only)\n     *\n     * @param absoluteWebUrl The absolute url of the web whose document libraries should be returned\n     */\n    Site.prototype.getDocumentLibraries = function (absoluteWebUrl) {\n        var q = new queryable_1.Queryable(\"\", \"_api/sp.web.getdocumentlibraries(@v)\");\n        q.query.add(\"@v\", \"'\" + absoluteWebUrl + \"'\");\n        return q.get().then(function (data) {\n            if (data.hasOwnProperty(\"GetDocumentLibraries\")) {\n                return data.GetDocumentLibraries;\n            }\n            else {\n                return data;\n            }\n        });\n    };\n    /**\n     * Gets the site url from a page url\n     *\n     * @param absolutePageUrl The absolute url of the page\n     */\n    Site.prototype.getWebUrlFromPageUrl = function (absolutePageUrl) {\n        var q = new queryable_1.Queryable(\"\", \"_api/sp.web.getweburlfrompageurl(@v)\");\n        q.query.add(\"@v\", \"'\" + absolutePageUrl + \"'\");\n        return q.get().then(function (data) {\n            if (data.hasOwnProperty(\"GetWebUrlFromPageUrl\")) {\n                return data.GetWebUrlFromPageUrl;\n            }\n            else {\n                return data;\n            }\n        });\n    };\n    /**\n     * Creates a new batch for requests within the context of this site collection\n     *\n     */\n    Site.prototype.createBatch = function () {\n        return new odata_1.ODataBatch(this.parentUrl);\n    };\n    /**\n     * Opens a web by id (using POST)\n     *\n     * @param webId The GUID id of the web to open\n     */\n    Site.prototype.openWebById = function (webId) {\n        return this.clone(Site, \"openWebById('\" + webId + \"')\", true).postCore().then(function (d) {\n            return {\n                data: d,\n                web: webs_1.Web.fromUrl(odata_1.extractOdataId(d)),\n            };\n        });\n    };\n    return Site;\n}(queryable_1.QueryableInstance));\nexports.Site = Site;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/site.js\n// module id = 25\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar webs_1 = require(\"./webs\");\nvar roles_1 = require(\"./roles\");\nvar types_1 = require(\"./types\");\nvar queryable_1 = require(\"./queryable\");\nvar QueryableSecurable = (function (_super) {\n    __extends(QueryableSecurable, _super);\n    function QueryableSecurable() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(QueryableSecurable.prototype, \"roleAssignments\", {\n        /**\n         * Gets the set of role assignments for this item\n         *\n         */\n        get: function () {\n            return new roles_1.RoleAssignments(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(QueryableSecurable.prototype, \"firstUniqueAncestorSecurableObject\", {\n        /**\n         * Gets the closest securable up the security hierarchy whose permissions are applied to this list item\n         *\n         */\n        get: function () {\n            return new queryable_1.QueryableInstance(this, \"FirstUniqueAncestorSecurableObject\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the effective permissions for the user supplied\n     *\n     * @param loginName The claims username for the user (ex: i:0#.f|membership|user@domain.com)\n     */\n    QueryableSecurable.prototype.getUserEffectivePermissions = function (loginName) {\n        var q = this.clone(queryable_1.Queryable, \"getUserEffectivePermissions(@user)\", true);\n        q.query.add(\"@user\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return q.get().then(function (r) {\n            // handle verbose mode\n            return r.hasOwnProperty(\"GetUserEffectivePermissions\") ? r.GetUserEffectivePermissions : r;\n        });\n    };\n    /**\n     * Gets the effective permissions for the current user\n     */\n    QueryableSecurable.prototype.getCurrentUserEffectivePermissions = function () {\n        var _this = this;\n        var w = webs_1.Web.fromUrl(this.toUrl());\n        return w.currentUser.select(\"LoginName\").getAs().then(function (user) {\n            return _this.getUserEffectivePermissions(user.LoginName);\n        });\n    };\n    /**\n     * Breaks the security inheritance at this level optinally copying permissions and clearing subscopes\n     *\n     * @param copyRoleAssignments If true the permissions are copied from the current parent scope\n     * @param clearSubscopes Optional. true to make all child securable objects inherit role assignments from the current object\n     */\n    QueryableSecurable.prototype.breakRoleInheritance = function (copyRoleAssignments, clearSubscopes) {\n        if (copyRoleAssignments === void 0) { copyRoleAssignments = false; }\n        if (clearSubscopes === void 0) { clearSubscopes = false; }\n        return this.clone(QueryableSecurable, \"breakroleinheritance(copyroleassignments=\" + copyRoleAssignments + \", clearsubscopes=\" + clearSubscopes + \")\", true).postCore();\n    };\n    /**\n     * Removes the local role assignments so that it re-inherit role assignments from the parent object.\n     *\n     */\n    QueryableSecurable.prototype.resetRoleInheritance = function () {\n        return this.clone(QueryableSecurable, \"resetroleinheritance\", true).postCore();\n    };\n    /**\n     * Determines if a given user has the appropriate permissions\n     *\n     * @param loginName The user to check\n     * @param permission The permission being checked\n     */\n    QueryableSecurable.prototype.userHasPermissions = function (loginName, permission) {\n        var _this = this;\n        return this.getUserEffectivePermissions(loginName).then(function (perms) {\n            return _this.hasPermissions(perms, permission);\n        });\n    };\n    /**\n     * Determines if the current user has the requested permissions\n     *\n     * @param permission The permission we wish to check\n     */\n    QueryableSecurable.prototype.currentUserHasPermissions = function (permission) {\n        var _this = this;\n        return this.getCurrentUserEffectivePermissions().then(function (perms) {\n            return _this.hasPermissions(perms, permission);\n        });\n    };\n    /**\n     * Taken from sp.js, checks the supplied permissions against the mask\n     *\n     * @param value The security principal's permissions on the given object\n     * @param perm The permission checked against the value\n     */\n    /* tslint:disable:no-bitwise */\n    QueryableSecurable.prototype.hasPermissions = function (value, perm) {\n        if (!perm) {\n            return true;\n        }\n        if (perm === types_1.PermissionKind.FullMask) {\n            return (value.High & 32767) === 32767 && value.Low === 65535;\n        }\n        perm = perm - 1;\n        var num = 1;\n        if (perm >= 0 && perm < 32) {\n            num = num << perm;\n            return 0 !== (value.Low & num);\n        }\n        else if (perm >= 32 && perm < 64) {\n            num = num << perm - 32;\n            return 0 !== (value.High & num);\n        }\n        return false;\n    };\n    return QueryableSecurable;\n}(queryable_1.QueryableInstance));\nexports.QueryableSecurable = QueryableSecurable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/queryablesecurable.js\n// module id = 26\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = require(\"./queryable\");\nvar sitegroups_1 = require(\"./sitegroups\");\nvar util_1 = require(\"../utils/util\");\n/**\n * Describes a collection of all site collection users\n *\n */\nvar SiteUsers = (function (_super) {\n    __extends(SiteUsers, _super);\n    /**\n     * Creates a new instance of the SiteUsers class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this user collection\n     */\n    function SiteUsers(baseUrl, path) {\n        if (path === void 0) { path = \"siteusers\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a user from the collection by email\n     *\n     * @param email The email address of the user to retrieve\n     */\n    SiteUsers.prototype.getByEmail = function (email) {\n        return new SiteUser(this, \"getByEmail('\" + email + \"')\");\n    };\n    /**\n     * Gets a user from the collection by id\n     *\n     * @param id The id of the user to retrieve\n     */\n    SiteUsers.prototype.getById = function (id) {\n        return new SiteUser(this, \"getById(\" + id + \")\");\n    };\n    /**\n     * Gets a user from the collection by login name\n     *\n     * @param loginName The login name of the user to retrieve\n     */\n    SiteUsers.prototype.getByLoginName = function (loginName) {\n        var su = new SiteUser(this);\n        su.concat(\"(@v)\");\n        su.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return su;\n    };\n    /**\n     * Removes a user from the collection by id\n     *\n     * @param id The id of the user to remove\n     */\n    SiteUsers.prototype.removeById = function (id) {\n        return this.clone(SiteUsers, \"removeById(\" + id + \")\", true).postCore();\n    };\n    /**\n     * Removes a user from the collection by login name\n     *\n     * @param loginName The login name of the user to remove\n     */\n    SiteUsers.prototype.removeByLoginName = function (loginName) {\n        var o = this.clone(SiteUsers, \"removeByLoginName(@v)\", true);\n        o.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return o.postCore();\n    };\n    /**\n     * Adds a user to a group\n     *\n     * @param loginName The login name of the user to add to the group\n     *\n     */\n    SiteUsers.prototype.add = function (loginName) {\n        var _this = this;\n        return this.clone(SiteUsers, null, true).postCore({\n            body: JSON.stringify({ \"__metadata\": { \"type\": \"SP.User\" }, LoginName: loginName }),\n        }).then(function () { return _this.getByLoginName(loginName); });\n    };\n    return SiteUsers;\n}(queryable_1.QueryableCollection));\nexports.SiteUsers = SiteUsers;\n/**\n * Describes a single user\n *\n */\nvar SiteUser = (function (_super) {\n    __extends(SiteUser, _super);\n    function SiteUser() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(SiteUser.prototype, \"groups\", {\n        /**\n         * Gets the groups for this user\n         *\n         */\n        get: function () {\n            return new sitegroups_1.SiteGroups(this, \"groups\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n    * Updates this user instance with the supplied properties\n    *\n    * @param properties A plain object of property names and values to update for the user\n    */\n    SiteUser.prototype.update = function (properties) {\n        var _this = this;\n        var postBody = util_1.Util.extend({ \"__metadata\": { \"type\": \"SP.User\" } }, properties);\n        return this.postCore({\n            body: JSON.stringify(postBody),\n            headers: {\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then(function (data) {\n            return {\n                data: data,\n                user: _this,\n            };\n        });\n    };\n    /**\n     * Delete this user\n     *\n     */\n    SiteUser.prototype.delete = function () {\n        return this.postCore({\n            headers: {\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    return SiteUser;\n}(queryable_1.QueryableInstance));\nexports.SiteUser = SiteUser;\n/**\n * Represents the current user\n */\nvar CurrentUser = (function (_super) {\n    __extends(CurrentUser, _super);\n    function CurrentUser(baseUrl, path) {\n        if (path === void 0) { path = \"currentuser\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    return CurrentUser;\n}(queryable_1.QueryableInstance));\nexports.CurrentUser = CurrentUser;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/siteusers.js\n// module id = 27\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = require(\"./queryable\");\nvar LimitedWebPartManager = (function (_super) {\n    __extends(LimitedWebPartManager, _super);\n    function LimitedWebPartManager() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(LimitedWebPartManager.prototype, \"webparts\", {\n        /**\n         * Gets the set of web part definitions contained by this web part manager\n         *\n         */\n        get: function () {\n            return new WebPartDefinitions(this, \"webparts\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Exports a webpart definition\n     *\n     * @param id the GUID id of the definition to export\n     */\n    LimitedWebPartManager.prototype.export = function (id) {\n        return this.clone(LimitedWebPartManager, \"ExportWebPart\", true).postCore({\n            body: JSON.stringify({ webPartId: id }),\n        });\n    };\n    /**\n     * Imports a webpart\n     *\n     * @param xml webpart definition which must be valid XML in the .dwp or .webpart format\n     */\n    LimitedWebPartManager.prototype.import = function (xml) {\n        return this.clone(LimitedWebPartManager, \"ImportWebPart\", true).postCore({\n            body: JSON.stringify({ webPartXml: xml }),\n        });\n    };\n    return LimitedWebPartManager;\n}(queryable_1.Queryable));\nexports.LimitedWebPartManager = LimitedWebPartManager;\nvar WebPartDefinitions = (function (_super) {\n    __extends(WebPartDefinitions, _super);\n    function WebPartDefinitions() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Gets a web part definition from the collection by id\n     *\n     * @param id The storage ID of the SPWebPartDefinition to retrieve\n     */\n    WebPartDefinitions.prototype.getById = function (id) {\n        return new WebPartDefinition(this, \"getbyid('\" + id + \"')\");\n    };\n    /**\n     * Gets a web part definition from the collection by storage id\n     *\n     * @param id The WebPart.ID of the SPWebPartDefinition to retrieve\n     */\n    WebPartDefinitions.prototype.getByControlId = function (id) {\n        return new WebPartDefinition(this, \"getByControlId('\" + id + \"')\");\n    };\n    return WebPartDefinitions;\n}(queryable_1.QueryableCollection));\nexports.WebPartDefinitions = WebPartDefinitions;\nvar WebPartDefinition = (function (_super) {\n    __extends(WebPartDefinition, _super);\n    function WebPartDefinition() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(WebPartDefinition.prototype, \"webpart\", {\n        /**\n         * Gets the webpart information associated with this definition\n         */\n        get: function () {\n            return new WebPart(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Saves changes to the Web Part made using other properties and methods on the SPWebPartDefinition object\n     */\n    WebPartDefinition.prototype.saveChanges = function () {\n        return this.clone(WebPartDefinition, \"SaveWebPartChanges\", true).postCore();\n    };\n    /**\n     * Moves the Web Part to a different location on a Web Part Page\n     *\n     * @param zoneId The ID of the Web Part Zone to which to move the Web Part\n     * @param zoneIndex A Web Part zone index that specifies the position at which the Web Part is to be moved within the destination Web Part zone\n     */\n    WebPartDefinition.prototype.moveTo = function (zoneId, zoneIndex) {\n        return this.clone(WebPartDefinition, \"MoveWebPartTo(zoneID='\" + zoneId + \"', zoneIndex=\" + zoneIndex + \")\", true).postCore();\n    };\n    /**\n     * Closes the Web Part. If the Web Part is already closed, this method does nothing\n     */\n    WebPartDefinition.prototype.close = function () {\n        return this.clone(WebPartDefinition, \"CloseWebPart\", true).postCore();\n    };\n    /**\n     * Opens the Web Part. If the Web Part is already closed, this method does nothing\n     */\n    WebPartDefinition.prototype.open = function () {\n        return this.clone(WebPartDefinition, \"OpenWebPart\", true).postCore();\n    };\n    /**\n     * Removes a webpart from a page, all settings will be lost\n     */\n    WebPartDefinition.prototype.delete = function () {\n        return this.clone(WebPartDefinition, \"DeleteWebPart\", true).postCore();\n    };\n    return WebPartDefinition;\n}(queryable_1.QueryableInstance));\nexports.WebPartDefinition = WebPartDefinition;\nvar WebPart = (function (_super) {\n    __extends(WebPart, _super);\n    /**\n     * Creates a new instance of the WebPart class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     * @param path Optional, if supplied will be appended to the supplied baseUrl\n     */\n    function WebPart(baseUrl, path) {\n        if (path === void 0) { path = \"webpart\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    return WebPart;\n}(queryable_1.QueryableInstance));\nexports.WebPart = WebPart;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/webparts.js\n// module id = 28\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = require(\"./queryable\");\nvar util_1 = require(\"../utils/util\");\nvar types_1 = require(\"./types\");\n/**\n * Describes a collection of Field objects\n *\n */\nvar Fields = (function (_super) {\n    __extends(Fields, _super);\n    /**\n     * Creates a new instance of the Fields class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    function Fields(baseUrl, path) {\n        if (path === void 0) { path = \"fields\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a field from the collection by title\n     *\n     * @param title The case-sensitive title of the field\n     */\n    Fields.prototype.getByTitle = function (title) {\n        return new Field(this, \"getByTitle('\" + title + \"')\");\n    };\n    /**\n     * Gets a field from the collection by using internal name or title\n     *\n     * @param name The case-sensitive internal name or title of the field\n     */\n    Fields.prototype.getByInternalNameOrTitle = function (name) {\n        return new Field(this, \"getByInternalNameOrTitle('\" + name + \"')\");\n    };\n    /**\n     * Gets a list from the collection by guid id\n     *\n     * @param title The Id of the list\n     */\n    Fields.prototype.getById = function (id) {\n        var f = new Field(this);\n        f.concat(\"('\" + id + \"')\");\n        return f;\n    };\n    /**\n     * Creates a field based on the specified schema\n     */\n    Fields.prototype.createFieldAsXml = function (xml) {\n        var _this = this;\n        var info;\n        if (typeof xml === \"string\") {\n            info = { SchemaXml: xml };\n        }\n        else {\n            info = xml;\n        }\n        var postBody = JSON.stringify({\n            \"parameters\": util_1.Util.extend({\n                \"__metadata\": {\n                    \"type\": \"SP.XmlSchemaFieldCreationInformation\",\n                },\n            }, info),\n        });\n        return this.clone(Fields, \"createfieldasxml\", true).postAsCore({ body: postBody }).then(function (data) {\n            return {\n                data: data,\n                field: _this.getById(data.Id),\n            };\n        });\n    };\n    /**\n     * Adds a new list to the collection\n     *\n     * @param title The new field's title\n     * @param fieldType The new field's type (ex: SP.FieldText)\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\n     */\n    Fields.prototype.add = function (title, fieldType, properties) {\n        var _this = this;\n        if (properties === void 0) { properties = {}; }\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"Title\": title,\n            \"__metadata\": { \"type\": fieldType },\n        }, properties));\n        return this.clone(Fields, null, true).postAsCore({ body: postBody }).then(function (data) {\n            return {\n                data: data,\n                field: _this.getById(data.Id),\n            };\n        });\n    };\n    /**\n     * Adds a new SP.FieldText to the collection\n     *\n     * @param title The field title\n     * @param maxLength The maximum number of characters allowed in the value of the field.\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\n     */\n    Fields.prototype.addText = function (title, maxLength, properties) {\n        if (maxLength === void 0) { maxLength = 255; }\n        var props = {\n            FieldTypeKind: 2,\n            MaxLength: maxLength,\n        };\n        return this.add(title, \"SP.FieldText\", util_1.Util.extend(props, properties));\n    };\n    /**\n     * Adds a new SP.FieldCalculated to the collection\n     *\n     * @param title The field title.\n     * @param formula The formula for the field.\n     * @param dateFormat The date and time format that is displayed in the field.\n     * @param outputType Specifies the output format for the field. Represents a FieldType value.\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\n     */\n    Fields.prototype.addCalculated = function (title, formula, dateFormat, outputType, properties) {\n        if (outputType === void 0) { outputType = types_1.FieldTypes.Text; }\n        var props = {\n            DateFormat: dateFormat,\n            FieldTypeKind: 17,\n            Formula: formula,\n            OutputType: outputType,\n        };\n        return this.add(title, \"SP.FieldCalculated\", util_1.Util.extend(props, properties));\n    };\n    /**\n     * Adds a new SP.FieldDateTime to the collection\n     *\n     * @param title The field title\n     * @param displayFormat The format of the date and time that is displayed in the field.\n     * @param calendarType Specifies the calendar type of the field.\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\n     */\n    Fields.prototype.addDateTime = function (title, displayFormat, calendarType, friendlyDisplayFormat, properties) {\n        if (displayFormat === void 0) { displayFormat = types_1.DateTimeFieldFormatType.DateOnly; }\n        if (calendarType === void 0) { calendarType = types_1.CalendarType.Gregorian; }\n        if (friendlyDisplayFormat === void 0) { friendlyDisplayFormat = 0; }\n        var props = {\n            DateTimeCalendarType: calendarType,\n            DisplayFormat: displayFormat,\n            FieldTypeKind: 4,\n            FriendlyDisplayFormat: friendlyDisplayFormat,\n        };\n        return this.add(title, \"SP.FieldDateTime\", util_1.Util.extend(props, properties));\n    };\n    /**\n     * Adds a new SP.FieldNumber to the collection\n     *\n     * @param title The field title\n     * @param minValue The field's minimum value\n     * @param maxValue The field's maximum value\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\n     */\n    Fields.prototype.addNumber = function (title, minValue, maxValue, properties) {\n        var props = { FieldTypeKind: 9 };\n        if (typeof minValue !== \"undefined\") {\n            props = util_1.Util.extend({ MinimumValue: minValue }, props);\n        }\n        if (typeof maxValue !== \"undefined\") {\n            props = util_1.Util.extend({ MaximumValue: maxValue }, props);\n        }\n        return this.add(title, \"SP.FieldNumber\", util_1.Util.extend(props, properties));\n    };\n    /**\n     * Adds a new SP.FieldCurrency to the collection\n     *\n     * @param title The field title\n     * @param minValue The field's minimum value\n     * @param maxValue The field's maximum value\n     * @param currencyLocalId Specifies the language code identifier (LCID) used to format the value of the field\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\n     */\n    Fields.prototype.addCurrency = function (title, minValue, maxValue, currencyLocalId, properties) {\n        if (currencyLocalId === void 0) { currencyLocalId = 1033; }\n        var props = {\n            CurrencyLocaleId: currencyLocalId,\n            FieldTypeKind: 10,\n        };\n        if (typeof minValue !== \"undefined\") {\n            props = util_1.Util.extend({ MinimumValue: minValue }, props);\n        }\n        if (typeof maxValue !== \"undefined\") {\n            props = util_1.Util.extend({ MaximumValue: maxValue }, props);\n        }\n        return this.add(title, \"SP.FieldCurrency\", util_1.Util.extend(props, properties));\n    };\n    /**\n     * Adds a new SP.FieldMultiLineText to the collection\n     *\n     * @param title The field title\n     * @param numberOfLines Specifies the number of lines of text to display for the field.\n     * @param richText Specifies whether the field supports rich formatting.\n     * @param restrictedMode Specifies whether the field supports a subset of rich formatting.\n     * @param appendOnly Specifies whether all changes to the value of the field are displayed in list forms.\n     * @param allowHyperlink Specifies whether a hyperlink is allowed as a value of the field.\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\n     *\n     */\n    Fields.prototype.addMultilineText = function (title, numberOfLines, richText, restrictedMode, appendOnly, allowHyperlink, properties) {\n        if (numberOfLines === void 0) { numberOfLines = 6; }\n        if (richText === void 0) { richText = true; }\n        if (restrictedMode === void 0) { restrictedMode = false; }\n        if (appendOnly === void 0) { appendOnly = false; }\n        if (allowHyperlink === void 0) { allowHyperlink = true; }\n        var props = {\n            AllowHyperlink: allowHyperlink,\n            AppendOnly: appendOnly,\n            FieldTypeKind: 3,\n            NumberOfLines: numberOfLines,\n            RestrictedMode: restrictedMode,\n            RichText: richText,\n        };\n        return this.add(title, \"SP.FieldMultiLineText\", util_1.Util.extend(props, properties));\n    };\n    /**\n     * Adds a new SP.FieldUrl to the collection\n     *\n     * @param title The field title\n     */\n    Fields.prototype.addUrl = function (title, displayFormat, properties) {\n        if (displayFormat === void 0) { displayFormat = types_1.UrlFieldFormatType.Hyperlink; }\n        var props = {\n            DisplayFormat: displayFormat,\n            FieldTypeKind: 11,\n        };\n        return this.add(title, \"SP.FieldUrl\", util_1.Util.extend(props, properties));\n    };\n    return Fields;\n}(queryable_1.QueryableCollection));\nexports.Fields = Fields;\n/**\n * Describes a single of Field instance\n *\n */\nvar Field = (function (_super) {\n    __extends(Field, _super);\n    function Field() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Updates this field intance with the supplied properties\n     *\n     * @param properties A plain object hash of values to update for the list\n     * @param fieldType The type value, required to update child field type properties\n     */\n    Field.prototype.update = function (properties, fieldType) {\n        var _this = this;\n        if (fieldType === void 0) { fieldType = \"SP.Field\"; }\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"__metadata\": { \"type\": fieldType },\n        }, properties));\n        return this.postCore({\n            body: postBody,\n            headers: {\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then(function (data) {\n            return {\n                data: data,\n                field: _this,\n            };\n        });\n    };\n    /**\n     * Delete this fields\n     *\n     */\n    Field.prototype.delete = function () {\n        return this.postCore({\n            headers: {\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    /**\n     * Sets the value of the ShowInDisplayForm property for this field.\n     */\n    Field.prototype.setShowInDisplayForm = function (show) {\n        return this.clone(Field, \"setshowindisplayform(\" + show + \")\", true).postCore();\n    };\n    /**\n     * Sets the value of the ShowInEditForm property for this field.\n     */\n    Field.prototype.setShowInEditForm = function (show) {\n        return this.clone(Field, \"setshowineditform(\" + show + \")\", true).postCore();\n    };\n    /**\n     * Sets the value of the ShowInNewForm property for this field.\n     */\n    Field.prototype.setShowInNewForm = function (show) {\n        return this.clone(Field, \"setshowinnewform(\" + show + \")\", true).postCore();\n    };\n    return Field;\n}(queryable_1.QueryableInstance));\nexports.Field = Field;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/fields.js\n// module id = 29\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"../utils/util\");\nvar queryable_1 = require(\"./queryable\");\n/**\n * Represents a collection of navigation nodes\n *\n */\nvar NavigationNodes = (function (_super) {\n    __extends(NavigationNodes, _super);\n    function NavigationNodes() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Gets a navigation node by id\n     *\n     * @param id The id of the node\n     */\n    NavigationNodes.prototype.getById = function (id) {\n        var node = new NavigationNode(this);\n        node.concat(\"(\" + id + \")\");\n        return node;\n    };\n    /**\n     * Adds a new node to the collection\n     *\n     * @param title Display name of the node\n     * @param url The url of the node\n     * @param visible If true the node is visible, otherwise it is hidden (default: true)\n     */\n    NavigationNodes.prototype.add = function (title, url, visible) {\n        var _this = this;\n        if (visible === void 0) { visible = true; }\n        var postBody = JSON.stringify({\n            IsVisible: visible,\n            Title: title,\n            Url: url,\n            \"__metadata\": { \"type\": \"SP.NavigationNode\" },\n        });\n        return this.clone(NavigationNodes, null, true).postCore({ body: postBody }).then(function (data) {\n            return {\n                data: data,\n                node: _this.getById(data.Id),\n            };\n        });\n    };\n    /**\n     * Moves a node to be after another node in the navigation\n     *\n     * @param nodeId Id of the node to move\n     * @param previousNodeId Id of the node after which we move the node specified by nodeId\n     */\n    NavigationNodes.prototype.moveAfter = function (nodeId, previousNodeId) {\n        var postBody = JSON.stringify({\n            nodeId: nodeId,\n            previousNodeId: previousNodeId,\n        });\n        return this.clone(NavigationNodes, \"MoveAfter\", true).postCore({ body: postBody });\n    };\n    return NavigationNodes;\n}(queryable_1.QueryableCollection));\nexports.NavigationNodes = NavigationNodes;\n/**\n * Represents an instance of a navigation node\n *\n */\nvar NavigationNode = (function (_super) {\n    __extends(NavigationNode, _super);\n    function NavigationNode() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(NavigationNode.prototype, \"children\", {\n        /**\n         * Represents the child nodes of this node\n         */\n        get: function () {\n            return new NavigationNodes(this, \"Children\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Updates this node based on the supplied properties\n     *\n     * @param properties The hash of key/value pairs to update\n     */\n    NavigationNode.prototype.update = function (properties) {\n        var _this = this;\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"__metadata\": { \"type\": \"SP.NavigationNode\" },\n        }, properties));\n        return this.postCore({\n            body: postBody,\n            headers: {\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then(function (data) {\n            return {\n                data: data,\n                node: _this,\n            };\n        });\n    };\n    /**\n     * Deletes this node and any child nodes\n     */\n    NavigationNode.prototype.delete = function () {\n        return _super.prototype.deleteCore.call(this);\n    };\n    return NavigationNode;\n}(queryable_1.QueryableInstance));\nexports.NavigationNode = NavigationNode;\n/**\n * Exposes the navigation components\n *\n */\nvar Navigation = (function (_super) {\n    __extends(Navigation, _super);\n    /**\n     * Creates a new instance of the Navigation class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of these navigation components\n     */\n    function Navigation(baseUrl, path) {\n        if (path === void 0) { path = \"navigation\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    Object.defineProperty(Navigation.prototype, \"quicklaunch\", {\n        /**\n         * Gets the quicklaunch navigation nodes for the current context\n         *\n         */\n        get: function () {\n            return new NavigationNodes(this, \"quicklaunch\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Navigation.prototype, \"topNavigationBar\", {\n        /**\n         * Gets the top bar navigation nodes for the current context\n         *\n         */\n        get: function () {\n            return new NavigationNodes(this, \"topnavigationbar\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Navigation;\n}(queryable_1.Queryable));\nexports.Navigation = Navigation;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/navigation.js\n// module id = 30\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = require(\"./queryable\");\n/**\n * Describes a collection of List objects\n *\n */\nvar Features = (function (_super) {\n    __extends(Features, _super);\n    /**\n     * Creates a new instance of the Lists class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    function Features(baseUrl, path) {\n        if (path === void 0) { path = \"features\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a list from the collection by guid id\n     *\n     * @param id The Id of the feature (GUID)\n     */\n    Features.prototype.getById = function (id) {\n        var feature = new Feature(this);\n        feature.concat(\"('\" + id + \"')\");\n        return feature;\n    };\n    /**\n     * Adds a new list to the collection\n     *\n     * @param id The Id of the feature (GUID)\n     * @param force If true the feature activation will be forced\n     */\n    Features.prototype.add = function (id, force) {\n        var _this = this;\n        if (force === void 0) { force = false; }\n        return this.clone(Features, \"add\", true).postCore({\n            body: JSON.stringify({\n                featdefScope: 0,\n                featureId: id,\n                force: force,\n            }),\n        }).then(function (data) {\n            return {\n                data: data,\n                feature: _this.getById(id),\n            };\n        });\n    };\n    /**\n     * Removes (deactivates) a feature from the collection\n     *\n     * @param id The Id of the feature (GUID)\n     * @param force If true the feature deactivation will be forced\n     */\n    Features.prototype.remove = function (id, force) {\n        if (force === void 0) { force = false; }\n        return this.clone(Features, \"remove\", true).postCore({\n            body: JSON.stringify({\n                featureId: id,\n                force: force,\n            }),\n        });\n    };\n    return Features;\n}(queryable_1.QueryableCollection));\nexports.Features = Features;\nvar Feature = (function (_super) {\n    __extends(Feature, _super);\n    function Feature() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Removes (deactivates) a feature from the collection\n     *\n     * @param force If true the feature deactivation will be forced\n     */\n    Feature.prototype.deactivate = function (force) {\n        var _this = this;\n        if (force === void 0) { force = false; }\n        var removeDependency = this.addBatchDependency();\n        var idGet = new Feature(this).select(\"DefinitionId\");\n        return idGet.getAs().then(function (feature) {\n            var promise = _this.getParent(Features, _this.parentUrl, \"\", _this.batch).remove(feature.DefinitionId, force);\n            removeDependency();\n            return promise;\n        });\n    };\n    return Feature;\n}(queryable_1.QueryableInstance));\nexports.Feature = Feature;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/features.js\n// module id = 31\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = require(\"./queryable\");\nvar util_1 = require(\"../utils/util\");\nvar files_1 = require(\"./files\");\nvar odata_1 = require(\"./odata\");\n/**\n * Allows for calling of the static SP.Utilities.Utility methods by supplying the method name\n */\nvar UtilityMethod = (function (_super) {\n    __extends(UtilityMethod, _super);\n    /**\n     * Creates a new instance of the Utility method class\n     *\n     * @param baseUrl The parent url provider\n     * @param methodName The static method name to call on the utility class\n     */\n    function UtilityMethod(baseUrl, methodName) {\n        return _super.call(this, UtilityMethod.getBaseUrl(baseUrl), \"_api/SP.Utilities.Utility.\" + methodName) || this;\n    }\n    UtilityMethod.getBaseUrl = function (candidate) {\n        if (typeof candidate === \"string\") {\n            return candidate;\n        }\n        var c = candidate;\n        var url = c.toUrl();\n        var index = url.indexOf(\"_api/\");\n        if (index < 0) {\n            return url;\n        }\n        return url.substr(0, index);\n    };\n    UtilityMethod.prototype.excute = function (props) {\n        return this.postAsCore({\n            body: JSON.stringify(props),\n        });\n    };\n    /**\n     * Clones this queryable into a new queryable instance of T\n     * @param factory Constructor used to create the new instance\n     * @param additionalPath Any additional path to include in the clone\n     * @param includeBatch If true this instance's batch will be added to the cloned instance\n     */\n    UtilityMethod.prototype.create = function (methodName, includeBatch) {\n        var clone = new UtilityMethod(this.parentUrl, methodName);\n        var target = this.query.get(\"@target\");\n        if (target !== null) {\n            clone.query.add(\"@target\", target);\n        }\n        if (includeBatch && this.hasBatch) {\n            clone = clone.inBatch(this.batch);\n        }\n        return clone;\n    };\n    /**\n     * Sends an email based on the supplied properties\n     *\n     * @param props The properties of the email to send\n     */\n    UtilityMethod.prototype.sendEmail = function (props) {\n        var params = {\n            properties: {\n                Body: props.Body,\n                From: props.From,\n                Subject: props.Subject,\n                \"__metadata\": { \"type\": \"SP.Utilities.EmailProperties\" },\n            },\n        };\n        if (props.To && props.To.length > 0) {\n            params.properties = util_1.Util.extend(params.properties, {\n                To: { results: props.To },\n            });\n        }\n        if (props.CC && props.CC.length > 0) {\n            params.properties = util_1.Util.extend(params.properties, {\n                CC: { results: props.CC },\n            });\n        }\n        if (props.BCC && props.BCC.length > 0) {\n            params.properties = util_1.Util.extend(params.properties, {\n                BCC: { results: props.BCC },\n            });\n        }\n        if (props.AdditionalHeaders) {\n            params.properties = util_1.Util.extend(params.properties, {\n                AdditionalHeaders: props.AdditionalHeaders,\n            });\n        }\n        return this.create(\"SendEmail\", true).excute(params);\n    };\n    UtilityMethod.prototype.getCurrentUserEmailAddresses = function () {\n        return this.create(\"GetCurrentUserEmailAddresses\", true).excute({});\n    };\n    UtilityMethod.prototype.resolvePrincipal = function (input, scopes, sources, inputIsEmailOnly, addToUserInfoList, matchUserInfoList) {\n        if (matchUserInfoList === void 0) { matchUserInfoList = false; }\n        var params = {\n            addToUserInfoList: addToUserInfoList,\n            input: input,\n            inputIsEmailOnly: inputIsEmailOnly,\n            matchUserInfoList: matchUserInfoList,\n            scopes: scopes,\n            sources: sources,\n        };\n        return this.create(\"ResolvePrincipalInCurrentContext\", true).excute(params);\n    };\n    UtilityMethod.prototype.searchPrincipals = function (input, scopes, sources, groupName, maxCount) {\n        var params = {\n            groupName: groupName,\n            input: input,\n            maxCount: maxCount,\n            scopes: scopes,\n            sources: sources,\n        };\n        return this.create(\"SearchPrincipalsUsingContextWeb\", true).excute(params);\n    };\n    UtilityMethod.prototype.createEmailBodyForInvitation = function (pageAddress) {\n        var params = {\n            pageAddress: pageAddress,\n        };\n        return this.create(\"CreateEmailBodyForInvitation\", true).excute(params);\n    };\n    UtilityMethod.prototype.expandGroupsToPrincipals = function (inputs, maxCount) {\n        if (maxCount === void 0) { maxCount = 30; }\n        var params = {\n            inputs: inputs,\n            maxCount: maxCount,\n        };\n        return this.create(\"ExpandGroupsToPrincipals\", true).excute(params);\n    };\n    UtilityMethod.prototype.createWikiPage = function (info) {\n        return this.create(\"CreateWikiPageInContextWeb\", true).excute({\n            parameters: info,\n        }).then(function (r) {\n            return {\n                data: r,\n                file: new files_1.File(odata_1.extractOdataId(r)),\n            };\n        });\n    };\n    return UtilityMethod;\n}(queryable_1.Queryable));\nexports.UtilityMethod = UtilityMethod;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/utilities.js\n// module id = 32\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar storage = require(\"../../utils/storage\");\nvar exceptions_1 = require(\"../../utils/exceptions\");\n/**\n * A caching provider which can wrap other non-caching providers\n *\n */\nvar CachingConfigurationProvider = (function () {\n    /**\n     * Creates a new caching configuration provider\n     * @constructor\n     * @param {IConfigurationProvider} wrappedProvider Provider which will be used to fetch the configuration\n     * @param {string} cacheKey Key that will be used to store cached items to the cache\n     * @param {IPnPClientStore} cacheStore OPTIONAL storage, which will be used to store cached settings.\n     */\n    function CachingConfigurationProvider(wrappedProvider, cacheKey, cacheStore) {\n        this.wrappedProvider = wrappedProvider;\n        this.store = (cacheStore) ? cacheStore : this.selectPnPCache();\n        this.cacheKey = \"_configcache_\" + cacheKey;\n    }\n    /**\n     * Gets the wrapped configuration providers\n     *\n     * @return {IConfigurationProvider} Wrapped configuration provider\n     */\n    CachingConfigurationProvider.prototype.getWrappedProvider = function () {\n        return this.wrappedProvider;\n    };\n    /**\n     * Loads the configuration values either from the cache or from the wrapped provider\n     *\n     * @return {Promise<TypedHash<string>>} Promise of loaded configuration values\n     */\n    CachingConfigurationProvider.prototype.getConfiguration = function () {\n        var _this = this;\n        // Cache not available, pass control to  the wrapped provider\n        if ((!this.store) || (!this.store.enabled)) {\n            return this.wrappedProvider.getConfiguration();\n        }\n        // Value is found in cache, return it directly\n        var cachedConfig = this.store.get(this.cacheKey);\n        if (cachedConfig) {\n            return new Promise(function (resolve) {\n                resolve(cachedConfig);\n            });\n        }\n        // Get and cache value from the wrapped provider\n        var providerPromise = this.wrappedProvider.getConfiguration();\n        providerPromise.then(function (providedConfig) {\n            _this.store.put(_this.cacheKey, providedConfig);\n        });\n        return providerPromise;\n    };\n    CachingConfigurationProvider.prototype.selectPnPCache = function () {\n        var pnpCache = new storage.PnPClientStorage();\n        if ((pnpCache.local) && (pnpCache.local.enabled)) {\n            return pnpCache.local;\n        }\n        if ((pnpCache.session) && (pnpCache.session.enabled)) {\n            return pnpCache.session;\n        }\n        throw new exceptions_1.NoCacheAvailableException();\n    };\n    return CachingConfigurationProvider;\n}());\nexports.default = CachingConfigurationProvider;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/configuration/providers/cachingConfigurationProvider.js\n// module id = 33\n// module chunks = 0","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"./utils/util\");\nvar storage_1 = require(\"./utils/storage\");\nvar configuration_1 = require(\"./configuration/configuration\");\nvar logging_1 = require(\"./utils/logging\");\nvar rest_1 = require(\"./sharepoint/rest\");\nvar pnplibconfig_1 = require(\"./configuration/pnplibconfig\");\n/**\n * Root class of the Patterns and Practices namespace, provides an entry point to the library\n */\n/**\n * Utility methods\n */\nexports.util = util_1.Util;\n/**\n * Provides access to the SharePoint REST interface\n */\nexports.sp = new rest_1.SPRest();\n/**\n * Provides access to local and session storage\n */\nexports.storage = new storage_1.PnPClientStorage();\n/**\n * Global configuration instance to which providers can be added\n */\nexports.config = new configuration_1.Settings();\n/**\n * Global logging instance to which subscribers can be registered and messages written\n */\nexports.log = logging_1.Logger;\n/**\n * Allows for the configuration of the library\n */\nexports.setup = pnplibconfig_1.setRuntimeConfig;\n/**\n * Expose a subset of classes from the library for public consumption\n */\n__export(require(\"./types/index\"));\n// creating this class instead of directly assigning to default fixes issue #116\nvar Def = {\n    /**\n     * Global configuration instance to which providers can be added\n     */\n    config: exports.config,\n    /**\n     * Global logging instance to which subscribers can be registered and messages written\n     */\n    log: exports.log,\n    /**\n     * Provides access to local and session storage\n     */\n    setup: exports.setup,\n    /**\n     * Provides access to the REST interface\n     */\n    sp: exports.sp,\n    /**\n     * Provides access to local and session storage\n     */\n    storage: exports.storage,\n    /**\n     * Utility methods\n     */\n    util: exports.util,\n};\n/**\n * Enables use of the import pnp from syntax\n */\nexports.default = Def;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/pnp.js\n// module id = 34\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar collections_1 = require(\"../collections/collections\");\n/**\n * Class used to manage the current application settings\n *\n */\nvar Settings = (function () {\n    /**\n     * Creates a new instance of the settings class\n     *\n     * @constructor\n     */\n    function Settings() {\n        this._settings = new collections_1.Dictionary();\n    }\n    /**\n     * Adds a new single setting, or overwrites a previous setting with the same key\n     *\n     * @param {string} key The key used to store this setting\n     * @param {string} value The setting value to store\n     */\n    Settings.prototype.add = function (key, value) {\n        this._settings.add(key, value);\n    };\n    /**\n     * Adds a JSON value to the collection as a string, you must use getJSON to rehydrate the object when read\n     *\n     * @param {string} key The key used to store this setting\n     * @param {any} value The setting value to store\n     */\n    Settings.prototype.addJSON = function (key, value) {\n        this._settings.add(key, JSON.stringify(value));\n    };\n    /**\n     * Applies the supplied hash to the setting collection overwriting any existing value, or created new values\n     *\n     * @param {TypedHash<any>} hash The set of values to add\n     */\n    Settings.prototype.apply = function (hash) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            try {\n                _this._settings.merge(hash);\n                resolve();\n            }\n            catch (e) {\n                reject(e);\n            }\n        });\n    };\n    /**\n     * Loads configuration settings into the collection from the supplied provider and returns a Promise\n     *\n     * @param {IConfigurationProvider} provider The provider from which we will load the settings\n     */\n    Settings.prototype.load = function (provider) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            provider.getConfiguration().then(function (value) {\n                _this._settings.merge(value);\n                resolve();\n            }).catch(function (reason) {\n                reject(reason);\n            });\n        });\n    };\n    /**\n     * Gets a value from the configuration\n     *\n     * @param {string} key The key whose value we want to return. Returns null if the key does not exist\n     * @return {string} string value from the configuration\n     */\n    Settings.prototype.get = function (key) {\n        return this._settings.get(key);\n    };\n    /**\n     * Gets a JSON value, rehydrating the stored string to the original object\n     *\n     * @param {string} key The key whose value we want to return. Returns null if the key does not exist\n     * @return {any} object from the configuration\n     */\n    Settings.prototype.getJSON = function (key) {\n        var o = this.get(key);\n        if (typeof o === \"undefined\" || o === null) {\n            return o;\n        }\n        return JSON.parse(o);\n    };\n    return Settings;\n}());\nexports.Settings = Settings;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/configuration/configuration.js\n// module id = 35\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar search_1 = require(\"./search\");\nvar searchsuggest_1 = require(\"./searchsuggest\");\nvar site_1 = require(\"./site\");\nvar webs_1 = require(\"./webs\");\nvar util_1 = require(\"../utils/util\");\nvar userprofiles_1 = require(\"./userprofiles\");\nvar exceptions_1 = require(\"../utils/exceptions\");\nvar utilities_1 = require(\"./utilities\");\n/**\n * Root of the SharePoint REST module\n */\nvar SPRest = (function () {\n    /**\n     * Creates a new instance of the SPRest class\n     *\n     * @param options Additional options\n     * @param baseUrl A string that should form the base part of the url\n     */\n    function SPRest(options, baseUrl) {\n        if (options === void 0) { options = {}; }\n        if (baseUrl === void 0) { baseUrl = \"\"; }\n        this._options = options;\n        this._baseUrl = baseUrl;\n    }\n    /**\n     * Configures instance with additional options and baseUrl.\n     * Provided configuration used by other objects in a chain\n     *\n     * @param options Additional options\n     * @param baseUrl A string that should form the base part of the url\n     */\n    SPRest.prototype.configure = function (options, baseUrl) {\n        if (baseUrl === void 0) { baseUrl = \"\"; }\n        return new SPRest(options, baseUrl);\n    };\n    /**\n     * Executes a search against this web context\n     *\n     * @param query The SearchQuery definition\n     */\n    SPRest.prototype.searchSuggest = function (query) {\n        var finalQuery;\n        if (typeof query === \"string\") {\n            finalQuery = { querytext: query };\n        }\n        else {\n            finalQuery = query;\n        }\n        return new searchsuggest_1.SearchSuggest(this._baseUrl).configure(this._options).execute(finalQuery);\n    };\n    /**\n     * Executes a search against this web context\n     *\n     * @param query The SearchQuery definition\n     */\n    SPRest.prototype.search = function (query) {\n        var finalQuery;\n        if (typeof query === \"string\") {\n            finalQuery = { Querytext: query };\n        }\n        else if (query instanceof search_1.SearchQueryBuilder) {\n            finalQuery = query.toSearchQuery();\n        }\n        else {\n            finalQuery = query;\n        }\n        return new search_1.Search(this._baseUrl).configure(this._options).execute(finalQuery);\n    };\n    Object.defineProperty(SPRest.prototype, \"site\", {\n        /**\n         * Begins a site collection scoped REST request\n         *\n         */\n        get: function () {\n            return new site_1.Site(this._baseUrl).configure(this._options);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SPRest.prototype, \"web\", {\n        /**\n         * Begins a web scoped REST request\n         *\n         */\n        get: function () {\n            return new webs_1.Web(this._baseUrl).configure(this._options);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SPRest.prototype, \"profiles\", {\n        /**\n         * Access to user profile methods\n         *\n         */\n        get: function () {\n            return new userprofiles_1.UserProfileQuery(this._baseUrl).configure(this._options);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Creates a new batch object for use with the Queryable.addToBatch method\n     *\n     */\n    SPRest.prototype.createBatch = function () {\n        return this.web.createBatch();\n    };\n    Object.defineProperty(SPRest.prototype, \"utility\", {\n        /**\n         * Static utilities methods from SP.Utilities.Utility\n         */\n        get: function () {\n            return new utilities_1.UtilityMethod(this._baseUrl, \"\").configure(this._options);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Begins a cross-domain, host site scoped REST request, for use in add-in webs\n     *\n     * @param addInWebUrl The absolute url of the add-in web\n     * @param hostWebUrl The absolute url of the host web\n     */\n    SPRest.prototype.crossDomainSite = function (addInWebUrl, hostWebUrl) {\n        return this._cdImpl(site_1.Site, addInWebUrl, hostWebUrl, \"site\");\n    };\n    /**\n     * Begins a cross-domain, host web scoped REST request, for use in add-in webs\n     *\n     * @param addInWebUrl The absolute url of the add-in web\n     * @param hostWebUrl The absolute url of the host web\n     */\n    SPRest.prototype.crossDomainWeb = function (addInWebUrl, hostWebUrl) {\n        return this._cdImpl(webs_1.Web, addInWebUrl, hostWebUrl, \"web\");\n    };\n    /**\n     * Implements the creation of cross domain REST urls\n     *\n     * @param factory The constructor of the object to create Site | Web\n     * @param addInWebUrl The absolute url of the add-in web\n     * @param hostWebUrl The absolute url of the host web\n     * @param urlPart String part to append to the url \"site\" | \"web\"\n     */\n    SPRest.prototype._cdImpl = function (factory, addInWebUrl, hostWebUrl, urlPart) {\n        if (!util_1.Util.isUrlAbsolute(addInWebUrl)) {\n            throw new exceptions_1.UrlException(\"The addInWebUrl parameter must be an absolute url.\");\n        }\n        if (!util_1.Util.isUrlAbsolute(hostWebUrl)) {\n            throw new exceptions_1.UrlException(\"The hostWebUrl parameter must be an absolute url.\");\n        }\n        var url = util_1.Util.combinePaths(addInWebUrl, \"_api/SP.AppContextSite(@target)\");\n        var instance = new factory(url, urlPart);\n        instance.query.add(\"@target\", \"'\" + encodeURIComponent(hostWebUrl) + \"'\");\n        return instance.configure(this._options);\n    };\n    return SPRest;\n}());\nexports.SPRest = SPRest;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/rest.js\n// module id = 36\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar collections_1 = require(\"../collections/collections\");\nvar util_1 = require(\"../utils/util\");\nvar odata_1 = require(\"../sharepoint/odata\");\nvar pnplibconfig_1 = require(\"../configuration/pnplibconfig\");\nvar CachedDigest = (function () {\n    function CachedDigest() {\n    }\n    return CachedDigest;\n}());\nexports.CachedDigest = CachedDigest;\n// allows for the caching of digests across all HttpClient's which each have their own DigestCache wrapper.\nvar digests = new collections_1.Dictionary();\nvar DigestCache = (function () {\n    function DigestCache(_httpClient, _digests) {\n        if (_digests === void 0) { _digests = digests; }\n        this._httpClient = _httpClient;\n        this._digests = _digests;\n    }\n    DigestCache.prototype.getDigest = function (webUrl) {\n        var _this = this;\n        var cachedDigest = this._digests.get(webUrl);\n        if (cachedDigest !== null) {\n            var now = new Date();\n            if (now < cachedDigest.expiration) {\n                return Promise.resolve(cachedDigest.value);\n            }\n        }\n        var url = util_1.Util.combinePaths(webUrl, \"/_api/contextinfo\");\n        var headers = {\n            \"Accept\": \"application/json;odata=verbose\",\n            \"Content-Type\": \"application/json;odata=verbose;charset=utf-8\",\n        };\n        return this._httpClient.fetchRaw(url, {\n            cache: \"no-cache\",\n            credentials: \"same-origin\",\n            headers: util_1.Util.extend(headers, pnplibconfig_1.RuntimeConfig.headers, true),\n            method: \"POST\",\n        }).then(function (response) {\n            var parser = new odata_1.ODataDefaultParser();\n            return parser.parse(response).then(function (d) { return d.GetContextWebInformation; });\n        }).then(function (data) {\n            var newCachedDigest = new CachedDigest();\n            newCachedDigest.value = data.FormDigestValue;\n            var seconds = data.FormDigestTimeoutSeconds;\n            var expiration = new Date();\n            expiration.setTime(expiration.getTime() + 1000 * seconds);\n            newCachedDigest.expiration = expiration;\n            _this._digests.add(webUrl, newCachedDigest);\n            return newCachedDigest.value;\n        });\n    };\n    DigestCache.prototype.clear = function () {\n        this._digests.clear();\n    };\n    return DigestCache;\n}());\nexports.DigestCache = DigestCache;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/net/digestcache.js\n// module id = 37\n// module chunks = 0","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar caching_1 = require(\"./caching\");\nvar httpclient_1 = require(\"../net/httpclient\");\nvar logging_1 = require(\"../utils/logging\");\nvar util_1 = require(\"../utils/util\");\n/**\n * Resolves the context's result value\n *\n * @param context The current context\n */\nfunction returnResult(context) {\n    logging_1.Logger.log({\n        data: context.result,\n        level: logging_1.LogLevel.Verbose,\n        message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Returning result, see data property for value.\",\n    });\n    return Promise.resolve(context.result);\n}\n/**\n * Sets the result on the context\n */\nfunction setResult(context, value) {\n    return new Promise(function (resolve) {\n        context.result = value;\n        context.hasResult = true;\n        resolve(context);\n    });\n}\nexports.setResult = setResult;\n/**\n * Invokes the next method in the provided context's pipeline\n *\n * @param c The current request context\n */\nfunction next(c) {\n    if (c.pipeline.length < 1) {\n        return Promise.resolve(c);\n    }\n    return c.pipeline.shift()(c);\n}\n/**\n * Executes the current request context's pipeline\n *\n * @param context Current context\n */\nfunction pipe(context) {\n    return next(context)\n        .then(function (ctx) { return returnResult(ctx); })\n        .catch(function (e) {\n        logging_1.Logger.log({\n            data: e,\n            level: logging_1.LogLevel.Error,\n            message: \"Error in request pipeline: \" + e.message,\n        });\n        throw e;\n    });\n}\nexports.pipe = pipe;\n/**\n * decorator factory applied to methods in the pipeline to control behavior\n */\nfunction requestPipelineMethod(alwaysRun) {\n    if (alwaysRun === void 0) { alwaysRun = false; }\n    return function (target, propertyKey, descriptor) {\n        var method = descriptor.value;\n        descriptor.value = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            // if we have a result already in the pipeline, pass it along and don't call the tagged method\n            if (!alwaysRun && args.length > 0 && args[0].hasOwnProperty(\"hasResult\") && args[0].hasResult) {\n                logging_1.Logger.write(\"[\" + args[0].requestId + \"] (\" + (new Date()).getTime() + \") Skipping request pipeline method \" + propertyKey + \", existing result in pipeline.\", logging_1.LogLevel.Verbose);\n                return Promise.resolve(args[0]);\n            }\n            // apply the tagged method\n            logging_1.Logger.write(\"[\" + args[0].requestId + \"] (\" + (new Date()).getTime() + \") Calling request pipeline method \" + propertyKey + \".\", logging_1.LogLevel.Verbose);\n            // then chain the next method in the context's pipeline - allows for dynamic pipeline\n            return method.apply(target, args).then(function (ctx) { return next(ctx); });\n        };\n    };\n}\nexports.requestPipelineMethod = requestPipelineMethod;\n/**\n * Contains the methods used within the request pipeline\n */\nvar PipelineMethods = (function () {\n    function PipelineMethods() {\n    }\n    /**\n     * Logs the start of the request\n     */\n    PipelineMethods.logStart = function (context) {\n        return new Promise(function (resolve) {\n            logging_1.Logger.log({\n                data: logging_1.Logger.activeLogLevel === logging_1.LogLevel.Info ? {} : context,\n                level: logging_1.LogLevel.Info,\n                message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Beginning \" + context.verb + \" request (\" + context.requestAbsoluteUrl + \")\",\n            });\n            resolve(context);\n        });\n    };\n    /**\n     * Handles caching of the request\n     */\n    PipelineMethods.caching = function (context) {\n        return new Promise(function (resolve) {\n            // handle caching, if applicable\n            if (context.verb === \"GET\" && context.isCached) {\n                logging_1.Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Caching is enabled for request, checking cache...\", logging_1.LogLevel.Info);\n                var cacheOptions = new caching_1.CachingOptions(context.requestAbsoluteUrl.toLowerCase());\n                if (typeof context.cachingOptions !== \"undefined\") {\n                    cacheOptions = util_1.Util.extend(cacheOptions, context.cachingOptions);\n                }\n                // we may not have a valid store\n                if (cacheOptions.store !== null) {\n                    // check if we have the data in cache and if so resolve the promise and return\n                    var data = cacheOptions.store.get(cacheOptions.key);\n                    if (data !== null) {\n                        // ensure we clear any help batch dependency we are resolving from the cache\n                        logging_1.Logger.log({\n                            data: logging_1.Logger.activeLogLevel === logging_1.LogLevel.Info ? {} : data,\n                            level: logging_1.LogLevel.Info,\n                            message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Value returned from cache.\",\n                        });\n                        context.batchDependency();\n                        return setResult(context, data).then(function (ctx) { return resolve(ctx); });\n                    }\n                }\n                logging_1.Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Value not found in cache.\", logging_1.LogLevel.Info);\n                // if we don't then wrap the supplied parser in the caching parser wrapper\n                // and send things on their way\n                context.parser = new caching_1.CachingParserWrapper(context.parser, cacheOptions);\n            }\n            return resolve(context);\n        });\n    };\n    /**\n     * Sends the request\n     */\n    PipelineMethods.send = function (context) {\n        return new Promise(function (resolve, reject) {\n            // send or batch the request\n            if (context.isBatched) {\n                // we are in a batch, so add to batch, remove dependency, and resolve with the batch's promise\n                var p = context.batch.add(context.requestAbsoluteUrl, context.verb, context.options, context.parser);\n                // we release the dependency here to ensure the batch does not execute until the request is added to the batch\n                context.batchDependency();\n                logging_1.Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Batching request in batch \" + context.batch.batchId + \".\", logging_1.LogLevel.Info);\n                // we set the result as the promise which will be resolved by the batch's execution\n                resolve(setResult(context, p));\n            }\n            else {\n                logging_1.Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Sending request.\", logging_1.LogLevel.Info);\n                // we are not part of a batch, so proceed as normal\n                var client = new httpclient_1.HttpClient();\n                var opts = util_1.Util.extend(context.options || {}, { method: context.verb });\n                client.fetch(context.requestAbsoluteUrl, opts)\n                    .then(function (response) { return context.parser.parse(response); })\n                    .then(function (result) { return setResult(context, result); })\n                    .then(function (ctx) { return resolve(ctx); })\n                    .catch(function (e) { return reject(e); });\n            }\n        });\n    };\n    /**\n     * Logs the end of the request\n     */\n    PipelineMethods.logEnd = function (context) {\n        return new Promise(function (resolve) {\n            if (context.isBatched) {\n                logging_1.Logger.log({\n                    data: logging_1.Logger.activeLogLevel === logging_1.LogLevel.Info ? {} : context,\n                    level: logging_1.LogLevel.Info,\n                    message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") \" + context.verb + \" request will complete in batch \" + context.batch.batchId + \".\",\n                });\n            }\n            else {\n                logging_1.Logger.log({\n                    data: logging_1.Logger.activeLogLevel === logging_1.LogLevel.Info ? {} : context,\n                    level: logging_1.LogLevel.Info,\n                    message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Completing \" + context.verb + \" request.\",\n                });\n            }\n            resolve(context);\n        });\n    };\n    Object.defineProperty(PipelineMethods, \"default\", {\n        get: function () {\n            return [\n                PipelineMethods.logStart,\n                PipelineMethods.caching,\n                PipelineMethods.send,\n                PipelineMethods.logEnd,\n            ];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    __decorate([\n        requestPipelineMethod(true)\n    ], PipelineMethods, \"logStart\", null);\n    __decorate([\n        requestPipelineMethod()\n    ], PipelineMethods, \"caching\", null);\n    __decorate([\n        requestPipelineMethod()\n    ], PipelineMethods, \"send\", null);\n    __decorate([\n        requestPipelineMethod(true)\n    ], PipelineMethods, \"logEnd\", null);\n    return PipelineMethods;\n}());\nexports.PipelineMethods = PipelineMethods;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/pipeline.js\n// module id = 38\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = require(\"./queryable\");\nvar odata_1 = require(\"./odata\");\n/**\n * Describes a collection of Item objects\n *\n */\nvar AttachmentFiles = (function (_super) {\n    __extends(AttachmentFiles, _super);\n    /**\n     * Creates a new instance of the AttachmentFiles class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this attachments collection\n     */\n    function AttachmentFiles(baseUrl, path) {\n        if (path === void 0) { path = \"AttachmentFiles\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a Attachment File by filename\n     *\n     * @param name The name of the file, including extension.\n     */\n    AttachmentFiles.prototype.getByName = function (name) {\n        var f = new AttachmentFile(this);\n        f.concat(\"('\" + name + \"')\");\n        return f;\n    };\n    /**\n     * Adds a new attachment to the collection. Not supported for batching.\n     *\n     * @param name The name of the file, including extension.\n     * @param content The Base64 file content.\n     */\n    AttachmentFiles.prototype.add = function (name, content) {\n        var _this = this;\n        return this.clone(AttachmentFiles, \"add(FileName='\" + name + \"')\").postCore({\n            body: content,\n        }).then(function (response) {\n            return {\n                data: response,\n                file: _this.getByName(name),\n            };\n        });\n    };\n    /**\n     * Adds mjultiple new attachment to the collection. Not supported for batching.\n     *\n     * @files name The collection of files to add\n     */\n    AttachmentFiles.prototype.addMultiple = function (files) {\n        var _this = this;\n        // add the files in series so we don't get update conflicts\n        return files.reduce(function (chain, file) { return chain.then(function () { return _this.clone(AttachmentFiles, \"add(FileName='\" + file.name + \"')\").postCore({\n            body: file.content,\n        }); }); }, Promise.resolve());\n    };\n    return AttachmentFiles;\n}(queryable_1.QueryableCollection));\nexports.AttachmentFiles = AttachmentFiles;\n/**\n * Describes a single attachment file instance\n *\n */\nvar AttachmentFile = (function (_super) {\n    __extends(AttachmentFile, _super);\n    function AttachmentFile() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Gets the contents of the file as text\n     *\n     */\n    AttachmentFile.prototype.getText = function () {\n        return this.clone(AttachmentFile, \"$value\").get(new odata_1.TextFileParser());\n    };\n    /**\n     * Gets the contents of the file as a blob, does not work in Node.js\n     *\n     */\n    AttachmentFile.prototype.getBlob = function () {\n        return this.clone(AttachmentFile, \"$value\").get(new odata_1.BlobFileParser());\n    };\n    /**\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js\n     */\n    AttachmentFile.prototype.getBuffer = function () {\n        return this.clone(AttachmentFile, \"$value\").get(new odata_1.BufferFileParser());\n    };\n    /**\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js\n     */\n    AttachmentFile.prototype.getJSON = function () {\n        return this.clone(AttachmentFile, \"$value\").get(new odata_1.JSONFileParser());\n    };\n    /**\n     * Sets the content of a file. Not supported for batching\n     *\n     * @param content The value to set for the file contents\n     */\n    AttachmentFile.prototype.setContent = function (content) {\n        var _this = this;\n        return this.clone(AttachmentFile, \"$value\").postCore({\n            body: content,\n            headers: {\n                \"X-HTTP-Method\": \"PUT\",\n            },\n        }).then(function (_) { return new AttachmentFile(_this); });\n    };\n    /**\n     * Delete this attachment file\n     *\n     * @param eTag Value used in the IF-Match header, by default \"*\"\n     */\n    AttachmentFile.prototype.delete = function (eTag) {\n        if (eTag === void 0) { eTag = \"*\"; }\n        return this.postCore({\n            headers: {\n                \"IF-Match\": eTag,\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    return AttachmentFile;\n}(queryable_1.QueryableInstance));\nexports.AttachmentFile = AttachmentFile;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/attachmentfiles.js\n// module id = 39\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = require(\"./queryable\");\nvar util_1 = require(\"../utils/util\");\n/**\n * Describes the views available in the current context\n *\n */\nvar Views = (function (_super) {\n    __extends(Views, _super);\n    /**\n     * Creates a new instance of the Views class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    function Views(baseUrl, path) {\n        if (path === void 0) { path = \"views\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a view by guid id\n     *\n     * @param id The GUID id of the view\n     */\n    Views.prototype.getById = function (id) {\n        var v = new View(this);\n        v.concat(\"('\" + id + \"')\");\n        return v;\n    };\n    /**\n     * Gets a view by title (case-sensitive)\n     *\n     * @param title The case-sensitive title of the view\n     */\n    Views.prototype.getByTitle = function (title) {\n        return new View(this, \"getByTitle('\" + title + \"')\");\n    };\n    /**\n     * Adds a new view to the collection\n     *\n     * @param title The new views's title\n     * @param personalView True if this is a personal view, otherwise false, default = false\n     * @param additionalSettings Will be passed as part of the view creation body\n     */\n    Views.prototype.add = function (title, personalView, additionalSettings) {\n        var _this = this;\n        if (personalView === void 0) { personalView = false; }\n        if (additionalSettings === void 0) { additionalSettings = {}; }\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"PersonalView\": personalView,\n            \"Title\": title,\n            \"__metadata\": { \"type\": \"SP.View\" },\n        }, additionalSettings));\n        return this.clone(Views, null, true).postAsCore({ body: postBody }).then(function (data) {\n            return {\n                data: data,\n                view: _this.getById(data.Id),\n            };\n        });\n    };\n    return Views;\n}(queryable_1.QueryableCollection));\nexports.Views = Views;\n/**\n * Describes a single View instance\n *\n */\nvar View = (function (_super) {\n    __extends(View, _super);\n    function View() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(View.prototype, \"fields\", {\n        get: function () {\n            return new ViewFields(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Updates this view intance with the supplied properties\n     *\n     * @param properties A plain object hash of values to update for the view\n     */\n    View.prototype.update = function (properties) {\n        var _this = this;\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"__metadata\": { \"type\": \"SP.View\" },\n        }, properties));\n        return this.postCore({\n            body: postBody,\n            headers: {\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then(function (data) {\n            return {\n                data: data,\n                view: _this,\n            };\n        });\n    };\n    /**\n     * Delete this view\n     *\n     */\n    View.prototype.delete = function () {\n        return this.postCore({\n            headers: {\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    /**\n     * Returns the list view as HTML.\n     *\n     */\n    View.prototype.renderAsHtml = function () {\n        return this.clone(queryable_1.Queryable, \"renderashtml\", true).get();\n    };\n    return View;\n}(queryable_1.QueryableInstance));\nexports.View = View;\nvar ViewFields = (function (_super) {\n    __extends(ViewFields, _super);\n    function ViewFields(baseUrl, path) {\n        if (path === void 0) { path = \"viewfields\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a value that specifies the XML schema that represents the collection.\n     */\n    ViewFields.prototype.getSchemaXml = function () {\n        return this.clone(queryable_1.Queryable, \"schemaxml\", true).get();\n    };\n    /**\n     * Adds the field with the specified field internal name or display name to the collection.\n     *\n     * @param fieldTitleOrInternalName The case-sensitive internal name or display name of the field to add.\n     */\n    ViewFields.prototype.add = function (fieldTitleOrInternalName) {\n        return this.clone(ViewFields, \"addviewfield('\" + fieldTitleOrInternalName + \"')\", true).postCore();\n    };\n    /**\n     * Moves the field with the specified field internal name to the specified position in the collection.\n     *\n     * @param fieldInternalName The case-sensitive internal name of the field to move.\n     * @param index The zero-based index of the new position for the field.\n     */\n    ViewFields.prototype.move = function (fieldInternalName, index) {\n        return this.clone(ViewFields, \"moveviewfieldto\", true).postCore({\n            body: JSON.stringify({ \"field\": fieldInternalName, \"index\": index }),\n        });\n    };\n    /**\n     * Removes all the fields from the collection.\n     */\n    ViewFields.prototype.removeAll = function () {\n        return this.clone(ViewFields, \"removeallviewfields\", true).postCore();\n    };\n    /**\n     * Removes the field with the specified field internal name from the collection.\n     *\n     * @param fieldInternalName The case-sensitive internal name of the field to remove from the view.\n     */\n    ViewFields.prototype.remove = function (fieldInternalName) {\n        return this.clone(ViewFields, \"removeviewfield('\" + fieldInternalName + \"')\", true).postCore();\n    };\n    return ViewFields;\n}(queryable_1.QueryableCollection));\nexports.ViewFields = ViewFields;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/views.js\n// module id = 40\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = require(\"./queryable\");\n/**\n * Describes a collection of Field objects\n *\n */\nvar Forms = (function (_super) {\n    __extends(Forms, _super);\n    /**\n     * Creates a new instance of the Fields class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    function Forms(baseUrl, path) {\n        if (path === void 0) { path = \"forms\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a form by id\n     *\n     * @param id The guid id of the item to retrieve\n     */\n    Forms.prototype.getById = function (id) {\n        var i = new Form(this);\n        i.concat(\"('\" + id + \"')\");\n        return i;\n    };\n    return Forms;\n}(queryable_1.QueryableCollection));\nexports.Forms = Forms;\n/**\n * Describes a single of Form instance\n *\n */\nvar Form = (function (_super) {\n    __extends(Form, _super);\n    function Form() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return Form;\n}(queryable_1.QueryableInstance));\nexports.Form = Form;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/forms.js\n// module id = 41\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = require(\"./queryable\");\n/**\n * Describes a collection of webhook subscriptions\n *\n */\nvar Subscriptions = (function (_super) {\n    __extends(Subscriptions, _super);\n    /**\n     * Creates a new instance of the Subscriptions class\n     *\n     * @param baseUrl - The url or Queryable which forms the parent of this webhook subscriptions collection\n     */\n    function Subscriptions(baseUrl, path) {\n        if (path === void 0) { path = \"subscriptions\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Returns all the webhook subscriptions or the specified webhook subscription\n     *\n     * @param subscriptionId The id of a specific webhook subscription to retrieve, omit to retrieve all the webhook subscriptions\n     */\n    Subscriptions.prototype.getById = function (subscriptionId) {\n        var subscription = new Subscription(this);\n        subscription.concat(\"('\" + subscriptionId + \"')\");\n        return subscription;\n    };\n    /**\n     * Creates a new webhook subscription\n     *\n     * @param notificationUrl The url to receive the notifications\n     * @param expirationDate The date and time to expire the subscription in the form YYYY-MM-ddTHH:mm:ss+00:00 (maximum of 6 months)\n     * @param clientState A client specific string (defaults to pnp-js-core-subscription when omitted)\n     */\n    Subscriptions.prototype.add = function (notificationUrl, expirationDate, clientState) {\n        var _this = this;\n        var postBody = JSON.stringify({\n            \"clientState\": clientState || \"pnp-js-core-subscription\",\n            \"expirationDateTime\": expirationDate,\n            \"notificationUrl\": notificationUrl,\n            \"resource\": this.toUrl(),\n        });\n        return this.postCore({ body: postBody, headers: { \"Content-Type\": \"application/json\" } }).then(function (result) {\n            return { data: result, subscription: _this.getById(result.id) };\n        });\n    };\n    return Subscriptions;\n}(queryable_1.QueryableCollection));\nexports.Subscriptions = Subscriptions;\n/**\n * Describes a single webhook subscription instance\n *\n */\nvar Subscription = (function (_super) {\n    __extends(Subscription, _super);\n    function Subscription() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Renews this webhook subscription\n     *\n     * @param expirationDate The date and time to expire the subscription in the form YYYY-MM-ddTHH:mm:ss+00:00 (maximum of 6 months)\n     */\n    Subscription.prototype.update = function (expirationDate) {\n        var _this = this;\n        var postBody = JSON.stringify({\n            \"expirationDateTime\": expirationDate,\n        });\n        return this.patchCore({ body: postBody, headers: { \"Content-Type\": \"application/json\" } }).then(function (data) {\n            return { data: data, subscription: _this };\n        });\n    };\n    /**\n     * Removes this webhook subscription\n     *\n     */\n    Subscription.prototype.delete = function () {\n        return _super.prototype.deleteCore.call(this);\n    };\n    return Subscription;\n}(queryable_1.QueryableInstance));\nexports.Subscription = Subscription;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/subscriptions.js\n// module id = 42\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = require(\"./queryable\");\nvar RelatedItemManagerImpl = (function (_super) {\n    __extends(RelatedItemManagerImpl, _super);\n    function RelatedItemManagerImpl(baseUrl, path) {\n        if (path === void 0) { path = \"_api/SP.RelatedItemManager\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    RelatedItemManagerImpl.FromUrl = function (url) {\n        if (url === null) {\n            return new RelatedItemManagerImpl(\"\");\n        }\n        var index = url.indexOf(\"_api/\");\n        if (index > -1) {\n            return new RelatedItemManagerImpl(url.substr(0, index));\n        }\n        return new RelatedItemManagerImpl(url);\n    };\n    RelatedItemManagerImpl.prototype.getRelatedItems = function (sourceListName, sourceItemId) {\n        var query = this.clone(RelatedItemManagerImpl, null, true);\n        query.concat(\".GetRelatedItems\");\n        return query.postCore({\n            body: JSON.stringify({\n                SourceItemID: sourceItemId,\n                SourceListName: sourceListName,\n            }),\n        });\n    };\n    RelatedItemManagerImpl.prototype.getPageOneRelatedItems = function (sourceListName, sourceItemId) {\n        var query = this.clone(RelatedItemManagerImpl, null, true);\n        query.concat(\".GetPageOneRelatedItems\");\n        return query.postCore({\n            body: JSON.stringify({\n                SourceItemID: sourceItemId,\n                SourceListName: sourceListName,\n            }),\n        });\n    };\n    RelatedItemManagerImpl.prototype.addSingleLink = function (sourceListName, sourceItemId, sourceWebUrl, targetListName, targetItemID, targetWebUrl, tryAddReverseLink) {\n        if (tryAddReverseLink === void 0) { tryAddReverseLink = false; }\n        var query = this.clone(RelatedItemManagerImpl, null, true);\n        query.concat(\".AddSingleLink\");\n        return query.postCore({\n            body: JSON.stringify({\n                SourceItemID: sourceItemId,\n                SourceListName: sourceListName,\n                SourceWebUrl: sourceWebUrl,\n                TargetItemID: targetItemID,\n                TargetListName: targetListName,\n                TargetWebUrl: targetWebUrl,\n                TryAddReverseLink: tryAddReverseLink,\n            }),\n        });\n    };\n    /**\n     * Adds a related item link from an item specified by list name and item id, to an item specified by url\n     *\n     * @param sourceListName The source list name or list id\n     * @param sourceItemId The source item id\n     * @param targetItemUrl The target item url\n     * @param tryAddReverseLink If set to true try to add the reverse link (will not return error if it fails)\n     */\n    RelatedItemManagerImpl.prototype.addSingleLinkToUrl = function (sourceListName, sourceItemId, targetItemUrl, tryAddReverseLink) {\n        if (tryAddReverseLink === void 0) { tryAddReverseLink = false; }\n        var query = this.clone(RelatedItemManagerImpl, null, true);\n        query.concat(\".AddSingleLinkToUrl\");\n        return query.postCore({\n            body: JSON.stringify({\n                SourceItemID: sourceItemId,\n                SourceListName: sourceListName,\n                TargetItemUrl: targetItemUrl,\n                TryAddReverseLink: tryAddReverseLink,\n            }),\n        });\n    };\n    /**\n     * Adds a related item link from an item specified by url, to an item specified by list name and item id\n     *\n     * @param sourceItemUrl The source item url\n     * @param targetListName The target list name or list id\n     * @param targetItemId The target item id\n     * @param tryAddReverseLink If set to true try to add the reverse link (will not return error if it fails)\n     */\n    RelatedItemManagerImpl.prototype.addSingleLinkFromUrl = function (sourceItemUrl, targetListName, targetItemId, tryAddReverseLink) {\n        if (tryAddReverseLink === void 0) { tryAddReverseLink = false; }\n        var query = this.clone(RelatedItemManagerImpl, null, true);\n        query.concat(\".AddSingleLinkFromUrl\");\n        return query.postCore({\n            body: JSON.stringify({\n                SourceItemUrl: sourceItemUrl,\n                TargetItemID: targetItemId,\n                TargetListName: targetListName,\n                TryAddReverseLink: tryAddReverseLink,\n            }),\n        });\n    };\n    RelatedItemManagerImpl.prototype.deleteSingleLink = function (sourceListName, sourceItemId, sourceWebUrl, targetListName, targetItemId, targetWebUrl, tryDeleteReverseLink) {\n        if (tryDeleteReverseLink === void 0) { tryDeleteReverseLink = false; }\n        var query = this.clone(RelatedItemManagerImpl, null, true);\n        query.concat(\".DeleteSingleLink\");\n        return query.postCore({\n            body: JSON.stringify({\n                SourceItemID: sourceItemId,\n                SourceListName: sourceListName,\n                SourceWebUrl: sourceWebUrl,\n                TargetItemID: targetItemId,\n                TargetListName: targetListName,\n                TargetWebUrl: targetWebUrl,\n                TryDeleteReverseLink: tryDeleteReverseLink,\n            }),\n        });\n    };\n    return RelatedItemManagerImpl;\n}(queryable_1.Queryable));\nexports.RelatedItemManagerImpl = RelatedItemManagerImpl;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/relateditems.js\n// module id = 43\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = require(\"./queryable\");\nvar files_1 = require(\"../utils/files\");\nvar odata_1 = require(\"./odata\");\nvar UserProfileQuery = (function (_super) {\n    __extends(UserProfileQuery, _super);\n    /**\n     * Creates a new instance of the UserProfileQuery class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this user profile query\n     */\n    function UserProfileQuery(baseUrl, path) {\n        if (path === void 0) { path = \"_api/sp.userprofiles.peoplemanager\"; }\n        var _this = _super.call(this, baseUrl, path) || this;\n        _this.profileLoader = new ProfileLoader(baseUrl);\n        return _this;\n    }\n    Object.defineProperty(UserProfileQuery.prototype, \"editProfileLink\", {\n        /**\n         * The url of the edit profile page for the current user\n         */\n        get: function () {\n            return this.clone(UserProfileQuery, \"EditProfileLink\").getAs(odata_1.ODataValue());\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(UserProfileQuery.prototype, \"isMyPeopleListPublic\", {\n        /**\n         * A boolean value that indicates whether the current user's \"People I'm Following\" list is public\n         */\n        get: function () {\n            return this.clone(UserProfileQuery, \"IsMyPeopleListPublic\").getAs(odata_1.ODataValue());\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * A boolean value that indicates whether the current user is being followed by the specified user\n     *\n     * @param loginName The account name of the user\n     */\n    UserProfileQuery.prototype.amIFollowedBy = function (loginName) {\n        var q = this.clone(UserProfileQuery, \"amifollowedby(@v)\", true);\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return q.get();\n    };\n    /**\n     * A boolean value that indicates whether the current user is following the specified user\n     *\n     * @param loginName The account name of the user\n     */\n    UserProfileQuery.prototype.amIFollowing = function (loginName) {\n        var q = this.clone(UserProfileQuery, \"amifollowing(@v)\", true);\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return q.get();\n    };\n    /**\n     * Gets tags that the current user is following\n     *\n     * @param maxCount The maximum number of tags to retrieve (default is 20)\n     */\n    UserProfileQuery.prototype.getFollowedTags = function (maxCount) {\n        if (maxCount === void 0) { maxCount = 20; }\n        return this.clone(UserProfileQuery, \"getfollowedtags(\" + maxCount + \")\", true).get();\n    };\n    /**\n     * Gets the people who are following the specified user\n     *\n     * @param loginName The account name of the user\n     */\n    UserProfileQuery.prototype.getFollowersFor = function (loginName) {\n        var q = this.clone(UserProfileQuery, \"getfollowersfor(@v)\", true);\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return q.get();\n    };\n    Object.defineProperty(UserProfileQuery.prototype, \"myFollowers\", {\n        /**\n         * Gets the people who are following the current user\n         *\n         */\n        get: function () {\n            return new queryable_1.QueryableCollection(this, \"getmyfollowers\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(UserProfileQuery.prototype, \"myProperties\", {\n        /**\n         * Gets user properties for the current user\n         *\n         */\n        get: function () {\n            return new UserProfileQuery(this, \"getmyproperties\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the people who the specified user is following\n     *\n     * @param loginName The account name of the user.\n     */\n    UserProfileQuery.prototype.getPeopleFollowedBy = function (loginName) {\n        var q = this.clone(UserProfileQuery, \"getpeoplefollowedby(@v)\", true);\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return q.get();\n    };\n    /**\n     * Gets user properties for the specified user.\n     *\n     * @param loginName The account name of the user.\n     */\n    UserProfileQuery.prototype.getPropertiesFor = function (loginName) {\n        var q = this.clone(UserProfileQuery, \"getpropertiesfor(@v)\", true);\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return q.get();\n    };\n    Object.defineProperty(UserProfileQuery.prototype, \"trendingTags\", {\n        /**\n         * Gets the 20 most popular hash tags over the past week, sorted so that the most popular tag appears first\n         *\n         */\n        get: function () {\n            var q = this.clone(UserProfileQuery, null, true);\n            q.concat(\".gettrendingtags\");\n            return q.get();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the specified user profile property for the specified user\n     *\n     * @param loginName The account name of the user\n     * @param propertyName The case-sensitive name of the property to get\n     */\n    UserProfileQuery.prototype.getUserProfilePropertyFor = function (loginName, propertyName) {\n        var q = this.clone(UserProfileQuery, \"getuserprofilepropertyfor(accountname=@v, propertyname='\" + propertyName + \"')\", true);\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return q.get();\n    };\n    /**\n     * Removes the specified user from the user's list of suggested people to follow\n     *\n     * @param loginName The account name of the user\n     */\n    UserProfileQuery.prototype.hideSuggestion = function (loginName) {\n        var q = this.clone(UserProfileQuery, \"hidesuggestion(@v)\", true);\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return q.postCore();\n    };\n    /**\n     * A boolean values that indicates whether the first user is following the second user\n     *\n     * @param follower The account name of the user who might be following the followee\n     * @param followee The account name of the user who might be followed by the follower\n     */\n    UserProfileQuery.prototype.isFollowing = function (follower, followee) {\n        var q = this.clone(UserProfileQuery, null, true);\n        q.concat(\".isfollowing(possiblefolloweraccountname=@v, possiblefolloweeaccountname=@y)\");\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(follower) + \"'\");\n        q.query.add(\"@y\", \"'\" + encodeURIComponent(followee) + \"'\");\n        return q.get();\n    };\n    /**\n     * Uploads and sets the user profile picture (Users can upload a picture to their own profile only). Not supported for batching.\n     *\n     * @param profilePicSource Blob data representing the user's picture in BMP, JPEG, or PNG format of up to 4.76MB\n     */\n    UserProfileQuery.prototype.setMyProfilePic = function (profilePicSource) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            files_1.readBlobAsArrayBuffer(profilePicSource).then(function (buffer) {\n                var request = new UserProfileQuery(_this, \"setmyprofilepicture\");\n                request.postCore({\n                    body: String.fromCharCode.apply(null, new Uint16Array(buffer)),\n                }).then(function (_) { return resolve(); });\n            }).catch(function (e) { return reject(e); });\n        });\n    };\n    /**\n     * Provisions one or more users' personal sites. (My Site administrator on SharePoint Online only)\n     *\n     * @param emails The email addresses of the users to provision sites for\n     */\n    UserProfileQuery.prototype.createPersonalSiteEnqueueBulk = function () {\n        var emails = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            emails[_i] = arguments[_i];\n        }\n        return this.profileLoader.createPersonalSiteEnqueueBulk(emails);\n    };\n    Object.defineProperty(UserProfileQuery.prototype, \"ownerUserProfile\", {\n        /**\n         * Gets the user profile of the site owner\n         *\n         */\n        get: function () {\n            return this.profileLoader.ownerUserProfile;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(UserProfileQuery.prototype, \"userProfile\", {\n        /**\n         * Gets the user profile for the current user\n         */\n        get: function () {\n            return this.profileLoader.userProfile;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Enqueues creating a personal site for this user, which can be used to share documents, web pages, and other files\n     *\n     * @param interactiveRequest true if interactively (web) initiated request, or false (default) if non-interactively (client) initiated request\n     */\n    UserProfileQuery.prototype.createPersonalSite = function (interactiveRequest) {\n        if (interactiveRequest === void 0) { interactiveRequest = false; }\n        return this.profileLoader.createPersonalSite(interactiveRequest);\n    };\n    /**\n     * Sets the privacy settings for this profile\n     *\n     * @param share true to make all social data public; false to make all social data private\n     */\n    UserProfileQuery.prototype.shareAllSocialData = function (share) {\n        return this.profileLoader.shareAllSocialData(share);\n    };\n    return UserProfileQuery;\n}(queryable_1.QueryableInstance));\nexports.UserProfileQuery = UserProfileQuery;\nvar ProfileLoader = (function (_super) {\n    __extends(ProfileLoader, _super);\n    /**\n   * Creates a new instance of the ProfileLoader class\n   *\n   * @param baseUrl The url or Queryable which forms the parent of this profile loader\n   */\n    function ProfileLoader(baseUrl, path) {\n        if (path === void 0) { path = \"_api/sp.userprofiles.profileloader.getprofileloader\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Provisions one or more users' personal sites. (My Site administrator on SharePoint Online only)\n     *\n     * @param emails The email addresses of the users to provision sites for\n     */\n    ProfileLoader.prototype.createPersonalSiteEnqueueBulk = function (emails) {\n        return this.clone(ProfileLoader, \"createpersonalsiteenqueuebulk\").postCore({\n            body: JSON.stringify({ \"emailIDs\": emails }),\n        });\n    };\n    Object.defineProperty(ProfileLoader.prototype, \"ownerUserProfile\", {\n        /**\n         * Gets the user profile of the site owner.\n         *\n         */\n        get: function () {\n            var q = this.getParent(ProfileLoader, this.parentUrl, \"_api/sp.userprofiles.profileloader.getowneruserprofile\");\n            if (this.hasBatch) {\n                q = q.inBatch(this.batch);\n            }\n            return q.postAsCore();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProfileLoader.prototype, \"userProfile\", {\n        /**\n         * Gets the user profile of the current user.\n         *\n         */\n        get: function () {\n            return this.clone(ProfileLoader, \"getuserprofile\", true).postAsCore();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Enqueues creating a personal site for this user, which can be used to share documents, web pages, and other files.\n     *\n     * @param interactiveRequest true if interactively (web) initiated request, or false (default) if non-interactively (client) initiated request\n     */\n    ProfileLoader.prototype.createPersonalSite = function (interactiveRequest) {\n        if (interactiveRequest === void 0) { interactiveRequest = false; }\n        return this.clone(ProfileLoader, \"getuserprofile/createpersonalsiteenque(\" + interactiveRequest + \")\", true).postCore();\n    };\n    /**\n     * Sets the privacy settings for this profile\n     *\n     * @param share true to make all social data public; false to make all social data private.\n     */\n    ProfileLoader.prototype.shareAllSocialData = function (share) {\n        return this.clone(ProfileLoader, \"getuserprofile/shareallsocialdata(\" + share + \")\", true).postCore();\n    };\n    return ProfileLoader;\n}(queryable_1.Queryable));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/userprofiles.js\n// module id = 44\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Reads a blob as text\n *\n * @param blob The data to read\n */\nfunction readBlobAsText(blob) {\n    return readBlobAs(blob, \"string\");\n}\nexports.readBlobAsText = readBlobAsText;\n/**\n * Reads a blob into an array buffer\n *\n * @param blob The data to read\n */\nfunction readBlobAsArrayBuffer(blob) {\n    return readBlobAs(blob, \"buffer\");\n}\nexports.readBlobAsArrayBuffer = readBlobAsArrayBuffer;\n/**\n * Generic method to read blob's content\n *\n * @param blob The data to read\n * @param mode The read mode\n */\nfunction readBlobAs(blob, mode) {\n    return new Promise(function (resolve, reject) {\n        try {\n            var reader = new FileReader();\n            reader.onload = function (e) {\n                resolve(e.target.result);\n            };\n            switch (mode) {\n                case \"string\":\n                    reader.readAsText(blob);\n                    break;\n                case \"buffer\":\n                    reader.readAsArrayBuffer(blob);\n                    break;\n            }\n        }\n        catch (e) {\n            reject(e);\n        }\n    });\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/utils/files.js\n// module id = 45\n// module chunks = 0","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"../sharepoint/index\"));\nvar httpclient_1 = require(\"../net/httpclient\");\nexports.HttpClient = httpclient_1.HttpClient;\nvar sprequestexecutorclient_1 = require(\"../net/sprequestexecutorclient\");\nexports.SPRequestExecutorClient = sprequestexecutorclient_1.SPRequestExecutorClient;\nvar nodefetchclient_1 = require(\"../net/nodefetchclient\");\nexports.NodeFetchClient = nodefetchclient_1.NodeFetchClient;\nvar fetchclient_1 = require(\"../net/fetchclient\");\nexports.FetchClient = fetchclient_1.FetchClient;\n__export(require(\"../configuration/providers/index\"));\nvar collections_1 = require(\"../collections/collections\");\nexports.Dictionary = collections_1.Dictionary;\nvar util_1 = require(\"../utils/util\");\nexports.Util = util_1.Util;\n__export(require(\"../utils/logging\"));\n__export(require(\"../utils/exceptions\"));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/types/index.js\n// module id = 46\n// module chunks = 0","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./caching\"));\nvar files_1 = require(\"./files\");\nexports.CheckinType = files_1.CheckinType;\nexports.WebPartsPersonalizationScope = files_1.WebPartsPersonalizationScope;\nexports.MoveOperations = files_1.MoveOperations;\nexports.TemplateFileType = files_1.TemplateFileType;\nexports.File = files_1.File;\nexports.Files = files_1.Files;\nvar folders_1 = require(\"./folders\");\nexports.Folder = folders_1.Folder;\nexports.Folders = folders_1.Folders;\nvar items_1 = require(\"./items\");\nexports.Item = items_1.Item;\nexports.Items = items_1.Items;\nexports.PagedItemCollection = items_1.PagedItemCollection;\nvar navigation_1 = require(\"./navigation\");\nexports.NavigationNodes = navigation_1.NavigationNodes;\nexports.NavigationNode = navigation_1.NavigationNode;\nvar lists_1 = require(\"./lists\");\nexports.List = lists_1.List;\nexports.Lists = lists_1.Lists;\nvar odata_1 = require(\"./odata\");\nexports.extractOdataId = odata_1.extractOdataId;\nexports.ODataParserBase = odata_1.ODataParserBase;\nexports.ODataDefaultParser = odata_1.ODataDefaultParser;\nexports.ODataRaw = odata_1.ODataRaw;\nexports.ODataValue = odata_1.ODataValue;\nexports.ODataEntity = odata_1.ODataEntity;\nexports.ODataEntityArray = odata_1.ODataEntityArray;\nexports.TextFileParser = odata_1.TextFileParser;\nexports.BlobFileParser = odata_1.BlobFileParser;\nexports.BufferFileParser = odata_1.BufferFileParser;\nexports.JSONFileParser = odata_1.JSONFileParser;\nvar queryable_1 = require(\"./queryable\");\nexports.Queryable = queryable_1.Queryable;\nexports.QueryableInstance = queryable_1.QueryableInstance;\nexports.QueryableCollection = queryable_1.QueryableCollection;\nvar roles_1 = require(\"./roles\");\nexports.RoleDefinitionBindings = roles_1.RoleDefinitionBindings;\nvar search_1 = require(\"./search\");\nexports.Search = search_1.Search;\nexports.SearchQueryBuilder = search_1.SearchQueryBuilder;\nexports.SearchResults = search_1.SearchResults;\nexports.SortDirection = search_1.SortDirection;\nexports.ReorderingRuleMatchType = search_1.ReorderingRuleMatchType;\nexports.QueryPropertyValueType = search_1.QueryPropertyValueType;\nexports.SearchBuiltInSourceId = search_1.SearchBuiltInSourceId;\nvar searchsuggest_1 = require(\"./searchsuggest\");\nexports.SearchSuggest = searchsuggest_1.SearchSuggest;\nexports.SearchSuggestResult = searchsuggest_1.SearchSuggestResult;\nvar site_1 = require(\"./site\");\nexports.Site = site_1.Site;\n__export(require(\"./types\"));\nvar utilities_1 = require(\"./utilities\");\nexports.UtilityMethod = utilities_1.UtilityMethod;\nvar webparts_1 = require(\"./webparts\");\nexports.WebPartDefinitions = webparts_1.WebPartDefinitions;\nexports.WebPartDefinition = webparts_1.WebPartDefinition;\nexports.WebPart = webparts_1.WebPart;\nvar webs_1 = require(\"./webs\");\nexports.Web = webs_1.Web;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/index.js\n// module id = 47\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"../utils/util\");\nvar exceptions_1 = require(\"../utils/exceptions\");\n/**\n * Makes requests using the SP.RequestExecutor library.\n */\nvar SPRequestExecutorClient = (function () {\n    function SPRequestExecutorClient() {\n        /**\n         * Converts a SharePoint REST API response to a fetch API response.\n         */\n        this.convertToResponse = function (spResponse) {\n            var responseHeaders = new Headers();\n            for (var h in spResponse.headers) {\n                if (spResponse.headers[h]) {\n                    responseHeaders.append(h, spResponse.headers[h]);\n                }\n            }\n            // issue #256, Cannot have an empty string body when creating a Response with status 204\n            var body = spResponse.statusCode === 204 ? null : spResponse.body;\n            return new Response(body, {\n                headers: responseHeaders,\n                status: spResponse.statusCode,\n                statusText: spResponse.statusText,\n            });\n        };\n    }\n    /**\n     * Fetches a URL using the SP.RequestExecutor library.\n     */\n    SPRequestExecutorClient.prototype.fetch = function (url, options) {\n        var _this = this;\n        if (typeof SP === \"undefined\" || typeof SP.RequestExecutor === \"undefined\") {\n            throw new exceptions_1.SPRequestExecutorUndefinedException();\n        }\n        var addinWebUrl = url.substring(0, url.indexOf(\"/_api\")), executor = new SP.RequestExecutor(addinWebUrl);\n        var headers = {}, iterator, temp;\n        if (options.headers && options.headers instanceof Headers) {\n            iterator = options.headers.entries();\n            temp = iterator.next();\n            while (!temp.done) {\n                headers[temp.value[0]] = temp.value[1];\n                temp = iterator.next();\n            }\n        }\n        else {\n            headers = options.headers;\n        }\n        return new Promise(function (resolve, reject) {\n            var requestOptions = {\n                error: function (error) {\n                    reject(_this.convertToResponse(error));\n                },\n                headers: headers,\n                method: options.method,\n                success: function (response) {\n                    resolve(_this.convertToResponse(response));\n                },\n                url: url,\n            };\n            if (options.body) {\n                requestOptions = util_1.Util.extend(requestOptions, { body: options.body });\n            }\n            else {\n                requestOptions = util_1.Util.extend(requestOptions, { binaryStringRequestBody: true });\n            }\n            executor.executeAsync(requestOptions);\n        });\n    };\n    return SPRequestExecutorClient;\n}());\nexports.SPRequestExecutorClient = SPRequestExecutorClient;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/net/sprequestexecutorclient.js\n// module id = 48\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar exceptions_1 = require(\"../utils/exceptions\");\n/**\n * This module is substituted for the NodeFetchClient.ts during the packaging process. This helps to reduce the pnp.js file size by\n * not including all of the node dependencies\n */\nvar NodeFetchClient = (function () {\n    function NodeFetchClient() {\n    }\n    /**\n     * Always throws an error that NodeFetchClient is not supported for use in the browser\n     */\n    NodeFetchClient.prototype.fetch = function () {\n        throw new exceptions_1.NodeFetchClientUnsupportedException();\n    };\n    return NodeFetchClient;\n}());\nexports.NodeFetchClient = NodeFetchClient;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/net/nodefetchclientbrowser.js\n// module id = 49\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar cachingConfigurationProvider_1 = require(\"./cachingConfigurationProvider\");\nexports.CachingConfigurationProvider = cachingConfigurationProvider_1.default;\nvar spListConfigurationProvider_1 = require(\"./spListConfigurationProvider\");\nexports.SPListConfigurationProvider = spListConfigurationProvider_1.default;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/configuration/providers/index.js\n// module id = 50\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar cachingConfigurationProvider_1 = require(\"./cachingConfigurationProvider\");\n/**\n * A configuration provider which loads configuration values from a SharePoint list\n *\n */\nvar SPListConfigurationProvider = (function () {\n    /**\n     * Creates a new SharePoint list based configuration provider\n     * @constructor\n     * @param {string} webUrl Url of the SharePoint site, where the configuration list is located\n     * @param {string} listTitle Title of the SharePoint list, which contains the configuration settings (optional, default = \"config\")\n     */\n    function SPListConfigurationProvider(sourceWeb, sourceListTitle) {\n        if (sourceListTitle === void 0) { sourceListTitle = \"config\"; }\n        this.sourceWeb = sourceWeb;\n        this.sourceListTitle = sourceListTitle;\n    }\n    Object.defineProperty(SPListConfigurationProvider.prototype, \"web\", {\n        /**\n         * Gets the url of the SharePoint site, where the configuration list is located\n         *\n         * @return {string} Url address of the site\n         */\n        get: function () {\n            return this.sourceWeb;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SPListConfigurationProvider.prototype, \"listTitle\", {\n        /**\n         * Gets the title of the SharePoint list, which contains the configuration settings\n         *\n         * @return {string} List title\n         */\n        get: function () {\n            return this.sourceListTitle;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Loads the configuration values from the SharePoint list\n     *\n     * @return {Promise<TypedHash<string>>} Promise of loaded configuration values\n     */\n    SPListConfigurationProvider.prototype.getConfiguration = function () {\n        return this.web.lists.getByTitle(this.listTitle).items.select(\"Title\", \"Value\")\n            .getAs().then(function (data) {\n            return data.reduce(function (configuration, item) {\n                return Object.defineProperty(configuration, item.Title, {\n                    configurable: false,\n                    enumerable: false,\n                    value: item.Value,\n                    writable: false,\n                });\n            }, {});\n        });\n    };\n    /**\n     * Wraps the current provider in a cache enabled provider\n     *\n     * @return {CachingConfigurationProvider} Caching providers which wraps the current provider\n     */\n    SPListConfigurationProvider.prototype.asCaching = function () {\n        var cacheKey = \"splist_\" + this.web.toUrl() + \"+\" + this.listTitle;\n        return new cachingConfigurationProvider_1.default(this, cacheKey);\n    };\n    return SPListConfigurationProvider;\n}());\nexports.default = SPListConfigurationProvider;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/configuration/providers/spListConfigurationProvider.js\n// module id = 51\n// module chunks = 0"],"sourceRoot":""}