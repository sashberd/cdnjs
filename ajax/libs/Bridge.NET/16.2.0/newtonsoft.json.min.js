/*
 * @version   : 1.2.0 - A Bridge.NET implementation of Newtonsoft.Json
 * @author    : Object.NET, Inc. http://www.bridge.net/
 * @date      : 2017-08-23
 * @copyright : Copyright (c) 2008-2017, Object.NET, Inc. (http://www.object.net/). All rights reserved.
 * @license   : See license.txt and https://github.com/bridgedotnet/Bridge.NET/blob/master/LICENSE.
 */
Bridge.assembly("Newtonsoft.Json",function(){"use strict";Bridge.define("Newtonsoft.Json.Formatting",{$kind:"enum",statics:{fields:{None:0,Indented:1}}});Bridge.define("Newtonsoft.Json.JsonConstructorAttribute",{inherits:[System.Attribute]});Bridge.define("Newtonsoft.Json.JsonException",{inherits:[System.Exception],ctors:{ctor:function(){this.$initialize();System.Exception.ctor.call(this)},$ctor1:function(message){this.$initialize();System.Exception.ctor.call(this,message)},$ctor2:function(message,innerException){this.$initialize();System.Exception.ctor.call(this,message,innerException)}}});Bridge.define("Newtonsoft.Json.JsonSerializerSettings",{statics:{fields:{DefaultNullValueHandling:0,DefaultTypeNameHandling:0},ctors:{init:function(){this.DefaultNullValueHandling=Newtonsoft.Json.NullValueHandling.Include;this.DefaultTypeNameHandling=Newtonsoft.Json.TypeNameHandling.None}}},fields:{_typeNameHandling:null,_nullValueHandling:null},props:{NullValueHandling:{get:function(){var $t;return $t=this._nullValueHandling,$t!=null?$t:Newtonsoft.Json.JsonSerializerSettings.DefaultNullValueHandling},set:function(value){this._nullValueHandling=value}},TypeNameHandling:{get:function(){var $t;return $t=this._typeNameHandling,$t!=null?$t:Newtonsoft.Json.JsonSerializerSettings.DefaultTypeNameHandling},set:function(value){this._typeNameHandling=value}},ContractResolver:null}});Bridge.define("Newtonsoft.Json.NullValueHandling",{$kind:"enum",statics:{fields:{Include:0,Ignore:1}}});Bridge.define("Newtonsoft.Json.Serialization.IContractResolver",{$kind:"interface"});Bridge.define("Newtonsoft.Json.TypeNameHandling",{$kind:"enum",statics:{fields:{None:0,Objects:1}},$flags:!0});Bridge.define("Newtonsoft.Json.Utils.AssemblyVersion",{statics:{fields:{version:null,compiler:null},ctors:{init:function(){this.version="1.2.0";this.compiler="16.2.0"}}}});Bridge.define("Newtonsoft.Json.JsonSerializationException",{inherits:[Newtonsoft.Json.JsonException],ctors:{ctor:function(){this.$initialize();Newtonsoft.Json.JsonException.ctor.call(this)},$ctor1:function(message){this.$initialize();Newtonsoft.Json.JsonException.$ctor1.call(this,message)},$ctor2:function(message,innerException){this.$initialize();Newtonsoft.Json.JsonException.$ctor2.call(this,message,innerException)}}});Bridge.define("Newtonsoft.Json.Serialization.CamelCasePropertyNamesContractResolver",{inherits:[Newtonsoft.Json.Serialization.IContractResolver]});Bridge.define("Newtonsoft.Json.JsonConvert",{statics:{methods:{stringify:function(value,formatting){return formatting===Newtonsoft.Json.Formatting.Indented?JSON.stringify(value,null,"  "):JSON.stringify(value)},getEnumerableElementType:function(type){var interfaceType,interfaces,j;if(System.String.startsWith(type.$$name,"System.Collections.Generic.IEnumerable"))interfaceType=type;else for(interfaces=Bridge.Reflection.getInterfaces(type),j=0;j<interfaces.length;j++)if(System.String.startsWith(interfaces[j].$$name,"System.Collections.Generic.IEnumerable")){interfaceType=interfaces[j];break}return interfaceType?Bridge.Reflection.getGenericArguments(interfaceType)[0]:null},validateReflectable:function(type){do{var ignoreMetaData=type===System.Object||type===Object||type.$literal||type.$kind==="anonymous",nometa=!Bridge.getMetadata(type);if(!ignoreMetaData&&nometa){Bridge.$jsonGuard&&delete Bridge.$jsonGuard;throw new System.InvalidOperationException(Bridge.getTypeName(type)+" is not reflectable and cannot be serialized.");}type=ignoreMetaData?null:Bridge.Reflection.getBaseType(type)}while(!ignoreMetaData&&type!=null)},defaultGuard:function(){Bridge.$jsonGuard&&Bridge.$jsonGuard.pop()},getValue:function(obj,name){name=name.toLowerCase();for(var key in obj)if(key.toLowerCase()==name)return obj[key]},SerializeObject:function(obj,formatting,settings,returnRaw,possibleType){var objType,name,type,arr,i,removeGuard,wasBoxed,d,json,entr,typeElement,enumerator,item,raw,nometa,key,fields,camelCase,f,fname,properties,p,pname;if(Bridge.is(formatting,Newtonsoft.Json.JsonSerializerSettings)&&(settings=formatting,formatting=0),obj==null)return settings&&settings.NullValueHandling===Newtonsoft.Json.NullValueHandling.Ignore?void 0:returnRaw?null:this.stringify(null,formatting);if(objType=Bridge.getType(obj),possibleType&&objType&&(possibleType.$kind==="interface"||Bridge.Reflection.isAssignableFrom(possibleType,objType))&&(possibleType=null),possibleType&&possibleType.$nullable&&(possibleType=possibleType.$nullableType),possibleType&&possibleType===System.Char)return String.fromCharCode(obj);if(typeof obj=="function")return name=Bridge.getTypeName(obj),returnRaw?name:this.stringify(name,formatting);if(typeof obj=="object"){if(type=possibleType||objType,removeGuard=Newtonsoft.Json.JsonConvert.defaultGuard,Bridge.$jsonGuard||(Bridge.$jsonGuard=[],removeGuard=function(){delete Bridge.$jsonGuard}),Bridge.$jsonGuard.indexOf(obj)>-1)return;if(type===System.Guid||type===System.Int64||type===System.UInt64||type===System.Decimal||type===System.DateTime||type===System.Char||Bridge.Reflection.isEnum(type)?removeGuard():Bridge.$jsonGuard.push(obj),wasBoxed=!1,obj&&obj.$boxed&&(obj=Bridge.unbox(obj,!0),wasBoxed=!0),type===System.Guid)return returnRaw?obj.toString():this.stringify(obj.toString(),formatting);if(type===System.Int64||type===System.UInt64||type===System.Decimal)return obj.toJSON();if(type===System.DateTime)return d=System.DateTime.format(obj,"yyyy'-'MM'-'dd'T'HH':'mm':'ss.FFFFFFFK"),returnRaw?d:this.stringify(d,formatting);if(Bridge.isArray(null,type)){if(type.$elementType===System.Byte)return removeGuard(),json=System.Convert.toBase64String(obj),returnRaw?json:this.stringify(json,formatting);for(arr=[],i=0;i<obj.length;i++)arr.push(Newtonsoft.Json.JsonConvert.SerializeObject(obj[i],formatting,settings,!0,type.$elementType));obj=arr}else{if(Bridge.Reflection.isEnum(type))return returnRaw?obj:this.stringify(obj,formatting);if(type===System.Char)return returnRaw?String.fromCharCode(obj):this.stringify(String.fromCharCode(obj),formatting);if(Bridge.Reflection.isAssignableFrom(System.Collections.IDictionary,type)){for(var typesGeneric=System.Collections.Generic.Dictionary$2.getTypeParameters(type),typeKey=typesGeneric[0],typeValue=typesGeneric[1],dict={},enm=Bridge.getEnumerator(obj);enm.moveNext();)entr=enm.Current,dict[Newtonsoft.Json.JsonConvert.SerializeObject(entr.key,formatting,settings,!0,typeKey)]=Newtonsoft.Json.JsonConvert.SerializeObject(entr.value,formatting,settings,!0,typeValue);obj=dict}else if(Bridge.Reflection.isAssignableFrom(System.Collections.IEnumerable,type)){for(typeElement=Newtonsoft.Json.JsonConvert.getEnumerableElementType(type),enumerator=Bridge.getEnumerator(obj,typeElement),arr=[];enumerator.moveNext();)item=enumerator.Current,arr.push(Newtonsoft.Json.JsonConvert.SerializeObject(item,formatting,settings,!0,typeElement));obj=arr}else if(!wasBoxed){if(raw={},nometa=!Bridge.getMetadata(type),Newtonsoft.Json.JsonConvert.validateReflectable(type),settings&&settings.TypeNameHandling&&(raw.$type=Bridge.Reflection.getTypeQName(type)),nometa)if(obj.toJSON)raw=obj.toJSON();else for(key in obj)obj.hasOwnProperty(key)&&(raw[key]=Newtonsoft.Json.JsonConvert.SerializeObject(obj[key],formatting,settings,!0));else{for(fields=Bridge.Reflection.getMembers(type,4,20),camelCase=settings&&Bridge.is(settings.ContractResolver,Newtonsoft.Json.Serialization.CamelCasePropertyNamesContractResolver),i=0;i<fields.length;i++)f=fields[i],fname=camelCase?f.n.charAt(0).toLowerCase()+f.n.substr(1):f.n,raw[fname]=Newtonsoft.Json.JsonConvert.SerializeObject(Bridge.Reflection.fieldAccess(f,obj),formatting,settings,!0,f.rt);for(properties=Bridge.Reflection.getMembers(type,16,20),i=0;i<properties.length;i++)p=properties[i],!p.g||(pname=camelCase?p.n.charAt(0).toLowerCase()+p.n.substr(1):p.n,raw[pname]=Newtonsoft.Json.JsonConvert.SerializeObject(Bridge.Reflection.midel(p.g,obj)(),formatting,settings,!0,p.rt))}obj=raw}}removeGuard()}return returnRaw?obj:this.stringify(obj,formatting)},createInstance:function(type,raw,settings){var rawIsArray=Bridge.isArray(raw),isEnumerable=rawIsArray&&Bridge.Reflection.isAssignableFrom(System.Collections.IEnumerable,type),isObject=typeof raw=="object"&&!rawIsArray,isList=!1,idx,params,args,arr,elementType,theKeys,i,name,match,v;if(isEnumerable||isObject){var ctors=Bridge.Reflection.getMembers(type,1,28),hasDefault=!1,jsonCtor=null;if(ctors.length>0)for(idx=0;idx<ctors.length;idx++){var c=ctors[idx],hasAttribute=System.Attribute.getCustomAttributes(c,Newtonsoft.Json.JsonConstructorAttribute).length>0,isDefault=(c.pi||[]).length===0;if(isDefault&&(hasDefault=!0),hasAttribute){if(jsonCtor!=null)throw new Newtonsoft.Json.JsonException("Multiple constructors with the JsonConstructorAttribute.");jsonCtor=c}}if(!hasDefault&&ctors.length>0){if(ctors.length>1&&jsonCtor==null)throw new Newtonsoft.Json.JsonSerializationException("Unable to find a constructor to use for type "+Bridge.getTypeName(type)+". A class should either have a default constructor or one constructor with arguments.");if(jsonCtor==null&&(jsonCtor=ctors[0]),params=jsonCtor.pi||[],args=[],isEnumerable){if(Bridge.Reflection.isAssignableFrom(System.Collections.IEnumerable,params[0].pt)){for(arr=[],elementType=Bridge.Reflection.getGenericArguments(params[0].pt)[0]||Bridge.Reflection.getGenericArguments(type)[0]||System.Object,i=0;i<raw.length;i++)arr[i]=Newtonsoft.Json.JsonConvert.DeserializeObject(raw[i],elementType,settings,!0);args.push(arr);isList=!0}}else for(theKeys=Object.getOwnPropertyNames(raw).toString(),i=0;i<params.length;i++)name=params[i].sn||params[i].n,match=new RegExp(name,"i").exec(theKeys),name=match&&match.length>0?match[0]:null,args[i]=name?Newtonsoft.Json.JsonConvert.DeserializeObject(raw[name],params[i].pt,settings,!0):Bridge.getDefaultValue(params[i].pt);return v=Bridge.Reflection.invokeCI(jsonCtor,args),isList?{$list:!0,value:v}:v}}return Bridge.createInstance(type)},DeserializeObject:function(raw,type,settings,field){var tPrms,obj,isObject,def,arr,typeElement,list,each,typeName,o,camelCase,fields,value,f,p,mname,i,properties;if(settings=settings||{},type.$kind==="interface"&&(type===System.Collections.IList?type=System.Collections.Generic.List$1(System.Object):Bridge.Reflection.isGenericType(type)&&Bridge.Reflection.isAssignableFrom(System.Collections.Generic.IList$1,Bridge.Reflection.getGenericTypeDefinition(type))?type=System.Collections.Generic.List$1(System.Collections.Generic.List$1.getElementType(type)||System.Object):System.Collections.IDictionary===type?type=System.Collections.Generic.Dictionary$2(System.Object,System.Object):Bridge.Reflection.isGenericType(type)&&Bridge.Reflection.isAssignableFrom(System.Collections.Generic.IDictionary$2,Bridge.Reflection.getGenericTypeDefinition(type))&&(tPrms=System.Collections.Generic.Dictionary$2.getTypeParameters(type),type=System.Collections.Generic.Dictionary$2(tPrms[0]||System.Object,tPrms[1]||System.Object))),!field&&typeof raw=="string"){try{obj=JSON.parse(raw)}catch(e){throw new Newtonsoft.Json.JsonException(e.message);}(typeof obj=="object"||Bridge.isArray(obj)||type===System.Array.type(System.Byte,1)||type===Function||type===System.Guid||type===System.DateTime||type===System.Char||Bridge.Reflection.isEnum(type))&&(raw=obj)}if(isObject=type===Object||type===System.Object,isObject||type.$literal)return Bridge.merge(isObject?{}:Bridge.createInstance(type),raw);if(def=Bridge.getDefaultValue(type),type.$nullable&&(type=type.$nullableType),raw===null)return def;if(raw===!1)return type===System.String?"false":def;if(raw===!0)return type===System.Boolean?!0:type===System.Int64?System.Int64(1):type===System.UInt64?System.UInt64(1):type===System.Decimal?System.Decimal(1):type===String.String?"true":type===System.DateTime?System.DateTime.create$2(1,0):Bridge.Reflection.isEnum(type)?Bridge.unbox(System.Enum.parse(type,1)):typeof def=="number"?def+1:null;if(typeof raw=="number")return type===System.Boolean?raw!==0:Bridge.Reflection.isEnum(type)?Bridge.unbox(System.Enum.parse(type,raw)):type===System.SByte?raw|0:type===System.Byte?raw>>>0:type===System.Int16?raw|0:type===System.UInt16?raw>>>0:type===System.Int32?raw|0:type===System.UInt32?raw>>>0:type===System.Int64?System.Int64(raw):type===System.UInt64?System.UInt64(raw):type===System.Single?raw:type===System.Double?raw:type===System.Decimal?System.Decimal(raw):type===System.Char?raw|0:type===System.String?raw.toString():type===System.DateTime?System.DateTime.create$2(raw|0,0):null;if(typeof raw=="string"){if(type===Function)return Bridge.Reflection.getType(raw);if(type===System.Guid)return System.Guid.parse(raw);if(type===System.Boolean)return raw!=="";if(type===System.SByte)return raw|0;if(type===System.Byte)return raw>>>0;if(type===System.Int16)return raw|0;if(type===System.UInt16)return raw>>>0;if(type===System.Int32)return raw|0;if(type===System.UInt32)return raw>>>0;if(type===System.Int64)return System.Int64(raw);if(type===System.UInt64)return System.UInt64(raw);if(type===System.Single||type===System.Double)return parseFloat(raw);if(type===System.Decimal)try{return System.Decimal(raw)}catch(ex){return System.Decimal(0)}else{if(type===System.Char)return raw.length===0?0:raw.charCodeAt(0);if(type===System.String)return field?raw:JSON.parse(raw);if(type===System.DateTime){var isUtc=System.String.endsWith(raw,"Z"),format="yyyy'-'MM'-'dd'T'HH':'mm':'ss.FFFFFFF"+(isUtc?"'Z'":"K"),d=System.DateTime.parseExact(raw,format,null,!0,!0);return d=d!=null?d:System.DateTime.parse(raw,undefined,!0),isUtc&&d.kind!==1&&(d=System.DateTime.specifyKind(d,1)),d}return Bridge.Reflection.isEnum(type)?Bridge.unbox(System.Enum.parse(type,raw)):type===System.Array.type(System.Byte,1)?System.Convert.fromBase64String(raw):null}}else if(typeof raw=="object"){if(def!==null&&type.$kind!=="struct")return def;if(Bridge.isArray(null,type)){if(raw.length===undefined)return[];for(arr=[],System.Array.type(type.$elementType,type.$rank||1,arr),i=0;i<raw.length;i++)arr[i]=Newtonsoft.Json.JsonConvert.DeserializeObject(raw[i],type.$elementType,settings,!0);return arr}if(Bridge.Reflection.isAssignableFrom(System.Collections.IList,type)){if(typeElement=System.Collections.Generic.List$1.getElementType(type)||System.Object,list=Newtonsoft.Json.JsonConvert.createInstance(type,raw,settings),list&&list.$list)return list.value;if(raw.length===undefined)return list;for(i=0;i<raw.length;i++)list.add(Newtonsoft.Json.JsonConvert.DeserializeObject(raw[i],typeElement,settings,!0));return list}if(Bridge.Reflection.isAssignableFrom(System.Collections.IDictionary,type)){var typesGeneric=System.Collections.Generic.Dictionary$2.getTypeParameters(type),typeKey=typesGeneric[0]||System.Object,typeValue=typesGeneric[1]||System.Object,dictionary=Newtonsoft.Json.JsonConvert.createInstance(type,raw,settings);if(dictionary&&dictionary.$list)return dictionary.value;for(each in raw)raw.hasOwnProperty(each)&&dictionary.add(Newtonsoft.Json.JsonConvert.DeserializeObject(each,typeKey,settings,!0),Newtonsoft.Json.JsonConvert.DeserializeObject(raw[each],typeValue,settings,!0));return dictionary}if(typeName=raw.$type,settings&&settings.TypeNameHandling>0&&typeName!=null&&(type=Bridge.Reflection.getType(typeName)),type===null)throw TypeError(System.String.concat("Cannot find type: ",raw.$type));for(o=Newtonsoft.Json.JsonConvert.createInstance(type,raw,settings),o&&o.$list&&(o=o.value),camelCase=settings&&Bridge.is(settings.ContractResolver,Newtonsoft.Json.Serialization.CamelCasePropertyNamesContractResolver),fields=Bridge.Reflection.getMembers(type,4,20),i=0;i<fields.length;i++)f=fields[i],mname=camelCase?f.n.charAt(0).toLowerCase()+f.n.substr(1):f.n,value=raw[mname],value===undefined&&(value=Newtonsoft.Json.JsonConvert.getValue(raw,mname)),value!==undefined&&Bridge.Reflection.fieldAccess(f,o,Newtonsoft.Json.JsonConvert.DeserializeObject(value,f.rt,settings,!0));for(properties=Bridge.Reflection.getMembers(type,16,20),i=0;i<properties.length;i++)p=properties[i],mname=camelCase?p.n.charAt(0).toLowerCase()+p.n.substr(1):p.n,value=raw[mname],value===undefined&&(value=Newtonsoft.Json.JsonConvert.getValue(raw,mname)),value!==undefined&&(p.s?Bridge.Reflection.midel(p.s,o)(Newtonsoft.Json.JsonConvert.DeserializeObject(value,p.rt,settings,!0)):type.$kind==="anonymous"&&(o[p.n]=Newtonsoft.Json.JsonConvert.DeserializeObject(value,p.rt,settings,!0)));return o}}}}})});