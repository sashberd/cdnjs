{"version":3,"sources":["vs/languages/json/common/jsonWorker.js","vs/languages/json/common/file:/C:/Alex/src/vscode/src/vs/languages/json/common/parser/jsonLocation.ts","vs/languages/json/common/fake","vs/languages/json/common/file:/C:/Alex/src/vscode/src/vs/base/common/http.ts","vs/languages/json/common/file:/C:/Alex/src/vscode/src/vs/base/common/jsonFormatter.ts","vs/languages/json/common/file:/C:/Alex/src/vscode/src/vs/languages/json/common/contributions/globPatternContribution.ts","vs/languages/json/common/file:/C:/Alex/src/vscode/src/vs/languages/json/common/parser/jsonParser.ts","vs/languages/json/common/file:/C:/Alex/src/vscode/src/vs/languages/json/common/jsonIntellisense.ts","vs/languages/json/common/file:/C:/Alex/src/vscode/src/vs/languages/json/common/contributions/bowerJSONContribution.ts","vs/languages/json/common/file:/C:/Alex/src/vscode/src/vs/languages/json/common/contributions/packageJSONContribution.ts","vs/languages/json/common/file:/C:/Alex/src/vscode/src/vs/languages/json/common/contributions/projectJSONContribution.ts","vs/languages/json/common/file:/C:/Alex/src/vscode/src/vs/languages/json/common/jsonSchemaService.ts","vs/languages/json/common/file:/C:/Alex/src/vscode/src/vs/languages/json/common/jsonWorker.ts"],"names":["define","require","exports","JSONLocation","segments","this","prototype","append","segment","concat","getSegments","matches","k","i","length","toString","join","nls","data","create","getErrorStatusDescription","status","localize","Json","applyEdit","text","edit","substring","offset","content","applyEdits","edits","format","documentText","range","options","newLineAndIndent","eol","repeat","indentValue","initialIndentLevel","indentLevel","scanNext","token","scanner","scan","lineBreak","SyntaxKind","Trivia","LineBreakTrivia","addEdit","startOffset","endOffset","editOperations","push","value","rangeStart","rangeEnd","isEOL","scanner_1","createScanner","setPosition","getPosition","computeIndentLevel","getEOL","insertSpaces","tabSize","firstToken","EOF","firstTokenStart","getTokenOffset","initialIndent","firstTokenEnd","getTokenLength","secondToken","replaceContent","LineCommentTrivia","BlockCommentTrivia","commentTokenStart","CloseBraceToken","OpenBraceToken","CloseBracketToken","OpenBracketToken","CommaToken","ColonToken","NullKeyword","TrueKeyword","FalseKeyword","NumericLiteral","secondTokenStart","s","count","result","nChars","ch","charAt","Math","floor","indexOf","Strings","globProperties","type","label","codeSnippet","documentationLabel","globValues","GlobPatternContribution","isSettingsFile","resource","path","endsWith","collectDefaultSuggestions","collectPropertySuggestions","location","currentWord","addValue","isLast","forEach","e","add","collectValueSuggestions","currentKey","getInfoContribution","__extends","d","b","__","constructor","p","hasOwnProperty","Object","Arrays","Types","jsonLocation_1","ASTNode","parent","name","start","end","getNodeLocation","getChildNodes","getValue","contains","includeRightBound","visit","visitor","getNodeFromOffset","findNode","node","children","item","getNodeFromOffsetEndInclusive","validate","schema","validationResult","matchingSchemas","_this","Array","isArray","warnings","message","errorMessage","allOf","subSchema","not","subValidationResult","ValidationResult","subMatchingSchemas","hasErrors","ms","inverted","testAlternatives","alternatives","maxOneMatch","bestMatch","compareResult","compare","apply","propertiesMatches","propertiesValueMatches","merge","anyOf","oneOf","JSON","stringify","enumValueMatch","NullASTNode","_super","call","BooleanASTNode","ArrayASTNode","items","map","v","addItem","ctn","subSchemas","index","itemValidationResult","mergePropertyMatch","additionalItems","minItems","maxItems","uniqueItems","values","duplicates","some","lastIndexOf","NumberASTNode","isInteger","Number","NaN","typeIsInteger","val","isNumber","multipleOf","isUndefined","minimum","exclusiveMinimum","maximum","exclusiveMaximum","StringASTNode","isKey","minLength","maxLength","pattern","regex","RegExp","test","PropertyASTNode","key","colonOffset","setValue","ObjectASTNode","properties","addProperty","getFirstProperty","getKeyList","seenKeys","unprocessedProperties","required","propertyName","propertyProcessed","prop","splice","keys","child","propertyvalidationResult","patternProperties","propertyPattern","slice","isObject","additionalProperties","propertyNode","maxProperties","minProperties","dependencies","valueAsArray","requiredProp","valueAsSchema","JSONDocumentConfig","ignoreDanglingComma","errors","mergeAll","validationResults","propertyValidationResult","other","JSONDocument","config","defineProperty","get","enumerable","configurable","root","JSONParser","parse","_accept","_scanner","getToken","_error","skipUntilAfter","skipUntil","_doc","error","_finalize","_checkScanError","getTokenError","ScanError","InvalidUnicode","InvalidEscapeCharacter","UnexpectedEndOfNumber","UnexpectedEndOfComment","UnexpectedEndOfString","_parseArray","_parseValue","_parseProperty","keysSeen","_parseString","Unknown","getTokenValue","match","_parseObject","StringLiteral","_parseNumber","tokenValue","numberValue","_parseLiteral","Parser","WinJS","JSONIntellisense","schemaService","requestService","contributions","doSuggest","modelMirror","position","getWordUntilPosition","word","parser","doc","incomplete","suggestions","overwriteBefore","overwriteAfter","proposed","collector","suggestion","setAsIncomplete","onUnexpectedError","getSchemaForResource","then","collectionPromises","getOffsetFromPosition","currentProperty","stringNode","nodeRange","getRangeFromOffsetAndLength","column","startColumn","endColumn","getValueInRange","startLineNumber","endLineNumber","lineNumber","getPropertySuggestions","getSchemaLessPropertySuggestions","contribution","collectPromise","getValueSuggestions","getSchemaLessValueSuggestions","parentKey","valueNode","Promise","schemaProperties","propertySchema","getTextForProperty","description","collectSuggestionsForSimilarObject","obj","getTextForSimilarProperty","n","collectSuggestionsForValues","getTextForMatchingNode","getSuggestionType","addBooleanSuggestion","addDefaultSuggestion","addEnumSuggestion","getTextForEnumValue","enm","getLabelForValue","getTextForValue","typeLabel","defaultSnippets","getLabelForSnippetValue","body","getTextForSnippetValue","replace","substr","trim","snippet","array","defaultVal","templateValue","__decorate","decorators","target","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","__param","paramIndex","decorator","request_1","BowerJSONContribution","topRanked","isBowerFile","defaultValue","authors","version","main","queryUrl","encodeURIComponent","makeRequest","url","success","responseText","results","pack","htmlContent","className","startsWith","IRequestService","LIMIT","PackageJSONContribution","mostDependedOn","isPackageJSONFile","author","rows","ProjectJSONContribution","isProjectJSONFile","frameworks","dnx451","dnxcore50","curr","Id","Version","documentation","Description","isLatest","IsAbsoluteLatestVersion","res","Objects","http","uri_1","resourceService_1","workspace_1","lifecycle_1","toDisplayString","uri","scheme","fsPath","FilePatternAssociation","combinedSchemaId","patternRegExp","convertSimple2RegExpPattern","schemas","combinedSchema","addSchema","id","matchesPattern","fileName","getCombinedSchema","service","createCombinedSchema","SchemaHandle","unresolvedSchemaContent","unresolvedSchema","TPromise","as","UnresolvedSchema","getUnresolvedSchema","loadSchema","getResolvedSchema","resolvedSchema","unresolved","resolveSchemaContent","clearSchema","ResolvedSchema","getSection","getSectionRecursive","next","shift","parseInt","JSONSchemaService","contextService","resourceService","callOnDispose","addListener2_","ResourceEvents","CHANGED","onResourceChange","contributionSchemas","contributionAssociations","schemasById","filePatternAssociations","filePatternAssociationById","dispose","schemaFile","normalizeId","setSchemaContributions","schemaContributions","addSchemaHandle","schemaHandle","getOrAddSchemaHandle","getOrAddFilePatternAssociation","fpa","registerExternalSchema","filePatterns","clearExternalSchemas","schemaId","request","schemaContent","jsonErrors","getParseErrorMessage","schemaToResolve","resolveErrors","findSection","current","split","part","resolveLink","linkedSchema","linkPath","section","mixin","$ref","resolveExternalLink","loc","resolveRefs","parentSchema","toWalk","seen","openPromises","collectEntries","entries","_i","_a","entries_1","entry","collectMapEntries","maps","maps_1","collectArrayEntries","arrays","arrays_1","pop","definitions","_","document","filter","schemeId","resourceURL","toResource","schemaIds","IWorkspaceContextService","IResourceService","severity_1","Modes","JSONFormatter","SchemaService","markers_1","instantiation_1","suggestSupport_1","validationHelper_1","getSymbolKind","nodeType","SymbolKind","Module","String","Boolean","Variable","JSONWorker","modeId","markerService","instantiationService","_modeId","_validationHelper","ValidationHelper","toValidate","doValidate","createInstance","jsonIntellisense","navigateValueSet","up","proposals","len","equalsIgnoreCase","nextIdx","_doConfigure","fileMatch","filePattern","schemaPath","patterns","triggerDueToConfigurationChange","enableValidator","enable","resources","doValidate1","property","added","markerData","idx","signature","startPosition","getPositionFromOffset","endPosition","severity","Warning","Error","changeOne","provideCompletionItems","filterSuggestions","provideHover","originalNode","contributonId","every","promise","createInfoResult","provideDocumentSymbols","collectOutlineEntries","containerName","objectNode","childContainerName","kind","resourceString","toLowerCase","model","formatRange","getOffsetAndLengthFromRange","operations","IMarkerService","IInstantiationService"],"mappings":"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","file":"vs/languages/json/common/jsonWorker.js","sourcesContent":["/*!-----------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.2.3(84e204b238a1eff25d4c6f611fdcd76a494005a7)\n * Released under the MIT license\n * https://github.com/Microsoft/vscode/blob/master/LICENSE.txt\n *-----------------------------------------------------------*/\n\ndefine(\"vs/languages/json/common/parser/jsonLocation\", [\"require\", \"exports\"], function (require, exports) {\r\n    /*---------------------------------------------------------------------------------------------\r\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n     *--------------------------------------------------------------------------------------------*/\r\n    'use strict';\r\n    var JSONLocation = (function () {\r\n        function JSONLocation(segments) {\r\n            this.segments = segments;\r\n        }\r\n        JSONLocation.prototype.append = function (segment) {\r\n            return new JSONLocation(this.segments.concat(segment));\r\n        };\r\n        JSONLocation.prototype.getSegments = function () {\r\n            return this.segments;\r\n        };\r\n        JSONLocation.prototype.matches = function (segments) {\r\n            var k = 0;\r\n            for (var i = 0; k < segments.length && i < this.segments.length; i++) {\r\n                if (segments[k] === this.segments[i] || segments[k] === '*') {\r\n                    k++;\r\n                }\r\n                else if (segments[k] !== '**') {\r\n                    return false;\r\n                }\r\n            }\r\n            return k === segments.length;\r\n        };\r\n        JSONLocation.prototype.toString = function () {\r\n            return '[' + this.segments.join('][') + ']';\r\n        };\r\n        return JSONLocation;\r\n    }());\r\n    exports.JSONLocation = JSONLocation;\r\n});\r\n\ndefine(\"vs/nls!vs/base/common/http\",['vs/nls', 'vs/nls!vs/languages/json/common/jsonWorker'], function(nls, data) { return nls.create(\"vs/base/common/http\", data); });\ndefine(\"vs/base/common/http\", [\"require\", \"exports\", 'vs/nls!vs/base/common/http'], function (require, exports, nls) {\r\n    /*---------------------------------------------------------------------------------------------\r\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n     *--------------------------------------------------------------------------------------------*/\r\n    'use strict';\r\n    function getErrorStatusDescription(status) {\r\n        if (status < 400) {\r\n            return void 0;\r\n        }\r\n        switch (status) {\r\n            case 400: return nls.localize(0, null);\r\n            case 401: return nls.localize(1, null);\r\n            case 403: return nls.localize(2, null);\r\n            case 404: return nls.localize(3, null);\r\n            case 405: return nls.localize(4, null);\r\n            case 406: return nls.localize(5, null);\r\n            case 407: return nls.localize(6, null);\r\n            case 408: return nls.localize(7, null);\r\n            case 409: return nls.localize(8, null);\r\n            case 410: return nls.localize(9, null);\r\n            case 411: return nls.localize(10, null);\r\n            case 412: return nls.localize(11, null);\r\n            case 413: return nls.localize(12, null);\r\n            case 414: return nls.localize(13, null);\r\n            case 415: return nls.localize(14, null);\r\n            case 500: return nls.localize(15, null);\r\n            case 501: return nls.localize(16, null);\r\n            case 503: return nls.localize(17, null);\r\n            default: return nls.localize(18, null, status);\r\n        }\r\n    }\r\n    exports.getErrorStatusDescription = getErrorStatusDescription;\r\n});\r\n\ndefine(\"vs/base/common/jsonFormatter\", [\"require\", \"exports\", './json'], function (require, exports, Json) {\r\n    /*---------------------------------------------------------------------------------------------\r\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n     *--------------------------------------------------------------------------------------------*/\r\n    'use strict';\r\n    function applyEdit(text, edit) {\r\n        return text.substring(0, edit.offset) + edit.content + text.substring(edit.offset + edit.length);\r\n    }\r\n    exports.applyEdit = applyEdit;\r\n    function applyEdits(text, edits) {\r\n        for (var i = edits.length - 1; i >= 0; i--) {\r\n            text = applyEdit(text, edits[i]);\r\n        }\r\n        return text;\r\n    }\r\n    exports.applyEdits = applyEdits;\r\n    function format(documentText, range, options) {\r\n        var initialIndentLevel;\r\n        var value;\r\n        var rangeStart;\r\n        var rangeEnd;\r\n        if (range) {\r\n            rangeStart = range.offset;\r\n            rangeEnd = rangeStart + range.length;\r\n            while (rangeStart > 0 && !isEOL(documentText, rangeStart - 1)) {\r\n                rangeStart--;\r\n            }\r\n            var scanner_1 = Json.createScanner(documentText, true);\r\n            scanner_1.setPosition(rangeEnd);\r\n            scanner_1.scan();\r\n            rangeEnd = scanner_1.getPosition();\r\n            value = documentText.substring(rangeStart, rangeEnd);\r\n            initialIndentLevel = computeIndentLevel(value, 0, options);\r\n        }\r\n        else {\r\n            value = documentText;\r\n            rangeStart = 0;\r\n            rangeEnd = documentText.length;\r\n            initialIndentLevel = 0;\r\n        }\r\n        var eol = getEOL(options, documentText);\r\n        var lineBreak = false;\r\n        var indentLevel = 0;\r\n        var indentValue;\r\n        if (options.insertSpaces) {\r\n            indentValue = repeat(' ', options.tabSize);\r\n        }\r\n        else {\r\n            indentValue = '\\t';\r\n        }\r\n        var scanner = Json.createScanner(value, false);\r\n        function newLineAndIndent() {\r\n            return eol + repeat(indentValue, initialIndentLevel + indentLevel);\r\n        }\r\n        function scanNext() {\r\n            var token = scanner.scan();\r\n            lineBreak = false;\r\n            while (token === Json.SyntaxKind.Trivia || token === Json.SyntaxKind.LineBreakTrivia) {\r\n                lineBreak = lineBreak || (token === Json.SyntaxKind.LineBreakTrivia);\r\n                token = scanner.scan();\r\n            }\r\n            return token;\r\n        }\r\n        var editOperations = [];\r\n        function addEdit(text, startOffset, endOffset) {\r\n            if (documentText.substring(startOffset, endOffset) !== text) {\r\n                editOperations.push({ offset: startOffset, length: endOffset - startOffset, content: text });\r\n            }\r\n        }\r\n        var firstToken = scanNext();\r\n        if (firstToken !== Json.SyntaxKind.EOF) {\r\n            var firstTokenStart = scanner.getTokenOffset() + rangeStart;\r\n            var initialIndent = repeat(indentValue, initialIndentLevel);\r\n            addEdit(initialIndent, rangeStart, firstTokenStart);\r\n        }\r\n        while (firstToken !== Json.SyntaxKind.EOF) {\r\n            var firstTokenEnd = scanner.getTokenOffset() + scanner.getTokenLength() + rangeStart;\r\n            var secondToken = scanNext();\r\n            var replaceContent = '';\r\n            while (!lineBreak && (secondToken === Json.SyntaxKind.LineCommentTrivia || secondToken === Json.SyntaxKind.BlockCommentTrivia)) {\r\n                // comments on the same line: keep them on the same line, but ignore them otherwise\r\n                var commentTokenStart = scanner.getTokenOffset() + rangeStart;\r\n                addEdit(' ', firstTokenEnd, commentTokenStart);\r\n                firstTokenEnd = scanner.getTokenOffset() + scanner.getTokenLength() + rangeStart;\r\n                replaceContent = secondToken === Json.SyntaxKind.LineCommentTrivia ? newLineAndIndent() : '';\r\n                secondToken = scanNext();\r\n            }\r\n            if (secondToken === Json.SyntaxKind.CloseBraceToken) {\r\n                if (firstToken !== Json.SyntaxKind.OpenBraceToken) {\r\n                    indentLevel--;\r\n                    replaceContent = newLineAndIndent();\r\n                }\r\n            }\r\n            else if (secondToken === Json.SyntaxKind.CloseBracketToken) {\r\n                if (firstToken !== Json.SyntaxKind.OpenBracketToken) {\r\n                    indentLevel--;\r\n                    replaceContent = newLineAndIndent();\r\n                }\r\n            }\r\n            else if (secondToken !== Json.SyntaxKind.EOF) {\r\n                switch (firstToken) {\r\n                    case Json.SyntaxKind.OpenBracketToken:\r\n                    case Json.SyntaxKind.OpenBraceToken:\r\n                        indentLevel++;\r\n                        replaceContent = newLineAndIndent();\r\n                        break;\r\n                    case Json.SyntaxKind.CommaToken:\r\n                    case Json.SyntaxKind.LineCommentTrivia:\r\n                        replaceContent = newLineAndIndent();\r\n                        break;\r\n                    case Json.SyntaxKind.BlockCommentTrivia:\r\n                        if (lineBreak) {\r\n                            replaceContent = newLineAndIndent();\r\n                        }\r\n                        else {\r\n                            // symbol following comment on the same line: keep on same line, separate with ' '\r\n                            replaceContent = ' ';\r\n                        }\r\n                        break;\r\n                    case Json.SyntaxKind.ColonToken:\r\n                        replaceContent = ' ';\r\n                        break;\r\n                    case Json.SyntaxKind.NullKeyword:\r\n                    case Json.SyntaxKind.TrueKeyword:\r\n                    case Json.SyntaxKind.FalseKeyword:\r\n                    case Json.SyntaxKind.NumericLiteral:\r\n                        if (secondToken === Json.SyntaxKind.NullKeyword || secondToken === Json.SyntaxKind.FalseKeyword || secondToken === Json.SyntaxKind.NumericLiteral) {\r\n                            replaceContent = ' ';\r\n                        }\r\n                        break;\r\n                }\r\n                if (lineBreak && (secondToken === Json.SyntaxKind.LineCommentTrivia || secondToken === Json.SyntaxKind.BlockCommentTrivia)) {\r\n                    replaceContent = newLineAndIndent();\r\n                }\r\n            }\r\n            var secondTokenStart = scanner.getTokenOffset() + rangeStart;\r\n            addEdit(replaceContent, firstTokenEnd, secondTokenStart);\r\n            firstToken = secondToken;\r\n        }\r\n        return editOperations;\r\n    }\r\n    exports.format = format;\r\n    function repeat(s, count) {\r\n        var result = '';\r\n        for (var i = 0; i < count; i++) {\r\n            result += s;\r\n        }\r\n        return result;\r\n    }\r\n    function computeIndentLevel(content, offset, options) {\r\n        var i = 0;\r\n        var nChars = 0;\r\n        var tabSize = options.tabSize || 4;\r\n        while (i < content.length) {\r\n            var ch = content.charAt(i);\r\n            if (ch === ' ') {\r\n                nChars++;\r\n            }\r\n            else if (ch === '\\t') {\r\n                nChars += tabSize;\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n            i++;\r\n        }\r\n        return Math.floor(nChars / tabSize);\r\n    }\r\n    function getEOL(options, text) {\r\n        for (var i = 0; i < text.length; i++) {\r\n            var ch = text.charAt(i);\r\n            if (ch === '\\r') {\r\n                if (i + 1 < text.length && text.charAt(i + 1) === '\\n') {\r\n                    return '\\r\\n';\r\n                }\r\n                return '\\r';\r\n            }\r\n            else if (ch === '\\n') {\r\n                return '\\n';\r\n            }\r\n        }\r\n        return (options && options.eol) || '\\n';\r\n    }\r\n    function isEOL(text, offset) {\r\n        return '\\r\\n'.indexOf(text.charAt(offset)) !== -1;\r\n    }\r\n});\r\n\ndefine(\"vs/nls!vs/languages/json/common/contributions/bowerJSONContribution\",['vs/nls', 'vs/nls!vs/languages/json/common/jsonWorker'], function(nls, data) { return nls.create(\"vs/languages/json/common/contributions/bowerJSONContribution\", data); });\ndefine(\"vs/nls!vs/languages/json/common/contributions/globPatternContribution\",['vs/nls', 'vs/nls!vs/languages/json/common/jsonWorker'], function(nls, data) { return nls.create(\"vs/languages/json/common/contributions/globPatternContribution\", data); });\ndefine(\"vs/languages/json/common/contributions/globPatternContribution\", [\"require\", \"exports\", 'vs/base/common/strings', 'vs/nls!vs/languages/json/common/contributions/globPatternContribution'], function (require, exports, Strings, nls) {\r\n    /*---------------------------------------------------------------------------------------------\r\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n     *--------------------------------------------------------------------------------------------*/\r\n    'use strict';\r\n    var globProperties = [\r\n        { type: 'value', label: nls.localize(0, null), codeSnippet: '\"**/*.{{extension}}\": true', documentationLabel: nls.localize(1, null) },\r\n        { type: 'value', label: nls.localize(2, null), codeSnippet: '\"**/*.{ext1,ext2,ext3}\": true', documentationLabel: nls.localize(3, null) },\r\n        { type: 'value', label: nls.localize(4, null), codeSnippet: '\"**/*.{{source-extension}}\": { \"when\": \"$(basename).{{target-extension}}\" }', documentationLabel: nls.localize(5, null) },\r\n        { type: 'value', label: nls.localize(6, null), codeSnippet: '\"{{name}}\": true', documentationLabel: nls.localize(7, null) },\r\n        { type: 'value', label: nls.localize(8, null), codeSnippet: '\"{folder1,folder2,folder3}\": true', documentationLabel: nls.localize(9, null) },\r\n        { type: 'value', label: nls.localize(10, null), codeSnippet: '\"**/{{name}}\": true', documentationLabel: nls.localize(11, null) },\r\n    ];\r\n    var globValues = [\r\n        { type: 'value', label: nls.localize(12, null), codeSnippet: 'true', documentationLabel: nls.localize(13, null) },\r\n        { type: 'value', label: nls.localize(14, null), codeSnippet: 'false', documentationLabel: nls.localize(15, null) },\r\n        { type: 'value', label: nls.localize(16, null), codeSnippet: '{ \"when\": \"$(basename).{{extension}}\" }', documentationLabel: nls.localize(17, null) }\r\n    ];\r\n    var GlobPatternContribution = (function () {\r\n        function GlobPatternContribution() {\r\n        }\r\n        GlobPatternContribution.prototype.isSettingsFile = function (resource) {\r\n            var path = resource.path;\r\n            return Strings.endsWith(path, '/settings.json');\r\n        };\r\n        GlobPatternContribution.prototype.collectDefaultSuggestions = function (resource, result) {\r\n            return null;\r\n        };\r\n        GlobPatternContribution.prototype.collectPropertySuggestions = function (resource, location, currentWord, addValue, isLast, result) {\r\n            if (this.isSettingsFile(resource) && (location.matches(['files.exclude']) || location.matches(['search.exclude']))) {\r\n                globProperties.forEach(function (e) { return result.add(e); });\r\n            }\r\n            return null;\r\n        };\r\n        GlobPatternContribution.prototype.collectValueSuggestions = function (resource, location, currentKey, result) {\r\n            if (this.isSettingsFile(resource) && (location.matches(['files.exclude']) || location.matches(['search.exclude']))) {\r\n                globValues.forEach(function (e) { return result.add(e); });\r\n            }\r\n            return null;\r\n        };\r\n        GlobPatternContribution.prototype.getInfoContribution = function (resource, location) {\r\n            return null;\r\n        };\r\n        return GlobPatternContribution;\r\n    }());\r\n    exports.GlobPatternContribution = GlobPatternContribution;\r\n});\r\n\ndefine(\"vs/nls!vs/languages/json/common/contributions/packageJSONContribution\",['vs/nls', 'vs/nls!vs/languages/json/common/jsonWorker'], function(nls, data) { return nls.create(\"vs/languages/json/common/contributions/packageJSONContribution\", data); });\ndefine(\"vs/nls!vs/languages/json/common/contributions/projectJSONContribution\",['vs/nls', 'vs/nls!vs/languages/json/common/jsonWorker'], function(nls, data) { return nls.create(\"vs/languages/json/common/contributions/projectJSONContribution\", data); });\ndefine(\"vs/nls!vs/languages/json/common/jsonIntellisense\",['vs/nls', 'vs/nls!vs/languages/json/common/jsonWorker'], function(nls, data) { return nls.create(\"vs/languages/json/common/jsonIntellisense\", data); });\ndefine(\"vs/nls!vs/languages/json/common/jsonSchemaService\",['vs/nls', 'vs/nls!vs/languages/json/common/jsonWorker'], function(nls, data) { return nls.create(\"vs/languages/json/common/jsonSchemaService\", data); });\ndefine(\"vs/nls!vs/languages/json/common/parser/jsonParser\",['vs/nls', 'vs/nls!vs/languages/json/common/jsonWorker'], function(nls, data) { return nls.create(\"vs/languages/json/common/parser/jsonParser\", data); });\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\ndefine(\"vs/languages/json/common/parser/jsonParser\", [\"require\", \"exports\", 'vs/nls!vs/languages/json/common/parser/jsonParser', 'vs/base/common/arrays', 'vs/base/common/types', 'vs/base/common/json', './jsonLocation'], function (require, exports, nls, Arrays, Types, Json, jsonLocation_1) {\r\n    /*---------------------------------------------------------------------------------------------\r\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n     *--------------------------------------------------------------------------------------------*/\r\n    'use strict';\r\n    var ASTNode = (function () {\r\n        function ASTNode(parent, type, name, start, end) {\r\n            this.type = type;\r\n            this.name = name;\r\n            this.start = start;\r\n            this.end = end;\r\n            this.parent = parent;\r\n        }\r\n        ASTNode.prototype.getNodeLocation = function () {\r\n            var path = this.parent ? this.parent.getNodeLocation() : new jsonLocation_1.JSONLocation([]);\r\n            if (this.name) {\r\n                path = path.append(this.name);\r\n            }\r\n            return path;\r\n        };\r\n        ASTNode.prototype.getChildNodes = function () {\r\n            return [];\r\n        };\r\n        ASTNode.prototype.getValue = function () {\r\n            // override in children\r\n            return;\r\n        };\r\n        ASTNode.prototype.contains = function (offset, includeRightBound) {\r\n            if (includeRightBound === void 0) { includeRightBound = false; }\r\n            return offset >= this.start && offset < this.end || includeRightBound && offset === this.end;\r\n        };\r\n        ASTNode.prototype.visit = function (visitor) {\r\n            return visitor(this);\r\n        };\r\n        ASTNode.prototype.getNodeFromOffset = function (offset) {\r\n            var findNode = function (node) {\r\n                if (offset >= node.start && offset < node.end) {\r\n                    var children = node.getChildNodes();\r\n                    for (var i = 0; i < children.length && children[i].start <= offset; i++) {\r\n                        var item = findNode(children[i]);\r\n                        if (item) {\r\n                            return item;\r\n                        }\r\n                    }\r\n                    return node;\r\n                }\r\n                return null;\r\n            };\r\n            return findNode(this);\r\n        };\r\n        ASTNode.prototype.getNodeFromOffsetEndInclusive = function (offset) {\r\n            var findNode = function (node) {\r\n                if (offset >= node.start && offset <= node.end) {\r\n                    var children = node.getChildNodes();\r\n                    for (var i = 0; i < children.length && children[i].start <= offset; i++) {\r\n                        var item = findNode(children[i]);\r\n                        if (item) {\r\n                            return item;\r\n                        }\r\n                    }\r\n                    return node;\r\n                }\r\n                return null;\r\n            };\r\n            return findNode(this);\r\n        };\r\n        ASTNode.prototype.validate = function (schema, validationResult, matchingSchemas, offset) {\r\n            var _this = this;\r\n            if (offset === void 0) { offset = -1; }\r\n            if (offset !== -1 && !this.contains(offset)) {\r\n                return;\r\n            }\r\n            if (Array.isArray(schema.type)) {\r\n                if (Arrays.contains(schema.type, this.type) === false) {\r\n                    validationResult.warnings.push({\r\n                        location: { start: this.start, end: this.end },\r\n                        message: schema.errorMessage || nls.localize(0, null, schema.type.join())\r\n                    });\r\n                }\r\n            }\r\n            else if (schema.type) {\r\n                if (this.type !== schema.type) {\r\n                    validationResult.warnings.push({\r\n                        location: { start: this.start, end: this.end },\r\n                        message: schema.errorMessage || nls.localize(1, null, schema.type)\r\n                    });\r\n                }\r\n            }\r\n            if (Array.isArray(schema.allOf)) {\r\n                schema.allOf.forEach(function (subSchema) {\r\n                    _this.validate(subSchema, validationResult, matchingSchemas, offset);\r\n                });\r\n            }\r\n            if (schema.not) {\r\n                var subValidationResult = new ValidationResult();\r\n                var subMatchingSchemas = [];\r\n                this.validate(schema.not, subValidationResult, subMatchingSchemas, offset);\r\n                if (!subValidationResult.hasErrors()) {\r\n                    validationResult.warnings.push({\r\n                        location: { start: this.start, end: this.end },\r\n                        message: nls.localize(2, null)\r\n                    });\r\n                }\r\n                if (matchingSchemas) {\r\n                    subMatchingSchemas.forEach(function (ms) {\r\n                        ms.inverted = !ms.inverted;\r\n                        matchingSchemas.push(ms);\r\n                    });\r\n                }\r\n            }\r\n            var testAlternatives = function (alternatives, maxOneMatch) {\r\n                var matches = [];\r\n                // remember the best match that is used for error messages\r\n                var bestMatch = null;\r\n                alternatives.forEach(function (subSchema) {\r\n                    var subValidationResult = new ValidationResult();\r\n                    var subMatchingSchemas = [];\r\n                    _this.validate(subSchema, subValidationResult, subMatchingSchemas);\r\n                    if (!subValidationResult.hasErrors()) {\r\n                        matches.push(subSchema);\r\n                    }\r\n                    if (!bestMatch) {\r\n                        bestMatch = { schema: subSchema, validationResult: subValidationResult, matchingSchemas: subMatchingSchemas };\r\n                    }\r\n                    else {\r\n                        if (!maxOneMatch && !subValidationResult.hasErrors() && !bestMatch.validationResult.hasErrors()) {\r\n                            // no errors, both are equally good matches\r\n                            bestMatch.matchingSchemas.push.apply(bestMatch.matchingSchemas, subMatchingSchemas);\r\n                            bestMatch.validationResult.propertiesMatches += subValidationResult.propertiesMatches;\r\n                            bestMatch.validationResult.propertiesValueMatches += subValidationResult.propertiesValueMatches;\r\n                        }\r\n                        else {\r\n                            var compareResult = subValidationResult.compare(bestMatch.validationResult);\r\n                            if (compareResult > 0) {\r\n                                // our node is the best matching so far\r\n                                bestMatch = { schema: subSchema, validationResult: subValidationResult, matchingSchemas: subMatchingSchemas };\r\n                            }\r\n                            else if (compareResult === 0) {\r\n                                // there's already a best matching but we are as good\r\n                                bestMatch.matchingSchemas.push.apply(bestMatch.matchingSchemas, subMatchingSchemas);\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n                if (matches.length > 1 && maxOneMatch) {\r\n                    validationResult.warnings.push({\r\n                        location: { start: _this.start, end: _this.start + 1 },\r\n                        message: nls.localize(3, null)\r\n                    });\r\n                }\r\n                if (bestMatch !== null) {\r\n                    validationResult.merge(bestMatch.validationResult);\r\n                    validationResult.propertiesMatches += bestMatch.validationResult.propertiesMatches;\r\n                    validationResult.propertiesValueMatches += bestMatch.validationResult.propertiesValueMatches;\r\n                    if (matchingSchemas) {\r\n                        matchingSchemas.push.apply(matchingSchemas, bestMatch.matchingSchemas);\r\n                    }\r\n                }\r\n                return matches.length;\r\n            };\r\n            if (Array.isArray(schema.anyOf)) {\r\n                testAlternatives(schema.anyOf, false);\r\n            }\r\n            if (Array.isArray(schema.oneOf)) {\r\n                testAlternatives(schema.oneOf, true);\r\n            }\r\n            if (Array.isArray(schema.enum)) {\r\n                if (Arrays.contains(schema.enum, this.getValue()) === false) {\r\n                    validationResult.warnings.push({\r\n                        location: { start: this.start, end: this.end },\r\n                        message: nls.localize(4, null, JSON.stringify(schema.enum))\r\n                    });\r\n                }\r\n                else {\r\n                    validationResult.enumValueMatch = true;\r\n                }\r\n            }\r\n            if (matchingSchemas !== null) {\r\n                matchingSchemas.push({ node: this, schema: schema });\r\n            }\r\n        };\r\n        return ASTNode;\r\n    }());\r\n    exports.ASTNode = ASTNode;\r\n    var NullASTNode = (function (_super) {\r\n        __extends(NullASTNode, _super);\r\n        function NullASTNode(parent, name, start, end) {\r\n            _super.call(this, parent, 'null', name, start, end);\r\n        }\r\n        NullASTNode.prototype.getValue = function () {\r\n            return null;\r\n        };\r\n        return NullASTNode;\r\n    }(ASTNode));\r\n    exports.NullASTNode = NullASTNode;\r\n    var BooleanASTNode = (function (_super) {\r\n        __extends(BooleanASTNode, _super);\r\n        function BooleanASTNode(parent, name, value, start, end) {\r\n            _super.call(this, parent, 'boolean', name, start, end);\r\n            this.value = value;\r\n        }\r\n        BooleanASTNode.prototype.getValue = function () {\r\n            return this.value;\r\n        };\r\n        return BooleanASTNode;\r\n    }(ASTNode));\r\n    exports.BooleanASTNode = BooleanASTNode;\r\n    var ArrayASTNode = (function (_super) {\r\n        __extends(ArrayASTNode, _super);\r\n        function ArrayASTNode(parent, name, start, end) {\r\n            _super.call(this, parent, 'array', name, start, end);\r\n            this.items = [];\r\n        }\r\n        ArrayASTNode.prototype.getChildNodes = function () {\r\n            return this.items;\r\n        };\r\n        ArrayASTNode.prototype.getValue = function () {\r\n            return this.items.map(function (v) { return v.getValue(); });\r\n        };\r\n        ArrayASTNode.prototype.addItem = function (item) {\r\n            if (item) {\r\n                this.items.push(item);\r\n                return true;\r\n            }\r\n            return false;\r\n        };\r\n        ArrayASTNode.prototype.visit = function (visitor) {\r\n            var ctn = visitor(this);\r\n            for (var i = 0; i < this.items.length && ctn; i++) {\r\n                ctn = this.items[i].visit(visitor);\r\n            }\r\n            return ctn;\r\n        };\r\n        ArrayASTNode.prototype.validate = function (schema, validationResult, matchingSchemas, offset) {\r\n            var _this = this;\r\n            if (offset === void 0) { offset = -1; }\r\n            if (offset !== -1 && !this.contains(offset)) {\r\n                return;\r\n            }\r\n            _super.prototype.validate.call(this, schema, validationResult, matchingSchemas, offset);\r\n            if (Array.isArray(schema.items)) {\r\n                var subSchemas = schema.items;\r\n                subSchemas.forEach(function (subSchema, index) {\r\n                    var itemValidationResult = new ValidationResult();\r\n                    var item = _this.items[index];\r\n                    if (item) {\r\n                        item.validate(subSchema, itemValidationResult, matchingSchemas, offset);\r\n                        validationResult.mergePropertyMatch(itemValidationResult);\r\n                    }\r\n                    else if (_this.items.length >= subSchemas.length) {\r\n                        validationResult.propertiesValueMatches++;\r\n                    }\r\n                });\r\n                if (schema.additionalItems === false && this.items.length > subSchemas.length) {\r\n                    validationResult.warnings.push({\r\n                        location: { start: this.start, end: this.end },\r\n                        message: nls.localize(5, null, subSchemas.length)\r\n                    });\r\n                }\r\n                else if (this.items.length >= subSchemas.length) {\r\n                    validationResult.propertiesValueMatches += (this.items.length - subSchemas.length);\r\n                }\r\n            }\r\n            else if (schema.items) {\r\n                this.items.forEach(function (item) {\r\n                    var itemValidationResult = new ValidationResult();\r\n                    item.validate(schema.items, itemValidationResult, matchingSchemas, offset);\r\n                    validationResult.mergePropertyMatch(itemValidationResult);\r\n                });\r\n            }\r\n            if (schema.minItems && this.items.length < schema.minItems) {\r\n                validationResult.warnings.push({\r\n                    location: { start: this.start, end: this.end },\r\n                    message: nls.localize(6, null, schema.minItems)\r\n                });\r\n            }\r\n            if (schema.maxItems && this.items.length > schema.maxItems) {\r\n                validationResult.warnings.push({\r\n                    location: { start: this.start, end: this.end },\r\n                    message: nls.localize(7, null, schema.minItems)\r\n                });\r\n            }\r\n            if (schema.uniqueItems === true) {\r\n                var values = this.items.map(function (node) {\r\n                    return node.getValue();\r\n                });\r\n                var duplicates = values.some(function (value, index) {\r\n                    return index !== values.lastIndexOf(value);\r\n                });\r\n                if (duplicates) {\r\n                    validationResult.warnings.push({\r\n                        location: { start: this.start, end: this.end },\r\n                        message: nls.localize(8, null)\r\n                    });\r\n                }\r\n            }\r\n        };\r\n        return ArrayASTNode;\r\n    }(ASTNode));\r\n    exports.ArrayASTNode = ArrayASTNode;\r\n    var NumberASTNode = (function (_super) {\r\n        __extends(NumberASTNode, _super);\r\n        function NumberASTNode(parent, name, start, end) {\r\n            _super.call(this, parent, 'number', name, start, end);\r\n            this.isInteger = true;\r\n            this.value = Number.NaN;\r\n        }\r\n        NumberASTNode.prototype.getValue = function () {\r\n            return this.value;\r\n        };\r\n        NumberASTNode.prototype.validate = function (schema, validationResult, matchingSchemas, offset) {\r\n            if (offset === void 0) { offset = -1; }\r\n            if (offset !== -1 && !this.contains(offset)) {\r\n                return;\r\n            }\r\n            // work around type validation in the base class\r\n            var typeIsInteger = false;\r\n            if (schema.type === 'integer' || (Array.isArray(schema.type) && Arrays.contains(schema.type, 'integer'))) {\r\n                typeIsInteger = true;\r\n            }\r\n            if (typeIsInteger && this.isInteger === true) {\r\n                this.type = 'integer';\r\n            }\r\n            _super.prototype.validate.call(this, schema, validationResult, matchingSchemas, offset);\r\n            this.type = 'number';\r\n            var val = this.getValue();\r\n            if (Types.isNumber(schema.multipleOf)) {\r\n                if (val % schema.multipleOf !== 0) {\r\n                    validationResult.warnings.push({\r\n                        location: { start: this.start, end: this.end },\r\n                        message: nls.localize(9, null, schema.multipleOf)\r\n                    });\r\n                }\r\n            }\r\n            if (!Types.isUndefined(schema.minimum)) {\r\n                if (schema.exclusiveMinimum && val <= schema.minimum) {\r\n                    validationResult.warnings.push({\r\n                        location: { start: this.start, end: this.end },\r\n                        message: nls.localize(10, null, schema.minimum)\r\n                    });\r\n                }\r\n                if (!schema.exclusiveMinimum && val < schema.minimum) {\r\n                    validationResult.warnings.push({\r\n                        location: { start: this.start, end: this.end },\r\n                        message: nls.localize(11, null, schema.minimum)\r\n                    });\r\n                }\r\n            }\r\n            if (!Types.isUndefined(schema.maximum)) {\r\n                if (schema.exclusiveMaximum && val >= schema.maximum) {\r\n                    validationResult.warnings.push({\r\n                        location: { start: this.start, end: this.end },\r\n                        message: nls.localize(12, null, schema.maximum)\r\n                    });\r\n                }\r\n                if (!schema.exclusiveMaximum && val > schema.maximum) {\r\n                    validationResult.warnings.push({\r\n                        location: { start: this.start, end: this.end },\r\n                        message: nls.localize(13, null, schema.maximum)\r\n                    });\r\n                }\r\n            }\r\n        };\r\n        return NumberASTNode;\r\n    }(ASTNode));\r\n    exports.NumberASTNode = NumberASTNode;\r\n    var StringASTNode = (function (_super) {\r\n        __extends(StringASTNode, _super);\r\n        function StringASTNode(parent, name, isKey, start, end) {\r\n            _super.call(this, parent, 'string', name, start, end);\r\n            this.isKey = isKey;\r\n            this.value = '';\r\n        }\r\n        StringASTNode.prototype.getValue = function () {\r\n            return this.value;\r\n        };\r\n        StringASTNode.prototype.validate = function (schema, validationResult, matchingSchemas, offset) {\r\n            if (offset === void 0) { offset = -1; }\r\n            if (offset !== -1 && !this.contains(offset)) {\r\n                return;\r\n            }\r\n            _super.prototype.validate.call(this, schema, validationResult, matchingSchemas, offset);\r\n            if (schema.minLength && this.value.length < schema.minLength) {\r\n                validationResult.warnings.push({\r\n                    location: { start: this.start, end: this.end },\r\n                    message: nls.localize(14, null, schema.minLength)\r\n                });\r\n            }\r\n            if (schema.maxLength && this.value.length > schema.maxLength) {\r\n                validationResult.warnings.push({\r\n                    location: { start: this.start, end: this.end },\r\n                    message: nls.localize(15, null, schema.maxLength)\r\n                });\r\n            }\r\n            if (schema.pattern) {\r\n                var regex = new RegExp(schema.pattern);\r\n                if (!regex.test(this.value)) {\r\n                    validationResult.warnings.push({\r\n                        location: { start: this.start, end: this.end },\r\n                        message: schema.errorMessage || nls.localize(16, null, schema.pattern)\r\n                    });\r\n                }\r\n            }\r\n        };\r\n        return StringASTNode;\r\n    }(ASTNode));\r\n    exports.StringASTNode = StringASTNode;\r\n    var PropertyASTNode = (function (_super) {\r\n        __extends(PropertyASTNode, _super);\r\n        function PropertyASTNode(parent, key) {\r\n            _super.call(this, parent, 'property', null, key.start);\r\n            this.key = key;\r\n            key.parent = this;\r\n            key.name = key.value;\r\n            this.colonOffset = -1;\r\n        }\r\n        PropertyASTNode.prototype.getChildNodes = function () {\r\n            return this.value ? [this.key, this.value] : [this.key];\r\n        };\r\n        PropertyASTNode.prototype.setValue = function (value) {\r\n            this.value = value;\r\n            return value !== null;\r\n        };\r\n        PropertyASTNode.prototype.visit = function (visitor) {\r\n            return visitor(this) && this.key.visit(visitor) && this.value && this.value.visit(visitor);\r\n        };\r\n        PropertyASTNode.prototype.validate = function (schema, validationResult, matchingSchemas, offset) {\r\n            if (offset === void 0) { offset = -1; }\r\n            if (offset !== -1 && !this.contains(offset)) {\r\n                return;\r\n            }\r\n            if (this.value) {\r\n                this.value.validate(schema, validationResult, matchingSchemas, offset);\r\n            }\r\n        };\r\n        return PropertyASTNode;\r\n    }(ASTNode));\r\n    exports.PropertyASTNode = PropertyASTNode;\r\n    var ObjectASTNode = (function (_super) {\r\n        __extends(ObjectASTNode, _super);\r\n        function ObjectASTNode(parent, name, start, end) {\r\n            _super.call(this, parent, 'object', name, start, end);\r\n            this.properties = [];\r\n        }\r\n        ObjectASTNode.prototype.getChildNodes = function () {\r\n            return this.properties;\r\n        };\r\n        ObjectASTNode.prototype.addProperty = function (node) {\r\n            if (!node) {\r\n                return false;\r\n            }\r\n            this.properties.push(node);\r\n            return true;\r\n        };\r\n        ObjectASTNode.prototype.getFirstProperty = function (key) {\r\n            for (var i = 0; i < this.properties.length; i++) {\r\n                if (this.properties[i].key.value === key) {\r\n                    return this.properties[i];\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n        ObjectASTNode.prototype.getKeyList = function () {\r\n            return this.properties.map(function (p) { return p.key.getValue(); });\r\n        };\r\n        ObjectASTNode.prototype.getValue = function () {\r\n            var value = {};\r\n            this.properties.forEach(function (p) {\r\n                var v = p.value && p.value.getValue();\r\n                if (v) {\r\n                    value[p.key.getValue()] = v;\r\n                }\r\n            });\r\n            return value;\r\n        };\r\n        ObjectASTNode.prototype.visit = function (visitor) {\r\n            var ctn = visitor(this);\r\n            for (var i = 0; i < this.properties.length && ctn; i++) {\r\n                ctn = this.properties[i].visit(visitor);\r\n            }\r\n            return ctn;\r\n        };\r\n        ObjectASTNode.prototype.validate = function (schema, validationResult, matchingSchemas, offset) {\r\n            var _this = this;\r\n            if (offset === void 0) { offset = -1; }\r\n            if (offset !== -1 && !this.contains(offset)) {\r\n                return;\r\n            }\r\n            _super.prototype.validate.call(this, schema, validationResult, matchingSchemas, offset);\r\n            var seenKeys = {};\r\n            var unprocessedProperties = [];\r\n            this.properties.forEach(function (node) {\r\n                var key = node.key.value;\r\n                seenKeys[key] = node.value;\r\n                unprocessedProperties.push(key);\r\n            });\r\n            if (Array.isArray(schema.required)) {\r\n                schema.required.forEach(function (propertyName) {\r\n                    if (!seenKeys[propertyName]) {\r\n                        var key = _this.parent && _this.parent && _this.parent.key;\r\n                        var location = key ? { start: key.start, end: key.end } : { start: _this.start, end: _this.start + 1 };\r\n                        validationResult.warnings.push({\r\n                            location: location,\r\n                            message: nls.localize(17, null, propertyName)\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n            var propertyProcessed = function (prop) {\r\n                var index = unprocessedProperties.indexOf(prop);\r\n                while (index >= 0) {\r\n                    unprocessedProperties.splice(index, 1);\r\n                    index = unprocessedProperties.indexOf(prop);\r\n                }\r\n            };\r\n            if (schema.properties) {\r\n                Object.keys(schema.properties).forEach(function (propertyName) {\r\n                    propertyProcessed(propertyName);\r\n                    var prop = schema.properties[propertyName];\r\n                    var child = seenKeys[propertyName];\r\n                    if (child) {\r\n                        var propertyvalidationResult = new ValidationResult();\r\n                        child.validate(prop, propertyvalidationResult, matchingSchemas, offset);\r\n                        validationResult.mergePropertyMatch(propertyvalidationResult);\r\n                    }\r\n                });\r\n            }\r\n            if (schema.patternProperties) {\r\n                Object.keys(schema.patternProperties).forEach(function (propertyPattern) {\r\n                    var regex = new RegExp(propertyPattern);\r\n                    unprocessedProperties.slice(0).forEach(function (propertyName) {\r\n                        if (regex.test(propertyName)) {\r\n                            propertyProcessed(propertyName);\r\n                            var child = seenKeys[propertyName];\r\n                            if (child) {\r\n                                var propertyvalidationResult = new ValidationResult();\r\n                                child.validate(schema.patternProperties[propertyPattern], propertyvalidationResult, matchingSchemas, offset);\r\n                                validationResult.mergePropertyMatch(propertyvalidationResult);\r\n                            }\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n            if (Types.isObject(schema.additionalProperties)) {\r\n                unprocessedProperties.forEach(function (propertyName) {\r\n                    var child = seenKeys[propertyName];\r\n                    if (child) {\r\n                        var propertyvalidationResult = new ValidationResult();\r\n                        child.validate(schema.additionalProperties, propertyvalidationResult, matchingSchemas, offset);\r\n                        validationResult.mergePropertyMatch(propertyvalidationResult);\r\n                    }\r\n                });\r\n            }\r\n            else if (schema.additionalProperties === false) {\r\n                if (unprocessedProperties.length > 0) {\r\n                    unprocessedProperties.forEach(function (propertyName) {\r\n                        var child = seenKeys[propertyName];\r\n                        if (child) {\r\n                            var propertyNode = child.parent;\r\n                            validationResult.warnings.push({\r\n                                location: { start: propertyNode.key.start, end: propertyNode.key.end },\r\n                                message: nls.localize(18, null, propertyName)\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            if (schema.maxProperties) {\r\n                if (this.properties.length > schema.maxProperties) {\r\n                    validationResult.warnings.push({\r\n                        location: { start: this.start, end: this.end },\r\n                        message: nls.localize(19, null, schema.maxProperties)\r\n                    });\r\n                }\r\n            }\r\n            if (schema.minProperties) {\r\n                if (this.properties.length < schema.minProperties) {\r\n                    validationResult.warnings.push({\r\n                        location: { start: this.start, end: this.end },\r\n                        message: nls.localize(20, null, schema.minProperties)\r\n                    });\r\n                }\r\n            }\r\n            if (Types.isObject(schema.dependencies)) {\r\n                Object.keys(schema.dependencies).forEach(function (key) {\r\n                    var prop = seenKeys[key];\r\n                    if (prop) {\r\n                        if (Array.isArray(schema.dependencies[key])) {\r\n                            var valueAsArray = schema.dependencies[key];\r\n                            valueAsArray.forEach(function (requiredProp) {\r\n                                if (!seenKeys[requiredProp]) {\r\n                                    validationResult.warnings.push({\r\n                                        location: { start: _this.start, end: _this.end },\r\n                                        message: nls.localize(21, null, requiredProp, key)\r\n                                    });\r\n                                }\r\n                                else {\r\n                                    validationResult.propertiesValueMatches++;\r\n                                }\r\n                            });\r\n                        }\r\n                        else if (Types.isObject(schema.dependencies[key])) {\r\n                            var valueAsSchema = schema.dependencies[key];\r\n                            var propertyvalidationResult = new ValidationResult();\r\n                            _this.validate(valueAsSchema, propertyvalidationResult, matchingSchemas, offset);\r\n                            validationResult.mergePropertyMatch(propertyvalidationResult);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        };\r\n        return ObjectASTNode;\r\n    }(ASTNode));\r\n    exports.ObjectASTNode = ObjectASTNode;\r\n    var JSONDocumentConfig = (function () {\r\n        function JSONDocumentConfig() {\r\n            this.ignoreDanglingComma = false;\r\n        }\r\n        return JSONDocumentConfig;\r\n    }());\r\n    exports.JSONDocumentConfig = JSONDocumentConfig;\r\n    var ValidationResult = (function () {\r\n        function ValidationResult() {\r\n            this.errors = [];\r\n            this.warnings = [];\r\n            this.propertiesMatches = 0;\r\n            this.propertiesValueMatches = 0;\r\n            this.enumValueMatch = false;\r\n        }\r\n        ValidationResult.prototype.hasErrors = function () {\r\n            return !!this.errors.length || !!this.warnings.length;\r\n        };\r\n        ValidationResult.prototype.mergeAll = function (validationResults) {\r\n            var _this = this;\r\n            validationResults.forEach(function (validationResult) {\r\n                _this.merge(validationResult);\r\n            });\r\n        };\r\n        ValidationResult.prototype.merge = function (validationResult) {\r\n            this.errors = this.errors.concat(validationResult.errors);\r\n            this.warnings = this.warnings.concat(validationResult.warnings);\r\n        };\r\n        ValidationResult.prototype.mergePropertyMatch = function (propertyValidationResult) {\r\n            this.merge(propertyValidationResult);\r\n            this.propertiesMatches++;\r\n            if (propertyValidationResult.enumValueMatch || !propertyValidationResult.hasErrors() && propertyValidationResult.propertiesMatches) {\r\n                this.propertiesValueMatches++;\r\n            }\r\n        };\r\n        ValidationResult.prototype.compare = function (other) {\r\n            var hasErrors = this.hasErrors();\r\n            if (hasErrors !== other.hasErrors()) {\r\n                return hasErrors ? -1 : 1;\r\n            }\r\n            if (this.enumValueMatch !== other.enumValueMatch) {\r\n                return other.enumValueMatch ? -1 : 1;\r\n            }\r\n            if (this.propertiesValueMatches !== other.propertiesValueMatches) {\r\n                return this.propertiesValueMatches - other.propertiesValueMatches;\r\n            }\r\n            return this.propertiesMatches - other.propertiesMatches;\r\n        };\r\n        return ValidationResult;\r\n    }());\r\n    exports.ValidationResult = ValidationResult;\r\n    var JSONDocument = (function () {\r\n        function JSONDocument(config) {\r\n            this.config = config;\r\n            this.validationResult = new ValidationResult();\r\n        }\r\n        Object.defineProperty(JSONDocument.prototype, \"errors\", {\r\n            get: function () {\r\n                return this.validationResult.errors;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(JSONDocument.prototype, \"warnings\", {\r\n            get: function () {\r\n                return this.validationResult.warnings;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        JSONDocument.prototype.getNodeFromOffset = function (offset) {\r\n            return this.root && this.root.getNodeFromOffset(offset);\r\n        };\r\n        JSONDocument.prototype.getNodeFromOffsetEndInclusive = function (offset) {\r\n            return this.root && this.root.getNodeFromOffsetEndInclusive(offset);\r\n        };\r\n        JSONDocument.prototype.visit = function (visitor) {\r\n            if (this.root) {\r\n                this.root.visit(visitor);\r\n            }\r\n        };\r\n        JSONDocument.prototype.validate = function (schema, matchingSchemas, offset) {\r\n            if (matchingSchemas === void 0) { matchingSchemas = null; }\r\n            if (offset === void 0) { offset = -1; }\r\n            if (this.root) {\r\n                this.root.validate(schema, this.validationResult, matchingSchemas, offset);\r\n            }\r\n        };\r\n        return JSONDocument;\r\n    }());\r\n    exports.JSONDocument = JSONDocument;\r\n    var JSONParser = (function () {\r\n        function JSONParser() {\r\n        }\r\n        JSONParser.prototype.parse = function (text, config) {\r\n            if (config === void 0) { config = new JSONDocumentConfig(); }\r\n            var _doc = new JSONDocument(config);\r\n            var _scanner = Json.createScanner(text, true);\r\n            function _accept(token) {\r\n                if (_scanner.getToken() === token) {\r\n                    _scanner.scan();\r\n                    return true;\r\n                }\r\n                return false;\r\n            }\r\n            function _error(message, node, skipUntilAfter, skipUntil) {\r\n                if (node === void 0) { node = null; }\r\n                if (skipUntilAfter === void 0) { skipUntilAfter = []; }\r\n                if (skipUntil === void 0) { skipUntil = []; }\r\n                if (_doc.errors.length === 0 || _doc.errors[0].location.start !== _scanner.getTokenOffset()) {\r\n                    // ignore multiple errors on the same offset\r\n                    var error = { message: message, location: { start: _scanner.getTokenOffset(), end: _scanner.getTokenOffset() + _scanner.getTokenLength() } };\r\n                    _doc.errors.push(error);\r\n                }\r\n                if (node) {\r\n                    _finalize(node, false);\r\n                }\r\n                if (skipUntilAfter.length + skipUntil.length > 0) {\r\n                    var token = _scanner.getToken();\r\n                    while (token !== Json.SyntaxKind.EOF) {\r\n                        if (skipUntilAfter.indexOf(token) !== -1) {\r\n                            _scanner.scan();\r\n                            break;\r\n                        }\r\n                        else if (skipUntil.indexOf(token) !== -1) {\r\n                            break;\r\n                        }\r\n                        token = _scanner.scan();\r\n                    }\r\n                }\r\n                return node;\r\n            }\r\n            function _checkScanError() {\r\n                switch (_scanner.getTokenError()) {\r\n                    case Json.ScanError.InvalidUnicode:\r\n                        _error(nls.localize(22, null));\r\n                        return true;\r\n                    case Json.ScanError.InvalidEscapeCharacter:\r\n                        _error(nls.localize(23, null));\r\n                        return true;\r\n                    case Json.ScanError.UnexpectedEndOfNumber:\r\n                        _error(nls.localize(24, null));\r\n                        return true;\r\n                    case Json.ScanError.UnexpectedEndOfComment:\r\n                        _error(nls.localize(25, null));\r\n                        return true;\r\n                    case Json.ScanError.UnexpectedEndOfString:\r\n                        _error(nls.localize(26, null));\r\n                        return true;\r\n                }\r\n                return false;\r\n            }\r\n            function _finalize(node, scanNext) {\r\n                node.end = _scanner.getTokenOffset() + _scanner.getTokenLength();\r\n                if (scanNext) {\r\n                    _scanner.scan();\r\n                }\r\n                return node;\r\n            }\r\n            function _parseArray(parent, name) {\r\n                if (_scanner.getToken() !== Json.SyntaxKind.OpenBracketToken) {\r\n                    return null;\r\n                }\r\n                var node = new ArrayASTNode(parent, name, _scanner.getTokenOffset());\r\n                _scanner.scan(); // consume OpenBracketToken\r\n                var count = 0;\r\n                if (node.addItem(_parseValue(node, '' + count++))) {\r\n                    while (_accept(Json.SyntaxKind.CommaToken)) {\r\n                        if (!node.addItem(_parseValue(node, '' + count++)) && !_doc.config.ignoreDanglingComma) {\r\n                            _error(nls.localize(27, null));\r\n                        }\r\n                    }\r\n                }\r\n                if (_scanner.getToken() !== Json.SyntaxKind.CloseBracketToken) {\r\n                    return _error(nls.localize(28, null), node);\r\n                }\r\n                return _finalize(node, true);\r\n            }\r\n            function _parseProperty(parent, keysSeen) {\r\n                var key = _parseString(null, null, true);\r\n                if (!key) {\r\n                    if (_scanner.getToken() === Json.SyntaxKind.Unknown) {\r\n                        // give a more helpful error message\r\n                        var value = _scanner.getTokenValue();\r\n                        if (value.match(/^['\\w]/)) {\r\n                            _error(nls.localize(29, null));\r\n                        }\r\n                    }\r\n                    return null;\r\n                }\r\n                var node = new PropertyASTNode(parent, key);\r\n                if (keysSeen[key.value]) {\r\n                    _doc.warnings.push({ location: { start: node.key.start, end: node.key.end }, message: nls.localize(30, null) });\r\n                }\r\n                keysSeen[key.value] = true;\r\n                if (_scanner.getToken() === Json.SyntaxKind.ColonToken) {\r\n                    node.colonOffset = _scanner.getTokenOffset();\r\n                }\r\n                else {\r\n                    return _error(nls.localize(31, null), node, [], [Json.SyntaxKind.CloseBraceToken, Json.SyntaxKind.CommaToken]);\r\n                }\r\n                _scanner.scan(); // consume ColonToken\r\n                if (!node.setValue(_parseValue(node, key.value))) {\r\n                    return _error(nls.localize(32, null), node, [], [Json.SyntaxKind.CloseBraceToken, Json.SyntaxKind.CommaToken]);\r\n                }\r\n                node.end = node.value.end;\r\n                return node;\r\n            }\r\n            function _parseObject(parent, name) {\r\n                if (_scanner.getToken() !== Json.SyntaxKind.OpenBraceToken) {\r\n                    return null;\r\n                }\r\n                var node = new ObjectASTNode(parent, name, _scanner.getTokenOffset());\r\n                _scanner.scan(); // consume OpenBraceToken\r\n                var keysSeen = {};\r\n                if (node.addProperty(_parseProperty(node, keysSeen))) {\r\n                    while (_accept(Json.SyntaxKind.CommaToken)) {\r\n                        if (!node.addProperty(_parseProperty(node, keysSeen)) && !_doc.config.ignoreDanglingComma) {\r\n                            _error(nls.localize(33, null));\r\n                        }\r\n                    }\r\n                }\r\n                if (_scanner.getToken() !== Json.SyntaxKind.CloseBraceToken) {\r\n                    return _error(nls.localize(34, null), node);\r\n                }\r\n                return _finalize(node, true);\r\n            }\r\n            function _parseString(parent, name, isKey) {\r\n                if (_scanner.getToken() !== Json.SyntaxKind.StringLiteral) {\r\n                    return null;\r\n                }\r\n                var node = new StringASTNode(parent, name, isKey, _scanner.getTokenOffset());\r\n                node.value = _scanner.getTokenValue();\r\n                _checkScanError();\r\n                return _finalize(node, true);\r\n            }\r\n            function _parseNumber(parent, name) {\r\n                if (_scanner.getToken() !== Json.SyntaxKind.NumericLiteral) {\r\n                    return null;\r\n                }\r\n                var node = new NumberASTNode(parent, name, _scanner.getTokenOffset());\r\n                if (!_checkScanError()) {\r\n                    var tokenValue = _scanner.getTokenValue();\r\n                    try {\r\n                        var numberValue = JSON.parse(tokenValue);\r\n                        if (typeof numberValue !== 'number') {\r\n                            return _error(nls.localize(35, null), node);\r\n                        }\r\n                        node.value = numberValue;\r\n                    }\r\n                    catch (e) {\r\n                        return _error(nls.localize(36, null), node);\r\n                    }\r\n                    node.isInteger = tokenValue.indexOf('.') === -1;\r\n                }\r\n                return _finalize(node, true);\r\n            }\r\n            function _parseLiteral(parent, name) {\r\n                var node;\r\n                switch (_scanner.getToken()) {\r\n                    case Json.SyntaxKind.NullKeyword:\r\n                        node = new NullASTNode(parent, name, _scanner.getTokenOffset());\r\n                        break;\r\n                    case Json.SyntaxKind.TrueKeyword:\r\n                        node = new BooleanASTNode(parent, name, true, _scanner.getTokenOffset());\r\n                        break;\r\n                    case Json.SyntaxKind.FalseKeyword:\r\n                        node = new BooleanASTNode(parent, name, false, _scanner.getTokenOffset());\r\n                        break;\r\n                    default:\r\n                        return null;\r\n                }\r\n                return _finalize(node, true);\r\n            }\r\n            function _parseValue(parent, name) {\r\n                return _parseArray(parent, name) || _parseObject(parent, name) || _parseString(parent, name, false) || _parseNumber(parent, name) || _parseLiteral(parent, name);\r\n            }\r\n            _scanner.scan();\r\n            _doc.root = _parseValue(null, null);\r\n            if (!_doc.root) {\r\n                _error(nls.localize(37, null));\r\n            }\r\n            else if (_scanner.getToken() !== Json.SyntaxKind.EOF) {\r\n                _error(nls.localize(38, null));\r\n            }\r\n            return _doc;\r\n        };\r\n        return JSONParser;\r\n    }());\r\n    exports.JSONParser = JSONParser;\r\n});\r\n\ndefine(\"vs/languages/json/common/jsonIntellisense\", [\"require\", \"exports\", './parser/jsonParser', 'vs/base/common/types', 'vs/base/common/winjs.base', 'vs/nls!vs/languages/json/common/jsonIntellisense', 'vs/base/common/errors'], function (require, exports, Parser, Types, WinJS, nls, errors) {\r\n    /*---------------------------------------------------------------------------------------------\r\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n     *--------------------------------------------------------------------------------------------*/\r\n    'use strict';\r\n    var JSONIntellisense = (function () {\r\n        function JSONIntellisense(schemaService, requestService, contributions) {\r\n            this.schemaService = schemaService;\r\n            this.requestService = requestService;\r\n            this.contributions = contributions;\r\n        }\r\n        JSONIntellisense.prototype.doSuggest = function (resource, modelMirror, position) {\r\n            var _this = this;\r\n            var currentWord = modelMirror.getWordUntilPosition(position).word;\r\n            var parser = new Parser.JSONParser();\r\n            var config = new Parser.JSONDocumentConfig();\r\n            // so you can invoke suggest after the comma in an object literal\r\n            config.ignoreDanglingComma = true;\r\n            var doc = parser.parse(modelMirror.getValue(), config);\r\n            var result = {\r\n                currentWord: currentWord,\r\n                incomplete: false,\r\n                suggestions: []\r\n            };\r\n            var overwriteBefore = void 0;\r\n            var overwriteAfter = void 0;\r\n            var proposed = {};\r\n            var collector = {\r\n                add: function (suggestion) {\r\n                    if (!proposed[suggestion.label]) {\r\n                        proposed[suggestion.label] = true;\r\n                        suggestion.overwriteBefore = overwriteBefore;\r\n                        suggestion.overwriteAfter = overwriteAfter;\r\n                        result.suggestions.push(suggestion);\r\n                    }\r\n                },\r\n                setAsIncomplete: function () {\r\n                    result.incomplete = true;\r\n                },\r\n                error: function (message) {\r\n                    errors.onUnexpectedError(message);\r\n                }\r\n            };\r\n            return this.schemaService.getSchemaForResource(resource.toString(), doc).then(function (schema) {\r\n                var collectionPromises = [];\r\n                var offset = modelMirror.getOffsetFromPosition(position);\r\n                var node = doc.getNodeFromOffsetEndInclusive(offset);\r\n                var addValue = true;\r\n                var currentKey = currentWord;\r\n                var currentProperty = null;\r\n                if (node) {\r\n                    if (node.type === 'string') {\r\n                        var stringNode = node;\r\n                        if (stringNode.isKey) {\r\n                            var nodeRange = modelMirror.getRangeFromOffsetAndLength(node.start, node.end - node.start);\r\n                            overwriteBefore = position.column - nodeRange.startColumn;\r\n                            overwriteAfter = nodeRange.endColumn - position.column;\r\n                            addValue = !(node.parent && (node.parent.value));\r\n                            currentProperty = node.parent ? node.parent : null;\r\n                            currentKey = modelMirror.getValueInRange({ startColumn: nodeRange.startColumn + 1, startLineNumber: nodeRange.startLineNumber, endColumn: position.column, endLineNumber: position.lineNumber });\r\n                            if (node.parent) {\r\n                                node = node.parent.parent;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                // proposals for properties\r\n                if (node && node.type === 'object') {\r\n                    // don't suggest keys when the cursor is just before the opening curly brace\r\n                    if (node.start === offset) {\r\n                        return result;\r\n                    }\r\n                    // don't suggest properties that are already present\r\n                    var properties = node.properties;\r\n                    properties.forEach(function (p) {\r\n                        if (!currentProperty || currentProperty !== p) {\r\n                            proposed[p.key.value] = true;\r\n                        }\r\n                    });\r\n                    if (schema) {\r\n                        // property proposals with schema\r\n                        var isLast = properties.length === 0 || offset >= properties[properties.length - 1].start;\r\n                        _this.getPropertySuggestions(resource, schema, doc, node, currentKey, addValue, isLast, collector);\r\n                    }\r\n                    else if (node.parent) {\r\n                        // property proposals without schema\r\n                        _this.getSchemaLessPropertySuggestions(doc, node, collector);\r\n                    }\r\n                    var location = node.getNodeLocation();\r\n                    _this.contributions.forEach(function (contribution) {\r\n                        var collectPromise = contribution.collectPropertySuggestions(resource, location, currentWord, addValue, isLast, collector);\r\n                        if (collectPromise) {\r\n                            collectionPromises.push(collectPromise);\r\n                        }\r\n                    });\r\n                }\r\n                // proposals for values\r\n                if (node && (node.type === 'string' || node.type === 'number' || node.type === 'integer' || node.type === 'boolean' || node.type === 'null')) {\r\n                    var nodeRange = modelMirror.getRangeFromOffsetAndLength(node.start, node.end - node.start);\r\n                    overwriteBefore = position.column - nodeRange.startColumn;\r\n                    overwriteAfter = nodeRange.endColumn - position.column;\r\n                    node = node.parent;\r\n                }\r\n                if (schema) {\r\n                    // value proposals with schema\r\n                    _this.getValueSuggestions(resource, schema, doc, node, offset, collector);\r\n                }\r\n                else {\r\n                    // value proposals without schema\r\n                    _this.getSchemaLessValueSuggestions(doc, node, offset, modelMirror, collector);\r\n                }\r\n                if (!node) {\r\n                    _this.contributions.forEach(function (contribution) {\r\n                        var collectPromise = contribution.collectDefaultSuggestions(resource, collector);\r\n                        if (collectPromise) {\r\n                            collectionPromises.push(collectPromise);\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    if ((node.type === 'property') && offset > node.colonOffset) {\r\n                        var parentKey = node.key.value;\r\n                        var valueNode = node.value;\r\n                        if (!valueNode || offset <= valueNode.end) {\r\n                            var location = node.parent.getNodeLocation();\r\n                            _this.contributions.forEach(function (contribution) {\r\n                                var collectPromise = contribution.collectValueSuggestions(resource, location, parentKey, collector);\r\n                                if (collectPromise) {\r\n                                    collectionPromises.push(collectPromise);\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n                return WinJS.Promise.join(collectionPromises).then(function () { return result; });\r\n            });\r\n        };\r\n        JSONIntellisense.prototype.getPropertySuggestions = function (resource, schema, doc, node, currentWord, addValue, isLast, collector) {\r\n            var _this = this;\r\n            var matchingSchemas = [];\r\n            doc.validate(schema.schema, matchingSchemas, node.start);\r\n            matchingSchemas.forEach(function (s) {\r\n                if (s.node === node && !s.inverted) {\r\n                    var schemaProperties = s.schema.properties;\r\n                    if (schemaProperties) {\r\n                        Object.keys(schemaProperties).forEach(function (key) {\r\n                            var propertySchema = schemaProperties[key];\r\n                            collector.add({ type: 'property', label: key, codeSnippet: _this.getTextForProperty(key, propertySchema, addValue, isLast), documentationLabel: propertySchema.description || '' });\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n        };\r\n        JSONIntellisense.prototype.getSchemaLessPropertySuggestions = function (doc, node, collector) {\r\n            var _this = this;\r\n            var collectSuggestionsForSimilarObject = function (obj) {\r\n                obj.properties.forEach(function (p) {\r\n                    var key = p.key.value;\r\n                    collector.add({ type: 'property', label: key, codeSnippet: _this.getTextForSimilarProperty(key, p.value), documentationLabel: '' });\r\n                });\r\n            };\r\n            if (node.parent.type === 'property') {\r\n                // if the object is a property value, check the tree for other objects that hang under a property of the same name\r\n                var parentKey = node.parent.key.value;\r\n                doc.visit(function (n) {\r\n                    if (n.type === 'property' && n.key.value === parentKey && n.value && n.value.type === 'object') {\r\n                        collectSuggestionsForSimilarObject(n.value);\r\n                    }\r\n                    return true;\r\n                });\r\n            }\r\n            else if (node.parent.type === 'array') {\r\n                // if the object is in an array, use all other array elements as similar objects\r\n                node.parent.items.forEach(function (n) {\r\n                    if (n.type === 'object' && n !== node) {\r\n                        collectSuggestionsForSimilarObject(n);\r\n                    }\r\n                });\r\n            }\r\n        };\r\n        JSONIntellisense.prototype.getSchemaLessValueSuggestions = function (doc, node, offset, modelMirror, collector) {\r\n            var _this = this;\r\n            var collectSuggestionsForValues = function (value) {\r\n                var content = _this.getTextForMatchingNode(value, modelMirror);\r\n                collector.add({ type: _this.getSuggestionType(value.type), label: content, codeSnippet: content, documentationLabel: '' });\r\n                if (value.type === 'boolean') {\r\n                    _this.addBooleanSuggestion(!value.getValue(), collector);\r\n                }\r\n            };\r\n            if (!node) {\r\n                collector.add({ type: this.getSuggestionType('object'), label: 'Empty object', codeSnippet: '{\\n\\t{{}}\\n}', documentationLabel: '' });\r\n                collector.add({ type: this.getSuggestionType('array'), label: 'Empty array', codeSnippet: '[\\n\\t{{}}\\n]', documentationLabel: '' });\r\n            }\r\n            else {\r\n                if (node.type === 'property' && offset > node.colonOffset) {\r\n                    var valueNode = node.value;\r\n                    if (valueNode && offset > valueNode.end) {\r\n                        return;\r\n                    }\r\n                    // suggest values at the same key\r\n                    var parentKey = node.key.value;\r\n                    doc.visit(function (n) {\r\n                        if (n.type === 'property' && n.key.value === parentKey && n.value) {\r\n                            collectSuggestionsForValues(n.value);\r\n                        }\r\n                        return true;\r\n                    });\r\n                }\r\n                if (node.type === 'array') {\r\n                    if (node.parent && node.parent.type === 'property') {\r\n                        // suggest items of an array at the same key\r\n                        var parentKey = node.parent.key.value;\r\n                        doc.visit(function (n) {\r\n                            if (n.type === 'property' && n.key.value === parentKey && n.value && n.value.type === 'array') {\r\n                                (n.value.items).forEach(function (n) {\r\n                                    collectSuggestionsForValues(n);\r\n                                });\r\n                            }\r\n                            return true;\r\n                        });\r\n                    }\r\n                    else {\r\n                        // suggest items in the same array\r\n                        node.items.forEach(function (n) {\r\n                            collectSuggestionsForValues(n);\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        JSONIntellisense.prototype.getValueSuggestions = function (resource, schema, doc, node, offset, collector) {\r\n            var _this = this;\r\n            if (!node) {\r\n                this.addDefaultSuggestion(schema.schema, collector);\r\n            }\r\n            else {\r\n                var parentKey = null;\r\n                if (node && (node.type === 'property') && offset > node.colonOffset) {\r\n                    var valueNode = node.value;\r\n                    if (valueNode && offset > valueNode.end) {\r\n                        return; // we are past the value node\r\n                    }\r\n                    parentKey = node.key.value;\r\n                    node = node.parent;\r\n                }\r\n                if (node && (parentKey !== null || node.type === 'array')) {\r\n                    var matchingSchemas = [];\r\n                    doc.validate(schema.schema, matchingSchemas, node.start);\r\n                    matchingSchemas.forEach(function (s) {\r\n                        if (s.node === node && !s.inverted && s.schema) {\r\n                            if (s.schema.items) {\r\n                                _this.addDefaultSuggestion(s.schema.items, collector);\r\n                                _this.addEnumSuggestion(s.schema.items, collector);\r\n                            }\r\n                            if (s.schema.properties) {\r\n                                var propertySchema = s.schema.properties[parentKey];\r\n                                if (propertySchema) {\r\n                                    _this.addDefaultSuggestion(propertySchema, collector);\r\n                                    _this.addEnumSuggestion(propertySchema, collector);\r\n                                }\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        };\r\n        JSONIntellisense.prototype.addBooleanSuggestion = function (value, collector) {\r\n            collector.add({ type: this.getSuggestionType('boolean'), label: value ? 'true' : 'false', codeSnippet: this.getTextForEnumValue(value), documentationLabel: '' });\r\n        };\r\n        JSONIntellisense.prototype.addEnumSuggestion = function (schema, collector) {\r\n            var _this = this;\r\n            if (Array.isArray(schema.enum)) {\r\n                schema.enum.forEach(function (enm) { return collector.add({ type: _this.getSuggestionType(schema.type), label: _this.getLabelForValue(enm), codeSnippet: _this.getTextForEnumValue(enm), documentationLabel: '' }); });\r\n            }\r\n            else if (schema.type === 'boolean') {\r\n                this.addBooleanSuggestion(true, collector);\r\n                this.addBooleanSuggestion(false, collector);\r\n            }\r\n            if (Array.isArray(schema.allOf)) {\r\n                schema.allOf.forEach(function (s) { return _this.addEnumSuggestion(s, collector); });\r\n            }\r\n            if (Array.isArray(schema.anyOf)) {\r\n                schema.anyOf.forEach(function (s) { return _this.addEnumSuggestion(s, collector); });\r\n            }\r\n            if (Array.isArray(schema.oneOf)) {\r\n                schema.oneOf.forEach(function (s) { return _this.addEnumSuggestion(s, collector); });\r\n            }\r\n        };\r\n        JSONIntellisense.prototype.addDefaultSuggestion = function (schema, collector) {\r\n            var _this = this;\r\n            if (schema.default) {\r\n                collector.add({\r\n                    type: this.getSuggestionType(schema.type),\r\n                    label: this.getLabelForValue(schema.default),\r\n                    codeSnippet: this.getTextForValue(schema.default),\r\n                    typeLabel: nls.localize(0, null),\r\n                });\r\n            }\r\n            if (Array.isArray(schema.defaultSnippets)) {\r\n                schema.defaultSnippets.forEach(function (s) {\r\n                    collector.add({\r\n                        type: 'snippet',\r\n                        label: _this.getLabelForSnippetValue(s.body),\r\n                        codeSnippet: _this.getTextForSnippetValue(s.body)\r\n                    });\r\n                });\r\n            }\r\n            if (Array.isArray(schema.allOf)) {\r\n                schema.allOf.forEach(function (s) { return _this.addDefaultSuggestion(s, collector); });\r\n            }\r\n            if (Array.isArray(schema.anyOf)) {\r\n                schema.anyOf.forEach(function (s) { return _this.addDefaultSuggestion(s, collector); });\r\n            }\r\n            if (Array.isArray(schema.oneOf)) {\r\n                schema.oneOf.forEach(function (s) { return _this.addDefaultSuggestion(s, collector); });\r\n            }\r\n        };\r\n        JSONIntellisense.prototype.getLabelForValue = function (value) {\r\n            var label = JSON.stringify(value);\r\n            label = label.replace('{{', '').replace('}}', '');\r\n            if (label.length > 57) {\r\n                return label.substr(0, 57).trim() + '...';\r\n            }\r\n            return label;\r\n        };\r\n        JSONIntellisense.prototype.getLabelForSnippetValue = function (value) {\r\n            var label = JSON.stringify(value);\r\n            label = label.replace(/\\{\\{|\\}\\}/g, '');\r\n            if (label.length > 57) {\r\n                return label.substr(0, 57).trim() + '...';\r\n            }\r\n            return label;\r\n        };\r\n        JSONIntellisense.prototype.getTextForValue = function (value) {\r\n            var text = JSON.stringify(value, null, '\\t');\r\n            text = text.replace(/[\\\\\\{\\}]/g, '\\\\$&');\r\n            return text;\r\n        };\r\n        JSONIntellisense.prototype.getTextForSnippetValue = function (value) {\r\n            return JSON.stringify(value, null, '\\t');\r\n        };\r\n        JSONIntellisense.prototype.getTextForEnumValue = function (value) {\r\n            var snippet = JSON.stringify(value, null, '\\t');\r\n            switch (typeof value) {\r\n                case 'object':\r\n                    if (value === null) {\r\n                        return '{{null}}';\r\n                    }\r\n                    return snippet;\r\n                case 'string':\r\n                    return '\"{{' + snippet.substr(1, snippet.length - 2) + '}}\"';\r\n                case 'number':\r\n                case 'integer':\r\n                case 'boolean':\r\n                    return '{{' + snippet + '}}';\r\n            }\r\n            return snippet;\r\n        };\r\n        JSONIntellisense.prototype.getSuggestionType = function (type) {\r\n            if (Array.isArray(type)) {\r\n                var array = type;\r\n                type = array.length > 0 ? array[0] : null;\r\n            }\r\n            if (!type) {\r\n                return 'text';\r\n            }\r\n            switch (type) {\r\n                case 'string': return 'text';\r\n                case 'object': return 'module';\r\n                case 'property': return 'property';\r\n                default: return 'value';\r\n            }\r\n        };\r\n        JSONIntellisense.prototype.getTextForMatchingNode = function (node, modelMirror) {\r\n            switch (node.type) {\r\n                case 'array':\r\n                    return '[]';\r\n                case 'object':\r\n                    return '{}';\r\n                default:\r\n                    var content = modelMirror.getValueInRange(modelMirror.getRangeFromOffsetAndLength(node.start, node.end - node.start));\r\n                    return content;\r\n            }\r\n        };\r\n        JSONIntellisense.prototype.getTextForProperty = function (key, propertySchema, addValue, isLast) {\r\n            var result = this.getTextForValue(key);\r\n            if (!addValue) {\r\n                return result;\r\n            }\r\n            result += ': ';\r\n            var defaultVal = propertySchema.default;\r\n            if (!Types.isUndefined(defaultVal)) {\r\n                result = result + this.getTextForEnumValue(defaultVal);\r\n            }\r\n            else if (propertySchema.enum && propertySchema.enum.length > 0) {\r\n                result = result + this.getTextForEnumValue(propertySchema.enum[0]);\r\n            }\r\n            else {\r\n                switch (propertySchema.type) {\r\n                    case 'boolean':\r\n                        result += '{{false}}';\r\n                        break;\r\n                    case 'string':\r\n                        result += '\"{{}}\"';\r\n                        break;\r\n                    case 'object':\r\n                        result += '{\\n\\t{{}}\\n}';\r\n                        break;\r\n                    case 'array':\r\n                        result += '[\\n\\t{{}}\\n]';\r\n                        break;\r\n                    case 'number':\r\n                    case 'integer':\r\n                        result += '{{0}}';\r\n                        break;\r\n                    case 'null':\r\n                        result += '{{null}}';\r\n                        break;\r\n                    default:\r\n                        return result;\r\n                }\r\n            }\r\n            if (!isLast) {\r\n                result += ',';\r\n            }\r\n            return result;\r\n        };\r\n        JSONIntellisense.prototype.getTextForSimilarProperty = function (key, templateValue) {\r\n            return this.getTextForValue(key);\r\n        };\r\n        return JSONIntellisense;\r\n    }());\r\n    exports.JSONIntellisense = JSONIntellisense;\r\n});\r\n\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\ndefine(\"vs/languages/json/common/contributions/bowerJSONContribution\", [\"require\", \"exports\", 'vs/base/common/strings', 'vs/nls!vs/languages/json/common/contributions/bowerJSONContribution', 'vs/platform/request/common/request'], function (require, exports, Strings, nls, request_1) {\r\n    /*---------------------------------------------------------------------------------------------\r\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n     *--------------------------------------------------------------------------------------------*/\r\n    'use strict';\r\n    var BowerJSONContribution = (function () {\r\n        function BowerJSONContribution(requestService) {\r\n            this.topRanked = ['twitter', 'bootstrap', 'angular-1.1.6', 'angular-latest', 'angulerjs', 'd3', 'myjquery', 'jq', 'abcdef1234567890', 'jQuery', 'jquery-1.11.1', 'jquery',\r\n                'sushi-vanilla-x-data', 'font-awsome', 'Font-Awesome', 'font-awesome', 'fontawesome', 'html5-boilerplate', 'impress.js', 'homebrew',\r\n                'backbone', 'moment1', 'momentjs', 'moment', 'linux', 'animate.css', 'animate-css', 'reveal.js', 'jquery-file-upload', 'blueimp-file-upload', 'threejs', 'express', 'chosen',\r\n                'normalize-css', 'normalize.css', 'semantic', 'semantic-ui', 'Semantic-UI', 'modernizr', 'underscore', 'underscore1',\r\n                'material-design-icons', 'ionic', 'chartjs', 'Chart.js', 'nnnick-chartjs', 'select2-ng', 'select2-dist', 'phantom', 'skrollr', 'scrollr', 'less.js', 'leancss', 'parser-lib',\r\n                'hui', 'bootstrap-languages', 'async', 'gulp', 'jquery-pjax', 'coffeescript', 'hammer.js', 'ace', 'leaflet', 'jquery-mobile', 'sweetalert', 'typeahead.js', 'soup', 'typehead.js',\r\n                'sails', 'codeigniter2'];\r\n            this.requestService = requestService;\r\n        }\r\n        BowerJSONContribution.prototype.isBowerFile = function (resource) {\r\n            var path = resource.path;\r\n            return Strings.endsWith(path, '/bower.json') || Strings.endsWith(path, '/.bower.json');\r\n        };\r\n        BowerJSONContribution.prototype.collectDefaultSuggestions = function (resource, result) {\r\n            if (this.isBowerFile(resource)) {\r\n                var defaultValue = {\r\n                    'name': '{{name}}',\r\n                    'description': '{{description}}',\r\n                    'authors': ['{{author}}'],\r\n                    'version': '{{1.0.0}}',\r\n                    'main': '{{pathToMain}}',\r\n                    'dependencies': {}\r\n                };\r\n                result.add({ type: 'snippet', label: nls.localize(0, null), codeSnippet: JSON.stringify(defaultValue, null, '\\t'), documentationLabel: '' });\r\n            }\r\n            return null;\r\n        };\r\n        BowerJSONContribution.prototype.collectPropertySuggestions = function (resource, location, currentWord, addValue, isLast, result) {\r\n            if (this.isBowerFile(resource) && (location.matches(['dependencies']) || location.matches(['devDependencies']))) {\r\n                if (currentWord.length > 0) {\r\n                    var queryUrl = 'https://bower.herokuapp.com/packages/search/' + encodeURIComponent(currentWord);\r\n                    return this.requestService.makeRequest({\r\n                        url: queryUrl\r\n                    }).then(function (success) {\r\n                        if (success.status === 200) {\r\n                            try {\r\n                                var obj = JSON.parse(success.responseText);\r\n                                if (Array.isArray(obj)) {\r\n                                    var results = obj;\r\n                                    for (var i = 0; i < results.length; i++) {\r\n                                        var name = results[i].name;\r\n                                        var description = results[i].description || '';\r\n                                        var codeSnippet = JSON.stringify(name);\r\n                                        if (addValue) {\r\n                                            codeSnippet += ': \"{{*}}\"';\r\n                                            if (!isLast) {\r\n                                                codeSnippet += ',';\r\n                                            }\r\n                                        }\r\n                                        result.add({ type: 'property', label: name, codeSnippet: codeSnippet, documentationLabel: description });\r\n                                    }\r\n                                    result.setAsIncomplete();\r\n                                }\r\n                            }\r\n                            catch (e) {\r\n                            }\r\n                        }\r\n                        else {\r\n                            result.error(nls.localize(1, null, success.responseText));\r\n                            return 0;\r\n                        }\r\n                    }, function (error) {\r\n                        result.error(nls.localize(2, null, error.responseText));\r\n                        return 0;\r\n                    });\r\n                }\r\n                else {\r\n                    this.topRanked.forEach(function (name) {\r\n                        var codeSnippet = JSON.stringify(name);\r\n                        if (addValue) {\r\n                            codeSnippet += ': \"{{*}}\"';\r\n                            if (!isLast) {\r\n                                codeSnippet += ',';\r\n                            }\r\n                        }\r\n                        result.add({ type: 'property', label: name, codeSnippet: codeSnippet, documentationLabel: '' });\r\n                    });\r\n                    result.setAsIncomplete();\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n        BowerJSONContribution.prototype.collectValueSuggestions = function (resource, location, currentKey, result) {\r\n            // not implemented. Could be do done calling the bower command. Waiting for web API: https://github.com/bower/registry/issues/26\r\n            return null;\r\n        };\r\n        BowerJSONContribution.prototype.getInfoContribution = function (resource, location) {\r\n            if (this.isBowerFile(resource) && (location.matches(['dependencies', '*']) || location.matches(['devDependencies', '*']))) {\r\n                var pack = location.getSegments()[location.getSegments().length - 1];\r\n                var htmlContent = [];\r\n                htmlContent.push({ className: 'type', text: nls.localize(3, null, pack) });\r\n                var queryUrl = 'https://bower.herokuapp.com/packages/' + encodeURIComponent(pack);\r\n                return this.requestService.makeRequest({\r\n                    url: queryUrl\r\n                }).then(function (success) {\r\n                    try {\r\n                        var obj = JSON.parse(success.responseText);\r\n                        if (obj && obj.url) {\r\n                            var url = obj.url;\r\n                            if (Strings.startsWith(url, 'git://')) {\r\n                                url = url.substring(6);\r\n                            }\r\n                            if (Strings.endsWith(url, '.git')) {\r\n                                url = url.substring(0, url.length - 4);\r\n                            }\r\n                            htmlContent.push({ className: 'documentation', text: url });\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                    }\r\n                    return htmlContent;\r\n                }, function (error) {\r\n                    return htmlContent;\r\n                });\r\n            }\r\n            return null;\r\n        };\r\n        BowerJSONContribution = __decorate([\r\n            __param(0, request_1.IRequestService)\r\n        ], BowerJSONContribution);\r\n        return BowerJSONContribution;\r\n    }());\r\n    exports.BowerJSONContribution = BowerJSONContribution;\r\n});\r\n\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\ndefine(\"vs/languages/json/common/contributions/packageJSONContribution\", [\"require\", \"exports\", 'vs/base/common/strings', 'vs/nls!vs/languages/json/common/contributions/packageJSONContribution', 'vs/platform/request/common/request'], function (require, exports, Strings, nls, request_1) {\r\n    /*---------------------------------------------------------------------------------------------\r\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n     *--------------------------------------------------------------------------------------------*/\r\n    'use strict';\r\n    var LIMIT = 40;\r\n    var PackageJSONContribution = (function () {\r\n        function PackageJSONContribution(requestService) {\r\n            this.mostDependedOn = ['lodash', 'async', 'underscore', 'request', 'commander', 'express', 'debug', 'chalk', 'colors', 'q', 'coffee-script',\r\n                'mkdirp', 'optimist', 'through2', 'yeoman-generator', 'moment', 'bluebird', 'glob', 'gulp-util', 'minimist', 'cheerio', 'jade', 'redis', 'node-uuid',\r\n                'socket', 'io', 'uglify-js', 'winston', 'through', 'fs-extra', 'handlebars', 'body-parser', 'rimraf', 'mime', 'semver', 'mongodb', 'jquery',\r\n                'grunt', 'connect', 'yosay', 'underscore', 'string', 'xml2js', 'ejs', 'mongoose', 'marked', 'extend', 'mocha', 'superagent', 'js-yaml', 'xtend',\r\n                'shelljs', 'gulp', 'yargs', 'browserify', 'minimatch', 'react', 'less', 'prompt', 'inquirer', 'ws', 'event-stream', 'inherits', 'mysql', 'esprima',\r\n                'jsdom', 'stylus', 'when', 'readable-stream', 'aws-sdk', 'concat-stream', 'chai', 'promise', 'wrench'];\r\n            this.requestService = requestService;\r\n        }\r\n        PackageJSONContribution.prototype.isPackageJSONFile = function (resource) {\r\n            var path = resource.path;\r\n            return Strings.endsWith(path, '/package.json');\r\n        };\r\n        PackageJSONContribution.prototype.collectDefaultSuggestions = function (resource, result) {\r\n            if (this.isPackageJSONFile(resource)) {\r\n                var defaultValue = {\r\n                    'name': '{{name}}',\r\n                    'description': '{{description}}',\r\n                    'author': '{{author}}',\r\n                    'version': '{{1.0.0}}',\r\n                    'main': '{{pathToMain}}',\r\n                    'dependencies': {}\r\n                };\r\n                result.add({ type: 'module', label: nls.localize(0, null), codeSnippet: JSON.stringify(defaultValue, null, '\\t'), documentationLabel: '' });\r\n            }\r\n            return null;\r\n        };\r\n        PackageJSONContribution.prototype.collectPropertySuggestions = function (resource, location, currentWord, addValue, isLast, result) {\r\n            if (this.isPackageJSONFile(resource) && (location.matches(['dependencies']) || location.matches(['devDependencies']) || location.matches(['optionalDependencies']) || location.matches(['peerDependencies']))) {\r\n                var queryUrl;\r\n                if (currentWord.length > 0) {\r\n                    queryUrl = 'https://skimdb.npmjs.com/registry/_design/app/_view/browseAll?group_level=1&limit=' + LIMIT + '&start_key=%5B%22' + encodeURIComponent(currentWord) + '%22%5D&end_key=%5B%22' + encodeURIComponent(currentWord + 'z') + '%22,%7B%7D%5D';\r\n                    return this.requestService.makeRequest({\r\n                        url: queryUrl\r\n                    }).then(function (success) {\r\n                        if (success.status === 200) {\r\n                            try {\r\n                                var obj = JSON.parse(success.responseText);\r\n                                if (obj && Array.isArray(obj.rows)) {\r\n                                    var results = obj.rows;\r\n                                    for (var i = 0; i < results.length; i++) {\r\n                                        var keys = results[i].key;\r\n                                        if (Array.isArray(keys) && keys.length > 0) {\r\n                                            var name = keys[0];\r\n                                            var codeSnippet = JSON.stringify(name);\r\n                                            if (addValue) {\r\n                                                codeSnippet += ': \"{{*}}\"';\r\n                                                if (!isLast) {\r\n                                                    codeSnippet += ',';\r\n                                                }\r\n                                            }\r\n                                            result.add({ type: 'property', label: name, codeSnippet: codeSnippet, documentationLabel: '' });\r\n                                        }\r\n                                    }\r\n                                    if (results.length === LIMIT) {\r\n                                        result.setAsIncomplete();\r\n                                    }\r\n                                }\r\n                            }\r\n                            catch (e) {\r\n                            }\r\n                        }\r\n                        else {\r\n                            result.error(nls.localize(1, null, success.responseText));\r\n                            return 0;\r\n                        }\r\n                    }, function (error) {\r\n                        result.error(nls.localize(2, null, error.responseText));\r\n                        return 0;\r\n                    });\r\n                }\r\n                else {\r\n                    this.mostDependedOn.forEach(function (name) {\r\n                        var codeSnippet = JSON.stringify(name);\r\n                        if (addValue) {\r\n                            codeSnippet += ': \"{{*}}\"';\r\n                            if (!isLast) {\r\n                                codeSnippet += ',';\r\n                            }\r\n                        }\r\n                        result.add({ type: 'property', label: name, codeSnippet: codeSnippet, documentationLabel: '' });\r\n                    });\r\n                    result.setAsIncomplete();\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n        PackageJSONContribution.prototype.collectValueSuggestions = function (resource, location, currentKey, result) {\r\n            if (this.isPackageJSONFile(resource) && (location.matches(['dependencies']) || location.matches(['devDependencies']) || location.matches(['optionalDependencies']) || location.matches(['peerDependencies']))) {\r\n                var queryUrl = 'http://registry.npmjs.org/' + encodeURIComponent(currentKey) + '/latest';\r\n                return this.requestService.makeRequest({\r\n                    url: queryUrl\r\n                }).then(function (success) {\r\n                    try {\r\n                        var obj = JSON.parse(success.responseText);\r\n                        if (obj && obj.version) {\r\n                            var version = obj.version;\r\n                            var name = JSON.stringify(version);\r\n                            result.add({ type: 'class', label: name, codeSnippet: name, documentationLabel: nls.localize(3, null) });\r\n                            name = JSON.stringify('^' + version);\r\n                            result.add({ type: 'class', label: name, codeSnippet: name, documentationLabel: nls.localize(4, null) });\r\n                            name = JSON.stringify('~' + version);\r\n                            result.add({ type: 'class', label: name, codeSnippet: name, documentationLabel: nls.localize(5, null) });\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                    }\r\n                    return 0;\r\n                }, function (error) {\r\n                    return 0;\r\n                });\r\n            }\r\n            return null;\r\n        };\r\n        PackageJSONContribution.prototype.getInfoContribution = function (resource, location) {\r\n            if (this.isPackageJSONFile(resource) && (location.matches(['dependencies', '*']) || location.matches(['devDependencies', '*']) || location.matches(['optionalDependencies', '*']) || location.matches(['peerDependencies', '*']))) {\r\n                var pack = location.getSegments()[location.getSegments().length - 1];\r\n                var htmlContent = [];\r\n                htmlContent.push({ className: 'type', text: nls.localize(6, null, pack) });\r\n                var queryUrl = 'http://registry.npmjs.org/' + encodeURIComponent(pack) + '/latest';\r\n                return this.requestService.makeRequest({\r\n                    url: queryUrl\r\n                }).then(function (success) {\r\n                    try {\r\n                        var obj = JSON.parse(success.responseText);\r\n                        if (obj) {\r\n                            if (obj.description) {\r\n                                htmlContent.push({ className: 'documentation', text: obj.description });\r\n                            }\r\n                            if (obj.version) {\r\n                                htmlContent.push({ className: 'documentation', text: nls.localize(7, null, obj.version) });\r\n                            }\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                    }\r\n                    return htmlContent;\r\n                }, function (error) {\r\n                    return htmlContent;\r\n                });\r\n            }\r\n            return null;\r\n        };\r\n        PackageJSONContribution = __decorate([\r\n            __param(0, request_1.IRequestService)\r\n        ], PackageJSONContribution);\r\n        return PackageJSONContribution;\r\n    }());\r\n    exports.PackageJSONContribution = PackageJSONContribution;\r\n});\r\n\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\ndefine(\"vs/languages/json/common/contributions/projectJSONContribution\", [\"require\", \"exports\", 'vs/base/common/strings', 'vs/nls!vs/languages/json/common/contributions/projectJSONContribution', 'vs/platform/request/common/request'], function (require, exports, Strings, nls, request_1) {\r\n    /*---------------------------------------------------------------------------------------------\r\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n     *--------------------------------------------------------------------------------------------*/\r\n    'use strict';\r\n    var LIMIT = 40;\r\n    var ProjectJSONContribution = (function () {\r\n        function ProjectJSONContribution(requestService) {\r\n            this.requestService = requestService;\r\n        }\r\n        ProjectJSONContribution.prototype.isProjectJSONFile = function (resource) {\r\n            var path = resource.path;\r\n            return Strings.endsWith(path, '/project.json');\r\n        };\r\n        ProjectJSONContribution.prototype.collectDefaultSuggestions = function (resource, result) {\r\n            if (this.isProjectJSONFile(resource)) {\r\n                var defaultValue = {\r\n                    'version': '{{1.0.0-*}}',\r\n                    'dependencies': {},\r\n                    'frameworks': {\r\n                        'dnx451': {},\r\n                        'dnxcore50': {}\r\n                    }\r\n                };\r\n                result.add({ type: 'snippet', label: nls.localize(0, null), codeSnippet: JSON.stringify(defaultValue, null, '\\t'), documentationLabel: '' });\r\n            }\r\n            return null;\r\n        };\r\n        ProjectJSONContribution.prototype.collectPropertySuggestions = function (resource, location, currentWord, addValue, isLast, result) {\r\n            if (this.isProjectJSONFile(resource) && (location.matches(['dependencies']) || location.matches(['frameworks', '*', 'dependencies']) || location.matches(['frameworks', '*', 'frameworkAssemblies']))) {\r\n                var queryUrl;\r\n                if (currentWord.length > 0) {\r\n                    queryUrl = 'https://www.nuget.org/api/v2/Packages?'\r\n                        + '$filter=Id%20ge%20\\''\r\n                        + encodeURIComponent(currentWord)\r\n                        + '\\'%20and%20Id%20lt%20\\''\r\n                        + encodeURIComponent(currentWord + 'z')\r\n                        + '\\'%20and%20IsAbsoluteLatestVersion%20eq%20true'\r\n                        + '&$select=Id,Version,Description&$format=json&$top=' + LIMIT;\r\n                }\r\n                else {\r\n                    queryUrl = 'https://www.nuget.org/api/v2/Packages?'\r\n                        + '$filter=IsAbsoluteLatestVersion%20eq%20true'\r\n                        + '&$orderby=DownloadCount%20desc&$top=' + LIMIT\r\n                        + '&$select=Id,Version,DownloadCount,Description&$format=json';\r\n                }\r\n                return this.requestService.makeRequest({\r\n                    url: queryUrl\r\n                }).then(function (success) {\r\n                    if (success.status === 200) {\r\n                        try {\r\n                            var obj = JSON.parse(success.responseText);\r\n                            if (Array.isArray(obj.d)) {\r\n                                var results = obj.d;\r\n                                for (var i = 0; i < results.length; i++) {\r\n                                    var curr = results[i];\r\n                                    var name = curr.Id;\r\n                                    var version = curr.Version;\r\n                                    if (name) {\r\n                                        var documentation = curr.Description;\r\n                                        var typeLabel = curr.Version;\r\n                                        var codeSnippet = JSON.stringify(name);\r\n                                        if (addValue) {\r\n                                            codeSnippet += ': \"{{' + version + '}}\"';\r\n                                            if (!isLast) {\r\n                                                codeSnippet += ',';\r\n                                            }\r\n                                        }\r\n                                        result.add({ type: 'property', label: name, codeSnippet: codeSnippet, typeLabel: typeLabel, documentationLabel: documentation });\r\n                                    }\r\n                                }\r\n                                if (results.length === LIMIT) {\r\n                                    result.setAsIncomplete();\r\n                                }\r\n                            }\r\n                        }\r\n                        catch (e) {\r\n                        }\r\n                    }\r\n                    else {\r\n                        result.error(nls.localize(1, null, success.responseText));\r\n                        return 0;\r\n                    }\r\n                }, function (error) {\r\n                    result.error(nls.localize(2, null, error.responseText));\r\n                    return 0;\r\n                });\r\n            }\r\n            return null;\r\n        };\r\n        ProjectJSONContribution.prototype.collectValueSuggestions = function (resource, location, currentKey, result) {\r\n            if (this.isProjectJSONFile(resource) && (location.matches(['dependencies']) || location.matches(['frameworks', '*', 'dependencies']) || location.matches(['frameworks', '*', 'frameworkAssemblies']))) {\r\n                var queryUrl = 'https://www.myget.org/F/aspnetrelease/api/v2/Packages?'\r\n                    + '$filter=Id%20eq%20\\''\r\n                    + encodeURIComponent(currentKey)\r\n                    + '\\'&$select=Version,IsAbsoluteLatestVersion&$format=json&$top=' + LIMIT;\r\n                return this.requestService.makeRequest({\r\n                    url: queryUrl\r\n                }).then(function (success) {\r\n                    try {\r\n                        var obj = JSON.parse(success.responseText);\r\n                        if (Array.isArray(obj.d)) {\r\n                            var results = obj.d;\r\n                            for (var i = 0; i < results.length; i++) {\r\n                                var curr = results[i];\r\n                                var version = curr.Version;\r\n                                if (version) {\r\n                                    var name = JSON.stringify(version);\r\n                                    var isLatest = curr.IsAbsoluteLatestVersion === 'true';\r\n                                    var label = name;\r\n                                    var documentationLabel = '';\r\n                                    if (isLatest) {\r\n                                        documentationLabel = nls.localize(3, null);\r\n                                    }\r\n                                    result.add({ type: 'class', label: label, codeSnippet: name, documentationLabel: documentationLabel });\r\n                                }\r\n                            }\r\n                            if (results.length === LIMIT) {\r\n                                result.setAsIncomplete();\r\n                            }\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                    }\r\n                    return 0;\r\n                }, function (error) {\r\n                    return 0;\r\n                });\r\n            }\r\n            return null;\r\n        };\r\n        ProjectJSONContribution.prototype.getInfoContribution = function (resource, location) {\r\n            if (this.isProjectJSONFile(resource) && (location.matches(['dependencies', '*']) || location.matches(['frameworks', '*', 'dependencies', '*']) || location.matches(['frameworks', '*', 'frameworkAssemblies', '*']))) {\r\n                var pack = location.getSegments()[location.getSegments().length - 1];\r\n                var htmlContent = [];\r\n                htmlContent.push({ className: 'type', text: nls.localize(4, null, pack) });\r\n                var queryUrl = 'https://www.myget.org/F/aspnetrelease/api/v2/Packages?'\r\n                    + '$filter=Id%20eq%20\\''\r\n                    + encodeURIComponent(pack)\r\n                    + '\\'%20and%20IsAbsoluteLatestVersion%20eq%20true'\r\n                    + '&$select=Version,Description&$format=json&$top=5';\r\n                return this.requestService.makeRequest({\r\n                    url: queryUrl\r\n                }).then(function (success) {\r\n                    var content = success.responseText;\r\n                    if (content) {\r\n                        try {\r\n                            var obj = JSON.parse(content);\r\n                            if (obj.d && obj.d[0]) {\r\n                                var res = obj.d[0];\r\n                                if (res.Description) {\r\n                                    htmlContent.push({ className: 'documentation', text: res.Description });\r\n                                }\r\n                                if (res.Version) {\r\n                                    htmlContent.push({ className: 'documentation', text: nls.localize(5, null, res.Version) });\r\n                                }\r\n                            }\r\n                        }\r\n                        catch (e) {\r\n                        }\r\n                    }\r\n                    return htmlContent;\r\n                }, function (error) {\r\n                    return htmlContent;\r\n                });\r\n            }\r\n            return null;\r\n        };\r\n        ProjectJSONContribution = __decorate([\r\n            __param(0, request_1.IRequestService)\r\n        ], ProjectJSONContribution);\r\n        return ProjectJSONContribution;\r\n    }());\r\n    exports.ProjectJSONContribution = ProjectJSONContribution;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\ndefine(\"vs/languages/json/common/jsonSchemaService\", [\"require\", \"exports\", 'vs/nls!vs/languages/json/common/jsonSchemaService', 'vs/base/common/objects', 'vs/base/common/json', 'vs/base/common/http', 'vs/base/common/strings', 'vs/base/common/uri', 'vs/base/common/types', 'vs/base/common/winjs.base', 'vs/editor/common/services/resourceService', 'vs/platform/request/common/request', 'vs/platform/workspace/common/workspace', 'vs/base/common/lifecycle'], function (require, exports, nls, Objects, Json, http, Strings, uri_1, Types, WinJS, resourceService_1, request_1, workspace_1, lifecycle_1) {\r\n    'use strict';\r\n    var FilePatternAssociation = (function () {\r\n        function FilePatternAssociation(pattern) {\r\n            this.combinedSchemaId = 'local://combinedSchema/' + encodeURIComponent(pattern);\r\n            try {\r\n                this.patternRegExp = new RegExp(Strings.convertSimple2RegExpPattern(pattern) + '$');\r\n            }\r\n            catch (e) {\r\n                // invalid pattern\r\n                this.patternRegExp = null;\r\n            }\r\n            this.schemas = [];\r\n            this.combinedSchema = null;\r\n        }\r\n        FilePatternAssociation.prototype.addSchema = function (id) {\r\n            this.schemas.push(id);\r\n            this.combinedSchema = null;\r\n        };\r\n        FilePatternAssociation.prototype.matchesPattern = function (fileName) {\r\n            return this.patternRegExp && this.patternRegExp.test(fileName);\r\n        };\r\n        FilePatternAssociation.prototype.getCombinedSchema = function (service) {\r\n            if (!this.combinedSchema) {\r\n                this.combinedSchema = service.createCombinedSchema(this.combinedSchemaId, this.schemas);\r\n            }\r\n            return this.combinedSchema;\r\n        };\r\n        return FilePatternAssociation;\r\n    }());\r\n    var SchemaHandle = (function () {\r\n        function SchemaHandle(service, url, unresolvedSchemaContent) {\r\n            this.service = service;\r\n            this.url = url;\r\n            if (unresolvedSchemaContent) {\r\n                this.unresolvedSchema = WinJS.TPromise.as(new UnresolvedSchema(unresolvedSchemaContent));\r\n            }\r\n        }\r\n        SchemaHandle.prototype.getUnresolvedSchema = function () {\r\n            if (!this.unresolvedSchema) {\r\n                this.unresolvedSchema = this.service.loadSchema(this.url);\r\n            }\r\n            return this.unresolvedSchema;\r\n        };\r\n        SchemaHandle.prototype.getResolvedSchema = function () {\r\n            var _this = this;\r\n            if (!this.resolvedSchema) {\r\n                this.resolvedSchema = this.getUnresolvedSchema().then(function (unresolved) {\r\n                    return _this.service.resolveSchemaContent(unresolved);\r\n                });\r\n            }\r\n            return this.resolvedSchema;\r\n        };\r\n        SchemaHandle.prototype.clearSchema = function () {\r\n            this.resolvedSchema = null;\r\n            this.unresolvedSchema = null;\r\n        };\r\n        return SchemaHandle;\r\n    }());\r\n    var UnresolvedSchema = (function () {\r\n        function UnresolvedSchema(schema, errors) {\r\n            if (errors === void 0) { errors = []; }\r\n            this.schema = schema;\r\n            this.errors = errors;\r\n        }\r\n        return UnresolvedSchema;\r\n    }());\r\n    exports.UnresolvedSchema = UnresolvedSchema;\r\n    var ResolvedSchema = (function () {\r\n        function ResolvedSchema(schema, errors) {\r\n            if (errors === void 0) { errors = []; }\r\n            this.schema = schema;\r\n            this.errors = errors;\r\n        }\r\n        ResolvedSchema.prototype.getSection = function (path) {\r\n            return this.getSectionRecursive(path, this.schema);\r\n        };\r\n        ResolvedSchema.prototype.getSectionRecursive = function (path, schema) {\r\n            var _this = this;\r\n            if (!schema || path.length === 0) {\r\n                return schema;\r\n            }\r\n            var next = path.shift();\r\n            if (schema.properties && schema.properties[next]) {\r\n                return this.getSectionRecursive(path, schema.properties[next]);\r\n            }\r\n            else if (Types.isObject(schema.patternProperties)) {\r\n                Object.keys(schema.patternProperties).forEach(function (pattern) {\r\n                    var regex = new RegExp(pattern);\r\n                    if (regex.test(next)) {\r\n                        return _this.getSectionRecursive(path, schema.patternProperties[pattern]);\r\n                    }\r\n                });\r\n            }\r\n            else if (Types.isObject(schema.additionalProperties)) {\r\n                return this.getSectionRecursive(path, schema.additionalProperties);\r\n            }\r\n            else if (next.match('[0-9]+')) {\r\n                if (Types.isObject(schema.items)) {\r\n                    return this.getSectionRecursive(path, schema.items);\r\n                }\r\n                else if (Array.isArray(schema.items)) {\r\n                    try {\r\n                        var index = parseInt(next, 10);\r\n                        if (schema.items[index]) {\r\n                            return this.getSectionRecursive(path, schema.items[index]);\r\n                        }\r\n                        return null;\r\n                    }\r\n                    catch (e) {\r\n                        return null;\r\n                    }\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n        return ResolvedSchema;\r\n    }());\r\n    exports.ResolvedSchema = ResolvedSchema;\r\n    var JSONSchemaService = (function () {\r\n        function JSONSchemaService(requestService, contextService, resourceService) {\r\n            var _this = this;\r\n            this.requestService = requestService;\r\n            this.contextService = contextService;\r\n            this.callOnDispose = [];\r\n            if (resourceService) {\r\n                this.callOnDispose.push(resourceService.addListener2_(resourceService_1.ResourceEvents.CHANGED, function (e) { return _this.onResourceChange(e); }));\r\n            }\r\n            this.contributionSchemas = {};\r\n            this.contributionAssociations = {};\r\n            this.schemasById = {};\r\n            this.filePatternAssociations = [];\r\n            this.filePatternAssociationById = {};\r\n        }\r\n        JSONSchemaService.prototype.dispose = function () {\r\n            this.callOnDispose = lifecycle_1.dispose(this.callOnDispose);\r\n        };\r\n        JSONSchemaService.prototype.onResourceChange = function (e) {\r\n            var url = e.url.toString();\r\n            var schemaFile = this.schemasById[url];\r\n            if (schemaFile) {\r\n                schemaFile.clearSchema();\r\n            }\r\n        };\r\n        JSONSchemaService.prototype.normalizeId = function (id) {\r\n            if (id.length > 0 && id.charAt(id.length - 1) === '#') {\r\n                return id.substring(0, id.length - 1);\r\n            }\r\n            return id;\r\n        };\r\n        JSONSchemaService.prototype.setSchemaContributions = function (schemaContributions) {\r\n            if (schemaContributions.schemas) {\r\n                var schemas = schemaContributions.schemas;\r\n                for (var id in schemas) {\r\n                    id = this.normalizeId(id);\r\n                    this.contributionSchemas[id] = this.addSchemaHandle(id, schemas[id]);\r\n                }\r\n            }\r\n        };\r\n        JSONSchemaService.prototype.addSchemaHandle = function (id, unresolvedSchemaContent) {\r\n            var schemaHandle = new SchemaHandle(this, id, unresolvedSchemaContent);\r\n            this.schemasById[id] = schemaHandle;\r\n            return schemaHandle;\r\n        };\r\n        JSONSchemaService.prototype.getOrAddSchemaHandle = function (id, unresolvedSchemaContent) {\r\n            return this.schemasById[id] || this.addSchemaHandle(id, unresolvedSchemaContent);\r\n        };\r\n        JSONSchemaService.prototype.getOrAddFilePatternAssociation = function (pattern) {\r\n            var fpa = this.filePatternAssociationById[pattern];\r\n            if (!fpa) {\r\n                fpa = new FilePatternAssociation(pattern);\r\n                this.filePatternAssociationById[pattern] = fpa;\r\n                this.filePatternAssociations.push(fpa);\r\n            }\r\n            return fpa;\r\n        };\r\n        JSONSchemaService.prototype.registerExternalSchema = function (uri, filePatterns, unresolvedSchemaContent) {\r\n            var _this = this;\r\n            if (filePatterns === void 0) { filePatterns = null; }\r\n            var id = this.normalizeId(uri);\r\n            if (filePatterns) {\r\n                filePatterns.forEach(function (pattern) {\r\n                    _this.getOrAddFilePatternAssociation(pattern).addSchema(uri);\r\n                });\r\n            }\r\n            return unresolvedSchemaContent ? this.addSchemaHandle(id, unresolvedSchemaContent) : this.getOrAddSchemaHandle(id);\r\n        };\r\n        JSONSchemaService.prototype.clearExternalSchemas = function () {\r\n            var _this = this;\r\n            this.schemasById = {};\r\n            this.filePatternAssociations = [];\r\n            this.filePatternAssociationById = {};\r\n            for (var id in this.contributionSchemas) {\r\n                this.schemasById[id] = this.contributionSchemas[id];\r\n            }\r\n            for (var pattern in this.contributionAssociations) {\r\n                var fpa = this.getOrAddFilePatternAssociation(pattern);\r\n                this.contributionAssociations[pattern].forEach(function (schemaId) {\r\n                    var id = _this.normalizeId(schemaId);\r\n                    fpa.addSchema(id);\r\n                });\r\n            }\r\n        };\r\n        JSONSchemaService.prototype.getResolvedSchema = function (schemaId) {\r\n            var id = this.normalizeId(schemaId);\r\n            var schemaHandle = this.schemasById[id];\r\n            if (schemaHandle) {\r\n                return schemaHandle.getResolvedSchema();\r\n            }\r\n            return WinJS.TPromise.as(null);\r\n        };\r\n        JSONSchemaService.prototype.loadSchema = function (url) {\r\n            return this.requestService.makeRequest({ url: url }).then(function (request) {\r\n                var content = request.responseText;\r\n                if (!content) {\r\n                    var errorMessage = nls.localize(0, null, toDisplayString(url));\r\n                    return new UnresolvedSchema({}, [errorMessage]);\r\n                }\r\n                var schemaContent = {};\r\n                var jsonErrors = [];\r\n                schemaContent = Json.parse(content, jsonErrors);\r\n                var errors = jsonErrors.length ? [nls.localize(1, null, toDisplayString(url), Json.getParseErrorMessage(jsonErrors[0].error))] : [];\r\n                return new UnresolvedSchema(schemaContent, errors);\r\n            }, function (error) {\r\n                var errorMessage = nls.localize(2, null, toDisplayString(url), error.responseText || http.getErrorStatusDescription(error.status) || error.toString());\r\n                return new UnresolvedSchema({}, [errorMessage]);\r\n            });\r\n        };\r\n        JSONSchemaService.prototype.resolveSchemaContent = function (schemaToResolve) {\r\n            var _this = this;\r\n            var resolveErrors = schemaToResolve.errors.slice(0);\r\n            var schema = schemaToResolve.schema;\r\n            var findSection = function (schema, path) {\r\n                if (!path) {\r\n                    return schema;\r\n                }\r\n                var current = schema;\r\n                path.substr(1).split('/').some(function (part) {\r\n                    current = current[part];\r\n                    return !current;\r\n                });\r\n                return current;\r\n            };\r\n            var resolveLink = function (node, linkedSchema, linkPath) {\r\n                var section = findSection(linkedSchema, linkPath);\r\n                if (typeof section === 'object') {\r\n                    Objects.mixin(node, section, false);\r\n                }\r\n                else {\r\n                    resolveErrors.push(nls.localize(3, null, linkPath, linkedSchema.id));\r\n                }\r\n                delete node.$ref;\r\n            };\r\n            var resolveExternalLink = function (node, uri, linkPath) {\r\n                return _this.getOrAddSchemaHandle(uri).getUnresolvedSchema().then(function (unresolvedSchema) {\r\n                    if (unresolvedSchema.errors.length) {\r\n                        var loc = linkPath ? uri + '#' + linkPath : uri;\r\n                        resolveErrors.push(nls.localize(4, null, loc, unresolvedSchema.errors[0]));\r\n                    }\r\n                    resolveLink(node, unresolvedSchema.schema, linkPath);\r\n                    return resolveRefs(node, unresolvedSchema.schema);\r\n                });\r\n            };\r\n            var resolveRefs = function (node, parentSchema) {\r\n                var toWalk = [node];\r\n                var seen = [];\r\n                var openPromises = [];\r\n                var collectEntries = function () {\r\n                    var entries = [];\r\n                    for (var _i = 0; _i < arguments.length; _i++) {\r\n                        entries[_i - 0] = arguments[_i];\r\n                    }\r\n                    for (var _a = 0, entries_1 = entries; _a < entries_1.length; _a++) {\r\n                        var entry = entries_1[_a];\r\n                        if (typeof entry === 'object') {\r\n                            toWalk.push(entry);\r\n                        }\r\n                    }\r\n                };\r\n                var collectMapEntries = function () {\r\n                    var maps = [];\r\n                    for (var _i = 0; _i < arguments.length; _i++) {\r\n                        maps[_i - 0] = arguments[_i];\r\n                    }\r\n                    for (var _a = 0, maps_1 = maps; _a < maps_1.length; _a++) {\r\n                        var map = maps_1[_a];\r\n                        if (typeof map === 'object') {\r\n                            for (var key in map) {\r\n                                var entry = map[key];\r\n                                toWalk.push(entry);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n                var collectArrayEntries = function () {\r\n                    var arrays = [];\r\n                    for (var _i = 0; _i < arguments.length; _i++) {\r\n                        arrays[_i - 0] = arguments[_i];\r\n                    }\r\n                    for (var _a = 0, arrays_1 = arrays; _a < arrays_1.length; _a++) {\r\n                        var array = arrays_1[_a];\r\n                        if (Array.isArray(array)) {\r\n                            toWalk.push.apply(toWalk, array);\r\n                        }\r\n                    }\r\n                };\r\n                while (toWalk.length) {\r\n                    var next = toWalk.pop();\r\n                    if (seen.indexOf(next) >= 0) {\r\n                        continue;\r\n                    }\r\n                    seen.push(next);\r\n                    if (next.$ref) {\r\n                        var segments = next.$ref.split('#', 2);\r\n                        if (segments[0].length > 0) {\r\n                            openPromises.push(resolveExternalLink(next, segments[0], segments[1]));\r\n                            continue;\r\n                        }\r\n                        else {\r\n                            resolveLink(next, parentSchema, segments[1]);\r\n                        }\r\n                    }\r\n                    collectEntries(next.items, next.additionalProperties, next.not);\r\n                    collectMapEntries(next.definitions, next.properties, next.patternProperties, next.dependencies);\r\n                    collectArrayEntries(next.anyOf, next.allOf, next.oneOf, next.items);\r\n                }\r\n                return WinJS.Promise.join(openPromises);\r\n            };\r\n            return resolveRefs(schema, schema).then(function (_) { return new ResolvedSchema(schema, resolveErrors); });\r\n        };\r\n        JSONSchemaService.prototype.getSchemaForResource = function (resource, document) {\r\n            // first use $schema if present\r\n            if (document && document.root && document.root.type === 'object') {\r\n                var schemaProperties = document.root.properties.filter(function (p) { return (p.key.value === '$schema') && !!p.value; });\r\n                if (schemaProperties.length > 0) {\r\n                    var schemeId = schemaProperties[0].value.getValue();\r\n                    if (!Strings.startsWith(schemeId, 'http://') && !Strings.startsWith(schemeId, 'https://') && !Strings.startsWith(schemeId, 'file://')) {\r\n                        var resourceURL = this.contextService.toResource(schemeId);\r\n                        if (resourceURL) {\r\n                            schemeId = resourceURL.toString();\r\n                        }\r\n                    }\r\n                    if (schemeId) {\r\n                        var id = this.normalizeId(schemeId);\r\n                        return this.getOrAddSchemaHandle(id).getResolvedSchema();\r\n                    }\r\n                }\r\n            }\r\n            // then check for matching file names, last to first\r\n            for (var i = this.filePatternAssociations.length - 1; i >= 0; i--) {\r\n                var entry = this.filePatternAssociations[i];\r\n                if (entry.matchesPattern(resource)) {\r\n                    return entry.getCombinedSchema(this).getResolvedSchema();\r\n                }\r\n            }\r\n            return WinJS.TPromise.as(null);\r\n        };\r\n        JSONSchemaService.prototype.createCombinedSchema = function (combinedSchemaId, schemaIds) {\r\n            if (schemaIds.length === 1) {\r\n                return this.getOrAddSchemaHandle(schemaIds[0]);\r\n            }\r\n            else {\r\n                var combinedSchema = {\r\n                    allOf: schemaIds.map(function (schemaId) { return ({ $ref: schemaId }); })\r\n                };\r\n                return this.addSchemaHandle(combinedSchemaId, combinedSchema);\r\n            }\r\n        };\r\n        JSONSchemaService = __decorate([\r\n            __param(0, request_1.IRequestService),\r\n            __param(1, workspace_1.IWorkspaceContextService),\r\n            __param(2, resourceService_1.IResourceService)\r\n        ], JSONSchemaService);\r\n        return JSONSchemaService;\r\n    }());\r\n    exports.JSONSchemaService = JSONSchemaService;\r\n    function toDisplayString(url) {\r\n        try {\r\n            var uri = uri_1.default.parse(url);\r\n            if (uri.scheme === 'file') {\r\n                return uri.fsPath;\r\n            }\r\n        }\r\n        catch (e) {\r\n        }\r\n        return url;\r\n    }\r\n});\r\n\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\ndefine(\"vs/languages/json/common/jsonWorker\", [\"require\", \"exports\", 'vs/base/common/severity', 'vs/editor/common/modes', './parser/jsonParser', 'vs/base/common/jsonFormatter', './jsonSchemaService', './jsonIntellisense', 'vs/base/common/winjs.base', 'vs/base/common/strings', './contributions/projectJSONContribution', './contributions/packageJSONContribution', './contributions/bowerJSONContribution', './contributions/globPatternContribution', 'vs/base/common/errors', 'vs/platform/markers/common/markers', 'vs/platform/request/common/request', 'vs/platform/workspace/common/workspace', 'vs/editor/common/services/resourceService', 'vs/platform/instantiation/common/instantiation', 'vs/editor/common/modes/supports/suggestSupport', 'vs/editor/common/worker/validationHelper'], function (require, exports, severity_1, Modes, Parser, JSONFormatter, SchemaService, JSONIntellisense, WinJS, Strings, ProjectJSONContribution, PackageJSONContribution, BowerJSONContribution, GlobPatternContribution, errors, markers_1, request_1, workspace_1, resourceService_1, instantiation_1, suggestSupport_1, validationHelper_1) {\r\n    /*---------------------------------------------------------------------------------------------\r\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n     *--------------------------------------------------------------------------------------------*/\r\n    'use strict';\r\n    var JSONWorker = (function () {\r\n        function JSONWorker(modeId, resourceService, markerService, requestService, contextService, instantiationService) {\r\n            var _this = this;\r\n            this._modeId = modeId;\r\n            this.resourceService = resourceService;\r\n            this.markerService = markerService;\r\n            this._validationHelper = new validationHelper_1.ValidationHelper(this.resourceService, this._modeId, function (toValidate) { return _this.doValidate(toValidate); });\r\n            this.requestService = requestService;\r\n            this.contextService = contextService;\r\n            this.schemaService = instantiationService.createInstance(SchemaService.JSONSchemaService);\r\n            this.contributions = [\r\n                instantiationService.createInstance(ProjectJSONContribution.ProjectJSONContribution),\r\n                instantiationService.createInstance(PackageJSONContribution.PackageJSONContribution),\r\n                instantiationService.createInstance(BowerJSONContribution.BowerJSONContribution),\r\n                instantiationService.createInstance(GlobPatternContribution.GlobPatternContribution)\r\n            ];\r\n            this.jsonIntellisense = new JSONIntellisense.JSONIntellisense(this.schemaService, this.requestService, this.contributions);\r\n        }\r\n        JSONWorker.prototype.navigateValueSet = function (resource, range, up) {\r\n            var _this = this;\r\n            var modelMirror = this.resourceService.get(resource);\r\n            var offset = modelMirror.getOffsetFromPosition({ lineNumber: range.startLineNumber, column: range.startColumn });\r\n            var parser = new Parser.JSONParser();\r\n            var config = new Parser.JSONDocumentConfig();\r\n            config.ignoreDanglingComma = true;\r\n            var doc = parser.parse(modelMirror.getValue(), config);\r\n            var node = doc.getNodeFromOffsetEndInclusive(offset);\r\n            if (node && (node.type === 'string' || node.type === 'number' || node.type === 'boolean' || node.type === 'null')) {\r\n                return this.schemaService.getSchemaForResource(resource.toString(), doc).then(function (schema) {\r\n                    if (schema) {\r\n                        var proposals = [];\r\n                        var proposed = {};\r\n                        var collector = {\r\n                            add: function (suggestion) {\r\n                                if (!proposed[suggestion.label]) {\r\n                                    proposed[suggestion.label] = true;\r\n                                    proposals.push(suggestion);\r\n                                }\r\n                            },\r\n                            setAsIncomplete: function () { },\r\n                            error: function (message) {\r\n                                errors.onUnexpectedError(message);\r\n                            }\r\n                        };\r\n                        _this.jsonIntellisense.getValueSuggestions(resource, schema, doc, node.parent, node.start, collector);\r\n                        var range = modelMirror.getRangeFromOffsetAndLength(node.start, node.end - node.start);\r\n                        var text = modelMirror.getValueInRange(range);\r\n                        for (var i = 0, len = proposals.length; i < len; i++) {\r\n                            if (Strings.equalsIgnoreCase(proposals[i].label, text)) {\r\n                                var nextIdx = i;\r\n                                if (up) {\r\n                                    nextIdx = (i + 1) % len;\r\n                                }\r\n                                else {\r\n                                    nextIdx = i - 1;\r\n                                    if (nextIdx < 0) {\r\n                                        nextIdx = len - 1;\r\n                                    }\r\n                                }\r\n                                return {\r\n                                    value: proposals[nextIdx].label,\r\n                                    range: range\r\n                                };\r\n                            }\r\n                        }\r\n                        return null;\r\n                    }\r\n                });\r\n            }\r\n            return null;\r\n        };\r\n        /**\r\n         * @return true if you want to revalidate your models\r\n         */\r\n        JSONWorker.prototype._doConfigure = function (options) {\r\n            var _this = this;\r\n            if (options && options.schemas) {\r\n                this.schemaService.clearExternalSchemas();\r\n                options.schemas.forEach(function (schema) {\r\n                    if (schema.url && (schema.fileMatch || schema.schema)) {\r\n                        var url = schema.url;\r\n                        if (!Strings.startsWith(url, 'http://') && !Strings.startsWith(url, 'https://') && !Strings.startsWith(url, 'file://')) {\r\n                            var resourceURL = _this.contextService.toResource(url);\r\n                            if (resourceURL) {\r\n                                url = resourceURL.toString();\r\n                            }\r\n                        }\r\n                        if (url) {\r\n                            _this.schemaService.registerExternalSchema(url, schema.fileMatch, schema.schema);\r\n                        }\r\n                    }\r\n                    else if (schema.filePattern && schema.schemaPath) {\r\n                        var url = _this.contextService.toResource(schema.schemaPath).toString();\r\n                        var patterns = schema.filePattern ? [schema.filePattern] : [];\r\n                        _this.schemaService.registerExternalSchema(url, patterns);\r\n                    }\r\n                });\r\n            }\r\n            this._validationHelper.triggerDueToConfigurationChange();\r\n            return WinJS.TPromise.as(void 0);\r\n        };\r\n        JSONWorker.prototype.setSchemaContributions = function (contributions) {\r\n            this.schemaService.setSchemaContributions(contributions);\r\n            return WinJS.TPromise.as(true);\r\n        };\r\n        JSONWorker.prototype.enableValidator = function () {\r\n            this._validationHelper.enable();\r\n            return WinJS.TPromise.as(null);\r\n        };\r\n        JSONWorker.prototype.doValidate = function (resources) {\r\n            for (var i = 0; i < resources.length; i++) {\r\n                this.doValidate1(resources[i]);\r\n            }\r\n        };\r\n        JSONWorker.prototype.doValidate1 = function (resource) {\r\n            var _this = this;\r\n            var modelMirror = this.resourceService.get(resource);\r\n            var parser = new Parser.JSONParser();\r\n            var content = modelMirror.getValue();\r\n            if (content.length === 0) {\r\n                // ignore empty content, no marker can be set anyway\r\n                return;\r\n            }\r\n            var result = parser.parse(content);\r\n            this.schemaService.getSchemaForResource(resource.toString(), result).then(function (schema) {\r\n                if (schema) {\r\n                    if (schema.errors.length && result.root) {\r\n                        var property = result.root.type === 'object' ? result.root.getFirstProperty('$schema') : null;\r\n                        if (property) {\r\n                            var node = property.value || property;\r\n                            result.warnings.push({ location: { start: node.start, end: node.end }, message: schema.errors[0] });\r\n                        }\r\n                        else {\r\n                            result.warnings.push({ location: { start: result.root.start, end: result.root.start + 1 }, message: schema.errors[0] });\r\n                        }\r\n                    }\r\n                    else {\r\n                        result.validate(schema.schema);\r\n                    }\r\n                }\r\n                var added = {};\r\n                var markerData = [];\r\n                result.errors.concat(result.warnings).forEach(function (error, idx) {\r\n                    // remove duplicated messages\r\n                    var signature = error.location.start + ' ' + error.location.end + ' ' + error.message;\r\n                    if (!added[signature]) {\r\n                        added[signature] = true;\r\n                        var startPosition = modelMirror.getPositionFromOffset(error.location.start);\r\n                        var endPosition = modelMirror.getPositionFromOffset(error.location.end);\r\n                        markerData.push({\r\n                            message: error.message,\r\n                            severity: idx >= result.errors.length ? severity_1.default.Warning : severity_1.default.Error,\r\n                            startLineNumber: startPosition.lineNumber,\r\n                            startColumn: startPosition.column,\r\n                            endLineNumber: endPosition.lineNumber,\r\n                            endColumn: endPosition.column\r\n                        });\r\n                    }\r\n                });\r\n                _this.markerService.changeOne(_this._modeId, resource, markerData);\r\n            });\r\n        };\r\n        JSONWorker.prototype.provideCompletionItems = function (resource, position) {\r\n            return this.doSuggest(resource, position).then(function (value) { return suggestSupport_1.filterSuggestions(value); });\r\n        };\r\n        JSONWorker.prototype.doSuggest = function (resource, position) {\r\n            var modelMirror = this.resourceService.get(resource);\r\n            return this.jsonIntellisense.doSuggest(resource, modelMirror, position);\r\n        };\r\n        JSONWorker.prototype.provideHover = function (resource, position) {\r\n            var _this = this;\r\n            var modelMirror = this.resourceService.get(resource);\r\n            var parser = new Parser.JSONParser();\r\n            var doc = parser.parse(modelMirror.getValue());\r\n            var offset = modelMirror.getOffsetFromPosition(position);\r\n            var node = doc.getNodeFromOffset(offset);\r\n            var originalNode = node;\r\n            // use the property description when hovering over an object key\r\n            if (node && node.type === 'string') {\r\n                var stringNode = node;\r\n                if (stringNode.isKey) {\r\n                    var propertyNode = node.parent;\r\n                    node = propertyNode.value;\r\n                }\r\n            }\r\n            if (!node) {\r\n                return WinJS.TPromise.as(null);\r\n            }\r\n            return this.schemaService.getSchemaForResource(resource.toString(), doc).then(function (schema) {\r\n                if (schema) {\r\n                    var matchingSchemas = [];\r\n                    doc.validate(schema.schema, matchingSchemas, node.start);\r\n                    var description = null;\r\n                    var contributonId = null;\r\n                    matchingSchemas.every(function (s) {\r\n                        if (s.node === node && !s.inverted && s.schema) {\r\n                            description = description || s.schema.description;\r\n                            contributonId = contributonId || s.schema.id;\r\n                        }\r\n                        return true;\r\n                    });\r\n                    var location = node.getNodeLocation();\r\n                    for (var i = _this.contributions.length - 1; i >= 0; i--) {\r\n                        var contribution = _this.contributions[i];\r\n                        var promise = contribution.getInfoContribution(resource, location);\r\n                        if (promise) {\r\n                            return promise.then(function (htmlContent) { return _this.createInfoResult(htmlContent, originalNode, modelMirror); });\r\n                        }\r\n                    }\r\n                    if (description) {\r\n                        var htmlContent = [{ className: 'documentation', text: description }];\r\n                        return _this.createInfoResult(htmlContent, originalNode, modelMirror);\r\n                    }\r\n                }\r\n                return null;\r\n            });\r\n        };\r\n        JSONWorker.prototype.createInfoResult = function (htmlContent, node, modelMirror) {\r\n            var range = modelMirror.getRangeFromOffsetAndLength(node.start, node.end - node.start);\r\n            var result = {\r\n                htmlContent: htmlContent,\r\n                range: range\r\n            };\r\n            return result;\r\n        };\r\n        JSONWorker.prototype.provideDocumentSymbols = function (resource) {\r\n            var modelMirror = this.resourceService.get(resource);\r\n            var parser = new Parser.JSONParser();\r\n            var doc = parser.parse(modelMirror.getValue());\r\n            var root = doc.root;\r\n            if (!root) {\r\n                return WinJS.TPromise.as(null);\r\n            }\r\n            // special handling for key bindings\r\n            var resourceString = resource.toString();\r\n            if ((resourceString === 'vscode://defaultsettings/keybindings.json') || Strings.endsWith(resourceString.toLowerCase(), '/user/keybindings.json')) {\r\n                if (root.type === 'array') {\r\n                    var result = [];\r\n                    root.items.forEach(function (item) {\r\n                        if (item.type === 'object') {\r\n                            var property = item.getFirstProperty('key');\r\n                            if (property && property.value) {\r\n                                var range = modelMirror.getRangeFromOffsetAndLength(item.start, item.end - item.start);\r\n                                result.push({\r\n                                    name: property.value.getValue(),\r\n                                    kind: Modes.SymbolKind.String,\r\n                                    location: {\r\n                                        uri: resource,\r\n                                        range: range\r\n                                    }\r\n                                });\r\n                            }\r\n                        }\r\n                    });\r\n                    return WinJS.TPromise.as(result);\r\n                }\r\n            }\r\n            function collectOutlineEntries(result, node, containerName) {\r\n                if (node.type === 'array') {\r\n                    node.items.forEach(function (node) {\r\n                        collectOutlineEntries(result, node, containerName);\r\n                    });\r\n                }\r\n                else if (node.type === 'object') {\r\n                    var objectNode = node;\r\n                    objectNode.properties.forEach(function (property) {\r\n                        var range = modelMirror.getRangeFromOffsetAndLength(property.start, property.end - property.start);\r\n                        var valueNode = property.value;\r\n                        if (valueNode) {\r\n                            var childContainerName = containerName ? containerName + '.' + property.key.name : property.key.name;\r\n                            result.push({\r\n                                name: property.key.getValue(),\r\n                                kind: getSymbolKind(valueNode.type),\r\n                                location: {\r\n                                    uri: resource,\r\n                                    range: range,\r\n                                },\r\n                                containerName: containerName\r\n                            });\r\n                            collectOutlineEntries(result, valueNode, childContainerName);\r\n                        }\r\n                    });\r\n                }\r\n                return result;\r\n            }\r\n            var result = collectOutlineEntries([], root, void 0);\r\n            return WinJS.TPromise.as(result);\r\n        };\r\n        JSONWorker.prototype.format = function (resource, range, options) {\r\n            var model = this.resourceService.get(resource);\r\n            var formatRange = range ? model.getOffsetAndLengthFromRange(range) : void 0;\r\n            var edits = JSONFormatter.format(model.getValue(), formatRange, { insertSpaces: options.insertSpaces, tabSize: options.tabSize, eol: model.getEOL() });\r\n            var operations = edits.map(function (e) { return ({ range: model.getRangeFromOffsetAndLength(e.offset, e.length), text: e.content }); });\r\n            return WinJS.TPromise.as(operations);\r\n        };\r\n        JSONWorker = __decorate([\r\n            __param(1, resourceService_1.IResourceService),\r\n            __param(2, markers_1.IMarkerService),\r\n            __param(3, request_1.IRequestService),\r\n            __param(4, workspace_1.IWorkspaceContextService),\r\n            __param(5, instantiation_1.IInstantiationService)\r\n        ], JSONWorker);\r\n        return JSONWorker;\r\n    }());\r\n    exports.JSONWorker = JSONWorker;\r\n    function getSymbolKind(nodeType) {\r\n        switch (nodeType) {\r\n            case 'object':\r\n                return Modes.SymbolKind.Module;\r\n            case 'string':\r\n                return Modes.SymbolKind.String;\r\n            case 'number':\r\n                return Modes.SymbolKind.Number;\r\n            case 'array':\r\n                return Modes.SymbolKind.Array;\r\n            case 'boolean':\r\n                return Modes.SymbolKind.Boolean;\r\n            default:\r\n                return Modes.SymbolKind.Variable;\r\n        }\r\n    }\r\n});\r\n\n\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nexport class JSONLocation {\n\tprivate segments: string[];\n\n\tconstructor(segments: string[]) {\n\t\tthis.segments = segments;\n\t}\n\n\tpublic append(segment: string) : JSONLocation {\n\t\treturn new JSONLocation(this.segments.concat(segment));\n\t}\n\n\tpublic getSegments() {\n\t\treturn this.segments;\n\t}\n\n\tpublic matches(segments: string[]) {\n\t\tvar k = 0;\n\t\tfor (var i= 0; k < segments.length && i < this.segments.length; i++) {\n\t\t\tif (segments[k] === this.segments[i] || segments[k] === '*') {\n\t\t\t\tk++;\n\t\t\t} else if (segments[k] !== '**') {\n\t\t\t\treturn  false;\n\t\t\t}\n\t\t}\n\t\treturn k === segments.length;\n\t}\n\n\tpublic toString() : string {\n\t\treturn '[' + this.segments.join('][') + ']';\n\t}\n}","define(\"vs/nls!vs/languages/json/common/parser/jsonParser\",['vs/nls', 'vs/nls!vs/languages/json/common/jsonWorker'], function(nls, data) { return nls.create(\"vs/languages/json/common/parser/jsonParser\", data); });","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport * as nls from 'vs/nls';\n\nexport interface IXHROptions {\n\ttype?:string;\n\turl?:string;\n\tuser?:string;\n\tpassword?:string;\n\tresponseType?:string;\n\theaders?:any;\n\ttimeout?: number;\n\tfollowRedirects?: number;\n\tdata?:any;\n}\n\nexport interface IXHRResponse {\n\tresponseText: string;\n\tstatus: number;\n\n\treadyState : number;\n\tgetResponseHeader: (header:string) => string;\n}\n\nexport function getErrorStatusDescription(status: number) : string {\n\tif (status < 400) {\n\t\treturn void 0;\n\t}\n\tswitch (status) {\n\t\tcase 400: return nls.localize('status.400', 'Bad request. The request cannot be fulfilled due to bad syntax.');\n\t\tcase 401: return nls.localize('status.401', 'Unauthorized. The server is refusing to respond.');\n\t\tcase 403: return nls.localize('status.403', 'Forbidden. The server is refusing to respond.');\n\t\tcase 404: return nls.localize('status.404', 'Not Found. The requested location could not be found.');\n\t\tcase 405: return nls.localize('status.405', 'Method not allowed. A request was made using a request method not supported by that location.');\n\t\tcase 406: return nls.localize('status.406', 'Not Acceptable. The server can only generate a response that is not accepted by the client.');\n\t\tcase 407: return nls.localize('status.407', 'Proxy Authentication Required. The client must first authenticate itself with the proxy.');\n\t\tcase 408: return nls.localize('status.408', 'Request Timeout. The server timed out waiting for the request.');\n\t\tcase 409: return nls.localize('status.409', 'Conflict. The request could not be completed because of a conflict in the request.');\n\t\tcase 410: return nls.localize('status.410', 'Gone. The requested page is no longer available.');\n\t\tcase 411: return nls.localize('status.411', 'Length Required. The \"Content-Length\" is not defined.');\n\t\tcase 412: return nls.localize('status.412', 'Precondition Failed. The precondition given in the request evaluated to false by the server.');\n\t\tcase 413: return nls.localize('status.413', 'Request Entity Too Large. The server will not accept the request, because the request entity is too large.');\n\t\tcase 414: return nls.localize('status.414', 'Request-URI Too Long. The server will not accept the request, because the URL is too long.');\n\t\tcase 415: return nls.localize('status.415', 'Unsupported Media Type. The server will not accept the request, because the media type is not supported.');\n\t\tcase 500: return nls.localize('status.500', 'Internal Server Error.');\n\t\tcase 501: return nls.localize('status.501', 'Not Implemented. The server either does not recognize the request method, or it lacks the ability to fulfill the request.');\n\t\tcase 503: return nls.localize('status.503', 'Service Unavailable. The server is currently unavailable (overloaded or down).');\n\t\tdefault: return nls.localize('status.416', 'HTTP status code {0}', status);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport Json = require('./json');\n\nexport interface FormattingOptions {\n\t/**\n\t * If indentation is based on spaces (`insertSpaces` = true), then what is the number of spaces that make an indent?\n\t */\n\ttabSize: number;\n\t/**\n\t * Is indentation based on spaces?\n\t */\n\tinsertSpaces: boolean;\n\t/**\n\t * The default end of line line character\n\t */\n\teol: string;\n}\n\nexport interface Edit {\n\toffset: number;\n\tlength: number;\n\tcontent: string;\n}\n\nexport function applyEdit(text: string, edit: Edit) : string {\n\treturn text.substring(0, edit.offset) + edit.content + text.substring(edit.offset + edit.length);\n}\n\nexport function applyEdits(text: string, edits: Edit[]) : string {\n\tfor (let i = edits.length - 1; i >= 0; i--) {\n\t\ttext = applyEdit(text, edits[i]);\n\t}\n\treturn text;\n}\n\nexport function format(documentText: string, range: { offset: number, length: number}, options: FormattingOptions): Edit[] {\n\tlet initialIndentLevel: number;\n\tlet value: string;\n\tlet rangeStart: number;\n\tlet rangeEnd: number;\n\tif (range) {\n\t\trangeStart = range.offset;\n\t\trangeEnd = rangeStart + range.length;\n\t\twhile (rangeStart > 0 && !isEOL(documentText, rangeStart - 1)) {\n\t\t\trangeStart--;\n\t\t}\n\t\tlet scanner = Json.createScanner(documentText, true);\n\t\tscanner.setPosition(rangeEnd);\n\t\tscanner.scan();\n\t\trangeEnd = scanner.getPosition();\n\n\t\tvalue = documentText.substring(rangeStart, rangeEnd);\n\t\tinitialIndentLevel = computeIndentLevel(value, 0, options);\n\t} else {\n\t\tvalue = documentText;\n\t\trangeStart = 0;\n\t\trangeEnd = documentText.length;\n\t\tinitialIndentLevel = 0;\n\t}\n\tlet eol = getEOL(options, documentText);\n\n\tlet lineBreak = false;\n\tlet indentLevel = 0;\n\tlet indentValue: string;\n\tif (options.insertSpaces) {\n\t\tindentValue = repeat(' ', options.tabSize);\n\t} else {\n\t\tindentValue = '\\t';\n\t}\n\n\tlet scanner = Json.createScanner(value, false);\n\n\tfunction newLineAndIndent(): string {\n\t\treturn eol + repeat(indentValue, initialIndentLevel + indentLevel);\n\t}\n\tfunction scanNext(): Json.SyntaxKind {\n\t\tlet token = scanner.scan();\n\t\tlineBreak = false;\n\t\twhile (token === Json.SyntaxKind.Trivia || token === Json.SyntaxKind.LineBreakTrivia) {\n\t\t\tlineBreak = lineBreak || (token === Json.SyntaxKind.LineBreakTrivia);\n\t\t\ttoken = scanner.scan();\n\t\t}\n\t\treturn token;\n\t}\n\tlet editOperations: Edit[] = [];\n\tfunction addEdit(text: string, startOffset: number, endOffset: number) {\n\t\tif (documentText.substring(startOffset, endOffset) !== text) {\n\t\t\teditOperations.push({ offset: startOffset, length: endOffset - startOffset, content: text });\n\t\t}\n\t}\n\n\tlet firstToken = scanNext();\n\tif (firstToken !== Json.SyntaxKind.EOF) {\n\t\tlet firstTokenStart = scanner.getTokenOffset() + rangeStart;\n\t\tlet initialIndent = repeat(indentValue, initialIndentLevel);\n\t\taddEdit(initialIndent, rangeStart, firstTokenStart);\n\t}\n\n\twhile (firstToken !== Json.SyntaxKind.EOF) {\n\t\tlet firstTokenEnd = scanner.getTokenOffset() + scanner.getTokenLength() + rangeStart;\n\t\tlet secondToken = scanNext();\n\n\t\tlet replaceContent = '';\n\t\twhile (!lineBreak && (secondToken === Json.SyntaxKind.LineCommentTrivia || secondToken === Json.SyntaxKind.BlockCommentTrivia)) {\n\t\t\t// comments on the same line: keep them on the same line, but ignore them otherwise\n\t\t\tlet commentTokenStart = scanner.getTokenOffset() + rangeStart;\n\t\t\taddEdit(' ', firstTokenEnd, commentTokenStart);\n\t\t\tfirstTokenEnd = scanner.getTokenOffset() + scanner.getTokenLength() + rangeStart;\n\t\t\treplaceContent = secondToken === Json.SyntaxKind.LineCommentTrivia ? newLineAndIndent() : '';\n\t\t\tsecondToken = scanNext();\n\t\t}\n\n\t\tif (secondToken === Json.SyntaxKind.CloseBraceToken) {\n\t\t\tif (firstToken !== Json.SyntaxKind.OpenBraceToken) {\n\t\t\t\tindentLevel--;\n\t\t\t\treplaceContent = newLineAndIndent();\n\t\t\t}\n\t\t} else if (secondToken === Json.SyntaxKind.CloseBracketToken) {\n\t\t\tif (firstToken !== Json.SyntaxKind.OpenBracketToken) {\n\t\t\t\tindentLevel--;\n\t\t\t\treplaceContent = newLineAndIndent();\n\t\t\t}\n\t\t} else if (secondToken !== Json.SyntaxKind.EOF) {\n\t\t\tswitch (firstToken) {\n\t\t\t\tcase Json.SyntaxKind.OpenBracketToken:\n\t\t\t\tcase Json.SyntaxKind.OpenBraceToken:\n\t\t\t\t\tindentLevel++;\n\t\t\t\t\treplaceContent = newLineAndIndent();\n\t\t\t\t\tbreak;\n\t\t\t\tcase Json.SyntaxKind.CommaToken:\n\t\t\t\tcase Json.SyntaxKind.LineCommentTrivia:\n\t\t\t\t\treplaceContent = newLineAndIndent();\n\t\t\t\t\tbreak;\n\t\t\t\tcase Json.SyntaxKind.BlockCommentTrivia:\n\t\t\t\t\tif (lineBreak) {\n\t\t\t\t\t\treplaceContent = newLineAndIndent();\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// symbol following comment on the same line: keep on same line, separate with ' '\n\t\t\t\t\t\treplaceContent = ' ';\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase Json.SyntaxKind.ColonToken:\n\t\t\t\t\treplaceContent = ' ';\n\t\t\t\t\tbreak;\n\t\t\t\tcase Json.SyntaxKind.NullKeyword:\n\t\t\t\tcase Json.SyntaxKind.TrueKeyword:\n\t\t\t\tcase Json.SyntaxKind.FalseKeyword:\n\t\t\t\tcase Json.SyntaxKind.NumericLiteral:\n\t\t\t\t\tif (secondToken === Json.SyntaxKind.NullKeyword || secondToken === Json.SyntaxKind.FalseKeyword || secondToken === Json.SyntaxKind.NumericLiteral) {\n\t\t\t\t\t\treplaceContent = ' ';\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (lineBreak && (secondToken === Json.SyntaxKind.LineCommentTrivia || secondToken === Json.SyntaxKind.BlockCommentTrivia)) {\n\t\t\t\treplaceContent = newLineAndIndent();\n\t\t\t}\n\n\t\t}\n\t\tlet secondTokenStart = scanner.getTokenOffset() + rangeStart;\n\t\taddEdit(replaceContent, firstTokenEnd, secondTokenStart);\n\t\tfirstToken = secondToken;\n\t}\n\treturn editOperations;\n}\n\nfunction repeat(s: string, count: number): string {\n\tlet result = '';\n\tfor (let i = 0; i < count; i++) {\n\t\tresult += s;\n\t}\n\treturn result;\n}\n\nfunction computeIndentLevel(content: string, offset: number, options: FormattingOptions): number {\n\tlet i = 0;\n\tlet nChars = 0;\n\tlet tabSize = options.tabSize || 4;\n\twhile (i < content.length) {\n\t\tlet ch = content.charAt(i);\n\t\tif (ch === ' ') {\n\t\t\tnChars++;\n\t\t} else if (ch === '\\t') {\n\t\t\tnChars += tabSize;\n\t\t} else {\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\treturn Math.floor(nChars / tabSize);\n}\n\nfunction getEOL(options: FormattingOptions, text: string): string {\n\tfor (let i = 0; i < text.length; i++) {\n\t\tlet ch = text.charAt(i);\n\t\tif (ch === '\\r') {\n\t\t\tif (i + 1 < text.length && text.charAt(i+1) === '\\n') {\n\t\t\t\treturn '\\r\\n';\n\t\t\t}\n\t\t\treturn '\\r';\n\t\t} else if (ch === '\\n') {\n\t\t\treturn '\\n';\n\t\t}\n\t}\n\treturn (options && options.eol) || '\\n';\n}\n\nfunction isEOL(text: string, offset: number) {\n\treturn '\\r\\n'.indexOf(text.charAt(offset)) !== -1;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport HtmlContent = require('vs/base/common/htmlContent');\nimport Strings = require('vs/base/common/strings');\nimport Modes = require('vs/editor/common/modes');\nimport WinJS = require('vs/base/common/winjs.base');\nimport nls = require('vs/nls');\nimport JSONWorker = require('vs/languages/json/common/jsonWorker');\nimport URI from 'vs/base/common/uri';\nimport {JSONLocation} from 'vs/languages/json/common/parser/jsonLocation';\n\nvar globProperties:Modes.ISuggestion[] = [\n\t{ type: 'value', label: nls.localize('fileLabel', \"Files by Extension\"), codeSnippet: '\"**/*.{{extension}}\": true', documentationLabel: nls.localize('fileDescription', \"Match all files of a specific file extension.\")},\n\t{ type: 'value', label: nls.localize('filesLabel', \"Files with Multiple Extensions\"), codeSnippet: '\"**/*.{ext1,ext2,ext3}\": true', documentationLabel: nls.localize('filesDescription', \"Match all files with any of the file extensions.\")},\n\t{ type: 'value', label: nls.localize('derivedLabel', \"Files with Siblings by Name\"), codeSnippet: '\"**/*.{{source-extension}}\": { \"when\": \"$(basename).{{target-extension}}\" }', documentationLabel: nls.localize('derivedDescription', \"Match files that have siblings with the same name but a different extension.\")},\n\t{ type: 'value', label: nls.localize('topFolderLabel', \"Folder by Name (Top Level)\"), codeSnippet: '\"{{name}}\": true', documentationLabel: nls.localize('topFolderDescription', \"Match a top level folder with a specific name.\")},\n\t{ type: 'value', label: nls.localize('topFoldersLabel', \"Folders with Multiple Names (Top Level)\"), codeSnippet: '\"{folder1,folder2,folder3}\": true', documentationLabel: nls.localize('topFoldersDescription', \"Match multiple top level folders.\")},\n\t{ type: 'value', label: nls.localize('folderLabel', \"Folder by Name (Any Location)\"), codeSnippet: '\"**/{{name}}\": true', documentationLabel: nls.localize('folderDescription', \"Match a folder with a specific name in any location.\")},\n];\n\nvar globValues:Modes.ISuggestion[] = [\n\t{ type: 'value', label: nls.localize('trueLabel', \"True\"), codeSnippet: 'true', documentationLabel: nls.localize('trueDescription', \"Enable the pattern.\")},\n\t{ type: 'value', label: nls.localize('falseLabel', \"False\"), codeSnippet: 'false', documentationLabel: nls.localize('falseDescription', \"Disable the pattern.\")},\n\t{ type: 'value', label: nls.localize('derivedLabel', \"Files with Siblings by Name\"), codeSnippet: '{ \"when\": \"$(basename).{{extension}}\" }', documentationLabel: nls.localize('siblingsDescription', \"Match files that have siblings with the same name but a different extension.\")}\n];\n\nexport class GlobPatternContribution implements JSONWorker.IJSONWorkerContribution {\n\n\tconstructor() {\n\t}\n\n\tprivate isSettingsFile(resource: URI): boolean {\n\t\tvar path = resource.path;\n\t\treturn Strings.endsWith(path, '/settings.json');\n\t}\n\n\tpublic collectDefaultSuggestions(resource: URI, result: JSONWorker.ISuggestionsCollector): WinJS.Promise {\n\t\treturn null;\n\t}\n\n\tpublic collectPropertySuggestions(resource: URI, location: JSONLocation, currentWord: string, addValue: boolean, isLast:boolean, result: JSONWorker.ISuggestionsCollector) : WinJS.Promise {\n\t\tif (this.isSettingsFile(resource) && (location.matches(['files.exclude']) || location.matches(['search.exclude']))) {\n\n\t\t\tglobProperties.forEach((e) => result.add(e));\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic collectValueSuggestions(resource: URI, location: JSONLocation, currentKey: string, result: JSONWorker.ISuggestionsCollector): WinJS.Promise {\n\t\tif (this.isSettingsFile(resource) && (location.matches(['files.exclude']) || location.matches(['search.exclude']))) {\n\n\t\t\tglobValues.forEach((e) => result.add(e));\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic getInfoContribution(resource: URI, location: JSONLocation): WinJS.TPromise<HtmlContent.IHTMLContentElement[]> {\n\t\treturn null;\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport nls = require('vs/nls');\nimport Arrays = require('vs/base/common/arrays');\nimport Types = require('vs/base/common/types');\nimport Json = require('vs/base/common/json');\nimport JsonSchema = require('vs/base/common/jsonSchema');\nimport {JSONLocation} from './jsonLocation';\n\nexport interface IRange {\n\tstart:number;\n\tend:number;\n}\n\nexport interface IError {\n\tlocation:IRange;\n\tmessage:string;\n}\n\nexport class ASTNode {\n\tpublic start:number;\n\tpublic end:number;\n\tpublic type:string;\n\tpublic parent:ASTNode;\n\tpublic name:string;\n\n\tconstructor(parent:ASTNode, type:string, name:string, start:number, end?:number) {\n\t\tthis.type = type;\n\t\tthis.name = name;\n\t\tthis.start = start;\n\t\tthis.end = end;\n\t\tthis.parent = parent;\n\t}\n\n\tpublic getNodeLocation(): JSONLocation {\n\t\tvar path = this.parent ? this.parent.getNodeLocation() : new JSONLocation([]);\n\t\tif (this.name) {\n\t\t\tpath = path.append(this.name);\n\t\t}\n\t\treturn path;\n\t}\n\n\n\tpublic getChildNodes(): ASTNode[] {\n\t\treturn [];\n\t}\n\n\tpublic getValue():any {\n\t\t// override in children\n\t\treturn;\n\t}\n\n\tpublic contains(offset:number, includeRightBound: boolean = false) : boolean {\n\t\treturn offset >= this.start && offset < this.end || includeRightBound && offset === this.end;\n\t}\n\n\tpublic visit(visitor: (node:ASTNode) => boolean):boolean {\n\t\treturn visitor(this);\n\t}\n\n\tpublic getNodeFromOffset(offset:number):ASTNode {\n\t\tvar findNode = (node: ASTNode) : ASTNode => {\n\t\t\tif (offset >= node.start && offset < node.end) {\n\t\t\t\tvar children = node.getChildNodes();\n\t\t\t\tfor (var i = 0; i < children.length && children[i].start <= offset; i++) {\n\t\t\t\t\tvar item = findNode(children[i]);\n\t\t\t\t\tif (item) {\n\t\t\t\t\t\treturn item;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn node;\n\t\t\t}\n\t\t\treturn null;\n\t\t};\n\t\treturn findNode(this);\n\t}\n\n\tpublic getNodeFromOffsetEndInclusive(offset:number):ASTNode {\n\t\tvar findNode = (node: ASTNode) : ASTNode => {\n\t\t\tif (offset >= node.start && offset <= node.end) {\n\t\t\t\tvar children = node.getChildNodes();\n\t\t\t\tfor (var i = 0; i < children.length && children[i].start <= offset; i++) {\n\t\t\t\t\tvar item = findNode(children[i]);\n\t\t\t\t\tif (item) {\n\t\t\t\t\t\treturn item;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn node;\n\t\t\t}\n\t\t\treturn null;\n\t\t};\n\t\treturn findNode(this);\n\t}\n\n\tpublic validate(schema:JsonSchema.IJSONSchema, validationResult:ValidationResult, matchingSchemas:IApplicableSchema[], offset:number = -1) : void {\n\t\tif (offset !== -1 && !this.contains(offset)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (Array.isArray(schema.type)) {\n\t\t\tif (Arrays.contains(<string[]> schema.type, this.type) === false) {\n\t\t\t\tvalidationResult.warnings.push({\n\t\t\t\t\tlocation: { start: this.start, end: this.end },\n\t\t\t\t\tmessage: schema.errorMessage || nls.localize('typeArrayMismatchWarning', 'Incorrect type. Expected one of {0}', (<string[]> schema.type).join())\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\telse if (schema.type) {\n\t\t\tif (this.type !== schema.type) {\n\t\t\t\tvalidationResult.warnings.push({\n\t\t\t\t\tlocation: { start: this.start, end: this.end },\n\t\t\t\t\tmessage: schema.errorMessage || nls.localize('typeMismatchWarning', 'Incorrect type. Expected \"{0}\"', schema.type)\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tif (Array.isArray(schema.allOf)) {\n\t\t\tschema.allOf.forEach((subSchema) => {\n\t\t\t\tthis.validate(subSchema, validationResult, matchingSchemas, offset);\n\t\t\t});\n\t\t}\n\t\tif (schema.not) {\n\t\t\tvar subValidationResult = new ValidationResult();\n\t\t\tvar subMatchingSchemas : IApplicableSchema[] = [];\n\t\t\tthis.validate(schema.not, subValidationResult, subMatchingSchemas, offset);\n\t\t\tif (!subValidationResult.hasErrors()) {\n\t\t\t\tvalidationResult.warnings.push({\n\t\t\t\t\tlocation: { start: this.start, end: this.end },\n\t\t\t\t\tmessage: nls.localize('notSchemaWarning', \"Matches a schema that is not allowed.\")\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (matchingSchemas) {\n\t\t\t\tsubMatchingSchemas.forEach((ms) => {\n\t\t\t\t\tms.inverted = !ms.inverted;\n\t\t\t\t\tmatchingSchemas.push(ms);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tvar testAlternatives = (alternatives: JsonSchema.IJSONSchema[], maxOneMatch: boolean) => {\n\t\t\tvar matches = [];\n\n\t\t\t// remember the best match that is used for error messages\n\t\t\tvar bestMatch : { schema:JsonSchema.IJSONSchema; validationResult:ValidationResult; matchingSchemas:IApplicableSchema[]; } = null;\n\t\t\talternatives.forEach((subSchema) => {\n\t\t\t\tvar subValidationResult = new ValidationResult();\n\t\t\t\tvar subMatchingSchemas : IApplicableSchema[] = [];\n\t\t\t\tthis.validate(subSchema, subValidationResult, subMatchingSchemas);\n\t\t\t\tif (!subValidationResult.hasErrors()) {\n\t\t\t\t\tmatches.push(subSchema);\n\t\t\t\t}\n\t\t\t\tif (!bestMatch) {\n\t\t\t\t\tbestMatch = { schema: subSchema, validationResult: subValidationResult, matchingSchemas: subMatchingSchemas };\n\t\t\t\t} else {\n\t\t\t\t\tif (!maxOneMatch && !subValidationResult.hasErrors() && !bestMatch.validationResult.hasErrors()) {\n\t\t\t\t\t\t// no errors, both are equally good matches\n\t\t\t\t\t\tbestMatch.matchingSchemas.push.apply(bestMatch.matchingSchemas, subMatchingSchemas);\n\t\t\t\t\t\tbestMatch.validationResult.propertiesMatches += subValidationResult.propertiesMatches;\n\t\t\t\t\t\tbestMatch.validationResult.propertiesValueMatches += subValidationResult.propertiesValueMatches;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar compareResult = subValidationResult.compare(bestMatch.validationResult);\n\t\t\t\t\t\tif (compareResult > 0) {\n\t\t\t\t\t\t\t// our node is the best matching so far\n\t\t\t\t\t\t\tbestMatch = { schema: subSchema, validationResult: subValidationResult,  matchingSchemas: subMatchingSchemas };\n\t\t\t\t\t\t} else if (compareResult === 0) {\n\t\t\t\t\t\t\t// there's already a best matching but we are as good\n\t\t\t\t\t\t\tbestMatch.matchingSchemas.push.apply(bestMatch.matchingSchemas, subMatchingSchemas);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (matches.length > 1 && maxOneMatch) {\n\t\t\t\tvalidationResult.warnings.push({\n\t\t\t\t\tlocation: { start: this.start, end: this.start + 1 },\n\t\t\t\t\tmessage: nls.localize('oneOfWarning', \"Matches multiple schemas when only one must validate.\")\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (bestMatch !== null) {\n\t\t\t\tvalidationResult.merge(bestMatch.validationResult);\n\t\t\t\tvalidationResult.propertiesMatches += bestMatch.validationResult.propertiesMatches;\n\t\t\t\tvalidationResult.propertiesValueMatches += bestMatch.validationResult.propertiesValueMatches;\n\t\t\t\tif (matchingSchemas) {\n\t\t\t\t\tmatchingSchemas.push.apply(matchingSchemas, bestMatch.matchingSchemas);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn matches.length;\n\t\t};\n\t\tif (Array.isArray(schema.anyOf)) {\n\t\t\ttestAlternatives(schema.anyOf, false);\n\t\t}\n\t\tif (Array.isArray(schema.oneOf)) {\n\t\t\ttestAlternatives(schema.oneOf, true);\n\t\t}\n\n\t\tif (Array.isArray(schema.enum)) {\n\t\t\tif (Arrays.contains(schema.enum, this.getValue()) === false) {\n\t\t\t\tvalidationResult.warnings.push({\n\t\t\t\t\tlocation: { start: this.start, end: this.end },\n\t\t\t\t\tmessage: nls.localize('enumWarning', 'Value is not an accepted value. Valid values: {0}', JSON.stringify(schema.enum))\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tvalidationResult.enumValueMatch = true;\n\t\t\t}\n\t\t}\n\n\t\tif (matchingSchemas !== null) {\n\t\t\tmatchingSchemas.push({node:this, schema: schema });\n\t\t}\n\t}\n}\n\nexport class NullASTNode extends ASTNode {\n\n\tconstructor(parent:ASTNode, name:string, start:number, end?:number) {\n\t\tsuper(parent, 'null', name, start, end);\n\t}\n\n\tpublic getValue():any {\n\t\treturn null;\n\t}\n}\n\nexport class BooleanASTNode extends ASTNode {\n\n\tprivate value:boolean;\n\n\tconstructor(parent:ASTNode, name:string, value:boolean, start:number, end?:number) {\n\t\tsuper(parent, 'boolean', name, start, end);\n\t\tthis.value = value;\n\t}\n\n\tpublic getValue():any {\n\t\treturn this.value;\n\t}\n\n}\n\nexport class ArrayASTNode extends ASTNode {\n\n\tpublic items:ASTNode[];\n\n\tconstructor(parent:ASTNode, name:string, start:number, end?:number) {\n\t\tsuper(parent, 'array', name, start, end);\n\t\tthis.items = [];\n\t}\n\n\tpublic getChildNodes(): ASTNode[] {\n\t\treturn this.items;\n\t}\n\n\tpublic getValue():any {\n\t\treturn this.items.map((v) => v.getValue());\n\t}\n\n\tpublic addItem(item: ASTNode) : boolean {\n\t\tif (item) {\n\t\t\tthis.items.push(item);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic visit(visitor: (node:ASTNode) => boolean):boolean {\n\t\tvar ctn = visitor(this);\n\t\tfor (var i = 0; i < this.items.length && ctn; i++) {\n\t\t\tctn = this.items[i].visit(visitor);\n\t\t}\n\t\treturn ctn;\n\t}\n\n\tpublic validate(schema:JsonSchema.IJSONSchema, validationResult:ValidationResult, matchingSchemas:IApplicableSchema[], offset:number = -1):void {\n\t\tif (offset !== -1 && !this.contains(offset)) {\n\t\t\treturn;\n\t\t}\n\t\tsuper.validate(schema, validationResult, matchingSchemas, offset);\n\n\t\tif (Array.isArray(schema.items)) {\n\t\t\tvar subSchemas = <JsonSchema.IJSONSchema[]> schema.items;\n\t\t\tsubSchemas.forEach((subSchema, index) => {\n\t\t\t\tvar itemValidationResult = new ValidationResult();\n\t\t\t\tvar item = this.items[index];\n\t\t\t\tif (item) {\n\t\t\t\t\titem.validate(subSchema, itemValidationResult, matchingSchemas, offset);\n\t\t\t\t\tvalidationResult.mergePropertyMatch(itemValidationResult);\n\t\t\t\t} else if (this.items.length >= subSchemas.length) {\n\t\t\t\t\tvalidationResult.propertiesValueMatches++;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (schema.additionalItems === false && this.items.length > subSchemas.length) {\n\t\t\t\tvalidationResult.warnings.push({\n\t\t\t\t\tlocation: { start: this.start, end: this.end },\n\t\t\t\t\tmessage: nls.localize('additionalItemsWarning', 'Array has too many items according to schema. Expected {0} or fewer', subSchemas.length)\n\t\t\t\t});\n\t\t\t} else if (this.items.length >= subSchemas.length) {\n\t\t\t\tvalidationResult.propertiesValueMatches += (this.items.length - subSchemas.length);\n\t\t\t}\n\t\t}\n\t\telse if (schema.items) {\n\t\t\tthis.items.forEach((item) => {\n\t\t\t\tvar itemValidationResult = new ValidationResult();\n\t\t\t\titem.validate(schema.items, itemValidationResult, matchingSchemas, offset);\n\t\t\t\tvalidationResult.mergePropertyMatch(itemValidationResult);\n\t\t\t});\n\t\t}\n\n\t\tif (schema.minItems && this.items.length < schema.minItems) {\n\t\t\tvalidationResult.warnings.push({\n\t\t\t\tlocation: { start: this.start, end: this.end },\n\t\t\t\tmessage: nls.localize('minItemsWarning', 'Array has too few items. Expected {0} or more', schema.minItems)\n\t\t\t});\n\t\t}\n\n\t\tif (schema.maxItems && this.items.length > schema.maxItems) {\n\t\t\tvalidationResult.warnings.push({\n\t\t\t\tlocation: { start: this.start, end: this.end },\n\t\t\t\tmessage: nls.localize('maxItemsWarning', 'Array has too many items. Expected {0} or fewer', schema.minItems)\n\t\t\t});\n\t\t}\n\n\t\tif (schema.uniqueItems === true) {\n\t\t\tvar values = this.items.map((node) => {\n\t\t\t\treturn node.getValue();\n\t\t\t});\n\t\t\tvar duplicates = values.some((value, index) => {\n\t\t\t\treturn index !== values.lastIndexOf(value);\n\t\t\t});\n\t\t\tif (duplicates) {\n\t\t\t\tvalidationResult.warnings.push({\n\t\t\t\t\tlocation: { start: this.start, end: this.end },\n\t\t\t\t\tmessage: nls.localize('uniqueItemsWarning', 'Array has duplicate items')\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport class NumberASTNode extends ASTNode {\n\n\tpublic isInteger:boolean;\n\tpublic value:number;\n\n\tconstructor(parent:ASTNode, name:string, start:number, end?:number) {\n\t\tsuper(parent, 'number', name, start, end);\n\t\tthis.isInteger = true;\n\t\tthis.value = Number.NaN;\n\t}\n\n\tpublic getValue():any {\n\t\treturn this.value;\n\t}\n\n\tpublic validate(schema:JsonSchema.IJSONSchema, validationResult:ValidationResult, matchingSchemas:IApplicableSchema[], offset:number = -1):void {\n\t\tif (offset !== -1 && !this.contains(offset)) {\n\t\t\treturn;\n\t\t}\n\n\t\t// work around type validation in the base class\n\t\tvar typeIsInteger = false;\n\t\tif (schema.type === 'integer' || (Array.isArray(schema.type) && Arrays.contains(<string[]> schema.type, 'integer'))) {\n\t\t\ttypeIsInteger = true;\n\t\t}\n\t\tif (typeIsInteger && this.isInteger === true) {\n\t\t\tthis.type = 'integer';\n\t\t}\n\t\tsuper.validate(schema, validationResult, matchingSchemas, offset);\n\t\tthis.type = 'number';\n\n\t\tvar val = this.getValue();\n\n\t\tif (Types.isNumber(schema.multipleOf)) {\n\t\t\tif (val % schema.multipleOf !== 0) {\n\t\t\t\tvalidationResult.warnings.push({\n\t\t\t\t\tlocation: { start: this.start, end: this.end },\n\t\t\t\t\tmessage: nls.localize('multipleOfWarning', 'Value is not divisible by {0}', schema.multipleOf)\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif (!Types.isUndefined(schema.minimum)) {\n\t\t\tif (schema.exclusiveMinimum && val <= schema.minimum) {\n\t\t\t\tvalidationResult.warnings.push({\n\t\t\t\t\tlocation: { start: this.start, end: this.end },\n\t\t\t\t\tmessage: nls.localize('exclusiveMinimumWarning', 'Value is below the exclusive minimum of {0}', schema.minimum)\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (!schema.exclusiveMinimum && val < schema.minimum) {\n\t\t\t\tvalidationResult.warnings.push({\n\t\t\t\t\tlocation: { start: this.start, end: this.end },\n\t\t\t\t\tmessage: nls.localize('minimumWarning', 'Value is below the minimum of {0}', schema.minimum)\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif (!Types.isUndefined(schema.maximum)) {\n\t\t\tif (schema.exclusiveMaximum && val >= schema.maximum) {\n\t\t\t\tvalidationResult.warnings.push({\n\t\t\t\t\tlocation: { start: this.start, end: this.end },\n\t\t\t\t\tmessage: nls.localize('exclusiveMaximumWarning', 'Value is above the exclusive maximum of {0}', schema.maximum)\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (!schema.exclusiveMaximum && val > schema.maximum) {\n\t\t\t\tvalidationResult.warnings.push({\n\t\t\t\t\tlocation: { start: this.start, end: this.end },\n\t\t\t\t\tmessage: nls.localize('maximumWarning', 'Value is above the maximum of {0}', schema.maximum)\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t}\n}\n\nexport class StringASTNode extends ASTNode {\n\tpublic isKey:boolean;\n\tpublic value:string;\n\n\tconstructor(parent:ASTNode, name:string, isKey:boolean, start:number, end?:number) {\n\t\tsuper(parent, 'string', name, start, end);\n\t\tthis.isKey = isKey;\n\t\tthis.value = '';\n\t}\n\n\tpublic getValue():any {\n\t\treturn this.value;\n\t}\n\n\tpublic validate(schema:JsonSchema.IJSONSchema, validationResult:ValidationResult, matchingSchemas:IApplicableSchema[], offset:number = -1):void {\n\t\tif (offset !== -1 && !this.contains(offset)) {\n\t\t\treturn;\n\t\t}\n\t\tsuper.validate(schema, validationResult, matchingSchemas, offset);\n\n\t\tif (schema.minLength && this.value.length < schema.minLength) {\n\t\t\tvalidationResult.warnings.push({\n\t\t\t\tlocation: { start: this.start, end: this.end },\n\t\t\t\tmessage: nls.localize('minLengthWarning', 'String is shorter than the minimum length of ', schema.minLength)\n\t\t\t});\n\t\t}\n\n\t\tif (schema.maxLength && this.value.length > schema.maxLength) {\n\t\t\tvalidationResult.warnings.push({\n\t\t\t\tlocation: { start: this.start, end: this.end },\n\t\t\t\tmessage: nls.localize('maxLengthWarning', 'String is shorter than the maximum length of ', schema.maxLength)\n\t\t\t});\n\t\t}\n\n\t\tif (schema.pattern) {\n\t\t\tvar regex = new RegExp(schema.pattern);\n\t\t\tif (!regex.test(this.value)) {\n\t\t\t\tvalidationResult.warnings.push({\n\t\t\t\t\tlocation: { start: this.start, end: this.end },\n\t\t\t\t\tmessage: schema.errorMessage || nls.localize('patternWarning', 'String does not match the pattern of \"{0}\"', schema.pattern)\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t}\n}\n\nexport class PropertyASTNode extends ASTNode {\n\tpublic key: StringASTNode;\n\tpublic value: ASTNode;\n\tpublic colonOffset: number;\n\n\tconstructor(parent:ASTNode, key: StringASTNode) {\n\t\tsuper(parent, 'property', null, key.start);\n\t\tthis.key = key;\n\t\tkey.parent = this;\n\t\tkey.name = key.value;\n\t\tthis.colonOffset = -1;\n\t}\n\n\tpublic getChildNodes(): ASTNode[] {\n\t\treturn this.value ? [this.key, this.value] : [ this.key];\n\t}\n\n\tpublic setValue(value: ASTNode): boolean {\n\t\tthis.value = value;\n\t\treturn value !== null;\n\t}\n\n\tpublic visit(visitor: (node:ASTNode) => boolean):boolean {\n\t\treturn visitor(this) && this.key.visit(visitor) && this.value && this.value.visit(visitor);\n\t}\n\n\tpublic validate(schema:JsonSchema.IJSONSchema, validationResult:ValidationResult, matchingSchemas:IApplicableSchema[], offset:number = -1):void {\n\t\tif (offset !== -1 && !this.contains(offset)) {\n\t\t\treturn;\n\t\t}\n\t\tif (this.value) {\n\t\t\tthis.value.validate(schema, validationResult, matchingSchemas, offset);\n\t\t}\n\t}\n}\n\nexport class ObjectASTNode extends ASTNode {\n\tpublic properties:PropertyASTNode[];\n\n\tconstructor(parent:ASTNode, name:string, start:number, end?:number) {\n\t\tsuper(parent, 'object', name, start, end);\n\n\t\tthis.properties = [];\n\t}\n\n\tpublic getChildNodes(): ASTNode[] {\n\t\treturn this.properties;\n\t}\n\n\tpublic addProperty(node:PropertyASTNode):boolean {\n\t\tif (!node) {\n\t\t\treturn false;\n\t\t}\n\t\tthis.properties.push(node);\n\t\treturn true;\n\t}\n\n\tpublic getFirstProperty(key:string) : PropertyASTNode {\n\t\tfor (var i = 0; i < this.properties.length; i++) {\n\t\t\tif (this.properties[i].key.value === key) {\n\t\t\t\treturn this.properties[i];\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic getKeyList():string[] {\n\t\treturn this.properties.map((p)=>p.key.getValue());\n\t}\n\n\tpublic getValue():any {\n\t\tvar value : any= {};\n\t\tthis.properties.forEach((p) => {\n\t\t\tvar v = p.value && p.value.getValue();\n\t\t\tif (v) {\n\t\t\t\tvalue[p.key.getValue()] = v;\n\t\t\t}\n\t\t});\n\t\treturn value;\n\t}\n\n\tpublic visit(visitor: (node:ASTNode) => boolean):boolean {\n\t\tvar ctn = visitor(this);\n\t\tfor (var i = 0; i < this.properties.length && ctn; i++) {\n\t\t\tctn = this.properties[i].visit(visitor);\n\t\t}\n\t\treturn ctn;\n\t}\n\n\tpublic validate(schema:JsonSchema.IJSONSchema, validationResult:ValidationResult, matchingSchemas:IApplicableSchema[], offset:number = -1):void {\n\t\tif (offset !== -1 && !this.contains(offset)) {\n\t\t\treturn;\n\t\t}\n\n\t\tsuper.validate(schema, validationResult, matchingSchemas, offset);\n\t\tvar seenKeys: { [key: string]:ASTNode } = {};\n\t\tvar unprocessedProperties: string[] = [];\n\t\tthis.properties.forEach((node) => {\n\t\t\tvar key = node.key.value;\n\t\t\tseenKeys[key] = node.value;\n\t\t\tunprocessedProperties.push(key);\n\t\t});\n\n\t\tif (Array.isArray(schema.required)) {\n\t\t\tschema.required.forEach((propertyName: string) => {\n\t\t\t\tif (!seenKeys[propertyName]) {\n\t\t\t\t\tvar key = this.parent && this.parent && (<PropertyASTNode> this.parent).key;\n\t\t\t\t\tvar location = key ? { start: key.start, end: key.end } : { start: this.start, end: this.start + 1 };\n\t\t\t\t\tvalidationResult.warnings.push({\n\t\t\t\t\t\tlocation: location,\n\t\t\t\t\t\tmessage: nls.localize('MissingRequiredPropWarning', 'Missing property \"{0}\"', propertyName)\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\n\t\tvar propertyProcessed = (prop:string) => {\n\t\t\tvar index = unprocessedProperties.indexOf(prop);\n\t\t\twhile(index >= 0) {\n\t\t\t\tunprocessedProperties.splice(index, 1);\n\t\t\t\tindex = unprocessedProperties.indexOf(prop);\n\t\t\t}\n\t\t};\n\n\t\tif (schema.properties) {\n\t\t\tObject.keys(schema.properties).forEach((propertyName: string) => {\n\t\t\t\tpropertyProcessed(propertyName);\n\t\t\t\tvar prop = schema.properties[propertyName];\n\t\t\t\tvar child = seenKeys[propertyName];\n\t\t\t\tif (child) {\n\t\t\t\t\tvar propertyvalidationResult = new ValidationResult();\n\t\t\t\t\tchild.validate(prop, propertyvalidationResult, matchingSchemas, offset);\n\t\t\t\t\tvalidationResult.mergePropertyMatch(propertyvalidationResult);\n\t\t\t\t}\n\n\t\t\t});\n\t\t}\n\n\t\tif (schema.patternProperties) {\n\t\t\tObject.keys(schema.patternProperties).forEach((propertyPattern: string) => {\n\t\t\t\tvar regex = new RegExp(propertyPattern);\n\t\t\t\tunprocessedProperties.slice(0).forEach((propertyName: string) => {\n\t\t\t\t\tif (regex.test(propertyName)) {\n\t\t\t\t\t\tpropertyProcessed(propertyName);\n\t\t\t\t\t\tvar child = seenKeys[propertyName];\n\t\t\t\t\t\tif (child) {\n\t\t\t\t\t\t\tvar propertyvalidationResult = new ValidationResult();\n\t\t\t\t\t\t\tchild.validate(schema.patternProperties[propertyPattern], propertyvalidationResult, matchingSchemas, offset);\n\t\t\t\t\t\t\tvalidationResult.mergePropertyMatch(propertyvalidationResult);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\tif (Types.isObject(schema.additionalProperties)) {\n\t\t\tunprocessedProperties.forEach((propertyName: string) => {\n\t\t\t\tvar child = seenKeys[propertyName];\n\t\t\t\tif (child) {\n\t\t\t\t\tvar propertyvalidationResult = new ValidationResult();\n\t\t\t\t\tchild.validate(schema.additionalProperties, propertyvalidationResult, matchingSchemas, offset);\n\t\t\t\t\tvalidationResult.mergePropertyMatch(propertyvalidationResult);\n\t\t\t\t}\n\t\t\t});\n\t\t} else if (schema.additionalProperties === false) {\n\t\t\tif (unprocessedProperties.length > 0) {\n\t\t\t\tunprocessedProperties.forEach((propertyName: string) => {\n\t\t\t\t\tvar child = seenKeys[propertyName];\n\t\t\t\t\tif (child) {\n\t\t\t\t\t\tvar propertyNode = <PropertyASTNode> child.parent;\n\n\t\t\t\t\t\tvalidationResult.warnings.push({\n\t\t\t\t\t\t\tlocation: { start: propertyNode.key.start, end: propertyNode.key.end },\n\t\t\t\t\t\t\tmessage: nls.localize('DisallowedExtraPropWarning', 'Property {0} is not allowed', propertyName)\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif (schema.maxProperties) {\n\t\t\tif (this.properties.length > schema.maxProperties) {\n\t\t\t\tvalidationResult.warnings.push({\n\t\t\t\t\tlocation: { start: this.start, end: this.end },\n\t\t\t\t\tmessage: nls.localize('MaxPropWarning', 'Object has more properties than limit of {0}', schema.maxProperties)\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif (schema.minProperties) {\n\t\t\tif (this.properties.length < schema.minProperties) {\n\t\t\t\tvalidationResult.warnings.push({\n\t\t\t\t\tlocation: { start: this.start, end: this.end },\n\t\t\t\t\tmessage: nls.localize('MinPropWarning', 'Object has fewer properties than the required number of {0}', schema.minProperties)\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif (Types.isObject(schema.dependencies)) {\n\t\t\tObject.keys(schema.dependencies).forEach((key: string) => {\n\t\t\t\tvar prop = seenKeys[key];\n\t\t\t\tif (prop) {\n\t\t\t\t\tif (Array.isArray(schema.dependencies[key])) {\n\t\t\t\t\t\tvar valueAsArray:string[] = schema.dependencies[key];\n\t\t\t\t\t\tvalueAsArray.forEach((requiredProp: string) => {\n\t\t\t\t\t\t\tif (!seenKeys[requiredProp]) {\n\t\t\t\t\t\t\t\tvalidationResult.warnings.push({\n\t\t\t\t\t\t\t\t\tlocation: { start: this.start, end: this.end },\n\t\t\t\t\t\t\t\t\tmessage: nls.localize('RequiredDependentPropWarning', 'Object is missing property {0} required by property {1}', requiredProp, key)\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tvalidationResult.propertiesValueMatches++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t} else if (Types.isObject(schema.dependencies[key])) {\n\t\t\t\t\t\tvar valueAsSchema:JsonSchema.IJSONSchema = schema.dependencies[key];\n\t\t\t\t\t\tvar propertyvalidationResult = new ValidationResult();\n\t\t\t\t\t\tthis.validate(valueAsSchema, propertyvalidationResult, matchingSchemas, offset);\n\t\t\t\t\t\tvalidationResult.mergePropertyMatch(propertyvalidationResult);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n}\n\nexport class JSONDocumentConfig {\n\tpublic ignoreDanglingComma:boolean;\n\n\tconstructor() {\n\t\tthis.ignoreDanglingComma = false;\n\t}\n}\n\nexport interface IApplicableSchema {\n\tnode:ASTNode;\n\tinverted?:boolean;\n\tschema: JsonSchema.IJSONSchema;\n}\n\nexport class ValidationResult {\n\tpublic errors:IError[];\n\tpublic warnings:IError[];\n\n\tpublic propertiesMatches: number;\n\tpublic propertiesValueMatches: number;\n\tpublic enumValueMatch: boolean;\n\n\tconstructor() {\n\t\tthis.errors = [];\n\t\tthis.warnings = [];\n\t\tthis.propertiesMatches = 0;\n\t\tthis.propertiesValueMatches = 0;\n\t\tthis.enumValueMatch = false;\n\t}\n\n\tpublic hasErrors():boolean {\n\t\treturn !!this.errors.length || !!this.warnings.length;\n\t}\n\n\tpublic mergeAll(validationResults:ValidationResult[]):void {\n\t\tvalidationResults.forEach((validationResult) => {\n\t\t\tthis.merge(validationResult);\n\t\t});\n\t}\n\n\tpublic merge(validationResult:ValidationResult):void {\n\t\tthis.errors = this.errors.concat(validationResult.errors);\n\t\tthis.warnings = this.warnings.concat(validationResult.warnings);\n\t}\n\n\tpublic mergePropertyMatch(propertyValidationResult: ValidationResult) : void {\n\t\tthis.merge(propertyValidationResult);\n\t\tthis.propertiesMatches++;\n\t\tif (propertyValidationResult.enumValueMatch || !propertyValidationResult.hasErrors() && propertyValidationResult.propertiesMatches) {\n\t\t\tthis.propertiesValueMatches++;\n\t\t}\n\t}\n\n\tpublic compare(other: ValidationResult) : number {\n\t\tvar hasErrors = this.hasErrors();\n\t\tif (hasErrors !== other.hasErrors()) {\n\t\t\treturn hasErrors ? -1 : 1;\n\t\t}\n\t\tif (this.enumValueMatch !== other.enumValueMatch) {\n\t\t\treturn other.enumValueMatch ? -1 : 1;\n\t\t}\n\t\tif (this.propertiesValueMatches !== other.propertiesValueMatches) {\n\t\t\treturn this.propertiesValueMatches - other.propertiesValueMatches;\n\t\t}\n\t\treturn this.propertiesMatches - other.propertiesMatches;\n\t}\n\n}\n\nexport class JSONDocument {\n\tpublic config:JSONDocumentConfig;\n\tpublic root:ASTNode;\n\n\tprivate validationResult:ValidationResult;\n\n\tconstructor(config:JSONDocumentConfig) {\n\t\tthis.config = config;\n\t\tthis.validationResult = new ValidationResult();\n\t}\n\n\tpublic get errors():IError[] {\n\t\treturn this.validationResult.errors;\n\t}\n\n\tpublic get warnings():IError[] {\n\t\treturn this.validationResult.warnings;\n\t}\n\n\tpublic getNodeFromOffset(offset:number):ASTNode {\n\t\treturn this.root && this.root.getNodeFromOffset(offset);\n\t}\n\n\tpublic getNodeFromOffsetEndInclusive(offset:number):ASTNode {\n\t\treturn this.root && this.root.getNodeFromOffsetEndInclusive(offset);\n\t}\n\n\tpublic visit(visitor: (node:ASTNode) => boolean):void {\n\t\tif (this.root) {\n\t\t\tthis.root.visit(visitor);\n\t\t}\n\t}\n\n\tpublic validate(schema:JsonSchema.IJSONSchema, matchingSchemas:IApplicableSchema[]= null, offset:number = -1):void {\n\t\tif (this.root) {\n\t\t\tthis.root.validate(schema, this.validationResult, matchingSchemas, offset);\n\t\t}\n\t}\n}\n\nexport class JSONParser {\n\tpublic parse(text:string, config = new JSONDocumentConfig()):JSONDocument {\n\n\t\tvar _doc = new JSONDocument(config);\n\t\tvar _scanner = Json.createScanner(text, true);\n\n\t\tfunction _accept(token : Json.SyntaxKind) : boolean {\n\t\t\tif (_scanner.getToken() === token) {\n\t\t\t\t_scanner.scan();\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\tfunction _error<T extends ASTNode>(message:string, node:T = null, skipUntilAfter: Json.SyntaxKind[] = [], skipUntil: Json.SyntaxKind[] = []) : T {\n\t\t\tif (_doc.errors.length === 0 || _doc.errors[0].location.start !== _scanner.getTokenOffset()) {\n\t\t\t\t// ignore multiple errors on the same offset\n\t\t\t\tvar error = { message: message, location: { start: _scanner.getTokenOffset(), end: _scanner.getTokenOffset() + _scanner.getTokenLength()}};\n\t\t\t\t_doc.errors.push(error);\n\t\t\t}\n\n\t\t\tif (node) {\n\t\t\t\t_finalize(node, false);\n\t\t\t}\n\t\t\tif (skipUntilAfter.length + skipUntil.length > 0) {\n\t\t\t\tvar token = _scanner.getToken();\n\t\t\t\twhile (token !== Json.SyntaxKind.EOF) {\n\t\t\t\t\tif (skipUntilAfter.indexOf(token) !== -1) {\n\t\t\t\t\t\t_scanner.scan();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else if (skipUntil.indexOf(token) !== -1) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\ttoken = _scanner.scan();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn node;\n\t\t}\n\n\t\tfunction _checkScanError() : boolean {\n\t\t\tswitch (_scanner.getTokenError()) {\n\t\t\t\tcase Json.ScanError.InvalidUnicode:\n\t\t\t\t\t_error(nls.localize('InvalidUnicode', 'Invalid unicode sequence in string'));\n\t\t\t\t\treturn true;\n\t\t\t\tcase Json.ScanError.InvalidEscapeCharacter:\n\t\t\t\t\t_error(nls.localize('InvalidEscapeCharacter', 'Invalid escape character in string'));\n\t\t\t\t\treturn true;\n\t\t\t\tcase Json.ScanError.UnexpectedEndOfNumber:\n\t\t\t\t\t_error(nls.localize('UnexpectedEndOfNumber', 'Unexpected end of number'));\n\t\t\t\t\treturn true;\n\t\t\t\tcase Json.ScanError.UnexpectedEndOfComment:\n\t\t\t\t\t_error(nls.localize('UnexpectedEndOfComment', 'Unexpected end of comment'));\n\t\t\t\t\treturn true;\n\t\t\t\tcase Json.ScanError.UnexpectedEndOfString:\n\t\t\t\t\t_error(nls.localize('UnexpectedEndOfString', 'Unexpected end of string'));\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\tfunction _finalize<T extends ASTNode>(node:T, scanNext:boolean) : T {\n\t\t\tnode.end = _scanner.getTokenOffset() + _scanner.getTokenLength();\n\n\t\t\tif (scanNext) {\n\t\t\t\t_scanner.scan();\n\t\t\t}\n\n\t\t\treturn node;\n\t\t}\n\n\t\tfunction _parseArray(parent:ASTNode, name:string):ArrayASTNode {\n\t\t\tif (_scanner.getToken() !== Json.SyntaxKind.OpenBracketToken) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tvar node = new ArrayASTNode(parent, name, _scanner.getTokenOffset());\n\t\t\t_scanner.scan(); // consume OpenBracketToken\n\n\t\t\tvar count = 0;\n\t\t\tif (node.addItem(_parseValue(node, '' + count++))) {\n\t\t\t\twhile (_accept(Json.SyntaxKind.CommaToken)) {\n\t\t\t\t\tif (!node.addItem(_parseValue(node, '' + count++)) && !_doc.config.ignoreDanglingComma) {\n\t\t\t\t\t\t_error(nls.localize('ValueExpected', 'Value expected'));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (_scanner.getToken() !== Json.SyntaxKind.CloseBracketToken) {\n\t\t\t\treturn _error(nls.localize('ExpectedCloseBracket', 'Expected comma or closing bracket'), node);\n\t\t\t}\n\n\t\t\treturn _finalize(node, true);\n\t\t}\n\n\t\tfunction _parseProperty(parent:ObjectASTNode, keysSeen:any):PropertyASTNode {\n\n\t\t\tvar key = _parseString(null, null, true);\n\t\t\tif (!key) {\n\t\t\t\tif (_scanner.getToken() === Json.SyntaxKind.Unknown) {\n\t\t\t\t\t// give a more helpful error message\n\t\t\t\t\tvar value = _scanner.getTokenValue();\n\t\t\t\t\tif (value.match(/^['\\w]/)) {\n\t\t\t\t\t\t_error(nls.localize('DoubleQuotesExpected', 'Property keys must be doublequoted'));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tvar node = new PropertyASTNode(parent, key);\n\n\t\t\tif (keysSeen[key.value]) {\n\t\t\t\t_doc.warnings.push( { location: { start: node.key.start, end: node.key.end }, message:nls.localize('DuplicateKeyWarning', \"Duplicate object key\")});\n\t\t\t}\n\t\t\tkeysSeen[key.value] = true;\n\n\t\t\tif (_scanner.getToken() === Json.SyntaxKind.ColonToken) {\n\t\t\t\tnode.colonOffset = _scanner.getTokenOffset();\n\t\t\t} else {\n\t\t\t\treturn _error(nls.localize('ColonExpected', 'Colon expected'), node, [], [Json.SyntaxKind.CloseBraceToken, Json.SyntaxKind.CommaToken] );\n\t\t\t}\n\n\t\t\t_scanner.scan(); // consume ColonToken\n\n\t\t\tif (!node.setValue(_parseValue(node, key.value))) {\n\t\t\t\treturn _error(nls.localize('ValueExpected', 'Value expected'), node, [], [Json.SyntaxKind.CloseBraceToken, Json.SyntaxKind.CommaToken]);\n\t\t\t}\n\t\t\tnode.end = node.value.end;\n\t\t\treturn node;\n\t\t}\n\n\t\tfunction _parseObject(parent:ASTNode, name:string):ObjectASTNode {\n\t\t\tif (_scanner.getToken() !== Json.SyntaxKind.OpenBraceToken) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tvar node = new ObjectASTNode(parent, name, _scanner.getTokenOffset());\n\t\t\t_scanner.scan(); // consume OpenBraceToken\n\n\t\t\tvar keysSeen : any = {};\n\t\t\tif (node.addProperty(_parseProperty(node, keysSeen))) {\n\t\t\t\twhile (_accept(Json.SyntaxKind.CommaToken)) {\n\t\t\t\t\tif (!node.addProperty(_parseProperty(node, keysSeen)) && !_doc.config.ignoreDanglingComma) {\n\t\t\t\t\t\t_error(nls.localize('PropertyExpected', 'Property expected'));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (_scanner.getToken() !== Json.SyntaxKind.CloseBraceToken) {\n\t\t\t\treturn _error(nls.localize('ExpectedCloseBrace', 'Expected comma or closing brace'), node);\n\t\t\t}\n\t\t\treturn _finalize(node, true);\n\t\t}\n\n\t\tfunction _parseString(parent:ASTNode, name: string, isKey:boolean):StringASTNode {\n\t\t\tif (_scanner.getToken() !== Json.SyntaxKind.StringLiteral) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tvar node = new StringASTNode(parent, name, isKey, _scanner.getTokenOffset());\n\t\t\tnode.value = _scanner.getTokenValue();\n\n\t\t\t_checkScanError();\n\n\t\t\treturn _finalize(node, true);\n\t\t}\n\n\t\tfunction _parseNumber(parent:ASTNode, name: string):NumberASTNode {\n\t\t\tif (_scanner.getToken() !== Json.SyntaxKind.NumericLiteral) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tvar node = new NumberASTNode(parent, name, _scanner.getTokenOffset());\n\t\t\tif (!_checkScanError()) {\n\t\t\t\tvar tokenValue = _scanner.getTokenValue();\n\t\t\t\ttry {\n\t\t\t\t\tvar numberValue = JSON.parse(tokenValue);\n\t\t\t\t\tif (typeof numberValue !== 'number') {\n\t\t\t\t\t\treturn _error(nls.localize('InvalidNumberFormat', 'Invalid number format'), node);\n\t\t\t\t\t}\n\t\t\t\t\tnode.value = numberValue;\n\t\t\t\t} catch (e) {\n\t\t\t\t\treturn _error(nls.localize('InvalidNumberFormat', 'Invalid number format'), node);\n\t\t\t\t}\n\t\t\t\tnode.isInteger = tokenValue.indexOf('.') === -1;\n\t\t\t}\n\t\t\treturn _finalize(node, true);\n\t\t}\n\n\t\tfunction _parseLiteral(parent:ASTNode, name: string):ASTNode {\n\t\t\tvar node: ASTNode;\n\t\t\tswitch (_scanner.getToken()) {\n\t\t\t\tcase Json.SyntaxKind.NullKeyword:\n\t\t\t\t\tnode = new NullASTNode(parent, name, _scanner.getTokenOffset());\n\t\t\t\t\tbreak;\n\t\t\t\tcase Json.SyntaxKind.TrueKeyword:\n\t\t\t\t\tnode = new BooleanASTNode(parent, name, true, _scanner.getTokenOffset());\n\t\t\t\t\tbreak;\n\t\t\t\tcase Json.SyntaxKind.FalseKeyword:\n\t\t\t\t\tnode = new BooleanASTNode(parent, name, false, _scanner.getTokenOffset());\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn _finalize(node, true);\n\t\t}\n\n\t\tfunction _parseValue(parent:ASTNode, name:string):ASTNode {\n\t\t\treturn _parseArray(parent, name) || _parseObject(parent, name) || _parseString(parent, name, false) || _parseNumber(parent, name) || _parseLiteral(parent, name);\n\t\t}\n\n\t\t_scanner.scan();\n\n\t\t_doc.root = _parseValue(null, null);\n\t\tif (!_doc.root) {\n\t\t\t_error(nls.localize('Invalid symbol', 'Expected a JSON object, array or literal'));\n\t\t} else if (_scanner.getToken() !== Json.SyntaxKind.EOF) {\n\t\t\t_error(nls.localize('End of file expected', 'End of file expected'));\n\t\t}\n\t\treturn _doc;\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport EditorCommon = require('vs/editor/common/editorCommon');\nimport Modes = require('vs/editor/common/modes');\nimport URI from 'vs/base/common/uri';\nimport Parser = require('./parser/jsonParser');\nimport SchemaService = require('./jsonSchemaService');\nimport Types = require('vs/base/common/types');\nimport WinJS = require('vs/base/common/winjs.base');\nimport JsonWorker = require('./jsonWorker');\nimport JsonSchema = require('vs/base/common/jsonSchema');\nimport nls = require('vs/nls');\nimport errors = require('vs/base/common/errors');\nimport {IRequestService} from 'vs/platform/request/common/request';\n\nexport class JSONIntellisense {\n\n\tprivate schemaService: SchemaService.IJSONSchemaService;\n\tprivate requestService: IRequestService;\n\tprivate contributions: JsonWorker.IJSONWorkerContribution[];\n\n\tconstructor(schemaService: SchemaService.IJSONSchemaService, requestService: IRequestService, contributions: JsonWorker.IJSONWorkerContribution[]) {\n\t\tthis.schemaService = schemaService;\n\t\tthis.requestService = requestService;\n\t\tthis.contributions = contributions;\n\t}\n\n\tpublic doSuggest(resource: URI, modelMirror: EditorCommon.IMirrorModel, position: EditorCommon.IPosition): WinJS.TPromise<Modes.ISuggestResult> {\n\t\tvar currentWord = modelMirror.getWordUntilPosition(position).word;\n\n\t\tvar parser = new Parser.JSONParser();\n\t\tvar config = new Parser.JSONDocumentConfig();\n\t\t// so you can invoke suggest after the comma in an object literal\n\t\tconfig.ignoreDanglingComma = true;\n\n\t\tvar doc = parser.parse(modelMirror.getValue(), config);\n\n\t\tvar result: Modes.ISuggestResult = {\n\t\t\tcurrentWord: currentWord,\n\t\t\tincomplete: false,\n\t\t\tsuggestions: []\n\t\t};\n\t\tvar overwriteBefore = void 0;\n\t\tvar overwriteAfter = void 0;\n\n\t\tvar proposed: { [key: string]: boolean } = {};\n\t\tvar collector : JsonWorker.ISuggestionsCollector = {\n\t\t\tadd: (suggestion: Modes.ISuggestion) => {\n\t\t\t\tif (!proposed[suggestion.label]) {\n\t\t\t\t\tproposed[suggestion.label] = true;\n\n\t\t\t\t\tsuggestion.overwriteBefore = overwriteBefore;\n\t\t\t\t\tsuggestion.overwriteAfter = overwriteAfter;\n\t\t\t\t\tresult.suggestions.push(suggestion);\n\t\t\t\t}\n\t\t\t},\n\t\t\tsetAsIncomplete: () => {\n\t\t\t\tresult.incomplete = true;\n\t\t\t},\n\t\t\terror: (message: string) => {\n\t\t\t\terrors.onUnexpectedError(message);\n\t\t\t}\n\t\t};\n\n\t\treturn this.schemaService.getSchemaForResource(resource.toString(), doc).then((schema) => {\n\t\t\tvar collectionPromises: WinJS.Promise[] = [];\n\n\t\t\tvar offset = modelMirror.getOffsetFromPosition(position);\n\t\t\tvar node = doc.getNodeFromOffsetEndInclusive(offset);\n\t\t\tvar addValue = true;\n\t\t\tvar currentKey = currentWord;\n\t\t\tvar currentProperty : Parser.PropertyASTNode = null;\n\t\t\tif (node) {\n\n\t\t\t\tif (node.type === 'string') {\n\t\t\t\t\tvar stringNode = <Parser.StringASTNode> node;\n\t\t\t\t\tif (stringNode.isKey) {\n\t\t\t\t\t\tvar nodeRange = modelMirror.getRangeFromOffsetAndLength(node.start, node.end - node.start);\n\t\t\t\t\t\toverwriteBefore = position.column - nodeRange.startColumn;\n\t\t\t\t\t\toverwriteAfter = nodeRange.endColumn - position.column;\n\t\t\t\t\t\taddValue = !(node.parent && ((<Parser.PropertyASTNode> node.parent).value));\n\t\t\t\t\t\tcurrentProperty = node.parent ? <Parser.PropertyASTNode> node.parent : null;\n\t\t\t\t\t\tcurrentKey = modelMirror.getValueInRange({ startColumn: nodeRange.startColumn + 1, startLineNumber: nodeRange.startLineNumber, endColumn: position.column, endLineNumber: position.lineNumber });\n\t\t\t\t\t\tif (node.parent) {\n\t\t\t\t\t\t\tnode = node.parent.parent;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// proposals for properties\n\t\t\tif (node && node.type === 'object') {\n\t\t\t\t// don't suggest keys when the cursor is just before the opening curly brace\n\t\t\t\tif (node.start === offset) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t\t// don't suggest properties that are already present\n\t\t\t\tvar properties = (<Parser.ObjectASTNode> node).properties;\n\t\t\t\tproperties.forEach(p => {\n\t\t\t\t\tif (!currentProperty || currentProperty !== p) {\n\t\t\t\t\t\tproposed[p.key.value] = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif (schema) {\n\t\t\t\t\t// property proposals with schema\n\t\t\t\t\tvar isLast = properties.length === 0 || offset >= properties[properties.length - 1].start;\n\t\t\t\t\tthis.getPropertySuggestions(resource, schema, doc, node, currentKey, addValue, isLast, collector);\n\t\t\t\t} else if (node.parent) {\n\t\t\t\t\t// property proposals without schema\n\t\t\t\t\tthis.getSchemaLessPropertySuggestions(doc, node, collector);\n\t\t\t\t}\n\n\t\t\t\tvar location = node.getNodeLocation();\n\t\t\t\tthis.contributions.forEach((contribution) => {\n\t\t\t\t\tvar collectPromise = contribution.collectPropertySuggestions(resource, location, currentWord, addValue, isLast, collector);\n\t\t\t\t\tif (collectPromise) {\n\t\t\t\t\t\tcollectionPromises.push(collectPromise);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// proposals for values\n\t\t\tif (node && (node.type === 'string' || node.type === 'number' || node.type === 'integer' || node.type === 'boolean' || node.type === 'null')) {\n\t\t\t\tvar nodeRange = modelMirror.getRangeFromOffsetAndLength(node.start, node.end - node.start);\n\t\t\t\toverwriteBefore = position.column - nodeRange.startColumn;\n\t\t\t\toverwriteAfter = nodeRange.endColumn - position.column;\n\t\t\t\tnode = node.parent;\n\t\t\t}\n\n\t\t\tif (schema) {\n\t\t\t\t// value proposals with schema\n\t\t\t\tthis.getValueSuggestions(resource, schema, doc, node, offset, collector);\n\t\t\t} else {\n\t\t\t\t// value proposals without schema\n\t\t\t\tthis.getSchemaLessValueSuggestions(doc, node, offset, modelMirror, collector);\n\t\t\t}\n\t\t\tif (!node) {\n\t\t\t\tthis.contributions.forEach((contribution) => {\n\t\t\t\t\tvar collectPromise = contribution.collectDefaultSuggestions(resource, collector);\n\t\t\t\t\tif (collectPromise) {\n\t\t\t\t\t\tcollectionPromises.push(collectPromise);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tif ((node.type === 'property') && offset > (<Parser.PropertyASTNode> node).colonOffset) {\n\t\t\t\t\tvar parentKey = (<Parser.PropertyASTNode>node).key.value;\n\n\t\t\t\t\tvar valueNode = (<Parser.PropertyASTNode> node).value;\n\t\t\t\t\tif (!valueNode || offset <= valueNode.end) {\n\t\t\t\t\t\tvar location = node.parent.getNodeLocation();\n\t\t\t\t\t\tthis.contributions.forEach((contribution) => {\n\t\t\t\t\t\t\tvar collectPromise = contribution.collectValueSuggestions(resource, location, parentKey, collector);\n\t\t\t\t\t\t\tif (collectPromise) {\n\t\t\t\t\t\t\t\tcollectionPromises.push(collectPromise);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t\treturn WinJS.Promise.join(collectionPromises).then(() => { return result; } );\n\t\t});\n\t}\n\n\tprivate getPropertySuggestions(resource: URI, schema: SchemaService.ResolvedSchema, doc: Parser.JSONDocument, node: Parser.ASTNode, currentWord: string, addValue: boolean, isLast: boolean, collector: JsonWorker.ISuggestionsCollector): void {\n\t\tvar matchingSchemas: Parser.IApplicableSchema[] = [];\n\t\tdoc.validate(schema.schema, matchingSchemas, node.start);\n\n\t\tmatchingSchemas.forEach((s) => {\n\t\t\tif (s.node === node && !s.inverted) {\n\t\t\t\tvar schemaProperties = s.schema.properties;\n\t\t\t\tif (schemaProperties) {\n\t\t\t\t\tObject.keys(schemaProperties).forEach((key: string) => {\n\t\t\t\t\t\tvar propertySchema = schemaProperties[key];\n\t\t\t\t\t\tcollector.add({ type: 'property', label: key, codeSnippet: this.getTextForProperty(key, propertySchema, addValue, isLast), documentationLabel: propertySchema.description || '' });\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate getSchemaLessPropertySuggestions(doc: Parser.JSONDocument, node: Parser.ASTNode, collector: JsonWorker.ISuggestionsCollector): void {\n\t\tvar collectSuggestionsForSimilarObject = (obj: Parser.ObjectASTNode) => {\n\t\t\tobj.properties.forEach((p) => {\n\t\t\t\tvar key = p.key.value;\n\t\t\t\tcollector.add({ type: 'property', label: key, codeSnippet: this.getTextForSimilarProperty(key, p.value), documentationLabel: '' });\n\t\t\t});\n\t\t};\n\t\tif (node.parent.type === 'property') {\n\t\t\t// if the object is a property value, check the tree for other objects that hang under a property of the same name\n\t\t\tvar parentKey = (<Parser.PropertyASTNode>node.parent).key.value;\n\t\t\tdoc.visit((n) => {\n\t\t\t\tif (n.type === 'property' && (<Parser.PropertyASTNode>n).key.value === parentKey && (<Parser.PropertyASTNode>n).value && (<Parser.PropertyASTNode>n).value.type === 'object') {\n\t\t\t\t\tcollectSuggestionsForSimilarObject(<Parser.ObjectASTNode> (<Parser.PropertyASTNode>n).value);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t});\n\t\t} else if (node.parent.type === 'array') {\n\t\t\t// if the object is in an array, use all other array elements as similar objects\n\t\t\t(<Parser.ArrayASTNode> node.parent).items.forEach((n) => {\n\t\t\t\tif (n.type === 'object' && n !== node) {\n\t\t\t\t\tcollectSuggestionsForSimilarObject(<Parser.ObjectASTNode> n);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic getSchemaLessValueSuggestions(doc: Parser.JSONDocument, node: Parser.ASTNode, offset: number, modelMirror: EditorCommon.IMirrorModel, collector: JsonWorker.ISuggestionsCollector): void {\n\t\tvar collectSuggestionsForValues = (value: Parser.ASTNode) => {\n\t\t\tvar content = this.getTextForMatchingNode(value, modelMirror);\n\t\t\tcollector.add({ type: this.getSuggestionType(value.type), label: content, codeSnippet: content, documentationLabel: '' });\n\t\t\tif (value.type === 'boolean') {\n\t\t\t\tthis.addBooleanSuggestion(!value.getValue(), collector);\n\t\t\t}\n\t\t};\n\n\t\tif (!node) {\n\t\t\tcollector.add({ type: this.getSuggestionType('object'), label: 'Empty object', codeSnippet: '{\\n\\t{{}}\\n}', documentationLabel: '' });\n\t\t\tcollector.add({ type: this.getSuggestionType('array'), label: 'Empty array', codeSnippet: '[\\n\\t{{}}\\n]', documentationLabel: '' });\n\t\t} else {\n\t\t\tif (node.type === 'property' && offset > (<Parser.PropertyASTNode> node).colonOffset) {\n\t\t\t\tvar valueNode = (<Parser.PropertyASTNode>node).value;\n\t\t\t\tif (valueNode && offset > valueNode.end) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t// suggest values at the same key\n\t\t\t\tvar parentKey = (<Parser.PropertyASTNode>node).key.value;\n\t\t\t\tdoc.visit((n) => {\n\t\t\t\t\tif (n.type === 'property' && (<Parser.PropertyASTNode>n).key.value === parentKey && (<Parser.PropertyASTNode>n).value) {\n\t\t\t\t\t\tcollectSuggestionsForValues((<Parser.PropertyASTNode>n).value);\n\t\t\t\t\t}\n\t\t\t\t\treturn true;\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (node.type === 'array') {\n\t\t\t\tif (node.parent && node.parent.type === 'property') {\n\t\t\t\t\t// suggest items of an array at the same key\n\t\t\t\t\tvar parentKey = (<Parser.PropertyASTNode>node.parent).key.value;\n\t\t\t\t\tdoc.visit((n) => {\n\t\t\t\t\t\tif (n.type === 'property' && (<Parser.PropertyASTNode>n).key.value === parentKey && (<Parser.PropertyASTNode>n).value && (<Parser.PropertyASTNode>n).value.type === 'array') {\n\t\t\t\t\t\t\t((<Parser.ArrayASTNode>(<Parser.PropertyASTNode>n).value).items).forEach((n) => {\n\t\t\t\t\t\t\t\tcollectSuggestionsForValues(<Parser.ObjectASTNode> n);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\t// suggest items in the same array\n\t\t\t\t\t(<Parser.ArrayASTNode> node).items.forEach((n) => {\n\t\t\t\t\t\tcollectSuggestionsForValues(<Parser.ObjectASTNode> n);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\n\tpublic getValueSuggestions(resource: URI, schema: SchemaService.ResolvedSchema, doc: Parser.JSONDocument, node: Parser.ASTNode, offset: number, collector: JsonWorker.ISuggestionsCollector) : void {\n\n\t\tif (!node) {\n\t\t\tthis.addDefaultSuggestion(schema.schema, collector);\n\t\t} else {\n\t\t\tvar parentKey: string = null;\n\t\t\tif (node && (node.type === 'property') && offset > (<Parser.PropertyASTNode> node).colonOffset) {\n\t\t\t\tvar valueNode = (<Parser.PropertyASTNode> node).value;\n\t\t\t\tif (valueNode && offset > valueNode.end) {\n\t\t\t\t\treturn; // we are past the value node\n\t\t\t\t}\n\t\t\t\tparentKey = (<Parser.PropertyASTNode>node).key.value;\n\t\t\t\tnode = node.parent;\n\t\t\t}\n\t\t\tif (node && (parentKey !== null || node.type === 'array')) {\n\t\t\t\tvar matchingSchemas: Parser.IApplicableSchema[] = [];\n\t\t\t\tdoc.validate(schema.schema, matchingSchemas, node.start);\n\n\t\t\t\tmatchingSchemas.forEach((s) => {\n\t\t\t\t\tif (s.node === node && !s.inverted && s.schema) {\n\t\t\t\t\t\tif (s.schema.items) {\n\t\t\t\t\t\t\tthis.addDefaultSuggestion(s.schema.items, collector);\n\t\t\t\t\t\t\tthis.addEnumSuggestion(s.schema.items, collector);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (s.schema.properties) {\n\t\t\t\t\t\t\tvar propertySchema = s.schema.properties[parentKey];\n\t\t\t\t\t\t\tif (propertySchema) {\n\t\t\t\t\t\t\t\tthis.addDefaultSuggestion(propertySchema, collector);\n\t\t\t\t\t\t\t\tthis.addEnumSuggestion(propertySchema, collector);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate addBooleanSuggestion(value: boolean, collector: JsonWorker.ISuggestionsCollector): void {\n\t\tcollector.add({ type: this.getSuggestionType('boolean'), label: value ? 'true' : 'false', codeSnippet: this.getTextForEnumValue(value), documentationLabel: '' });\n\t}\n\n\tprivate addEnumSuggestion(schema: JsonSchema.IJSONSchema, collector: JsonWorker.ISuggestionsCollector): void {\n\t\tif (Array.isArray(schema.enum)) {\n\t\t\tschema.enum.forEach((enm) => collector.add({ type: this.getSuggestionType(schema.type), label: this.getLabelForValue(enm), codeSnippet: this.getTextForEnumValue(enm), documentationLabel: '' }));\n\t\t} else if (schema.type === 'boolean') {\n\t\t\tthis.addBooleanSuggestion(true, collector);\n\t\t\tthis.addBooleanSuggestion(false, collector);\n\t\t}\n\t\tif (Array.isArray(schema.allOf)) {\n\t\t\tschema.allOf.forEach((s) => this.addEnumSuggestion(s, collector));\n\t\t}\n\t\tif (Array.isArray(schema.anyOf)) {\n\t\t\tschema.anyOf.forEach((s) => this.addEnumSuggestion(s, collector));\n\t\t}\n\t\tif (Array.isArray(schema.oneOf)) {\n\t\t\tschema.oneOf.forEach((s) => this.addEnumSuggestion(s, collector));\n\t\t}\n\t}\n\n\tprivate addDefaultSuggestion(schema: JsonSchema.IJSONSchema, collector: JsonWorker.ISuggestionsCollector): void {\n\t\tif (schema.default) {\n\t\t\tcollector.add({\n\t\t\t\ttype: this.getSuggestionType(schema.type),\n\t\t\t\tlabel: this.getLabelForValue(schema.default),\n\t\t\t\tcodeSnippet: this.getTextForValue(schema.default),\n\t\t\t\ttypeLabel:  nls.localize('json.suggest.default', 'Default value'),\n\t\t\t});\n\t\t}\n\t\tif (Array.isArray(schema.defaultSnippets)) {\n\t\t\tschema.defaultSnippets.forEach(s => {\n\t\t\t\tcollector.add({\n\t\t\t\t\ttype: 'snippet',\n\t\t\t\t\tlabel: this.getLabelForSnippetValue(s.body),\n\t\t\t\t\tcodeSnippet: this.getTextForSnippetValue(s.body)\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t\tif (Array.isArray(schema.allOf)) {\n\t\t\tschema.allOf.forEach((s) => this.addDefaultSuggestion(s, collector));\n\t\t}\n\t\tif (Array.isArray(schema.anyOf)) {\n\t\t\tschema.anyOf.forEach((s) => this.addDefaultSuggestion(s, collector));\n\t\t}\n\t\tif (Array.isArray(schema.oneOf)) {\n\t\t\tschema.oneOf.forEach((s) => this.addDefaultSuggestion(s, collector));\n\t\t}\n\t}\n\n\tprivate getLabelForValue(value: any) : string {\n\t\tvar label = JSON.stringify(value);\n\t\tlabel = label.replace('{{', '').replace('}}', '');\n\t\tif (label.length > 57) {\n\t\t\treturn label.substr(0, 57).trim() + '...';\n\t\t}\n\t\treturn label;\n\t}\n\n\tprivate getLabelForSnippetValue(value: any): string {\n\t\tlet label = JSON.stringify(value);\n\t\tlabel = label.replace(/\\{\\{|\\}\\}/g, '');\n\t\tif (label.length > 57) {\n\t\t\treturn label.substr(0, 57).trim() + '...';\n\t\t}\n\t\treturn label;\n\t}\n\n\tprivate getTextForValue(value: any): string {\n\t\tvar text = JSON.stringify(value, null, '\\t');\n\t\ttext = text.replace(/[\\\\\\{\\}]/g, '\\\\$&');\n\t\treturn text;\n\t}\n\n\tprivate getTextForSnippetValue(value: any): string {\n\t\treturn JSON.stringify(value, null, '\\t');\n\t}\n\n\tprivate getTextForEnumValue(value: any) : string {\n\t\tvar snippet = JSON.stringify(value, null, '\\t');\n\t\tswitch (typeof value) {\n\t\t\tcase 'object':\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn '{{null}}';\n\t\t\t\t}\n\t\t\t\treturn snippet;\n\t\t\tcase 'string':\n\t\t\t\treturn '\"{{' + snippet.substr(1, snippet.length - 2) + '}}\"';\n\t\t\tcase 'number':\n\t\t\tcase 'integer':\n\t\t\tcase 'boolean':\n\t\t\t\treturn '{{' + snippet + '}}';\n\t\t}\n\t\treturn snippet;\n\t}\n\n\tprivate getSuggestionType(type: any): Modes.SuggestionType {\n\t\tif (Array.isArray(type)) {\n\t\t\tvar array = <any[]> type;\n\t\t\ttype = array.length > 0 ? array[0] : null;\n\t\t}\n\t\tif (!type) {\n\t\t\treturn 'text';\n\t\t}\n\t\tswitch (type) {\n\t\t\tcase 'string': return 'text';\n\t\t\tcase 'object': return 'module';\n\t\t\tcase 'property': return 'property';\n\t\t\tdefault: return 'value';\n\t\t}\n\t}\n\n\n\tprivate getTextForMatchingNode(node: Parser.ASTNode, modelMirror: EditorCommon.IMirrorModel): string {\n\t\tswitch (node.type) {\n\t\t\tcase 'array':\n\t\t\t\treturn '[]';\n\t\t\tcase 'object':\n\t\t\t\treturn '{}';\n\t\t\tdefault:\n\t\t\t\tvar content = modelMirror.getValueInRange(modelMirror.getRangeFromOffsetAndLength(node.start, node.end - node.start));\n\t\t\t\treturn content;\n\t\t}\n\t}\n\n\tprivate getTextForProperty(key: string, propertySchema: JsonSchema.IJSONSchema, addValue:boolean, isLast: boolean): string {\n\n\t\tlet result = this.getTextForValue(key);\n\t\tif (!addValue) {\n\t\t\treturn result;\n\t\t}\n\t\tresult += ': ';\n\n\t\tvar defaultVal = propertySchema.default;\n\t\tif (!Types.isUndefined(defaultVal)) {\n\t\t\tresult = result + this.getTextForEnumValue(defaultVal);\n\t\t} else if (propertySchema.enum && propertySchema.enum.length > 0) {\n\t\t\tresult = result + this.getTextForEnumValue(propertySchema.enum[0]);\n\t\t} else {\n\t\t\tswitch (propertySchema.type) {\n\t\t\t\tcase 'boolean':\n\t\t\t\t\tresult += '{{false}}';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'string':\n\t\t\t\t\tresult += '\"{{}}\"';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'object':\n\t\t\t\t\tresult += '{\\n\\t{{}}\\n}';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'array':\n\t\t\t\t\tresult += '[\\n\\t{{}}\\n]';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'number':\n\t\t\t\tcase 'integer':\n\t\t\t\t\tresult += '{{0}}';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'null':\n\t\t\t\t\tresult += '{{null}}';\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\treturn result;\n\t\t\t}\n\t\t}\n\t\tif (!isLast) {\n\t\t\tresult += ',';\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate getTextForSimilarProperty(key: string, templateValue: Parser.ASTNode): string {\n\t\treturn this.getTextForValue(key);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport HtmlContent = require('vs/base/common/htmlContent');\nimport Strings = require('vs/base/common/strings');\nimport WinJS = require('vs/base/common/winjs.base');\nimport nls = require('vs/nls');\nimport JSONWorker = require('vs/languages/json/common/jsonWorker');\nimport {IRequestService} from 'vs/platform/request/common/request';\nimport URI from 'vs/base/common/uri';\nimport {JSONLocation} from 'vs/languages/json/common/parser/jsonLocation';\n\nexport class BowerJSONContribution implements JSONWorker.IJSONWorkerContribution {\n\n\tprivate requestService : IRequestService;\n\n\tprivate topRanked = ['twitter','bootstrap','angular-1.1.6','angular-latest','angulerjs','d3','myjquery','jq','abcdef1234567890','jQuery','jquery-1.11.1','jquery',\n\t\t'sushi-vanilla-x-data','font-awsome','Font-Awesome','font-awesome','fontawesome','html5-boilerplate','impress.js','homebrew',\n\t\t'backbone','moment1','momentjs','moment','linux','animate.css','animate-css','reveal.js','jquery-file-upload','blueimp-file-upload','threejs','express','chosen',\n\t\t'normalize-css','normalize.css','semantic','semantic-ui','Semantic-UI','modernizr','underscore','underscore1',\n\t\t'material-design-icons','ionic','chartjs','Chart.js','nnnick-chartjs','select2-ng','select2-dist','phantom','skrollr','scrollr','less.js','leancss','parser-lib',\n\t\t'hui','bootstrap-languages','async','gulp','jquery-pjax','coffeescript','hammer.js','ace','leaflet','jquery-mobile','sweetalert','typeahead.js','soup','typehead.js',\n\t\t'sails','codeigniter2'];\n\n\tpublic constructor(@IRequestService requestService: IRequestService) {\n\t\tthis.requestService = requestService;\n\t}\n\n\tprivate isBowerFile(resource: URI): boolean {\n\t\tvar path = resource.path;\n\t\treturn Strings.endsWith(path, '/bower.json') || Strings.endsWith(path, '/.bower.json');\n\t}\n\n\tpublic collectDefaultSuggestions(resource: URI, result: JSONWorker.ISuggestionsCollector): WinJS.Promise {\n\t\tif (this.isBowerFile(resource)) {\n\t\t\tvar defaultValue = {\n\t\t\t\t'name': '{{name}}',\n\t\t\t\t'description': '{{description}}',\n\t\t\t\t'authors': [ '{{author}}' ],\n\t\t\t\t'version': '{{1.0.0}}',\n\t\t\t\t'main': '{{pathToMain}}',\n\t\t\t\t'dependencies': {}\n\t\t\t};\n\t\t\tresult.add({ type: 'snippet', label: nls.localize('json.bower.default', 'Default bower.json'), codeSnippet: JSON.stringify(defaultValue, null, '\\t'), documentationLabel: '' });\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic collectPropertySuggestions(resource: URI, location: JSONLocation, currentWord: string, addValue: boolean, isLast:boolean, result: JSONWorker.ISuggestionsCollector) : WinJS.Promise {\n\t\tif (this.isBowerFile(resource) && (location.matches(['dependencies']) || location.matches(['devDependencies']))) {\n\t\t\tif (currentWord.length > 0) {\n\t\t\t\tvar queryUrl = 'https://bower.herokuapp.com/packages/search/' + encodeURIComponent(currentWord);\n\n\t\t\t\treturn this.requestService.makeRequest({\n\t\t\t\t\turl : queryUrl\n\t\t\t\t}).then((success) => {\n\t\t\t\t\tif (success.status === 200) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tvar obj = JSON.parse(success.responseText);\n\t\t\t\t\t\t\tif (Array.isArray(obj)) {\n\t\t\t\t\t\t\t\tvar results = <{name:string; description:string;}[]> obj;\n\t\t\t\t\t\t\t\tfor (var i = 0; i < results.length; i++) {\n\t\t\t\t\t\t\t\t\tvar name = results[i].name;\n\t\t\t\t\t\t\t\t\tvar description = results[i].description || '';\n\t\t\t\t\t\t\t\t\tvar codeSnippet = JSON.stringify(name);\n\t\t\t\t\t\t\t\t\tif (addValue) {\n\t\t\t\t\t\t\t\t\t\tcodeSnippet += ': \"{{*}}\"';\n\t\t\t\t\t\t\t\t\t\tif (!isLast) {\n\t\t\t\t\t\t\t\t\t\t\tcodeSnippet += ',';\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tresult.add({ type: 'property', label: name, codeSnippet: codeSnippet, documentationLabel: description });\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tresult.setAsIncomplete();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\t// ignore\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.error(nls.localize('json.bower.error.repoaccess', 'Request to the bower repository failed: {0}', success.responseText));\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\t}\n\t\t\t\t}, (error) => {\n\t\t\t\t\tresult.error(nls.localize('json.bower.error.repoaccess', 'Request to the bower repository failed: {0}', error.responseText));\n\t\t\t\t\treturn 0;\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.topRanked.forEach((name) => {\n\t\t\t\t\tvar codeSnippet = JSON.stringify(name);\n\t\t\t\t\tif (addValue) {\n\t\t\t\t\t\tcodeSnippet += ': \"{{*}}\"';\n\t\t\t\t\t\tif (!isLast) {\n\t\t\t\t\t\t\tcodeSnippet += ',';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tresult.add({ type: 'property', label: name, codeSnippet: codeSnippet, documentationLabel: '' });\n\t\t\t\t});\n\t\t\t\tresult.setAsIncomplete();\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic collectValueSuggestions(resource: URI, location: JSONLocation, currentKey: string, result: JSONWorker.ISuggestionsCollector): WinJS.Promise {\n\t\t// not implemented. Could be do done calling the bower command. Waiting for web API: https://github.com/bower/registry/issues/26\n\t\treturn null;\n\t}\n\n\tpublic getInfoContribution(resource: URI, location: JSONLocation): WinJS.TPromise<HtmlContent.IHTMLContentElement[]> {\n\t\tif (this.isBowerFile(resource) && (location.matches(['dependencies', '*']) || location.matches(['devDependencies', '*']))) {\n\t\t\tvar pack = location.getSegments()[location.getSegments().length - 1];\n\t\t\tvar htmlContent : HtmlContent.IHTMLContentElement[] = [];\n\t\t\thtmlContent.push({className: 'type', text: nls.localize('json.bower.package.hover', '{0}', pack) });\n\n\t\t\tvar queryUrl = 'https://bower.herokuapp.com/packages/' + encodeURIComponent(pack);\n\n\t\t\treturn this.requestService.makeRequest({\n\t\t\t\turl : queryUrl\n\t\t\t}).then((success) => {\n\t\t\t\ttry {\n\t\t\t\t\tvar obj = JSON.parse(success.responseText);\n\t\t\t\t\tif (obj && obj.url) {\n\t\t\t\t\t\tvar url = obj.url;\n\t\t\t\t\t\tif (Strings.startsWith(url, 'git://')) {\n\t\t\t\t\t\t\turl = url.substring(6);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (Strings.endsWith(url, '.git')) {\n\t\t\t\t\t\t\turl = url.substring(0, url.length - 4);\n\t\t\t\t\t\t}\n\t\t\t\t\t\thtmlContent.push({className: 'documentation', text: url });\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\t// ignore\n\t\t\t\t}\n\t\t\t\treturn htmlContent;\n\t\t\t}, (error) => {\n\t\t\t\treturn htmlContent;\n\t\t\t});\n\t\t}\n\t\treturn null;\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport HtmlContent = require('vs/base/common/htmlContent');\nimport Strings = require('vs/base/common/strings');\nimport WinJS = require('vs/base/common/winjs.base');\nimport nls = require('vs/nls');\nimport JSONWorker = require('vs/languages/json/common/jsonWorker');\nimport {IRequestService} from 'vs/platform/request/common/request';\nimport URI from 'vs/base/common/uri';\nimport {JSONLocation} from 'vs/languages/json/common/parser/jsonLocation';\n\nvar LIMIT = 40;\n\nexport class PackageJSONContribution implements JSONWorker.IJSONWorkerContribution {\n\n\tprivate mostDependedOn = [ 'lodash', 'async', 'underscore', 'request', 'commander', 'express', 'debug', 'chalk', 'colors', 'q', 'coffee-script',\n\t\t'mkdirp', 'optimist', 'through2', 'yeoman-generator', 'moment', 'bluebird', 'glob', 'gulp-util', 'minimist', 'cheerio', 'jade', 'redis', 'node-uuid',\n\t\t'socket', 'io', 'uglify-js', 'winston', 'through', 'fs-extra', 'handlebars', 'body-parser', 'rimraf', 'mime', 'semver', 'mongodb', 'jquery',\n\t\t'grunt', 'connect', 'yosay', 'underscore', 'string', 'xml2js', 'ejs', 'mongoose', 'marked', 'extend', 'mocha', 'superagent', 'js-yaml', 'xtend',\n\t\t'shelljs', 'gulp', 'yargs', 'browserify', 'minimatch', 'react', 'less', 'prompt', 'inquirer', 'ws', 'event-stream', 'inherits', 'mysql', 'esprima',\n\t\t'jsdom', 'stylus', 'when', 'readable-stream', 'aws-sdk', 'concat-stream', 'chai', 'promise', 'wrench'];\n\n\tprivate requestService : IRequestService;\n\n\tprivate isPackageJSONFile(resource: URI): boolean {\n\t\tvar path = resource.path;\n\t\treturn Strings.endsWith(path, '/package.json');\n\t}\n\n\tpublic constructor(@IRequestService requestService: IRequestService) {\n\t\tthis.requestService = requestService;\n\t}\n\n\tpublic collectDefaultSuggestions(resource: URI, result: JSONWorker.ISuggestionsCollector): WinJS.Promise {\n\t\tif (this.isPackageJSONFile(resource)) {\n\t\t\tvar defaultValue = {\n\t\t\t\t'name': '{{name}}',\n\t\t\t\t'description': '{{description}}',\n\t\t\t\t'author': '{{author}}',\n\t\t\t\t'version': '{{1.0.0}}',\n\t\t\t\t'main': '{{pathToMain}}',\n\t\t\t\t'dependencies': {}\n\t\t\t};\n\t\t\tresult.add({ type: 'module', label: nls.localize('json.package.default', 'Default package.json'), codeSnippet: JSON.stringify(defaultValue, null, '\\t'), documentationLabel: '' });\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic collectPropertySuggestions(resource: URI, location: JSONLocation, currentWord: string, addValue: boolean, isLast:boolean, result: JSONWorker.ISuggestionsCollector) : WinJS.Promise {\n\t\tif (this.isPackageJSONFile(resource) && (location.matches(['dependencies']) || location.matches(['devDependencies']) || location.matches(['optionalDependencies']) || location.matches(['peerDependencies']))) {\n\t\t\tvar queryUrl : string;\n\t\t\tif (currentWord.length > 0) {\n\t\t\t\tqueryUrl = 'https://skimdb.npmjs.com/registry/_design/app/_view/browseAll?group_level=1&limit=' + LIMIT + '&start_key=%5B%22' + encodeURIComponent(currentWord) + '%22%5D&end_key=%5B%22'+ encodeURIComponent(currentWord + 'z') + '%22,%7B%7D%5D';\n\n\t\t\t\treturn this.requestService.makeRequest({\n\t\t\t\t\turl : queryUrl\n\t\t\t\t}).then((success) => {\n\t\t\t\t\tif (success.status === 200) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tvar obj = JSON.parse(success.responseText);\n\t\t\t\t\t\t\tif (obj && Array.isArray(obj.rows)) {\n\t\t\t\t\t\t\t\tvar results = <{ key: string[]; }[]> obj.rows;\n\t\t\t\t\t\t\t\tfor (var i = 0; i < results.length; i++) {\n\t\t\t\t\t\t\t\t\tvar keys = results[i].key;\n\t\t\t\t\t\t\t\t\tif (Array.isArray(keys) && keys.length > 0) {\n\t\t\t\t\t\t\t\t\t\tvar name = keys[0];\n\t\t\t\t\t\t\t\t\t\tvar codeSnippet = JSON.stringify(name);\n\t\t\t\t\t\t\t\t\t\tif (addValue) {\n\t\t\t\t\t\t\t\t\t\t\tcodeSnippet += ': \"{{*}}\"';\n\t\t\t\t\t\t\t\t\t\t\tif (!isLast) {\n\t\t\t\t\t\t\t\t\t\t\t\tcodeSnippet += ',';\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tresult.add({ type: 'property', label: name, codeSnippet: codeSnippet, documentationLabel: '' });\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (results.length === LIMIT) {\n\t\t\t\t\t\t\t\t\tresult.setAsIncomplete();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\t// ignore\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.error(nls.localize('json.npm.error.repoaccess', 'Request to the NPM repository failed: {0}', success.responseText));\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\t}\n\t\t\t\t}, (error) => {\n\t\t\t\t\tresult.error(nls.localize('json.npm.error.repoaccess', 'Request to the NPM repository failed: {0}', error.responseText));\n\t\t\t\t\treturn 0;\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.mostDependedOn.forEach((name) => {\n\t\t\t\t\tvar codeSnippet = JSON.stringify(name);\n\t\t\t\t\tif (addValue) {\n\t\t\t\t\t\tcodeSnippet += ': \"{{*}}\"';\n\t\t\t\t\t\tif (!isLast) {\n\t\t\t\t\t\t\tcodeSnippet += ',';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tresult.add({ type: 'property', label: name, codeSnippet: codeSnippet, documentationLabel: '' });\n\t\t\t\t});\n\t\t\t\tresult.setAsIncomplete();\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic collectValueSuggestions(resource: URI, location: JSONLocation, currentKey: string, result: JSONWorker.ISuggestionsCollector): WinJS.Promise {\n\t\tif (this.isPackageJSONFile(resource) && (location.matches(['dependencies']) || location.matches(['devDependencies']) || location.matches(['optionalDependencies']) || location.matches(['peerDependencies']))) {\n\t\t\tvar queryUrl = 'http://registry.npmjs.org/' + encodeURIComponent(currentKey) + '/latest';\n\n\t\t\treturn this.requestService.makeRequest({\n\t\t\t\turl : queryUrl\n\t\t\t}).then((success) => {\n\t\t\t\ttry {\n\t\t\t\t\tvar obj = JSON.parse(success.responseText);\n\t\t\t\t\tif (obj && obj.version) {\n\t\t\t\t\t\tvar version = obj.version;\n\t\t\t\t\t\tvar name = JSON.stringify(version);\n\t\t\t\t\t\tresult.add({ type: 'class', label: name, codeSnippet: name, documentationLabel: nls.localize('json.npm.latestversion', 'The currently latest version of the package') });\n\t\t\t\t\t\tname = JSON.stringify('^' + version);\n\t\t\t\t\t\tresult.add({ type: 'class', label: name, codeSnippet: name, documentationLabel: nls.localize('json.npm.majorversion', 'Matches the most recent major version (1.x.x)') });\n\t\t\t\t\t\tname = JSON.stringify('~' + version);\n\t\t\t\t\t\tresult.add({ type: 'class', label: name, codeSnippet: name, documentationLabel: nls.localize('json.npm.minorversion', 'Matches the most recent minor version (1.2.x)') });\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\t// ignore\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t}, (error) => {\n\t\t\t\treturn 0;\n\t\t\t});\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic getInfoContribution(resource: URI, location: JSONLocation): WinJS.TPromise<HtmlContent.IHTMLContentElement[]> {\n\t\tif (this.isPackageJSONFile(resource) && (location.matches(['dependencies', '*']) || location.matches(['devDependencies', '*']) || location.matches(['optionalDependencies', '*']) || location.matches(['peerDependencies', '*']))) {\n\t\t\tvar pack = location.getSegments()[location.getSegments().length - 1];\n\n\t\t\tvar htmlContent : HtmlContent.IHTMLContentElement[] = [];\n\t\t\thtmlContent.push({className: 'type', text: nls.localize('json.npm.package.hover', '{0}', pack) });\n\n\t\t\tvar queryUrl = 'http://registry.npmjs.org/' + encodeURIComponent(pack) + '/latest';\n\n\t\t\treturn this.requestService.makeRequest({\n\t\t\t\turl : queryUrl\n\t\t\t}).then((success) => {\n\t\t\t\ttry {\n\t\t\t\t\tvar obj = JSON.parse(success.responseText);\n\t\t\t\t\tif (obj) {\n\t\t\t\t\t\tif (obj.description) {\n\t\t\t\t\t\t\thtmlContent.push({className: 'documentation', text: obj.description });\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (obj.version) {\n\t\t\t\t\t\t\thtmlContent.push({className: 'documentation', text: nls.localize('json.npm.version.hover', 'Latest version: {0}', obj.version) });\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\t// ignore\n\t\t\t\t}\n\t\t\t\treturn htmlContent;\n\t\t\t}, (error) => {\n\t\t\t\treturn htmlContent;\n\t\t\t});\n\t\t}\n\t\treturn null;\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport HtmlContent = require('vs/base/common/htmlContent');\nimport Strings = require('vs/base/common/strings');\nimport WinJS = require('vs/base/common/winjs.base');\nimport nls = require('vs/nls');\nimport JSONWorker = require('vs/languages/json/common/jsonWorker');\nimport {IRequestService} from 'vs/platform/request/common/request';\nimport {JSONLocation} from 'vs/languages/json/common/parser/jsonLocation';\nimport URI from 'vs/base/common/uri';\n\nvar LIMIT = 40;\n\nexport class ProjectJSONContribution implements JSONWorker.IJSONWorkerContribution {\n\n\tprivate requestService : IRequestService;\n\n\tpublic constructor(@IRequestService requestService: IRequestService) {\n\t\tthis.requestService = requestService;\n\t}\n\n\tprivate isProjectJSONFile(resource: URI): boolean {\n\t\tvar path = resource.path;\n\t\treturn Strings.endsWith(path, '/project.json');\n\t}\n\n\tpublic collectDefaultSuggestions(resource: URI, result: JSONWorker.ISuggestionsCollector): WinJS.Promise {\n\t\tif (this.isProjectJSONFile(resource)) {\n\t\t\tvar defaultValue = {\n\t\t\t\t'version': '{{1.0.0-*}}',\n\t\t\t\t'dependencies': {},\n\t\t\t\t'frameworks': {\n\t\t\t\t\t'dnx451': {},\n\t\t\t\t\t'dnxcore50': {}\n\t\t\t\t}\n\t\t\t};\n\t\t\tresult.add({ type: 'snippet', label: nls.localize('json.project.default', 'Default project.json'), codeSnippet: JSON.stringify(defaultValue, null, '\\t'), documentationLabel: '' });\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic collectPropertySuggestions(resource: URI, location: JSONLocation, currentWord: string, addValue: boolean, isLast:boolean, result: JSONWorker.ISuggestionsCollector) : WinJS.Promise {\n\t\tif (this.isProjectJSONFile(resource) && (location.matches(['dependencies']) || location.matches(['frameworks', '*', 'dependencies']) || location.matches(['frameworks', '*', 'frameworkAssemblies']))) {\n\t\t\tvar queryUrl : string;\n\t\t\tif (currentWord.length > 0) {\n\t\t\t\tqueryUrl = 'https://www.nuget.org/api/v2/Packages?'\n\t\t\t\t\t+ '$filter=Id%20ge%20\\''\n\t\t\t\t\t+ encodeURIComponent(currentWord)\n\t\t\t\t\t+ '\\'%20and%20Id%20lt%20\\''\n\t\t\t\t\t+ encodeURIComponent(currentWord + 'z')\n\t\t\t\t\t+ '\\'%20and%20IsAbsoluteLatestVersion%20eq%20true'\n\t\t\t\t\t+ '&$select=Id,Version,Description&$format=json&$top=' + LIMIT;\n\t\t\t} else {\n\t\t\t\tqueryUrl = 'https://www.nuget.org/api/v2/Packages?'\n\t\t\t\t\t+ '$filter=IsAbsoluteLatestVersion%20eq%20true'\n\t\t\t\t\t+ '&$orderby=DownloadCount%20desc&$top=' + LIMIT\n\t\t\t\t\t+ '&$select=Id,Version,DownloadCount,Description&$format=json';\n\t\t\t}\n\n\t\t\treturn this.requestService.makeRequest({\n\t\t\t\turl : queryUrl\n\t\t\t}).then((success) => {\n\t\t\t\tif (success.status === 200) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tvar obj = JSON.parse(success.responseText);\n\t\t\t\t\t\tif (Array.isArray(obj.d)) {\n\t\t\t\t\t\t\tvar results = <any[]> obj.d;\n\t\t\t\t\t\t\tfor (var i = 0; i < results.length; i++) {\n\t\t\t\t\t\t\t\tvar curr = results[i];\n\t\t\t\t\t\t\t\tvar name = curr.Id;\n\t\t\t\t\t\t\t\tvar version = curr.Version;\n\t\t\t\t\t\t\t\tif (name) {\n\t\t\t\t\t\t\t\t\tvar documentation = curr.Description;\n\t\t\t\t\t\t\t\t\tvar typeLabel = curr.Version;\n\t\t\t\t\t\t\t\t\tvar codeSnippet = JSON.stringify(name);\n\t\t\t\t\t\t\t\t\tif (addValue) {\n\t\t\t\t\t\t\t\t\t\tcodeSnippet += ': \"{{' + version + '}}\"';\n\t\t\t\t\t\t\t\t\t\tif (!isLast) {\n\t\t\t\t\t\t\t\t\t\t\tcodeSnippet += ',';\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tresult.add({ type: 'property', label: name, codeSnippet: codeSnippet, typeLabel: typeLabel, documentationLabel: documentation });\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (results.length === LIMIT) {\n\t\t\t\t\t\t\t\tresult.setAsIncomplete();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t// ignore\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tresult.error(nls.localize('json.nugget.error.repoaccess', 'Request to the nuget repository failed: {0}', success.responseText));\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t}, (error) => {\n\t\t\t\tresult.error(nls.localize('json.nugget.error.repoaccess', 'Request to the nuget repository failed: {0}', error.responseText));\n\t\t\t\treturn 0;\n\t\t\t});\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic collectValueSuggestions(resource: URI, location: JSONLocation, currentKey: string, result: JSONWorker.ISuggestionsCollector): WinJS.Promise {\n\t\tif (this.isProjectJSONFile(resource) && (location.matches(['dependencies']) || location.matches(['frameworks', '*', 'dependencies']) || location.matches(['frameworks', '*', 'frameworkAssemblies']))) {\n\t\t\tvar queryUrl = 'https://www.myget.org/F/aspnetrelease/api/v2/Packages?'\n\t\t\t\t\t+ '$filter=Id%20eq%20\\''\n\t\t\t\t\t+ encodeURIComponent(currentKey)\n\t\t\t\t\t+ '\\'&$select=Version,IsAbsoluteLatestVersion&$format=json&$top=' + LIMIT;\n\n\t\t\treturn this.requestService.makeRequest({\n\t\t\t\turl : queryUrl\n\t\t\t}).then((success) => {\n\t\t\t\ttry {\n\t\t\t\t\tvar obj = JSON.parse(success.responseText);\n\t\t\t\t\tif (Array.isArray(obj.d)) {\n\t\t\t\t\t\tvar results = <any[]> obj.d;\n\t\t\t\t\t\tfor (var i = 0; i < results.length; i++) {\n\t\t\t\t\t\t\tvar curr = results[i];\n\t\t\t\t\t\t\tvar version = curr.Version;\n\t\t\t\t\t\t\tif (version) {\n\t\t\t\t\t\t\t\tvar name = JSON.stringify(version);\n\t\t\t\t\t\t\t\tvar isLatest = curr.IsAbsoluteLatestVersion === 'true';\n\t\t\t\t\t\t\t\tvar label = name;\n\t\t\t\t\t\t\t\tvar documentationLabel = '';\n\t\t\t\t\t\t\t\tif (isLatest) {\n\t\t\t\t\t\t\t\t\tdocumentationLabel = nls.localize('json.nugget.versiondescription.suggest', 'The currently latest version of the package');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tresult.add({ type: 'class', label: label, codeSnippet: name, documentationLabel: documentationLabel });\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (results.length === LIMIT) {\n\t\t\t\t\t\t\tresult.setAsIncomplete();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\t// ignore\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t}, (error) => {\n\t\t\t\treturn 0;\n\t\t\t});\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic getInfoContribution(resource: URI, location: JSONLocation): WinJS.TPromise<HtmlContent.IHTMLContentElement[]> {\n\t\tif (this.isProjectJSONFile(resource) && (location.matches(['dependencies', '*']) || location.matches(['frameworks', '*', 'dependencies', '*']) || location.matches(['frameworks', '*', 'frameworkAssemblies', '*']))) {\n\t\t\tvar pack = location.getSegments()[location.getSegments().length - 1];\n\n\t\t\tvar htmlContent : HtmlContent.IHTMLContentElement[] = [];\n\t\t\thtmlContent.push({className: 'type', text: nls.localize('json.nugget.package.hover', '{0}', pack) });\n\n\t\t\tvar queryUrl = 'https://www.myget.org/F/aspnetrelease/api/v2/Packages?'\n\t\t\t\t+ '$filter=Id%20eq%20\\''\n\t\t\t\t+ encodeURIComponent(pack)\n\t\t\t\t+ '\\'%20and%20IsAbsoluteLatestVersion%20eq%20true'\n\t\t\t\t+ '&$select=Version,Description&$format=json&$top=5';\n\n\t\t\treturn this.requestService.makeRequest({\n\t\t\t\turl : queryUrl\n\t\t\t}).then((success) => {\n\t\t\t\tvar content = success.responseText;\n\t\t\t\tif (content) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tvar obj = JSON.parse(content);\n\t\t\t\t\t\tif (obj.d && obj.d[0]) {\n\t\t\t\t\t\t\tvar res = obj.d[0];\n\t\t\t\t\t\t\tif (res.Description) {\n\t\t\t\t\t\t\t\thtmlContent.push({className: 'documentation', text: res.Description });\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (res.Version) {\n\t\t\t\t\t\t\t\thtmlContent.push({className: 'documentation', text: nls.localize('json.nugget.version.hover', 'Latest version: {0}', res.Version) });\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t// ignore\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn htmlContent;\n\t\t\t}, (error) => {\n\t\t\t\treturn htmlContent;\n\t\t\t});\n\t\t}\n\t\treturn null;\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport nls = require('vs/nls');\nimport Objects = require('vs/base/common/objects');\nimport Json = require('vs/base/common/json');\nimport http = require('vs/base/common/http');\nimport {IJSONSchema, IJSONSchemaMap} from 'vs/base/common/jsonSchema';\nimport Strings = require('vs/base/common/strings');\nimport URI from 'vs/base/common/uri';\nimport Types = require('vs/base/common/types');\nimport Parser = require('vs/languages/json/common/parser/jsonParser');\nimport WinJS = require('vs/base/common/winjs.base');\nimport {IResourceService, ResourceEvents, IResourceChangedEvent} from 'vs/editor/common/services/resourceService';\nimport {IRequestService} from 'vs/platform/request/common/request';\nimport {IWorkspaceContextService} from 'vs/platform/workspace/common/workspace';\nimport {ISchemaContributions} from 'vs/platform/jsonschemas/common/jsonContributionRegistry';\nimport {IDisposable, dispose} from 'vs/base/common/lifecycle';\n\nexport interface IJSONSchemaService {\n\n\t/**\n\t * Registers a schema file in the current workspace to be applicable to files that match the pattern\n\t */\n\tregisterExternalSchema(uri:string, filePatterns?: string[], unresolvedSchema?: IJSONSchema):ISchemaHandle;\n\n\t/**\n\t * Clears all cached schema files\n\t */\n\tclearExternalSchemas():void;\n\n\t/**\n\t * Registers contributed schemas\n\t */\n\tsetSchemaContributions(schemaContributions:ISchemaContributions):void;\n\n\t/**\n\t * Looks up the appropriate schema for the given URI\n\t */\n\tgetSchemaForResource(resource:string, document: Parser.JSONDocument):WinJS.TPromise<ResolvedSchema>;\n}\n\nexport interface ISchemaHandle {\n\t/**\n\t * The schema id\n\t */\n\turl: string;\n\n\t/**\n\t * The schema from the file, with potential $ref references\n\t */\n\tgetUnresolvedSchema():WinJS.TPromise<UnresolvedSchema>;\n\n\t/**\n\t * The schema from the file, with references resolved\n\t */\n\tgetResolvedSchema():WinJS.TPromise<ResolvedSchema>;\n}\n\n\ninterface InlineReferencePointer {\n\tparent: any;\n\tkey: any;\n\tvalue: any;\n}\n\nclass FilePatternAssociation {\n\n\tprivate schemas: string[];\n\tprivate combinedSchemaId: string;\n\tprivate patternRegExp: RegExp;\n\tprivate combinedSchema: ISchemaHandle;\n\n\tconstructor(pattern: string) {\n\t\tthis.combinedSchemaId = 'local://combinedSchema/' + encodeURIComponent(pattern);\n\t\ttry {\n\t\t\tthis.patternRegExp = new RegExp(Strings.convertSimple2RegExpPattern(pattern) + '$');\n\t\t} catch (e) {\n\t\t\t// invalid pattern\n\t\t\tthis.patternRegExp = null;\n\t\t}\n\t\tthis.schemas = [];\n\t\tthis.combinedSchema = null;\n\t}\n\n\tpublic addSchema(id: string) {\n\t\tthis.schemas.push(id);\n\t\tthis.combinedSchema = null;\n\t}\n\n\tpublic matchesPattern(fileName: string) : boolean {\n\t\treturn this.patternRegExp && this.patternRegExp.test(fileName);\n\t}\n\n\tpublic getCombinedSchema(service: JSONSchemaService) : ISchemaHandle {\n\t\tif (!this.combinedSchema) {\n\t\t\tthis.combinedSchema = service.createCombinedSchema(this.combinedSchemaId, this.schemas);\n\t\t}\n\t\treturn this.combinedSchema;\n\t}\n}\n\nclass SchemaHandle implements ISchemaHandle {\n\n\tpublic url: string;\n\n\tprivate resolvedSchema: WinJS.TPromise<ResolvedSchema>;\n\tprivate unresolvedSchema: WinJS.TPromise<UnresolvedSchema>;\n\tprivate service: JSONSchemaService;\n\n\tconstructor(service: JSONSchemaService, url:string, unresolvedSchemaContent?: IJSONSchema) {\n\t\tthis.service = service;\n\t\tthis.url = url;\n\t\tif (unresolvedSchemaContent) {\n\t\t\tthis.unresolvedSchema = WinJS.TPromise.as(new UnresolvedSchema(unresolvedSchemaContent));\n\t\t}\n\t}\n\n\tpublic getUnresolvedSchema():WinJS.TPromise<UnresolvedSchema> {\n\t\tif (!this.unresolvedSchema) {\n\t\t\tthis.unresolvedSchema = this.service.loadSchema(this.url);\n\t\t}\n\t\treturn this.unresolvedSchema;\n\t}\n\n\tpublic getResolvedSchema():WinJS.TPromise<ResolvedSchema> {\n\t\tif (!this.resolvedSchema) {\n\t\t\tthis.resolvedSchema = this.getUnresolvedSchema().then(unresolved => {\n\t\t\t\treturn this.service.resolveSchemaContent(unresolved);\n\t\t\t});\n\t\t}\n\t\treturn this.resolvedSchema;\n\t}\n\n\tpublic clearSchema() : void {\n\t\tthis.resolvedSchema = null;\n\t\tthis.unresolvedSchema = null;\n\t}\n}\n\nexport class UnresolvedSchema {\n\tpublic schema: IJSONSchema;\n\tpublic errors: string[];\n\n\tconstructor(schema: IJSONSchema, errors: string[] = []) {\n\t\tthis.schema = schema;\n\t\tthis.errors = errors;\n\t}\n}\n\nexport class ResolvedSchema {\n\tpublic schema: IJSONSchema;\n\tpublic errors: string[];\n\n\tconstructor(schema: IJSONSchema, errors: string[] = []) {\n\t\tthis.schema = schema;\n\t\tthis.errors = errors;\n\t}\n\n\tpublic getSection(path: string[]): IJSONSchema {\n\t\treturn this.getSectionRecursive(path, this.schema);\n\t}\n\n\tprivate getSectionRecursive(path: string[], schema: IJSONSchema): IJSONSchema {\n\t\tif (!schema || path.length === 0) {\n\t\t\treturn schema;\n\t\t}\n\t\tvar next = path.shift();\n\n\t\tif (schema.properties && schema.properties[next]) {\n\t\t\treturn this.getSectionRecursive(path, schema.properties[next]);\n\t\t} else if (Types.isObject(schema.patternProperties)) {\n\t\t\tObject.keys(schema.patternProperties).forEach((pattern) => {\n\t\t\t\tvar regex = new RegExp(pattern);\n\t\t\t\tif (regex.test(next)) {\n\t\t\t\t\treturn this.getSectionRecursive(path, schema.patternProperties[pattern]);\n\t\t\t\t}\n\t\t\t});\n\t\t} else if (Types.isObject(schema.additionalProperties)) {\n\t\t\treturn this.getSectionRecursive(path, schema.additionalProperties);\n\t\t} else if (next.match('[0-9]+')) {\n\t\t\tif (Types.isObject(schema.items)) {\n\t\t\t\treturn this.getSectionRecursive(path, schema.items);\n\t\t\t} else if (Array.isArray(schema.items)) {\n\t\t\t\ttry {\n\t\t\t\t\tvar index = parseInt(next, 10);\n\t\t\t\t\tif (schema.items[index]) {\n\t\t\t\t\t\treturn this.getSectionRecursive(path, schema.items[index]);\n\t\t\t\t\t}\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tcatch (e) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n}\n\nexport class JSONSchemaService implements IJSONSchemaService {\n\n\tprivate contributionSchemas:{ [id:string]:SchemaHandle };\n\tprivate contributionAssociations:{ [id:string]:string[] };\n\n\tprivate schemasById: { [id:string]:SchemaHandle };\n\tprivate filePatternAssociations: FilePatternAssociation[];\n\tprivate filePatternAssociationById: { [id:string]: FilePatternAssociation };\n\n\tprivate requestService: IRequestService;\n\tprivate contextService : IWorkspaceContextService;\n\tprivate callOnDispose:IDisposable[];\n\n\tconstructor(@IRequestService requestService: IRequestService,\n\t\t@IWorkspaceContextService contextService?: IWorkspaceContextService,\n\t\t@IResourceService resourceService?: IResourceService) {\n\t\tthis.requestService = requestService;\n\t\tthis.contextService = contextService;\n\t\tthis.callOnDispose = [];\n\n\t\tif (resourceService) {\n\t\t\tthis.callOnDispose.push(resourceService.addListener2_(ResourceEvents.CHANGED, (e: IResourceChangedEvent) => this.onResourceChange(e)));\n\t\t}\n\n\t\tthis.contributionSchemas = {};\n\t\tthis.contributionAssociations = {};\n\t\tthis.schemasById = {};\n\t\tthis.filePatternAssociations = [];\n\t\tthis.filePatternAssociationById = {};\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.callOnDispose = dispose(this.callOnDispose);\n\t}\n\n\tprivate onResourceChange(e: IResourceChangedEvent): void {\n\t\tvar url = e.url.toString();\n\t\tvar schemaFile = this.schemasById[url];\n\t\tif (schemaFile) {\n\t\t\tschemaFile.clearSchema();\n\t\t}\n\t}\n\n\tprivate normalizeId(id: string) {\n\t\tif (id.length > 0 && id.charAt(id.length - 1) === '#') {\n\t\t\treturn id.substring(0, id.length - 1);\n\t\t}\n\t\treturn id;\n\t}\n\n\tpublic setSchemaContributions(schemaContributions: ISchemaContributions): void {\n\t\tif (schemaContributions.schemas) {\n\t\t\tvar schemas = schemaContributions.schemas;\n\t\t\tfor (let id in schemas) {\n\t\t\t\tid = this.normalizeId(id);\n\t\t\t\tthis.contributionSchemas[id] = this.addSchemaHandle(id, schemas[id]);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate addSchemaHandle(id:string, unresolvedSchemaContent?: IJSONSchema) : SchemaHandle {\n\t\tvar schemaHandle = new SchemaHandle(this, id, unresolvedSchemaContent);\n\t\tthis.schemasById[id] = schemaHandle;\n\t\treturn schemaHandle;\n\t}\n\n\tprivate getOrAddSchemaHandle(id:string, unresolvedSchemaContent?: IJSONSchema) : ISchemaHandle {\n\t\treturn this.schemasById[id] || this.addSchemaHandle(id, unresolvedSchemaContent);\n\t}\n\n\tprivate getOrAddFilePatternAssociation(pattern: string) {\n\t\tvar fpa = this.filePatternAssociationById[pattern];\n\t\tif (!fpa) {\n\t\t\tfpa = new FilePatternAssociation(pattern);\n\t\t\tthis.filePatternAssociationById[pattern] = fpa;\n\t\t\tthis.filePatternAssociations.push(fpa);\n\t\t}\n\t\treturn fpa;\n\t}\n\n\tpublic registerExternalSchema(uri:string, filePatterns: string[] = null, unresolvedSchemaContent?: IJSONSchema) : ISchemaHandle {\n\t\tvar id = this.normalizeId(uri);\n\n\t\tif (filePatterns) {\n\t\t\tfilePatterns.forEach(pattern => {\n\t\t\t\tthis.getOrAddFilePatternAssociation(pattern).addSchema(uri);\n\t\t\t});\n\t\t}\n\t\treturn unresolvedSchemaContent ? this.addSchemaHandle(id, unresolvedSchemaContent) : this.getOrAddSchemaHandle(id);\n\t}\n\n\tpublic clearExternalSchemas():void {\n\t\tthis.schemasById = {};\n\t\tthis.filePatternAssociations = [];\n\t\tthis.filePatternAssociationById = {};\n\n\t\tfor (var id in this.contributionSchemas) {\n\t\t\tthis.schemasById[id] = this.contributionSchemas[id];\n\t\t}\n\t\tfor (var pattern in this.contributionAssociations) {\n\t\t\tvar fpa = this.getOrAddFilePatternAssociation(pattern);\n\n\t\t\tthis.contributionAssociations[pattern].forEach(schemaId => {\n\t\t\t\tvar id = this.normalizeId(schemaId);\n\t\t\t\tfpa.addSchema(id);\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic getResolvedSchema(schemaId:string): WinJS.TPromise<ResolvedSchema> {\n\t\tvar id = this.normalizeId(schemaId);\n\t\tvar schemaHandle = this.schemasById[id];\n\t\tif (schemaHandle) {\n\t\t\treturn schemaHandle.getResolvedSchema();\n\t\t}\n\t\treturn WinJS.TPromise.as(null);\n\t}\n\n\tpublic loadSchema(url:string) : WinJS.TPromise<UnresolvedSchema> {\n\t\treturn this.requestService.makeRequest({ url: url }).then(\n\t\t\trequest => {\n\t\t\t\tvar content = request.responseText;\n\t\t\t\tif (!content) {\n\t\t\t\t\tvar errorMessage = nls.localize('json.schema.nocontent', 'Unable to load schema from \\'{0}\\': No content.', toDisplayString(url));\n\t\t\t\t\treturn new UnresolvedSchema(<IJSONSchema> {}, [ errorMessage ]);\n\t\t\t\t}\n\n\t\t\t\tvar schemaContent: IJSONSchema = {};\n\t\t\t\tvar jsonErrors: Json.ParseError[] = [];\n\t\t\t\tschemaContent = Json.parse(content, jsonErrors);\n\t\t\t\tvar errors = jsonErrors.length ? [ nls.localize('json.schema.invalidFormat', 'Unable to parse content from \\'{0}\\': {1}.', toDisplayString(url), Json.getParseErrorMessage(jsonErrors[0].error))] : [];\n\t\t\t\treturn new UnresolvedSchema(schemaContent, errors);\n\t\t\t},\n\t\t\t(error : http.IXHRResponse) => {\n\t\t\t\tvar errorMessage = nls.localize('json.schema.unabletoload', 'Unable to load schema from \\'{0}\\': {1}', toDisplayString(url), error.responseText || http.getErrorStatusDescription(error.status) || error.toString());\n\t\t\t\treturn new UnresolvedSchema(<IJSONSchema> {}, [ errorMessage ]);\n\t\t\t}\n\t\t);\n\t}\n\n\tpublic resolveSchemaContent(schemaToResolve: UnresolvedSchema): WinJS.TPromise<ResolvedSchema> {\n\n\t\tvar resolveErrors : string[] = schemaToResolve.errors.slice(0);\n\t\tvar schema = schemaToResolve.schema;\n\n\t\tvar findSection = (schema: IJSONSchema, path: string): any => {\n\t\t\tif (!path) {\n\t\t\t\treturn schema;\n\t\t\t}\n\t\t\tvar current: any = schema;\n\t\t\tpath.substr(1).split('/').some((part) => {\n\t\t\t\tcurrent = current[part];\n\t\t\t\treturn !current;\n\t\t\t});\n\t\t\treturn current;\n\t\t};\n\n\t\tvar resolveLink = (node: any, linkedSchema: IJSONSchema, linkPath: string): void => {\n\t\t\tvar section = findSection(linkedSchema, linkPath);\n\t\t\tif (typeof section === 'object') {\n\t\t\t\tObjects.mixin(node, section, false);\n\t\t\t} else {\n\t\t\t\tresolveErrors.push(nls.localize('json.schema.invalidref', '$ref \\'{0}\\' in {1} can not be resolved.', linkPath, linkedSchema.id));\n\t\t\t}\n\t\t\tdelete node.$ref;\n\t\t};\n\n\t\tvar resolveExternalLink = (node: any, uri: string, linkPath: string): WinJS.Promise => {\n\t\t\treturn this.getOrAddSchemaHandle(uri).getUnresolvedSchema().then(unresolvedSchema => {\n\t\t\t\tif (unresolvedSchema.errors.length) {\n\t\t\t\t\tvar loc = linkPath ? uri + '#' + linkPath : uri;\n\t\t\t\t\tresolveErrors.push(nls.localize('json.schema.problemloadingref', 'Problems loading reference \\'{0}\\': {1}', loc, unresolvedSchema.errors[0]));\n\t\t\t\t}\n\t\t\t\tresolveLink(node, unresolvedSchema.schema, linkPath);\n\t\t\t\treturn resolveRefs(node, unresolvedSchema.schema);\n\t\t\t});\n\t\t};\n\n\t\tlet resolveRefs = (node: IJSONSchema, parentSchema: IJSONSchema): WinJS.Promise => {\n\t\t\tlet toWalk : IJSONSchema[] = [node];\n\t\t\tlet seen: IJSONSchema[] = [];\n\n\t\t\tvar openPromises: WinJS.Promise[] = [];\n\n\t\t\tlet collectEntries = (...entries: IJSONSchema[]) => {\n\t\t\t\tfor (let entry of entries) {\n\t\t\t\t\tif (typeof entry === 'object') {\n\t\t\t\t\t\ttoWalk.push(entry);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t\tlet collectMapEntries = (...maps: IJSONSchemaMap[]) => {\n\t\t\t\tfor (let map of maps) {\n\t\t\t\t\tif (typeof map === 'object') {\n\t\t\t\t\t\tfor (let key in map) {\n\t\t\t\t\t\t\tlet entry = map[key];\n\t\t\t\t\t\t\ttoWalk.push(entry);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t\tlet collectArrayEntries = (...arrays: IJSONSchema[][]) => {\n\t\t\t\tfor (let array of arrays) {\n\t\t\t\t\tif (Array.isArray(array)) {\n\t\t\t\t\t\ttoWalk.push.apply(toWalk, array);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t\twhile (toWalk.length) {\n\t\t\t\tlet next = toWalk.pop();\n\t\t\t\tif (seen.indexOf(next) >= 0) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tseen.push(next);\n\t\t\t\tif (next.$ref) {\n\t\t\t\t\tlet segments = next.$ref.split('#', 2);\n\t\t\t\t\tif (segments[0].length > 0) {\n\t\t\t\t\t\topenPromises.push(resolveExternalLink(next, segments[0], segments[1]));\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresolveLink(next, parentSchema, segments[1]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcollectEntries(next.items, next.additionalProperties, next.not);\n\t\t\t\tcollectMapEntries(next.definitions, next.properties, next.patternProperties, <IJSONSchemaMap> next.dependencies);\n\t\t\t\tcollectArrayEntries(next.anyOf, next.allOf, next.oneOf, <IJSONSchema[]> next.items);\n\t\t\t}\n\n\t\t\treturn WinJS.Promise.join(openPromises);\n\t\t};\n\n\t\treturn resolveRefs(schema, schema).then(_ => new ResolvedSchema(schema, resolveErrors));\n\t}\n\n\tpublic getSchemaForResource(resource: string, document: Parser.JSONDocument): WinJS.TPromise<ResolvedSchema> {\n\n\t\t// first use $schema if present\n\t\tif (document && document.root && document.root.type === 'object') {\n\t\t\tvar schemaProperties = (<Parser.ObjectASTNode> document.root).properties.filter((p) => (p.key.value === '$schema') && !!p.value);\n\t\t\tif (schemaProperties.length > 0) {\n\t\t\t\tvar schemeId = <string> schemaProperties[0].value.getValue();\n\t\t\t\tif (!Strings.startsWith(schemeId, 'http://') && !Strings.startsWith(schemeId, 'https://') && !Strings.startsWith(schemeId, 'file://')) {\n\t\t\t\t\tvar resourceURL = this.contextService.toResource(schemeId);\n\t\t\t\t\tif (resourceURL) {\n\t\t\t\t\t\tschemeId = resourceURL.toString();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (schemeId) {\n\t\t\t\t\tvar id = this.normalizeId(schemeId);\n\t\t\t\t\treturn this.getOrAddSchemaHandle(id).getResolvedSchema();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// then check for matching file names, last to first\n\t\tfor (var i= this.filePatternAssociations.length - 1; i >= 0 ; i--) {\n\t\t\tvar entry = this.filePatternAssociations[i];\n\t\t\tif (entry.matchesPattern(resource)) {\n\t\t\t\treturn entry.getCombinedSchema(this).getResolvedSchema();\n\t\t\t}\n\t\t}\n\t\treturn WinJS.TPromise.as(null);\n\t}\n\n\tpublic createCombinedSchema(combinedSchemaId: string, schemaIds: string[]) : ISchemaHandle {\n\t\tif (schemaIds.length === 1) {\n\t\t\treturn this.getOrAddSchemaHandle(schemaIds[0]);\n\t\t} else {\n\t\t\tvar combinedSchema: IJSONSchema = {\n\t\t\t\tallOf: schemaIds.map(schemaId => ({ $ref: schemaId }))\n\t\t\t};\n\t\t\treturn this.addSchemaHandle(combinedSchemaId, combinedSchema);\n\t\t}\n\t}\n}\n\nfunction toDisplayString(url:string) {\n\ttry {\n\t\tvar uri = URI.parse(url);\n\t\tif (uri.scheme === 'file') {\n\t\t\treturn uri.fsPath;\n\t\t}\n\t} catch (e) {\n\t\t// ignore\n\t}\n\treturn url;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport URI from 'vs/base/common/uri';\nimport Severity from 'vs/base/common/severity';\nimport EditorCommon = require('vs/editor/common/editorCommon');\nimport Modes = require('vs/editor/common/modes');\nimport HtmlContent = require('vs/base/common/htmlContent');\nimport Parser = require('./parser/jsonParser');\nimport JSONFormatter = require('vs/base/common/jsonFormatter');\nimport SchemaService = require('./jsonSchemaService');\nimport JSONSchema = require('vs/base/common/jsonSchema');\nimport JSONIntellisense = require('./jsonIntellisense');\nimport WinJS = require('vs/base/common/winjs.base');\nimport Strings = require('vs/base/common/strings');\nimport ProjectJSONContribution = require('./contributions/projectJSONContribution');\nimport PackageJSONContribution = require('./contributions/packageJSONContribution');\nimport BowerJSONContribution = require('./contributions/bowerJSONContribution');\nimport GlobPatternContribution = require('./contributions/globPatternContribution');\nimport errors = require('vs/base/common/errors');\nimport {IMarkerService, IMarkerData} from 'vs/platform/markers/common/markers';\nimport {IRequestService} from 'vs/platform/request/common/request';\nimport {IWorkspaceContextService} from 'vs/platform/workspace/common/workspace';\nimport {ISchemaContributions} from 'vs/platform/jsonschemas/common/jsonContributionRegistry';\nimport {IResourceService} from 'vs/editor/common/services/resourceService';\nimport {IInstantiationService} from 'vs/platform/instantiation/common/instantiation';\nimport {JSONLocation} from './parser/jsonLocation';\nimport {filterSuggestions} from 'vs/editor/common/modes/supports/suggestSupport';\nimport {ValidationHelper} from 'vs/editor/common/worker/validationHelper';\n\nexport interface IOptionsSchema {\n\t/**\n\t * HTTP schema URL or a relative path to schema file in workspace\n\t */\n\turl: string;\n\t/**\n\t * The patterns (e.g. *.pack.json) to map files to this schema\n\t */\n\tfileMatch: string[];\n\t/**\n\t * A unresolved schema definition. Optional, to avoid fetching from a URL.\n\t */\n\tschema?: JSONSchema.IJSONSchema;\n\n\t/* deprecated */\n\tschemaPath: string;\n\t/* deprecated */\n\tfilePattern: string;\n}\n\nexport interface IOptions {\n\tschemas: IOptionsSchema[];\n}\n\nexport interface ISuggestionsCollector {\n\tadd(suggestion: Modes.ISuggestion): void;\n\tsetAsIncomplete() : void;\n\terror(message:string): void;\n}\n\nexport interface IJSONWorkerContribution {\n\tgetInfoContribution(resource: URI, location: JSONLocation) : WinJS.TPromise<HtmlContent.IHTMLContentElement[]>;\n\tcollectPropertySuggestions(resource: URI, location: JSONLocation, currentWord: string, addValue: boolean, isLast:boolean, result: ISuggestionsCollector) : WinJS.Promise;\n\tcollectValueSuggestions(resource: URI, location: JSONLocation, propertyKey: string, result: ISuggestionsCollector): WinJS.Promise;\n\tcollectDefaultSuggestions(resource: URI, result: ISuggestionsCollector): WinJS.Promise;\n}\n\nexport class JSONWorker {\n\n\tprivate schemaService: SchemaService.IJSONSchemaService;\n\tprivate requestService: IRequestService;\n\tprivate contextService: IWorkspaceContextService;\n\tprivate jsonIntellisense : JSONIntellisense.JSONIntellisense;\n\tprivate contributions: IJSONWorkerContribution[];\n\tprivate _validationHelper: ValidationHelper;\n\tprivate resourceService:IResourceService;\n\tprivate markerService: IMarkerService;\n\tprivate _modeId: string;\n\n\tconstructor(\n\t\tmodeId: string,\n\t\t@IResourceService resourceService: IResourceService,\n\t\t@IMarkerService markerService: IMarkerService,\n\t\t@IRequestService requestService: IRequestService,\n\t\t@IWorkspaceContextService contextService: IWorkspaceContextService,\n\t\t@IInstantiationService instantiationService: IInstantiationService\n\t) {\n\n\t\tthis._modeId = modeId;\n\t\tthis.resourceService = resourceService;\n\t\tthis.markerService = markerService;\n\n\t\tthis._validationHelper = new ValidationHelper(\n\t\t\tthis.resourceService,\n\t\t\tthis._modeId,\n\t\t\t(toValidate) => this.doValidate(toValidate)\n\t\t);\n\n\t\tthis.requestService = requestService;\n\t\tthis.contextService = contextService;\n\t\tthis.schemaService = instantiationService.createInstance(SchemaService.JSONSchemaService);\n\n\t\tthis.contributions = [\n\t\t\tinstantiationService.createInstance(ProjectJSONContribution.ProjectJSONContribution),\n\t\t\tinstantiationService.createInstance(PackageJSONContribution.PackageJSONContribution),\n\t\t\tinstantiationService.createInstance(BowerJSONContribution.BowerJSONContribution),\n\t\t\tinstantiationService.createInstance(GlobPatternContribution.GlobPatternContribution)\n\t\t];\n\n\t\tthis.jsonIntellisense = new JSONIntellisense.JSONIntellisense(this.schemaService, this.requestService, this.contributions);\n\t}\n\n\tpublic navigateValueSet(resource:URI, range:EditorCommon.IRange, up:boolean):WinJS.TPromise<Modes.IInplaceReplaceSupportResult> {\n\t\tvar modelMirror = this.resourceService.get(resource);\n\t\tvar offset = modelMirror.getOffsetFromPosition({ lineNumber: range.startLineNumber, column: range.startColumn });\n\n\t\tvar parser = new Parser.JSONParser();\n\t\tvar config = new Parser.JSONDocumentConfig();\n\t\tconfig.ignoreDanglingComma = true;\n\t\tvar doc = parser.parse(modelMirror.getValue(), config);\n\t\tvar node = doc.getNodeFromOffsetEndInclusive(offset);\n\n\t\tif (node && (node.type === 'string' || node.type === 'number' || node.type === 'boolean' || node.type === 'null')) {\n\t\t\treturn this.schemaService.getSchemaForResource(resource.toString(), doc).then((schema) => {\n\t\t\t\tif (schema) {\n\t\t\t\t\tvar proposals : Modes.ISuggestion[] = [];\n\t\t\t\t\tvar proposed: any = {};\n\t\t\t\t\tvar collector = {\n\t\t\t\t\t\tadd: (suggestion: Modes.ISuggestion) => {\n\t\t\t\t\t\t\tif (!proposed[suggestion.label]) {\n\t\t\t\t\t\t\t\tproposed[suggestion.label] = true;\n\t\t\t\t\t\t\t\tproposals.push(suggestion);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tsetAsIncomplete: () => { /* ignore */ },\n\t\t\t\t\t\terror: (message: string) => {\n\t\t\t\t\t\t\terrors.onUnexpectedError(message);\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\t\t\t\t\tthis.jsonIntellisense.getValueSuggestions(resource, schema, doc, node.parent, node.start, collector);\n\n\t\t\t\t\tvar range = modelMirror.getRangeFromOffsetAndLength(node.start, node.end - node.start);\n\t\t\t\t\tvar text = modelMirror.getValueInRange(range);\n\t\t\t\t\tfor (var i = 0, len = proposals.length; i < len; i++) {\n\t\t\t\t\t\tif (Strings.equalsIgnoreCase(proposals[i].label, text)) {\n\t\t\t\t\t\t\tvar nextIdx = i;\n\t\t\t\t\t\t\tif (up) {\n\t\t\t\t\t\t\t\tnextIdx = (i + 1) % len;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tnextIdx =  i - 1;\n\t\t\t\t\t\t\t\tif (nextIdx < 0) {\n\t\t\t\t\t\t\t\t\tnextIdx = len - 1;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tvalue: proposals[nextIdx].label,\n\t\t\t\t\t\t\t\trange: range\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t * @return true if you want to revalidate your models\n\t */\n\t_doConfigure(options:IOptions): WinJS.TPromise<void> {\n\t\tif (options && options.schemas) {\n\t\t\tthis.schemaService.clearExternalSchemas();\n\t\t\toptions.schemas.forEach((schema) => {\n\t\t\t\tif (schema.url && (schema.fileMatch || schema.schema)) {\n\t\t\t\t\tvar url = schema.url;\n\t\t\t\t\tif (!Strings.startsWith(url, 'http://') && !Strings.startsWith(url, 'https://') && !Strings.startsWith(url, 'file://')) {\n\t\t\t\t\t\tvar resourceURL = this.contextService.toResource(url);\n\t\t\t\t\t\tif (resourceURL) {\n\t\t\t\t\t\t\turl = resourceURL.toString();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (url) {\n\t\t\t\t\t\tthis.schemaService.registerExternalSchema(url, schema.fileMatch, schema.schema);\n\t\t\t\t\t}\n\t\t\t\t} else if (schema.filePattern && schema.schemaPath) {\n\t\t\t\t\tvar url = this.contextService.toResource(schema.schemaPath).toString();\n\t\t\t\t\tvar patterns = schema.filePattern ? [ schema.filePattern ] : [];\n\t\t\t\t\tthis.schemaService.registerExternalSchema(url, patterns);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tthis._validationHelper.triggerDueToConfigurationChange();\n\n\t\treturn WinJS.TPromise.as(void 0);\n\t}\n\n\tpublic setSchemaContributions(contributions:ISchemaContributions): WinJS.TPromise<boolean> {\n\t\tthis.schemaService.setSchemaContributions(contributions);\n\t\treturn WinJS.TPromise.as(true);\n\t}\n\n\tpublic enableValidator(): WinJS.TPromise<void> {\n\t\tthis._validationHelper.enable();\n\t\treturn WinJS.TPromise.as(null);\n\t}\n\n\tpublic doValidate(resources: URI[]):void {\n\t\tfor (var i = 0; i < resources.length; i++) {\n\t\t\tthis.doValidate1(resources[i]);\n\t\t}\n\t}\n\n\tprivate doValidate1(resource: URI):void {\n\t\tvar modelMirror = this.resourceService.get(resource);\n\t\tvar parser = new Parser.JSONParser();\n\t\tvar content = modelMirror.getValue();\n\n\t\tif (content.length === 0) {\n\t\t\t// ignore empty content, no marker can be set anyway\n\t\t\treturn;\n\t\t}\n\t\tvar result = parser.parse(content);\n\t\tthis.schemaService.getSchemaForResource(resource.toString(), result).then((schema) => {\n\t\t\tif (schema) {\n\t\t\t\tif (schema.errors.length && result.root) {\n\t\t\t\t\tvar property = result.root.type === 'object' ? (<Parser.ObjectASTNode> result.root).getFirstProperty('$schema') : null;\n\t\t\t\t\tif (property) {\n\t\t\t\t\t\tvar node = property.value || property;\n\t\t\t\t\t\tresult.warnings.push({ location: { start: node.start, end: node.end }, message: schema.errors[0] });\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.warnings.push({ location: { start: result.root.start, end: result.root.start + 1 }, message: schema.errors[0] });\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tresult.validate(schema.schema);\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar added : { [signature:string]: boolean} = {};\n\t\t\tvar markerData: IMarkerData[] = [];\n\n\t\t\tresult.errors.concat(result.warnings).forEach((error, idx) => {\n\t\t\t\t// remove duplicated messages\n\t\t\t\tvar signature = error.location.start + ' ' + error.location.end + ' ' + error.message;\n\t\t\t\tif (!added[signature]) {\n\t\t\t\t\tadded[signature] = true;\n\t\t\t\t\tvar startPosition = modelMirror.getPositionFromOffset(error.location.start);\n\t\t\t\t\tvar endPosition = modelMirror.getPositionFromOffset(error.location.end);\n\t\t\t\t\tmarkerData.push({\n\t\t\t\t\t\tmessage: error.message,\n\t\t\t\t\t\tseverity: idx >= result.errors.length ? Severity.Warning : Severity.Error,\n\t\t\t\t\t\tstartLineNumber: startPosition.lineNumber,\n\t\t\t\t\t\tstartColumn: startPosition.column,\n\t\t\t\t\t\tendLineNumber: endPosition.lineNumber,\n\t\t\t\t\t\tendColumn: endPosition.column\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis.markerService.changeOne(this._modeId, resource, markerData);\n\t\t});\n\n\t}\n\n\tpublic provideCompletionItems(resource:URI, position:EditorCommon.IPosition):WinJS.TPromise<Modes.ISuggestResult[]> {\n\t\treturn this.doSuggest(resource, position).then(value => filterSuggestions(value));\n\t}\n\n\tprivate doSuggest(resource:URI, position:EditorCommon.IPosition):WinJS.TPromise<Modes.ISuggestResult> {\n\t\tvar modelMirror = this.resourceService.get(resource);\n\n\t\treturn this.jsonIntellisense.doSuggest(resource, modelMirror, position);\n\t}\n\n\tpublic provideHover(resource:URI, position:EditorCommon.IPosition): WinJS.TPromise<Modes.Hover> {\n\n\t\tvar modelMirror = this.resourceService.get(resource);\n\n\t\tvar parser = new Parser.JSONParser();\n\t\tvar doc = parser.parse(modelMirror.getValue());\n\n\t\tvar offset = modelMirror.getOffsetFromPosition(position);\n\t\tvar node = doc.getNodeFromOffset(offset);\n\t\tvar originalNode = node;\n\n\t\t// use the property description when hovering over an object key\n\t\tif (node && node.type === 'string') {\n\t\t\tvar stringNode = <Parser.StringASTNode>node;\n\t\t\tif (stringNode.isKey) {\n\t\t\t\tvar propertyNode = <Parser.PropertyASTNode>node.parent;\n\t\t\t\tnode = propertyNode.value;\n\n\t\t\t}\n\t\t}\n\n\t\tif (!node) {\n\t\t\treturn WinJS.TPromise.as(null);\n\t\t}\n\n\t\treturn this.schemaService.getSchemaForResource(resource.toString(), doc).then((schema) => {\n\t\t\tif (schema) {\n\t\t\t\tvar matchingSchemas : Parser.IApplicableSchema[] = [];\n\t\t\t\tdoc.validate(schema.schema, matchingSchemas, node.start);\n\n\t\t\t\tvar description: string = null;\n\t\t\t\tvar contributonId: string = null;\n\t\t\t\tmatchingSchemas.every((s) => {\n\t\t\t\t\tif (s.node === node && !s.inverted && s.schema) {\n\t\t\t\t\t\tdescription = description || s.schema.description;\n\t\t\t\t\t\tcontributonId = contributonId || s.schema.id;\n\t\t\t\t\t}\n\t\t\t\t\treturn true;\n\t\t\t\t});\n\n\t\t\t\tvar location = node.getNodeLocation();\n\t\t\t\tfor (var i= this.contributions.length -1; i >= 0; i--) {\n\t\t\t\t\tvar contribution = this.contributions[i];\n\t\t\t\t\tvar promise = contribution.getInfoContribution(resource, location);\n\t\t\t\t\tif (promise) {\n\t\t\t\t\t\treturn promise.then((htmlContent) => { return this.createInfoResult(htmlContent, originalNode, modelMirror); } );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (description) {\n\t\t\t\t\tvar htmlContent = [ {className: 'documentation', text: description } ];\n\t\t\t\t\treturn this.createInfoResult(htmlContent, originalNode, modelMirror);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t});\n\t}\n\n\tprivate createInfoResult(htmlContent : HtmlContent.IHTMLContentElement[], node: Parser.ASTNode, modelMirror: EditorCommon.IMirrorModel) : Modes.Hover {\n\t\tvar range = modelMirror.getRangeFromOffsetAndLength(node.start, node.end - node.start);\n\n\t\tvar result:Modes.Hover = {\n\t\t\thtmlContent: htmlContent,\n\t\t\trange: range\n\t\t};\n\t\treturn result;\n\t}\n\n\n\tpublic provideDocumentSymbols(resource:URI):WinJS.TPromise<Modes.SymbolInformation[]> {\n\t\tvar modelMirror = this.resourceService.get(resource);\n\n\t\tvar parser = new Parser.JSONParser();\n\t\tvar doc = parser.parse(modelMirror.getValue());\n\t\tvar root = doc.root;\n\t\tif (!root) {\n\t\t\treturn WinJS.TPromise.as(null);\n\t\t}\n\n\t\t// special handling for key bindings\n\t\tvar resourceString = resource.toString();\n\t\tif ((resourceString === 'vscode://defaultsettings/keybindings.json') || Strings.endsWith(resourceString.toLowerCase(), '/user/keybindings.json')) {\n\t\t\tif (root.type === 'array') {\n\t\t\t\tvar result : Modes.SymbolInformation[] = [];\n\t\t\t\t(<Parser.ArrayASTNode> root).items.forEach((item) => {\n\t\t\t\t\tif (item.type === 'object') {\n\t\t\t\t\t\tvar property = (<Parser.ObjectASTNode> item).getFirstProperty('key');\n\t\t\t\t\t\tif (property && property.value) {\n\t\t\t\t\t\t\tvar range = modelMirror.getRangeFromOffsetAndLength(item.start, item.end - item.start);\n\t\t\t\t\t\t\tresult.push({\n\t\t\t\t\t\t\t\tname: property.value.getValue(),\n\t\t\t\t\t\t\t\tkind: Modes.SymbolKind.String,\n\t\t\t\t\t\t\t\tlocation: {\n\t\t\t\t\t\t\t\t\turi: resource,\n\t\t\t\t\t\t\t\t\trange: range\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\treturn WinJS.TPromise.as(result);\n\t\t\t}\n\t\t}\n\n\t\tfunction collectOutlineEntries(result: Modes.SymbolInformation[], node: Parser.ASTNode, containerName: string): Modes.SymbolInformation[] {\n\t\t\tif (node.type === 'array') {\n\t\t\t\t(<Parser.ArrayASTNode>node).items.forEach((node:Parser.ASTNode) => {\n\t\t\t\t\tcollectOutlineEntries(result, node, containerName);\n\t\t\t\t});\n\t\t\t} else if (node.type === 'object') {\n\t\t\t\tvar objectNode = <Parser.ObjectASTNode>node;\n\n\t\t\t\tobjectNode.properties.forEach((property:Parser.PropertyASTNode) => {\n\t\t\t\t\tvar range = modelMirror.getRangeFromOffsetAndLength(property.start, property.end - property.start);\n\t\t\t\t\tvar valueNode = property.value;\n\t\t\t\t\tif (valueNode) {\n\t\t\t\t\t\tlet childContainerName = containerName ? containerName + '.' + property.key.name : property.key.name;\n\t\t\t\t\t\tresult.push({\n\t\t\t\t\t\t\tname: property.key.getValue(),\n\t\t\t\t\t\t\tkind: getSymbolKind(valueNode.type),\n\t\t\t\t\t\t\tlocation: {\n\t\t\t\t\t\t\t\turi: resource,\n\t\t\t\t\t\t\t\trange: range,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tcontainerName: containerName\n\t\t\t\t\t\t});\n\t\t\t\t\t\tcollectOutlineEntries(result, valueNode, childContainerName);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t\tvar result = collectOutlineEntries([], root, void 0);\n\t\treturn WinJS.TPromise.as(result);\n\t}\n\n\tpublic format(resource: URI, range: EditorCommon.IRange, options: Modes.IFormattingOptions): WinJS.TPromise<EditorCommon.ISingleEditOperation[]> {\n\t\tlet model = this.resourceService.get(resource);\n\t\tlet formatRange = range ? model.getOffsetAndLengthFromRange(range) : void 0;\n\t\tlet edits = JSONFormatter.format(model.getValue(), formatRange, { insertSpaces: options.insertSpaces, tabSize: options.tabSize, eol: model.getEOL() });\n\t\tlet operations = edits.map(e => ({ range: model.getRangeFromOffsetAndLength(e.offset, e.length), text: e.content }));\n\t\treturn WinJS.TPromise.as(operations);\n\t}\n}\n\nfunction getSymbolKind(nodeType: string): Modes.SymbolKind {\n\tswitch (nodeType) {\n\t\tcase 'object':\n\t\t\treturn Modes.SymbolKind.Module;\n\t\tcase 'string':\n\t\t\treturn Modes.SymbolKind.String;\n\t\tcase 'number':\n\t\t\treturn Modes.SymbolKind.Number;\n\t\tcase 'array':\n\t\t\treturn Modes.SymbolKind.Array;\n\t\tcase 'boolean':\n\t\t\treturn Modes.SymbolKind.Boolean;\n\t\tdefault: // 'null'\n\t\t\treturn Modes.SymbolKind.Variable;\n\t}\n}\n"]}