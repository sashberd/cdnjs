{"version":3,"sources":["vs/languages/razor/common/razorWorker.js","vs/languages/razor/common/file:/C:/Alex/src/vscode/src/vs/languages/razor/common/razorWorker.ts"],"names":["__extends","this","d","b","__","constructor","p","hasOwnProperty","prototype","Object","create","define","require","exports","htmlWorker","getRazorTagProvider","customTags","a","div","form","input","label","select","span","collectTags","collector","collectAttributes","tag","attributes","forEach","collectValues","attribute","RAZORWorker","_super","apply","arguments","addCustomTagProviders","providers","push","HTMLWorker"],"mappings":";;;;;;AAWA,GAAIA,WAAaC,MAAQA,KAAKD,WAAc,SAAUE,EAAGC,GAErD,QAASC,KAAOH,KAAKI,YAAcH,EADnC,IAAK,GAAII,KAAKH,GAAOA,EAAEI,eAAeD,KAAIJ,EAAEI,GAAKH,EAAEG,GAEnDJ,GAAEM,UAAkB,OAANL,EAAaM,OAAOC,OAAOP,IAAMC,EAAGI,UAAYL,EAAEK,UAAW,GAAIJ,IAEnFO,QAAO,yCAA0C,UAAW,UAAW,uCAAwC,SAAUC,EAASC,EAASC,GACvI,YCTJ,SAAAC,KACC,GAAIC,IACHC,GAAI,aAAc,iBAAkB,eAAgB,WAAY,eAAgB,aAChFC,KAAM,0BACNC,MAAO,aAAc,iBAAkB,oBACvCC,OAAQ,UAAW,cACnBC,OAAQ,WACRC,QAAS,UAAW,aACpBC,MAAO,sBAGR,QACCC,YAAa,SAACC,KAGdC,kBAAmB,SAACC,EAAaF,GAChC,GAAIE,EAAK,CACR,GAAIC,GAAaZ,EAAWW,EACxBC,IACHA,EAAWC,QAAQ,SAAAZ,GAAK,MAAAQ,GAAUR,EAAG,UAIxCa,cAAe,SAACH,EAAaI,EAAmBN,MAvBlCZ,EAAAE,oBAAmBA,CA6BnC,IAAAiB,GAAA,SAAAC,GAAA,QAAAD,KAAiCC,EAAAC,MAAAjC,KAAAkC,WAOjC,MAPiCnC,WAAAgC,EAAAC,GAEtBD,EAAAxB,UAAA4B,sBAAV,SAAgCC,GAE/BA,EAAUC,KAAKvB,MAGjBiB,GAPiClB,EAAWyB,WAA/B1B,GAAAmB,YAAWA","file":"vs/languages/razor/common/razorWorker.js","sourcesContent":["/*!-----------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.2.3(84e204b238a1eff25d4c6f611fdcd76a494005a7)\n * Released under the MIT license\n * https://github.com/Microsoft/vscode/blob/master/LICENSE.txt\n *-----------------------------------------------------------*/\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\ndefine(\"vs/languages/razor/common/razorWorker\", [\"require\", \"exports\", 'vs/languages/html/common/htmlWorker'], function (require, exports, htmlWorker) {\r\n    \"use strict\";\r\n    function getRazorTagProvider() {\r\n        var customTags = {\r\n            a: ['asp-action', 'asp-controller', 'asp-fragment', 'asp-host', 'asp-protocol', 'asp-route'],\r\n            div: ['asp-validation-summary'],\r\n            form: ['asp-action', 'asp-controller', 'asp-anti-forgery'],\r\n            input: ['asp-for', 'asp-format'],\r\n            label: ['asp-for'],\r\n            select: ['asp-for', 'asp-items'],\r\n            span: ['asp-validation-for']\r\n        };\r\n        return {\r\n            collectTags: function (collector) {\r\n                // no extra tags\r\n            },\r\n            collectAttributes: function (tag, collector) {\r\n                if (tag) {\r\n                    var attributes = customTags[tag];\r\n                    if (attributes) {\r\n                        attributes.forEach(function (a) { return collector(a, null); });\r\n                    }\r\n                }\r\n            },\r\n            collectValues: function (tag, attribute, collector) {\r\n                // no values\r\n            }\r\n        };\r\n    }\r\n    exports.getRazorTagProvider = getRazorTagProvider;\r\n    var RAZORWorker = (function (_super) {\r\n        __extends(RAZORWorker, _super);\r\n        function RAZORWorker() {\r\n            _super.apply(this, arguments);\r\n        }\r\n        RAZORWorker.prototype.addCustomTagProviders = function (providers) {\r\n            // don't call super and don't add the angular provider for now\r\n            providers.push(getRazorTagProvider());\r\n        };\r\n        return RAZORWorker;\r\n    }(htmlWorker.HTMLWorker));\r\n    exports.RAZORWorker = RAZORWorker;\r\n});\r\n\n\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport htmlWorker = require('vs/languages/html/common/htmlWorker');\nimport htmlTags = require('vs/languages/html/common/htmlTags');\n\nexport function getRazorTagProvider() : htmlTags.IHTMLTagProvider {\n\tvar customTags : { [tag:string]: string[]} = {\n\t\ta: ['asp-action', 'asp-controller', 'asp-fragment', 'asp-host', 'asp-protocol', 'asp-route'],\n\t\tdiv: ['asp-validation-summary'],\n\t\tform: ['asp-action', 'asp-controller', 'asp-anti-forgery'],\n\t\tinput: ['asp-for', 'asp-format'],\n\t\tlabel: ['asp-for'],\n\t\tselect: ['asp-for', 'asp-items'],\n\t\tspan: ['asp-validation-for']\n\t};\n\n\treturn {\n\t\tcollectTags: (collector: (tag: string) => void) => {\n\t\t\t// no extra tags\n\t\t},\n\t\tcollectAttributes: (tag: string, collector: (attribute: string, type: string) => void) => {\n\t\t\tif (tag) {\n\t\t\t\tvar attributes = customTags[tag];\n\t\t\t\tif (attributes) {\n\t\t\t\t\tattributes.forEach(a => collector(a, null));\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tcollectValues: (tag: string, attribute: string, collector: (value: string) => void) => {\n\t\t\t// no values\n\t\t}\n\t};\n}\n\nexport class RAZORWorker extends htmlWorker.HTMLWorker {\n\n\tprotected addCustomTagProviders(providers: htmlTags.IHTMLTagProvider[]): void {\n\t\t// don't call super and don't add the angular provider for now\n\t\tproviders.push(getRazorTagProvider());\n\t}\n\n}"]}