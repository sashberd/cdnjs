{"version":3,"sources":["vs/languages/html/common/html.js","vs/languages/html/common/file:/C:/Alex/src/vscode/src/vs/languages/html/common/htmlEmptyTagsShared.ts","vs/languages/html/common/file:/C:/Alex/src/vscode/src/vs/languages/html/common/htmlTokenTypes.ts","vs/languages/html/common/file:/C:/Alex/src/vscode/src/vs/languages/html/common/html.ts"],"names":["define","require","exports","arrays","isEmptyElement","e","binarySearch","EMPTY_ELEMENTS","s1","s2","localeCompare","strings","isTag","tokenType","startsWith","TAG_PREFIX","getTag","name","DELIM_END","DELIM_START","DELIM_ASSIGN","ATTRIB_NAME","ATTRIB_VALUE","COMMENT","DELIM_COMMENT","DOCTYPE","DELIM_DOCTYPE","__extends","this","d","b","__","constructor","p","hasOwnProperty","prototype","Object","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","winjs","modes","abstractMode_1","abstractState_1","threadService_1","modeService_1","instantiation_1","htmlTokenTypes","htmlEmptyTagsShared_1","richEditSupport_1","tokenizationSupport_1","thread_1","async_1","States","tagsEmbeddingContent","State","_super","mode","kind","lastTagName","lastAttributeName","embeddedContentType","attributeValueQuote","attributeValue","call","escapeTagName","s","replace","makeClone","getMode","equals","other","nextElementName","stream","advanceIfRegExp","toLowerCase","nextAttributeName","tokenize","WithinComment","advanceUntilString2","type","advanceIfString2","Content","dontMergeWithPrev","WithinDoctype","advanceIfCharCode2","charCodeAt","eos","peek","advanceIfStringCaseInsensitive2","OpeningEndTag","OpeningStartTag","tagName","WithinTag","skipWhitespace2","AttributeName","indexOf","WithinEmbeddedContent","next2","AttributeValue","ch","part","next","advanceUntilString","unquote","value","start","end","substring","AbstractState","HTMLMode","descriptor","instantiationService","modeService","threadService","id","_modeWorkerManager","_createModeWorkerManager","tokenizationSupport","TokenizationSupport","configSupport","richEditSupport","_createRichEditSupport","_registerSupports","asyncCtor","Promise","join","getOrCreateMode","_this","getId","Error","HoverProviderRegistry","register","provideHover","model","position","token","wireCancellationToken","_provideHover","uri","ReferenceProviderRegistry","provideReferences","context","_provideReferences","SuggestRegistry","triggerCharacters","shouldAutotriggerSuggest","provideCompletionItems","_provideCompletionItems","DocumentHighlightProviderRegistry","provideDocumentHighlights","_provideDocumentHighlights","DocumentRangeFormattingEditProviderRegistry","provideDocumentRangeFormattingEdits","range","options","_provideDocumentRangeFormattingEdits","LinkProviderRegistry","provideLinks","_provideLinks","ModeWorkerManager","_worker","runner","worker","RichEditSupport","wordPattern","createWordRegExp","comments","blockComment","brackets","__electricCharacterSupport","caseInsensitive","embeddedElectricCharacters","autoClosingPairs","open","close","surroundingPairs","onEnterRules","beforeText","RegExp","afterText","action","indentAction","IndentAction","IndentOutdent","Indent","getInitialState","enterNestedMode","state","getNestedMode","result","htmlState","missingModePromise","isRegisteredMode","mimeType","getLeavingNestedModeData","line","regexp","match","exec","nestedModeBuffer","index","bufferAfterNestedMode","stateAfterNestedMode","configure","isInMainThread","_configureWorkers","w","_doConfigure","resource","strict","findColorDeclarations","$_configureWorkers","AllWorkersAttr","$_provideLinks","OneWorkerAttr","$_provideDocumentRangeFormattingEdits","$_provideHover","$_provideReferences","$_provideDocumentHighlights","$_provideCompletionItems","$findColorDeclarations","IInstantiationService","IModeService","IThreadService","AbstractMode"],"mappings":"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","file":"vs/languages/html/common/html.js","sourcesContent":["/*!-----------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.2.3(84e204b238a1eff25d4c6f611fdcd76a494005a7)\n * Released under the MIT license\n * https://github.com/Microsoft/vscode/blob/master/LICENSE.txt\n *-----------------------------------------------------------*/\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\ndefine(\"vs/languages/html/common/htmlEmptyTagsShared\", [\"require\", \"exports\", 'vs/base/common/arrays'], function (require, exports, arrays) {\r\n    \"use strict\";\r\n    exports.EMPTY_ELEMENTS = ['area', 'base', 'br', 'col', 'embed', 'hr', 'img', 'input', 'keygen', 'link', 'menuitem', 'meta', 'param', 'source', 'track', 'wbr'];\r\n    function isEmptyElement(e) {\r\n        return arrays.binarySearch(exports.EMPTY_ELEMENTS, e, function (s1, s2) { return s1.localeCompare(s2); }) >= 0;\r\n    }\r\n    exports.isEmptyElement = isEmptyElement;\r\n});\r\n\ndefine(\"vs/languages/html/common/htmlTokenTypes\", [\"require\", \"exports\", 'vs/base/common/strings'], function (require, exports, strings) {\r\n    /*---------------------------------------------------------------------------------------------\r\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n     *--------------------------------------------------------------------------------------------*/\r\n    'use strict';\r\n    exports.DELIM_END = 'punctuation.definition.meta.tag.end.html';\r\n    exports.DELIM_START = 'punctuation.definition.meta.tag.begin.html';\r\n    exports.DELIM_ASSIGN = 'meta.tag.assign.html';\r\n    exports.ATTRIB_NAME = 'entity.other.attribute-name.html';\r\n    exports.ATTRIB_VALUE = 'string.html';\r\n    exports.COMMENT = 'comment.html.content';\r\n    exports.DELIM_COMMENT = 'comment.html';\r\n    exports.DOCTYPE = 'entity.other.attribute-name.html';\r\n    exports.DELIM_DOCTYPE = 'entity.name.tag.html';\r\n    var TAG_PREFIX = 'entity.name.tag.tag-';\r\n    function isTag(tokenType) {\r\n        return strings.startsWith(tokenType, TAG_PREFIX);\r\n    }\r\n    exports.isTag = isTag;\r\n    function getTag(name) {\r\n        return TAG_PREFIX + name;\r\n    }\r\n    exports.getTag = getTag;\r\n});\r\n\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\ndefine(\"vs/languages/html/common/html\", [\"require\", \"exports\", 'vs/base/common/winjs.base', 'vs/editor/common/modes', 'vs/editor/common/modes/abstractMode', 'vs/editor/common/modes/abstractState', 'vs/platform/thread/common/threadService', 'vs/editor/common/services/modeService', 'vs/platform/instantiation/common/instantiation', 'vs/languages/html/common/htmlTokenTypes', 'vs/languages/html/common/htmlEmptyTagsShared', 'vs/editor/common/modes/supports/richEditSupport', 'vs/editor/common/modes/supports/tokenizationSupport', 'vs/platform/thread/common/thread', 'vs/base/common/async'], function (require, exports, winjs, modes, abstractMode_1, abstractState_1, threadService_1, modeService_1, instantiation_1, htmlTokenTypes, htmlEmptyTagsShared_1, richEditSupport_1, tokenizationSupport_1, thread_1, async_1) {\r\n    /*---------------------------------------------------------------------------------------------\r\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n     *--------------------------------------------------------------------------------------------*/\r\n    'use strict';\r\n    exports.htmlTokenTypes = htmlTokenTypes;\r\n    exports.EMPTY_ELEMENTS = htmlEmptyTagsShared_1.EMPTY_ELEMENTS;\r\n     // export to be used by Razor. We are the main module, so Razor should get it from us.\r\n     // export to be used by Razor. We are the main module, so Razor should get it from us.\r\n    (function (States) {\r\n        States[States[\"Content\"] = 0] = \"Content\";\r\n        States[States[\"OpeningStartTag\"] = 1] = \"OpeningStartTag\";\r\n        States[States[\"OpeningEndTag\"] = 2] = \"OpeningEndTag\";\r\n        States[States[\"WithinDoctype\"] = 3] = \"WithinDoctype\";\r\n        States[States[\"WithinTag\"] = 4] = \"WithinTag\";\r\n        States[States[\"WithinComment\"] = 5] = \"WithinComment\";\r\n        States[States[\"WithinEmbeddedContent\"] = 6] = \"WithinEmbeddedContent\";\r\n        States[States[\"AttributeName\"] = 7] = \"AttributeName\";\r\n        States[States[\"AttributeValue\"] = 8] = \"AttributeValue\";\r\n    })(exports.States || (exports.States = {}));\r\n    var States = exports.States;\r\n    // list of elements that embed other content\r\n    var tagsEmbeddingContent = ['script', 'style'];\r\n    var State = (function (_super) {\r\n        __extends(State, _super);\r\n        function State(mode, kind, lastTagName, lastAttributeName, embeddedContentType, attributeValueQuote, attributeValue) {\r\n            _super.call(this, mode);\r\n            this.kind = kind;\r\n            this.lastTagName = lastTagName;\r\n            this.lastAttributeName = lastAttributeName;\r\n            this.embeddedContentType = embeddedContentType;\r\n            this.attributeValueQuote = attributeValueQuote;\r\n            this.attributeValue = attributeValue;\r\n        }\r\n        State.escapeTagName = function (s) {\r\n            return htmlTokenTypes.getTag(s.replace(/[:_.]/g, '-'));\r\n        };\r\n        State.prototype.makeClone = function () {\r\n            return new State(this.getMode(), this.kind, this.lastTagName, this.lastAttributeName, this.embeddedContentType, this.attributeValueQuote, this.attributeValue);\r\n        };\r\n        State.prototype.equals = function (other) {\r\n            if (other instanceof State) {\r\n                return (_super.prototype.equals.call(this, other) &&\r\n                    this.kind === other.kind &&\r\n                    this.lastTagName === other.lastTagName &&\r\n                    this.lastAttributeName === other.lastAttributeName &&\r\n                    this.embeddedContentType === other.embeddedContentType &&\r\n                    this.attributeValueQuote === other.attributeValueQuote &&\r\n                    this.attributeValue === other.attributeValue);\r\n            }\r\n            return false;\r\n        };\r\n        State.prototype.nextElementName = function (stream) {\r\n            return stream.advanceIfRegExp(/^[_:\\w][_:\\w-.\\d]*/).toLowerCase();\r\n        };\r\n        State.prototype.nextAttributeName = function (stream) {\r\n            return stream.advanceIfRegExp(/^[^\\s\"'>/=\\x00-\\x0F\\x7F\\x80-\\x9F]*/).toLowerCase();\r\n        };\r\n        State.prototype.tokenize = function (stream) {\r\n            switch (this.kind) {\r\n                case States.WithinComment:\r\n                    if (stream.advanceUntilString2('-->', false)) {\r\n                        return { type: htmlTokenTypes.COMMENT };\r\n                    }\r\n                    else if (stream.advanceIfString2('-->')) {\r\n                        this.kind = States.Content;\r\n                        return { type: htmlTokenTypes.DELIM_COMMENT, dontMergeWithPrev: true };\r\n                    }\r\n                    break;\r\n                case States.WithinDoctype:\r\n                    if (stream.advanceUntilString2('>', false)) {\r\n                        return { type: htmlTokenTypes.DOCTYPE };\r\n                    }\r\n                    else if (stream.advanceIfString2('>')) {\r\n                        this.kind = States.Content;\r\n                        return { type: htmlTokenTypes.DELIM_DOCTYPE, dontMergeWithPrev: true };\r\n                    }\r\n                    break;\r\n                case States.Content:\r\n                    if (stream.advanceIfCharCode2('<'.charCodeAt(0))) {\r\n                        if (!stream.eos() && stream.peek() === '!') {\r\n                            if (stream.advanceIfString2('!--')) {\r\n                                this.kind = States.WithinComment;\r\n                                return { type: htmlTokenTypes.DELIM_COMMENT, dontMergeWithPrev: true };\r\n                            }\r\n                            if (stream.advanceIfStringCaseInsensitive2('!DOCTYPE')) {\r\n                                this.kind = States.WithinDoctype;\r\n                                return { type: htmlTokenTypes.DELIM_DOCTYPE, dontMergeWithPrev: true };\r\n                            }\r\n                        }\r\n                        if (stream.advanceIfCharCode2('/'.charCodeAt(0))) {\r\n                            this.kind = States.OpeningEndTag;\r\n                            return { type: htmlTokenTypes.DELIM_END, dontMergeWithPrev: true };\r\n                        }\r\n                        this.kind = States.OpeningStartTag;\r\n                        return { type: htmlTokenTypes.DELIM_START, dontMergeWithPrev: true };\r\n                    }\r\n                    break;\r\n                case States.OpeningEndTag:\r\n                    var tagName = this.nextElementName(stream);\r\n                    if (tagName.length > 0) {\r\n                        return {\r\n                            type: State.escapeTagName(tagName),\r\n                        };\r\n                    }\r\n                    else if (stream.advanceIfString2('>')) {\r\n                        this.kind = States.Content;\r\n                        return { type: htmlTokenTypes.DELIM_END, dontMergeWithPrev: true };\r\n                    }\r\n                    else {\r\n                        stream.advanceUntilString2('>', false);\r\n                        return { type: '' };\r\n                    }\r\n                case States.OpeningStartTag:\r\n                    this.lastTagName = this.nextElementName(stream);\r\n                    if (this.lastTagName.length > 0) {\r\n                        this.lastAttributeName = null;\r\n                        if ('script' === this.lastTagName || 'style' === this.lastTagName) {\r\n                            this.lastAttributeName = null;\r\n                            this.embeddedContentType = null;\r\n                        }\r\n                        this.kind = States.WithinTag;\r\n                        return {\r\n                            type: State.escapeTagName(this.lastTagName),\r\n                        };\r\n                    }\r\n                    break;\r\n                case States.WithinTag:\r\n                    if (stream.skipWhitespace2() || stream.eos()) {\r\n                        this.lastAttributeName = ''; // remember that we have seen a whitespace\r\n                        return { type: '' };\r\n                    }\r\n                    else {\r\n                        if (this.lastAttributeName === '') {\r\n                            var name = this.nextAttributeName(stream);\r\n                            if (name.length > 0) {\r\n                                this.lastAttributeName = name;\r\n                                this.kind = States.AttributeName;\r\n                                return { type: htmlTokenTypes.ATTRIB_NAME };\r\n                            }\r\n                        }\r\n                        if (stream.advanceIfString2('/>')) {\r\n                            this.kind = States.Content;\r\n                            return { type: htmlTokenTypes.DELIM_START, dontMergeWithPrev: true };\r\n                        }\r\n                        if (stream.advanceIfCharCode2('>'.charCodeAt(0))) {\r\n                            if (tagsEmbeddingContent.indexOf(this.lastTagName) !== -1) {\r\n                                this.kind = States.WithinEmbeddedContent;\r\n                                return { type: htmlTokenTypes.DELIM_START, dontMergeWithPrev: true };\r\n                            }\r\n                            else {\r\n                                this.kind = States.Content;\r\n                                return { type: htmlTokenTypes.DELIM_START, dontMergeWithPrev: true };\r\n                            }\r\n                        }\r\n                        else {\r\n                            stream.next2();\r\n                            return { type: '' };\r\n                        }\r\n                    }\r\n                case States.AttributeName:\r\n                    if (stream.skipWhitespace2() || stream.eos()) {\r\n                        return { type: '' };\r\n                    }\r\n                    if (stream.advanceIfCharCode2('='.charCodeAt(0))) {\r\n                        this.kind = States.AttributeValue;\r\n                        return { type: htmlTokenTypes.DELIM_ASSIGN };\r\n                    }\r\n                    else {\r\n                        this.kind = States.WithinTag;\r\n                        this.lastAttributeName = '';\r\n                        return this.tokenize(stream); // no advance yet - jump to WithinTag\r\n                    }\r\n                case States.AttributeValue:\r\n                    if (stream.eos()) {\r\n                        return { type: '' };\r\n                    }\r\n                    if (stream.skipWhitespace2()) {\r\n                        if (this.attributeValueQuote === '\"' || this.attributeValueQuote === '\\'') {\r\n                            // We are inside the quotes of an attribute value\r\n                            return { type: htmlTokenTypes.ATTRIB_VALUE };\r\n                        }\r\n                        return { type: '' };\r\n                    }\r\n                    // We are in a attribute value\r\n                    if (this.attributeValueQuote === '\"' || this.attributeValueQuote === '\\'') {\r\n                        if (this.attributeValue === this.attributeValueQuote && ('script' === this.lastTagName || 'style' === this.lastTagName) && 'type' === this.lastAttributeName) {\r\n                            this.attributeValue = stream.advanceUntilString(this.attributeValueQuote, true);\r\n                            if (this.attributeValue.length > 0) {\r\n                                this.embeddedContentType = this.unquote(this.attributeValue);\r\n                                this.kind = States.WithinTag;\r\n                                this.attributeValue = '';\r\n                                this.attributeValueQuote = '';\r\n                                return { type: htmlTokenTypes.ATTRIB_VALUE };\r\n                            }\r\n                        }\r\n                        else {\r\n                            if (stream.advanceIfCharCode2(this.attributeValueQuote.charCodeAt(0))) {\r\n                                this.kind = States.WithinTag;\r\n                                this.attributeValue = '';\r\n                                this.attributeValueQuote = '';\r\n                                this.lastAttributeName = null;\r\n                            }\r\n                            else {\r\n                                var part = stream.next();\r\n                                this.attributeValue += part;\r\n                            }\r\n                            return { type: htmlTokenTypes.ATTRIB_VALUE };\r\n                        }\r\n                    }\r\n                    else {\r\n                        var attributeValue = stream.advanceIfRegExp(/^[^\\s\"'`=<>]+/);\r\n                        if (attributeValue.length > 0) {\r\n                            this.kind = States.WithinTag;\r\n                            this.lastAttributeName = null;\r\n                            return { type: htmlTokenTypes.ATTRIB_VALUE };\r\n                        }\r\n                        var ch = stream.peek();\r\n                        if (ch === '\\'' || ch === '\"') {\r\n                            this.attributeValueQuote = ch;\r\n                            this.attributeValue = ch;\r\n                            stream.next2();\r\n                            return { type: htmlTokenTypes.ATTRIB_VALUE };\r\n                        }\r\n                        else {\r\n                            this.kind = States.WithinTag;\r\n                            this.lastAttributeName = null;\r\n                            return this.tokenize(stream); // no advance yet - jump to WithinTag\r\n                        }\r\n                    }\r\n            }\r\n            stream.next2();\r\n            this.kind = States.Content;\r\n            return { type: '' };\r\n        };\r\n        State.prototype.unquote = function (value) {\r\n            var start = 0;\r\n            var end = value.length;\r\n            if ('\"' === value[0]) {\r\n                start++;\r\n            }\r\n            if ('\"' === value[end - 1]) {\r\n                end--;\r\n            }\r\n            return value.substring(start, end);\r\n        };\r\n        return State;\r\n    }(abstractState_1.AbstractState));\r\n    exports.State = State;\r\n    var HTMLMode = (function (_super) {\r\n        __extends(HTMLMode, _super);\r\n        function HTMLMode(descriptor, instantiationService, modeService, threadService) {\r\n            _super.call(this, descriptor.id);\r\n            this._modeWorkerManager = this._createModeWorkerManager(descriptor, instantiationService);\r\n            this.modeService = modeService;\r\n            this.threadService = threadService;\r\n            this.tokenizationSupport = new tokenizationSupport_1.TokenizationSupport(this, this, true, true);\r\n            this.configSupport = this;\r\n            this.richEditSupport = this._createRichEditSupport();\r\n            this._registerSupports();\r\n        }\r\n        HTMLMode.prototype.asyncCtor = function () {\r\n            return winjs.Promise.join([\r\n                this.modeService.getOrCreateMode('text/css'),\r\n                this.modeService.getOrCreateMode('text/javascript'),\r\n            ]);\r\n        };\r\n        HTMLMode.prototype._registerSupports = function () {\r\n            var _this = this;\r\n            if (this.getId() !== 'html') {\r\n                throw new Error('This method must be overwritten!');\r\n            }\r\n            modes.HoverProviderRegistry.register(this.getId(), {\r\n                provideHover: function (model, position, token) {\r\n                    return async_1.wireCancellationToken(token, _this._provideHover(model.uri, position));\r\n                }\r\n            }, true);\r\n            modes.ReferenceProviderRegistry.register(this.getId(), {\r\n                provideReferences: function (model, position, context, token) {\r\n                    return async_1.wireCancellationToken(token, _this._provideReferences(model.uri, position, context));\r\n                }\r\n            }, true);\r\n            modes.SuggestRegistry.register(this.getId(), {\r\n                triggerCharacters: ['.', ':', '<', '\"', '=', '/'],\r\n                shouldAutotriggerSuggest: true,\r\n                provideCompletionItems: function (model, position, token) {\r\n                    return async_1.wireCancellationToken(token, _this._provideCompletionItems(model.uri, position));\r\n                }\r\n            }, true);\r\n            modes.DocumentHighlightProviderRegistry.register(this.getId(), {\r\n                provideDocumentHighlights: function (model, position, token) {\r\n                    return async_1.wireCancellationToken(token, _this._provideDocumentHighlights(model.uri, position));\r\n                }\r\n            }, true);\r\n            modes.DocumentRangeFormattingEditProviderRegistry.register(this.getId(), {\r\n                provideDocumentRangeFormattingEdits: function (model, range, options, token) {\r\n                    return async_1.wireCancellationToken(token, _this._provideDocumentRangeFormattingEdits(model.uri, range, options));\r\n                }\r\n            }, true);\r\n            modes.LinkProviderRegistry.register(this.getId(), {\r\n                provideLinks: function (model, token) {\r\n                    return async_1.wireCancellationToken(token, _this._provideLinks(model.uri));\r\n                }\r\n            }, true);\r\n        };\r\n        HTMLMode.prototype._createModeWorkerManager = function (descriptor, instantiationService) {\r\n            return new abstractMode_1.ModeWorkerManager(descriptor, 'vs/languages/html/common/htmlWorker', 'HTMLWorker', null, instantiationService);\r\n        };\r\n        HTMLMode.prototype._worker = function (runner) {\r\n            return this._modeWorkerManager.worker(runner);\r\n        };\r\n        HTMLMode.prototype._createRichEditSupport = function () {\r\n            return new richEditSupport_1.RichEditSupport(this.getId(), null, {\r\n                wordPattern: abstractMode_1.createWordRegExp('#-?%'),\r\n                comments: {\r\n                    blockComment: ['<!--', '-->']\r\n                },\r\n                brackets: [\r\n                    ['<!--', '-->'],\r\n                    ['<', '>'],\r\n                ],\r\n                __electricCharacterSupport: {\r\n                    caseInsensitive: true,\r\n                    embeddedElectricCharacters: ['*', '}', ']', ')']\r\n                },\r\n                autoClosingPairs: [\r\n                    { open: '{', close: '}' },\r\n                    { open: '[', close: ']' },\r\n                    { open: '(', close: ')' },\r\n                    { open: '\"', close: '\"' },\r\n                    { open: '\\'', close: '\\'' }\r\n                ],\r\n                surroundingPairs: [\r\n                    { open: '\"', close: '\"' },\r\n                    { open: '\\'', close: '\\'' }\r\n                ],\r\n                onEnterRules: [\r\n                    {\r\n                        beforeText: new RegExp(\"<(?!(?:\" + htmlEmptyTagsShared_1.EMPTY_ELEMENTS.join('|') + \"))([_:\\\\w][_:\\\\w-.\\\\d]*)([^/>]*(?!/)>)[^<]*$\", 'i'),\r\n                        afterText: /^<\\/([_:\\w][_:\\w-.\\d]*)\\s*>$/i,\r\n                        action: { indentAction: modes.IndentAction.IndentOutdent }\r\n                    },\r\n                    {\r\n                        beforeText: new RegExp(\"<(?!(?:\" + htmlEmptyTagsShared_1.EMPTY_ELEMENTS.join('|') + \"))(\\\\w[\\\\w\\\\d]*)([^/>]*(?!/)>)[^<]*$\", 'i'),\r\n                        action: { indentAction: modes.IndentAction.Indent }\r\n                    }\r\n                ],\r\n            });\r\n        };\r\n        // TokenizationSupport\r\n        HTMLMode.prototype.getInitialState = function () {\r\n            return new State(this, States.Content, '', '', '', '', '');\r\n        };\r\n        HTMLMode.prototype.enterNestedMode = function (state) {\r\n            return state instanceof State && state.kind === States.WithinEmbeddedContent;\r\n        };\r\n        HTMLMode.prototype.getNestedMode = function (state) {\r\n            var result = null;\r\n            var htmlState = state;\r\n            var missingModePromise = null;\r\n            if (htmlState.embeddedContentType !== null) {\r\n                if (this.modeService.isRegisteredMode(htmlState.embeddedContentType)) {\r\n                    result = this.modeService.getMode(htmlState.embeddedContentType);\r\n                    if (!result) {\r\n                        missingModePromise = this.modeService.getOrCreateMode(htmlState.embeddedContentType);\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                var mimeType = null;\r\n                if ('script' === htmlState.lastTagName) {\r\n                    mimeType = 'text/javascript';\r\n                }\r\n                else if ('style' === htmlState.lastTagName) {\r\n                    mimeType = 'text/css';\r\n                }\r\n                else {\r\n                    mimeType = 'text/plain';\r\n                }\r\n                result = this.modeService.getMode(mimeType);\r\n            }\r\n            if (result === null) {\r\n                result = this.modeService.getMode('text/plain');\r\n            }\r\n            return {\r\n                mode: result,\r\n                missingModePromise: missingModePromise\r\n            };\r\n        };\r\n        HTMLMode.prototype.getLeavingNestedModeData = function (line, state) {\r\n            var tagName = state.lastTagName;\r\n            var regexp = new RegExp('<\\\\/' + tagName + '\\\\s*>', 'i');\r\n            var match = regexp.exec(line);\r\n            if (match !== null) {\r\n                return {\r\n                    nestedModeBuffer: line.substring(0, match.index),\r\n                    bufferAfterNestedMode: line.substring(match.index),\r\n                    stateAfterNestedMode: new State(this, States.Content, '', '', '', '', '')\r\n                };\r\n            }\r\n            return null;\r\n        };\r\n        HTMLMode.prototype.configure = function (options) {\r\n            if (this.threadService.isInMainThread) {\r\n                return this._configureWorkers(options);\r\n            }\r\n            else {\r\n                return this._worker(function (w) { return w._doConfigure(options); });\r\n            }\r\n        };\r\n        HTMLMode.prototype._configureWorkers = function (options) {\r\n            return this._worker(function (w) { return w._doConfigure(options); });\r\n        };\r\n        HTMLMode.prototype._provideLinks = function (resource) {\r\n            return this._worker(function (w) { return w.provideLinks(resource); });\r\n        };\r\n        HTMLMode.prototype._provideDocumentRangeFormattingEdits = function (resource, range, options) {\r\n            return this._worker(function (w) { return w.provideDocumentRangeFormattingEdits(resource, range, options); });\r\n        };\r\n        HTMLMode.prototype._provideHover = function (resource, position) {\r\n            return this._worker(function (w) { return w.provideHover(resource, position); });\r\n        };\r\n        HTMLMode.prototype._provideReferences = function (resource, position, context) {\r\n            return this._worker(function (w) { return w.provideReferences(resource, position); });\r\n        };\r\n        HTMLMode.prototype._provideDocumentHighlights = function (resource, position, strict) {\r\n            if (strict === void 0) { strict = false; }\r\n            return this._worker(function (w) { return w.provideDocumentHighlights(resource, position, strict); });\r\n        };\r\n        HTMLMode.prototype._provideCompletionItems = function (resource, position) {\r\n            return this._worker(function (w) { return w.provideCompletionItems(resource, position); });\r\n        };\r\n        HTMLMode.prototype.findColorDeclarations = function (resource) {\r\n            return this._worker(function (w) { return w.findColorDeclarations(resource); });\r\n        };\r\n        HTMLMode.$_configureWorkers = threadService_1.AllWorkersAttr(HTMLMode, HTMLMode.prototype._configureWorkers);\r\n        HTMLMode.$_provideLinks = threadService_1.OneWorkerAttr(HTMLMode, HTMLMode.prototype._provideLinks);\r\n        HTMLMode.$_provideDocumentRangeFormattingEdits = threadService_1.OneWorkerAttr(HTMLMode, HTMLMode.prototype._provideDocumentRangeFormattingEdits);\r\n        HTMLMode.$_provideHover = threadService_1.OneWorkerAttr(HTMLMode, HTMLMode.prototype._provideHover);\r\n        HTMLMode.$_provideReferences = threadService_1.OneWorkerAttr(HTMLMode, HTMLMode.prototype._provideReferences);\r\n        HTMLMode.$_provideDocumentHighlights = threadService_1.OneWorkerAttr(HTMLMode, HTMLMode.prototype._provideDocumentHighlights);\r\n        HTMLMode.$_provideCompletionItems = threadService_1.OneWorkerAttr(HTMLMode, HTMLMode.prototype._provideCompletionItems);\r\n        HTMLMode.$findColorDeclarations = threadService_1.OneWorkerAttr(HTMLMode, HTMLMode.prototype.findColorDeclarations);\r\n        HTMLMode = __decorate([\r\n            __param(1, instantiation_1.IInstantiationService),\r\n            __param(2, modeService_1.IModeService),\r\n            __param(3, thread_1.IThreadService)\r\n        ], HTMLMode);\r\n        return HTMLMode;\r\n    }(abstractMode_1.AbstractMode));\r\n    exports.HTMLMode = HTMLMode;\r\n});\r\n\n\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport arrays = require('vs/base/common/arrays');\n\nexport const EMPTY_ELEMENTS:string[] = ['area', 'base', 'br', 'col', 'embed', 'hr', 'img', 'input', 'keygen', 'link', 'menuitem', 'meta', 'param', 'source', 'track', 'wbr'];\n\nexport function isEmptyElement(e: string) : boolean {\n\treturn arrays.binarySearch(EMPTY_ELEMENTS, e,(s1: string, s2: string) => s1.localeCompare(s2)) >= 0;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport strings = require('vs/base/common/strings');\n\nexport const DELIM_END = 'punctuation.definition.meta.tag.end.html';\nexport const DELIM_START = 'punctuation.definition.meta.tag.begin.html';\nexport const DELIM_ASSIGN = 'meta.tag.assign.html';\nexport const ATTRIB_NAME = 'entity.other.attribute-name.html';\nexport const ATTRIB_VALUE = 'string.html';\nexport const COMMENT = 'comment.html.content';\nexport const DELIM_COMMENT = 'comment.html';\nexport const DOCTYPE = 'entity.other.attribute-name.html';\nexport const DELIM_DOCTYPE = 'entity.name.tag.html';\n\nconst TAG_PREFIX = 'entity.name.tag.tag-';\n\nexport function isTag(tokenType: string) {\n\treturn strings.startsWith(tokenType, TAG_PREFIX);\n}\n\nexport function getTag(name: string) {\n\treturn TAG_PREFIX + name;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport URI from 'vs/base/common/uri';\nimport winjs = require('vs/base/common/winjs.base');\nimport editorCommon = require('vs/editor/common/editorCommon');\nimport modes = require('vs/editor/common/modes');\nimport htmlWorker = require('vs/languages/html/common/htmlWorker');\nimport { AbstractMode, createWordRegExp, ModeWorkerManager } from 'vs/editor/common/modes/abstractMode';\nimport { AbstractState } from 'vs/editor/common/modes/abstractState';\nimport {OneWorkerAttr, AllWorkersAttr} from 'vs/platform/thread/common/threadService';\nimport {IModeService} from 'vs/editor/common/services/modeService';\nimport {IInstantiationService} from 'vs/platform/instantiation/common/instantiation';\nimport * as htmlTokenTypes from 'vs/languages/html/common/htmlTokenTypes';\nimport {EMPTY_ELEMENTS} from 'vs/languages/html/common/htmlEmptyTagsShared';\nimport {RichEditSupport} from 'vs/editor/common/modes/supports/richEditSupport';\nimport {TokenizationSupport, IEnteringNestedModeData, ILeavingNestedModeData, ITokenizationCustomization} from 'vs/editor/common/modes/supports/tokenizationSupport';\nimport {IThreadService} from 'vs/platform/thread/common/thread';\nimport {wireCancellationToken} from 'vs/base/common/async';\n\nexport { htmlTokenTypes }; // export to be used by Razor. We are the main module, so Razor should get it from us.\nexport { EMPTY_ELEMENTS }; // export to be used by Razor. We are the main module, so Razor should get it from us.\n\nexport enum States {\n\tContent,\n\tOpeningStartTag,\n\tOpeningEndTag,\n\tWithinDoctype,\n\tWithinTag,\n\tWithinComment,\n\tWithinEmbeddedContent,\n\tAttributeName,\n\tAttributeValue\n}\n\n// list of elements that embed other content\nvar tagsEmbeddingContent:string[] = ['script', 'style'];\n\n\n\nexport class State extends AbstractState {\n\tpublic kind:States;\n\tpublic lastTagName:string;\n\tpublic lastAttributeName:string;\n\tpublic embeddedContentType:string;\n\tpublic attributeValueQuote:string;\n\tpublic attributeValue:string;\n\n\tconstructor(mode:modes.IMode, kind:States, lastTagName:string, lastAttributeName:string, embeddedContentType:string, attributeValueQuote:string, attributeValue:string) {\n\t\tsuper(mode);\n\t\tthis.kind = kind;\n\t\tthis.lastTagName = lastTagName;\n\t\tthis.lastAttributeName = lastAttributeName;\n\t\tthis.embeddedContentType = embeddedContentType;\n\t\tthis.attributeValueQuote = attributeValueQuote;\n\t\tthis.attributeValue = attributeValue;\n\t}\n\n\tstatic escapeTagName(s:string):string {\n\t\treturn htmlTokenTypes.getTag(s.replace(/[:_.]/g, '-'));\n\t}\n\n\tpublic makeClone():State {\n\t\treturn new State(this.getMode(), this.kind, this.lastTagName, this.lastAttributeName, this.embeddedContentType, this.attributeValueQuote, this.attributeValue);\n\t}\n\n\tpublic equals(other:modes.IState):boolean {\n\t\tif (other instanceof State) {\n\t\t\treturn (\n\t\t\t\tsuper.equals(other) &&\n\t\t\t\tthis.kind === other.kind &&\n\t\t\t\tthis.lastTagName === other.lastTagName &&\n\t\t\t\tthis.lastAttributeName === other.lastAttributeName &&\n\t\t\t\tthis.embeddedContentType === other.embeddedContentType &&\n\t\t\t\tthis.attributeValueQuote === other.attributeValueQuote &&\n\t\t\t\tthis.attributeValue === other.attributeValue\n\t\t\t);\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate nextElementName(stream:modes.IStream):string {\n\t\treturn stream.advanceIfRegExp(/^[_:\\w][_:\\w-.\\d]*/).toLowerCase();\n\t}\n\n\tprivate nextAttributeName(stream:modes.IStream):string {\n\t\treturn stream.advanceIfRegExp(/^[^\\s\"'>/=\\x00-\\x0F\\x7F\\x80-\\x9F]*/).toLowerCase();\n\t}\n\n\tpublic tokenize(stream:modes.IStream) : modes.ITokenizationResult {\n\n\t\tswitch(this.kind){\n\t\t\tcase States.WithinComment:\n\t\t\t\tif (stream.advanceUntilString2('-->', false)) {\n\t\t\t\t\treturn { type: htmlTokenTypes.COMMENT};\n\n\t\t\t\t} else if(stream.advanceIfString2('-->')) {\n\t\t\t\t\tthis.kind = States.Content;\n\t\t\t\t\treturn { type: htmlTokenTypes.DELIM_COMMENT, dontMergeWithPrev: true };\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase States.WithinDoctype:\n\t\t\t\tif (stream.advanceUntilString2('>', false)) {\n\t\t\t\t\treturn { type: htmlTokenTypes.DOCTYPE};\n\t\t\t\t} else if(stream.advanceIfString2('>')) {\n\t\t\t\t\tthis.kind = States.Content;\n\t\t\t\t\treturn { type: htmlTokenTypes.DELIM_DOCTYPE, dontMergeWithPrev: true };\n\t\t\t\t}\n\t\t\tbreak;\n\n\t\t\tcase States.Content:\n\t\t\t\tif (stream.advanceIfCharCode2('<'.charCodeAt(0))) {\n\t\t\t\t\tif (!stream.eos() && stream.peek() === '!') {\n\t\t\t\t\t\tif (stream.advanceIfString2('!--')) {\n\t\t\t\t\t\t\tthis.kind = States.WithinComment;\n\t\t\t\t\t\t\treturn { type: htmlTokenTypes.DELIM_COMMENT, dontMergeWithPrev: true };\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (stream.advanceIfStringCaseInsensitive2('!DOCTYPE')) {\n\t\t\t\t\t\t\tthis.kind = States.WithinDoctype;\n\t\t\t\t\t\t\treturn { type: htmlTokenTypes.DELIM_DOCTYPE, dontMergeWithPrev: true };\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (stream.advanceIfCharCode2('/'.charCodeAt(0))) {\n\t\t\t\t\t\tthis.kind = States.OpeningEndTag;\n\t\t\t\t\t\treturn { type: htmlTokenTypes.DELIM_END, dontMergeWithPrev: true };\n\t\t\t\t\t}\n\t\t\t\t\tthis.kind = States.OpeningStartTag;\n\t\t\t\t\treturn { type: htmlTokenTypes.DELIM_START, dontMergeWithPrev: true };\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase States.OpeningEndTag:\n\t\t\t\tvar tagName = this.nextElementName(stream);\n\t\t\t\tif (tagName.length > 0){\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttype: State.escapeTagName(tagName),\n\t\t\t\t\t};\n\n\t\t\t\t} else if (stream.advanceIfString2('>')) {\n\t\t\t\t\tthis.kind = States.Content;\n\t\t\t\t\treturn { type: htmlTokenTypes.DELIM_END, dontMergeWithPrev: true };\n\n\t\t\t\t} else {\n\t\t\t\t\tstream.advanceUntilString2('>', false);\n\t\t\t\t\treturn { type: '' };\n\t\t\t\t}\n\n\t\t\tcase States.OpeningStartTag:\n\t\t\t\tthis.lastTagName = this.nextElementName(stream);\n\t\t\t\tif (this.lastTagName.length > 0) {\n\t\t\t\t\tthis.lastAttributeName = null;\n\t\t\t\t\tif ('script' === this.lastTagName || 'style' === this.lastTagName) {\n\t\t\t\t\t\tthis.lastAttributeName = null;\n\t\t\t\t\t\tthis.embeddedContentType = null;\n\t\t\t\t\t}\n\t\t\t\t\tthis.kind = States.WithinTag;\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttype: State.escapeTagName(this.lastTagName),\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase States.WithinTag:\n\t\t\t\tif (stream.skipWhitespace2() || stream.eos()) {\n\t\t\t\t\tthis.lastAttributeName = ''; // remember that we have seen a whitespace\n\t\t\t\t\treturn { type: '' };\n\t\t\t\t} else {\n\t\t\t\t\tif (this.lastAttributeName === '') {\n\t\t\t\t\t\tvar name = this.nextAttributeName(stream);\n\t\t\t\t\t\tif (name.length > 0) {\n\t\t\t\t\t\t\tthis.lastAttributeName = name;\n\t\t\t\t\t\t\tthis.kind = States.AttributeName;\n\t\t\t\t\t\t\treturn { type: htmlTokenTypes.ATTRIB_NAME };\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (stream.advanceIfString2('/>')) {\n\t\t\t\t\t\tthis.kind = States.Content;\n\t\t\t\t\t\treturn { type: htmlTokenTypes.DELIM_START, dontMergeWithPrev: true };\n\t\t\t\t\t}\n\t\t\t\t\tif (stream.advanceIfCharCode2('>'.charCodeAt(0))) {\n\t\t\t\t\t\tif (tagsEmbeddingContent.indexOf(this.lastTagName) !== -1) {\n\t\t\t\t\t\t\tthis.kind = States.WithinEmbeddedContent;\n\t\t\t\t\t\t\treturn { type: htmlTokenTypes.DELIM_START, dontMergeWithPrev: true };\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.kind = States.Content;\n\t\t\t\t\t\t\treturn { type: htmlTokenTypes.DELIM_START, dontMergeWithPrev: true };\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstream.next2();\n\t\t\t\t\t\treturn { type: '' };\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\tcase States.AttributeName:\n\t\t\t\tif (stream.skipWhitespace2() || stream.eos()){\n\t\t\t\t\treturn { type: '' };\n\t\t\t\t}\n\n\t\t\t\tif (stream.advanceIfCharCode2('='.charCodeAt(0))) {\n\t\t\t\t\tthis.kind = States.AttributeValue;\n\t\t\t\t\treturn { type: htmlTokenTypes.DELIM_ASSIGN };\n\t\t\t\t} else {\n\t\t\t\t\tthis.kind = States.WithinTag;\n\t\t\t\t\tthis.lastAttributeName = '';\n\t\t\t\t\treturn this.tokenize(stream); // no advance yet - jump to WithinTag\n\t\t\t\t}\n\n\t\t\tcase States.AttributeValue:\n\t\t\t\tif (stream.eos()) {\n\t\t\t\t\treturn { type: '' };\n\t\t\t\t}\n\t\t\t\tif(stream.skipWhitespace2()) {\n\t\t\t\t\tif (this.attributeValueQuote === '\"' || this.attributeValueQuote === '\\'') {\n\t\t\t\t\t\t// We are inside the quotes of an attribute value\n\t\t\t\t\t\treturn { type: htmlTokenTypes.ATTRIB_VALUE };\n\t\t\t\t\t}\n\t\t\t\t\treturn { type: '' };\n\t\t\t\t}\n\t\t\t\t// We are in a attribute value\n\t\t\t\tif (this.attributeValueQuote === '\"' || this.attributeValueQuote === '\\'') {\n\n\t\t\t\t\tif (this.attributeValue === this.attributeValueQuote && ('script' === this.lastTagName || 'style' === this.lastTagName) && 'type' === this.lastAttributeName) {\n\t\t\t\t\t\tthis.attributeValue = stream.advanceUntilString(this.attributeValueQuote, true);\n\t\t\t\t\t\tif (this.attributeValue.length > 0) {\n\t\t\t\t\t\t\tthis.embeddedContentType = this.unquote(this.attributeValue);\n\t\t\t\t\t\t\tthis.kind = States.WithinTag;\n\t\t\t\t\t\t\tthis.attributeValue = '';\n\t\t\t\t\t\t\tthis.attributeValueQuote = '';\n\t\t\t\t\t\t\treturn { type: htmlTokenTypes.ATTRIB_VALUE };\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (stream.advanceIfCharCode2(this.attributeValueQuote.charCodeAt(0))) {\n\t\t\t\t\t\t\tthis.kind = States.WithinTag;\n\t\t\t\t\t\t\tthis.attributeValue = '';\n\t\t\t\t\t\t\tthis.attributeValueQuote = '';\n\t\t\t\t\t\t\tthis.lastAttributeName = null;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar part = stream.next();\n\t\t\t\t\t\t\tthis.attributeValue += part;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn { type: htmlTokenTypes.ATTRIB_VALUE };\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tlet attributeValue = stream.advanceIfRegExp(/^[^\\s\"'`=<>]+/);\n\t\t\t\t\tif (attributeValue.length > 0) {\n\t\t\t\t\t\tthis.kind = States.WithinTag;\n\t\t\t\t\t\tthis.lastAttributeName = null;\n\t\t\t\t\t\treturn { type: htmlTokenTypes.ATTRIB_VALUE };\n\t\t\t\t\t}\n\t\t\t\t\tvar ch = stream.peek();\n\t\t\t\t\tif (ch === '\\'' || ch === '\"') {\n\t\t\t\t\t\tthis.attributeValueQuote = ch;\n\t\t\t\t\t\tthis.attributeValue = ch;\n\t\t\t\t\t\tstream.next2();\n\t\t\t\t\t\treturn { type: htmlTokenTypes.ATTRIB_VALUE };\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.kind = States.WithinTag;\n\t\t\t\t\t\tthis.lastAttributeName = null;\n\t\t\t\t\t\treturn this.tokenize(stream); // no advance yet - jump to WithinTag\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t}\n\n\t\tstream.next2();\n\t\tthis.kind = States.Content;\n\t\treturn { type: '' };\n\t}\n\n\tprivate unquote(value:string):string {\n\t\tvar start = 0;\n\t\tvar end = value.length;\n\t\tif ('\"' === value[0]) {\n\t\t\tstart++;\n\t\t}\n\t\tif ('\"' === value[end - 1]) {\n\t\t\tend--;\n\t\t}\n\t\treturn value.substring(start, end);\n\t}\n}\n\nexport class HTMLMode<W extends htmlWorker.HTMLWorker> extends AbstractMode implements ITokenizationCustomization {\n\n\tpublic tokenizationSupport: modes.ITokenizationSupport;\n\tpublic richEditSupport: modes.IRichEditSupport;\n\tpublic configSupport: modes.IConfigurationSupport;\n\n\tprivate modeService:IModeService;\n\tprivate threadService:IThreadService;\n\tprivate _modeWorkerManager: ModeWorkerManager<W>;\n\n\tconstructor(\n\t\tdescriptor:modes.IModeDescriptor,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IModeService modeService: IModeService,\n\t\t@IThreadService threadService: IThreadService\n\t) {\n\t\tsuper(descriptor.id);\n\t\tthis._modeWorkerManager = this._createModeWorkerManager(descriptor, instantiationService);\n\n\t\tthis.modeService = modeService;\n\t\tthis.threadService = threadService;\n\n\t\tthis.tokenizationSupport = new TokenizationSupport(this, this, true, true);\n\t\tthis.configSupport = this;\n\n\t\tthis.richEditSupport = this._createRichEditSupport();\n\n\t\tthis._registerSupports();\n\t}\n\n\tpublic asyncCtor(): winjs.Promise {\n\t\treturn winjs.Promise.join([\n\t\t\tthis.modeService.getOrCreateMode('text/css'),\n\t\t\tthis.modeService.getOrCreateMode('text/javascript'),\n\t\t]);\n\t}\n\n\tprotected _registerSupports(): void {\n\t\tif (this.getId() !== 'html') {\n\t\t\tthrow new Error('This method must be overwritten!');\n\t\t}\n\n\t\tmodes.HoverProviderRegistry.register(this.getId(), {\n\t\t\tprovideHover: (model, position, token): Thenable<modes.Hover> => {\n\t\t\t\treturn wireCancellationToken(token, this._provideHover(model.uri, position));\n\t\t\t}\n\t\t}, true);\n\n\t\tmodes.ReferenceProviderRegistry.register(this.getId(), {\n\t\t\tprovideReferences: (model, position, context, token): Thenable<modes.Location[]> => {\n\t\t\t\treturn wireCancellationToken(token, this._provideReferences(model.uri, position, context));\n\t\t\t}\n\t\t}, true);\n\n\t\tmodes.SuggestRegistry.register(this.getId(), {\n\t\t\ttriggerCharacters: ['.', ':', '<', '\"', '=', '/'],\n\t\t\tshouldAutotriggerSuggest: true,\n\t\t\tprovideCompletionItems: (model, position, token): Thenable<modes.ISuggestResult[]> => {\n\t\t\t\treturn wireCancellationToken(token, this._provideCompletionItems(model.uri, position));\n\t\t\t}\n\t\t}, true);\n\n\t\tmodes.DocumentHighlightProviderRegistry.register(this.getId(), {\n\t\t\tprovideDocumentHighlights: (model, position, token): Thenable<modes.DocumentHighlight[]> => {\n\t\t\t\treturn wireCancellationToken(token, this._provideDocumentHighlights(model.uri, position));\n\t\t\t}\n\t\t}, true);\n\n\t\tmodes.DocumentRangeFormattingEditProviderRegistry.register(this.getId(), {\n\t\t\tprovideDocumentRangeFormattingEdits: (model, range, options, token): Thenable<editorCommon.ISingleEditOperation[]> => {\n\t\t\t\treturn wireCancellationToken(token, this._provideDocumentRangeFormattingEdits(model.uri, range, options));\n\t\t\t}\n\t\t}, true);\n\n\t\tmodes.LinkProviderRegistry.register(this.getId(), {\n\t\t\tprovideLinks: (model, token): Thenable<modes.ILink[]> => {\n\t\t\t\treturn wireCancellationToken(token, this._provideLinks(model.uri));\n\t\t\t}\n\t\t}, true);\n\t}\n\n\tprotected _createModeWorkerManager(descriptor:modes.IModeDescriptor, instantiationService: IInstantiationService): ModeWorkerManager<W> {\n\t\treturn new ModeWorkerManager<W>(descriptor, 'vs/languages/html/common/htmlWorker', 'HTMLWorker', null, instantiationService);\n\t}\n\n\tprivate _worker<T>(runner:(worker:W)=>winjs.TPromise<T>): winjs.TPromise<T> {\n\t\treturn this._modeWorkerManager.worker(runner);\n\t}\n\n\tprotected _createRichEditSupport(): modes.IRichEditSupport {\n\t\treturn new RichEditSupport(this.getId(), null, {\n\n\t\t\twordPattern: createWordRegExp('#-?%'),\n\n\t\t\tcomments: {\n\t\t\t\tblockComment: ['<!--', '-->']\n\t\t\t},\n\n\t\t\tbrackets: [\n\t\t\t\t['<!--', '-->'],\n\t\t\t\t['<', '>'],\n\t\t\t],\n\n\t\t\t__electricCharacterSupport: {\n\t\t\t\tcaseInsensitive: true,\n\t\t\t\tembeddedElectricCharacters: ['*', '}', ']', ')']\n\t\t\t},\n\n\t\t\tautoClosingPairs: [\n\t\t\t\t{ open: '{', close: '}' },\n\t\t\t\t{ open: '[', close: ']' },\n\t\t\t\t{ open: '(', close: ')' },\n\t\t\t\t{ open: '\"', close: '\"' },\n\t\t\t\t{ open: '\\'', close: '\\'' }\n\t\t\t],\n\t\t\t\n\t\t\tsurroundingPairs: [\n\t\t\t\t{ open: '\"', close: '\"' },\n\t\t\t\t{ open: '\\'', close: '\\'' }\n\t\t\t],\n\n\t\t\tonEnterRules: [\n\t\t\t\t{\n\t\t\t\t\tbeforeText: new RegExp(`<(?!(?:${EMPTY_ELEMENTS.join('|')}))([_:\\\\w][_:\\\\w-.\\\\d]*)([^/>]*(?!/)>)[^<]*$`, 'i'),\n\t\t\t\t\tafterText: /^<\\/([_:\\w][_:\\w-.\\d]*)\\s*>$/i,\n\t\t\t\t\taction: { indentAction: modes.IndentAction.IndentOutdent }\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tbeforeText: new RegExp(`<(?!(?:${EMPTY_ELEMENTS.join('|')}))(\\\\w[\\\\w\\\\d]*)([^/>]*(?!/)>)[^<]*$`, 'i'),\n\t\t\t\t\taction: { indentAction: modes.IndentAction.Indent }\n\t\t\t\t}\n\t\t\t],\n\t\t});\n\t}\n\n\t// TokenizationSupport\n\n\tpublic getInitialState():modes.IState {\n\t\treturn new State(this, States.Content, '', '', '', '', '');\n\t}\n\n\tpublic enterNestedMode(state:modes.IState):boolean {\n\t\treturn state instanceof State && (<State>state).kind === States.WithinEmbeddedContent;\n\t}\n\n\tpublic getNestedMode(state:modes.IState): IEnteringNestedModeData {\n\t\tvar result:modes.IMode = null;\n\t\tvar htmlState:State = <State>state;\n\t\tvar missingModePromise: winjs.Promise = null;\n\n\t\tif (htmlState.embeddedContentType !== null) {\n\t\t\tif (this.modeService.isRegisteredMode(htmlState.embeddedContentType)) {\n\t\t\t\tresult = this.modeService.getMode(htmlState.embeddedContentType);\n\t\t\t\tif (!result) {\n\t\t\t\t\tmissingModePromise = this.modeService.getOrCreateMode(htmlState.embeddedContentType);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tvar mimeType:string = null;\n\t\t\tif ('script' === htmlState.lastTagName) {\n\t\t\t\tmimeType = 'text/javascript';\n\t\t\t} else if ('style' === htmlState.lastTagName) {\n\t\t\t\tmimeType = 'text/css';\n\t\t\t} else {\n\t\t\t\tmimeType = 'text/plain';\n\t\t\t}\n\t\t\tresult = this.modeService.getMode(mimeType);\n\t\t}\n\t\tif (result === null) {\n\t\t\tresult = this.modeService.getMode('text/plain');\n\t\t}\n\t\treturn {\n\t\t\tmode: result,\n\t\t\tmissingModePromise: missingModePromise\n\t\t};\n\t}\n\n\tpublic getLeavingNestedModeData(line:string, state:modes.IState):ILeavingNestedModeData {\n\t\tvar tagName = (<State>state).lastTagName;\n\t\tvar regexp = new RegExp('<\\\\/' + tagName + '\\\\s*>', 'i');\n\t\tvar match:any = regexp.exec(line);\n\t\tif (match !== null) {\n\t\t\treturn {\n\t\t\t\tnestedModeBuffer: line.substring(0, match.index),\n\t\t\t\tbufferAfterNestedMode: line.substring(match.index),\n\t\t\t\tstateAfterNestedMode: new State(this, States.Content, '', '', '', '', '')\n\t\t\t};\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic configure(options:any): winjs.TPromise<void> {\n\t\tif (this.threadService.isInMainThread) {\n\t\t\treturn this._configureWorkers(options);\n\t\t} else {\n\t\t\treturn this._worker((w) => w._doConfigure(options));\n\t\t}\n\t}\n\n\tstatic $_configureWorkers = AllWorkersAttr(HTMLMode, HTMLMode.prototype._configureWorkers);\n\tprivate _configureWorkers(options:any): winjs.TPromise<void> {\n\t\treturn this._worker((w) => w._doConfigure(options));\n\t}\n\n\tstatic $_provideLinks = OneWorkerAttr(HTMLMode, HTMLMode.prototype._provideLinks);\n\tprotected _provideLinks(resource:URI):winjs.TPromise<modes.ILink[]> {\n\t\treturn this._worker((w) => w.provideLinks(resource));\n\t}\n\n\tstatic $_provideDocumentRangeFormattingEdits = OneWorkerAttr(HTMLMode, HTMLMode.prototype._provideDocumentRangeFormattingEdits);\n\tprivate _provideDocumentRangeFormattingEdits(resource:URI, range:editorCommon.IRange, options:modes.IFormattingOptions):winjs.TPromise<editorCommon.ISingleEditOperation[]> {\n\t\treturn this._worker((w) => w.provideDocumentRangeFormattingEdits(resource, range, options));\n\t}\n\n\tstatic $_provideHover = OneWorkerAttr(HTMLMode, HTMLMode.prototype._provideHover);\n\tprotected _provideHover(resource:URI, position:editorCommon.IPosition): winjs.TPromise<modes.Hover> {\n\t\treturn this._worker((w) => w.provideHover(resource, position));\n\t}\n\n\tstatic $_provideReferences = OneWorkerAttr(HTMLMode, HTMLMode.prototype._provideReferences);\n\tprotected _provideReferences(resource:URI, position:editorCommon.IPosition, context: modes.ReferenceContext): winjs.TPromise<modes.Location[]> {\n\t\treturn this._worker((w) => w.provideReferences(resource, position));\n\t}\n\n\tstatic $_provideDocumentHighlights = OneWorkerAttr(HTMLMode, HTMLMode.prototype._provideDocumentHighlights);\n\tprotected _provideDocumentHighlights(resource:URI, position:editorCommon.IPosition, strict:boolean = false): winjs.TPromise<modes.DocumentHighlight[]> {\n\t\treturn this._worker((w) => w.provideDocumentHighlights(resource, position, strict));\n\t}\n\n\tstatic $_provideCompletionItems = OneWorkerAttr(HTMLMode, HTMLMode.prototype._provideCompletionItems);\n\tprotected _provideCompletionItems(resource:URI, position:editorCommon.IPosition):winjs.TPromise<modes.ISuggestResult[]> {\n\t\treturn this._worker((w) => w.provideCompletionItems(resource, position));\n\t}\n\n\tstatic $findColorDeclarations = OneWorkerAttr(HTMLMode, HTMLMode.prototype.findColorDeclarations);\n\tpublic findColorDeclarations(resource:URI):winjs.TPromise<{range:editorCommon.IRange; value:string; }[]> {\n\t\treturn this._worker((w) => w.findColorDeclarations(resource));\n\t}\n}\n"]}