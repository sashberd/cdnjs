{"version":3,"sources":["vs/languages/handlebars/common/handlebars.js","vs/languages/handlebars/common/file:/C:/Alex/src/vscode/src/vs/languages/handlebars/common/handlebarsTokenTypes.ts","vs/languages/handlebars/common/file:/C:/Alex/src/vscode/src/vs/languages/handlebars/common/handlebars.ts"],"names":["define","require","exports","EMBED","EMBED_UNESCAPED","KEYWORD","VARIABLE","__extends","this","d","b","__","constructor","p","hasOwnProperty","prototype","Object","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","modes","htmlMode","handlebarsTokenTypes","instantiation_1","modeService_1","richEditSupport_1","abstractMode_1","thread_1","async_1","States","HandlebarsState","_super","mode","kind","handlebarsKind","lastTagName","lastAttributeName","embeddedContentType","attributeValueQuote","attributeValue","call","makeClone","getMode","equals","other","tokenize","stream","HTML","advanceIfString","UnescapedExpression","type","Expression","skipWhitespace","peek","advanceWhile","next","goBack","State","HandlebarsMode","descriptor","instantiationService","modeService","threadService","_registerSupports","_this","HoverProviderRegistry","register","getId","provideHover","model","position","token","wireCancellationToken","_provideHover","uri","ReferenceProviderRegistry","provideReferences","context","_provideReferences","SuggestRegistry","triggerCharacters","shouldAutotriggerSuggest","provideCompletionItems","_provideCompletionItems","DocumentHighlightProviderRegistry","provideDocumentHighlights","_provideDocumentHighlights","LinkProviderRegistry","provideLinks","_provideLinks","_createRichEditSupport","RichEditSupport","wordPattern","createWordRegExp","comments","blockComment","brackets","__electricCharacterSupport","caseInsensitive","embeddedElectricCharacters","autoClosingPairs","open","close","surroundingPairs","onEnterRules","beforeText","RegExp","EMPTY_ELEMENTS","join","afterText","action","indentAction","IndentAction","IndentOutdent","Indent","getInitialState","Content","getLeavingNestedModeData","line","state","leavingNestedModeData","stateAfterNestedMode","IInstantiationService","IModeService","IThreadService","HTMLMode"],"mappings":"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","file":"vs/languages/handlebars/common/handlebars.js","sourcesContent":["/*!-----------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.2.3(84e204b238a1eff25d4c6f611fdcd76a494005a7)\n * Released under the MIT license\n * https://github.com/Microsoft/vscode/blob/master/LICENSE.txt\n *-----------------------------------------------------------*/\n\ndefine(\"vs/languages/handlebars/common/handlebarsTokenTypes\", [\"require\", \"exports\"], function (require, exports) {\r\n    /*---------------------------------------------------------------------------------------------\r\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n     *--------------------------------------------------------------------------------------------*/\r\n    'use strict';\r\n    exports.EMBED = 'punctuation.expression.unescaped.handlebars';\r\n    exports.EMBED_UNESCAPED = 'punctuation.expression.handlebars';\r\n    exports.KEYWORD = 'keyword.helper.handlebars';\r\n    exports.VARIABLE = 'variable.parameter.handlebars';\r\n});\r\n\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\ndefine(\"vs/languages/handlebars/common/handlebars\", [\"require\", \"exports\", 'vs/editor/common/modes', 'vs/languages/html/common/html', 'vs/languages/handlebars/common/handlebarsTokenTypes', 'vs/platform/instantiation/common/instantiation', 'vs/editor/common/services/modeService', 'vs/editor/common/modes/supports/richEditSupport', 'vs/editor/common/modes/abstractMode', 'vs/platform/thread/common/thread', 'vs/base/common/async'], function (require, exports, modes, htmlMode, handlebarsTokenTypes, instantiation_1, modeService_1, richEditSupport_1, abstractMode_1, thread_1, async_1) {\r\n    /*---------------------------------------------------------------------------------------------\r\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n     *--------------------------------------------------------------------------------------------*/\r\n    'use strict';\r\n    (function (States) {\r\n        States[States[\"HTML\"] = 0] = \"HTML\";\r\n        States[States[\"Expression\"] = 1] = \"Expression\";\r\n        States[States[\"UnescapedExpression\"] = 2] = \"UnescapedExpression\";\r\n    })(exports.States || (exports.States = {}));\r\n    var States = exports.States;\r\n    var HandlebarsState = (function (_super) {\r\n        __extends(HandlebarsState, _super);\r\n        function HandlebarsState(mode, kind, handlebarsKind, lastTagName, lastAttributeName, embeddedContentType, attributeValueQuote, attributeValue) {\r\n            _super.call(this, mode, kind, lastTagName, lastAttributeName, embeddedContentType, attributeValueQuote, attributeValue);\r\n            this.kind = kind;\r\n            this.handlebarsKind = handlebarsKind;\r\n            this.lastTagName = lastTagName;\r\n            this.lastAttributeName = lastAttributeName;\r\n            this.embeddedContentType = embeddedContentType;\r\n            this.attributeValueQuote = attributeValueQuote;\r\n            this.attributeValue = attributeValue;\r\n        }\r\n        HandlebarsState.prototype.makeClone = function () {\r\n            return new HandlebarsState(this.getMode(), this.kind, this.handlebarsKind, this.lastTagName, this.lastAttributeName, this.embeddedContentType, this.attributeValueQuote, this.attributeValue);\r\n        };\r\n        HandlebarsState.prototype.equals = function (other) {\r\n            if (other instanceof HandlebarsState) {\r\n                return (_super.prototype.equals.call(this, other));\r\n            }\r\n            return false;\r\n        };\r\n        HandlebarsState.prototype.tokenize = function (stream) {\r\n            switch (this.handlebarsKind) {\r\n                case States.HTML:\r\n                    if (stream.advanceIfString('{{{').length > 0) {\r\n                        this.handlebarsKind = States.UnescapedExpression;\r\n                        return { type: handlebarsTokenTypes.EMBED_UNESCAPED };\r\n                    }\r\n                    else if (stream.advanceIfString('{{').length > 0) {\r\n                        this.handlebarsKind = States.Expression;\r\n                        return { type: handlebarsTokenTypes.EMBED };\r\n                    }\r\n                    break;\r\n                case States.Expression:\r\n                case States.UnescapedExpression:\r\n                    if (this.handlebarsKind === States.Expression && stream.advanceIfString('}}').length > 0) {\r\n                        this.handlebarsKind = States.HTML;\r\n                        return { type: handlebarsTokenTypes.EMBED };\r\n                    }\r\n                    else if (this.handlebarsKind === States.UnescapedExpression && stream.advanceIfString('}}}').length > 0) {\r\n                        this.handlebarsKind = States.HTML;\r\n                        return { type: handlebarsTokenTypes.EMBED_UNESCAPED };\r\n                    }\r\n                    else if (stream.skipWhitespace().length > 0) {\r\n                        return { type: '' };\r\n                    }\r\n                    if (stream.peek() === '#') {\r\n                        stream.advanceWhile(/^[^\\s}]/);\r\n                        return { type: handlebarsTokenTypes.KEYWORD };\r\n                    }\r\n                    if (stream.peek() === '/') {\r\n                        stream.advanceWhile(/^[^\\s}]/);\r\n                        return { type: handlebarsTokenTypes.KEYWORD };\r\n                    }\r\n                    if (stream.advanceIfString('else')) {\r\n                        var next = stream.peek();\r\n                        if (next === ' ' || next === '\\t' || next === '}') {\r\n                            return { type: handlebarsTokenTypes.KEYWORD };\r\n                        }\r\n                        else {\r\n                            stream.goBack(4);\r\n                        }\r\n                    }\r\n                    if (stream.advanceWhile(/^[^\\s}]/).length > 0) {\r\n                        return { type: handlebarsTokenTypes.VARIABLE };\r\n                    }\r\n                    break;\r\n            }\r\n            return _super.prototype.tokenize.call(this, stream);\r\n        };\r\n        return HandlebarsState;\r\n    }(htmlMode.State));\r\n    exports.HandlebarsState = HandlebarsState;\r\n    var HandlebarsMode = (function (_super) {\r\n        __extends(HandlebarsMode, _super);\r\n        function HandlebarsMode(descriptor, instantiationService, modeService, threadService) {\r\n            _super.call(this, descriptor, instantiationService, modeService, threadService);\r\n        }\r\n        HandlebarsMode.prototype._registerSupports = function () {\r\n            var _this = this;\r\n            modes.HoverProviderRegistry.register(this.getId(), {\r\n                provideHover: function (model, position, token) {\r\n                    return async_1.wireCancellationToken(token, _this._provideHover(model.uri, position));\r\n                }\r\n            }, true);\r\n            modes.ReferenceProviderRegistry.register(this.getId(), {\r\n                provideReferences: function (model, position, context, token) {\r\n                    return async_1.wireCancellationToken(token, _this._provideReferences(model.uri, position, context));\r\n                }\r\n            }, true);\r\n            modes.SuggestRegistry.register(this.getId(), {\r\n                triggerCharacters: ['.', ':', '<', '\"', '=', '/'],\r\n                shouldAutotriggerSuggest: true,\r\n                provideCompletionItems: function (model, position, token) {\r\n                    return async_1.wireCancellationToken(token, _this._provideCompletionItems(model.uri, position));\r\n                }\r\n            }, true);\r\n            modes.DocumentHighlightProviderRegistry.register(this.getId(), {\r\n                provideDocumentHighlights: function (model, position, token) {\r\n                    return async_1.wireCancellationToken(token, _this._provideDocumentHighlights(model.uri, position));\r\n                }\r\n            }, true);\r\n            modes.LinkProviderRegistry.register(this.getId(), {\r\n                provideLinks: function (model, token) {\r\n                    return async_1.wireCancellationToken(token, _this._provideLinks(model.uri));\r\n                }\r\n            }, true);\r\n        };\r\n        HandlebarsMode.prototype._createRichEditSupport = function () {\r\n            return new richEditSupport_1.RichEditSupport(this.getId(), null, {\r\n                wordPattern: abstractMode_1.createWordRegExp('#-?%'),\r\n                comments: {\r\n                    blockComment: ['<!--', '-->']\r\n                },\r\n                brackets: [\r\n                    ['<!--', '-->'],\r\n                    ['{{', '}}']\r\n                ],\r\n                __electricCharacterSupport: {\r\n                    caseInsensitive: true,\r\n                    embeddedElectricCharacters: ['*', '}', ']', ')']\r\n                },\r\n                autoClosingPairs: [\r\n                    { open: '{', close: '}' },\r\n                    { open: '[', close: ']' },\r\n                    { open: '(', close: ')' },\r\n                    { open: '\"', close: '\"' },\r\n                    { open: '\\'', close: '\\'' }\r\n                ],\r\n                surroundingPairs: [\r\n                    { open: '<', close: '>' },\r\n                    { open: '\"', close: '\"' },\r\n                    { open: '\\'', close: '\\'' }\r\n                ],\r\n                onEnterRules: [\r\n                    {\r\n                        beforeText: new RegExp(\"<(?!(?:\" + htmlMode.EMPTY_ELEMENTS.join('|') + \"))(\\\\w[\\\\w\\\\d]*)([^/>]*(?!/)>)[^<]*$\", 'i'),\r\n                        afterText: /^<\\/(\\w[\\w\\d]*)\\s*>$/i,\r\n                        action: { indentAction: modes.IndentAction.IndentOutdent }\r\n                    },\r\n                    {\r\n                        beforeText: new RegExp(\"<(?!(?:\" + htmlMode.EMPTY_ELEMENTS.join('|') + \"))(\\\\w[\\\\w\\\\d]*)([^/>]*(?!/)>)[^<]*$\", 'i'),\r\n                        action: { indentAction: modes.IndentAction.Indent }\r\n                    }\r\n                ],\r\n            });\r\n        };\r\n        HandlebarsMode.prototype.getInitialState = function () {\r\n            return new HandlebarsState(this, htmlMode.States.Content, States.HTML, '', '', '', '', '');\r\n        };\r\n        HandlebarsMode.prototype.getLeavingNestedModeData = function (line, state) {\r\n            var leavingNestedModeData = _super.prototype.getLeavingNestedModeData.call(this, line, state);\r\n            if (leavingNestedModeData) {\r\n                leavingNestedModeData.stateAfterNestedMode = new HandlebarsState(this, htmlMode.States.Content, States.HTML, '', '', '', '', '');\r\n            }\r\n            return leavingNestedModeData;\r\n        };\r\n        HandlebarsMode = __decorate([\r\n            __param(1, instantiation_1.IInstantiationService),\r\n            __param(2, modeService_1.IModeService),\r\n            __param(3, thread_1.IThreadService)\r\n        ], HandlebarsMode);\r\n        return HandlebarsMode;\r\n    }(htmlMode.HTMLMode));\r\n    exports.HandlebarsMode = HandlebarsMode;\r\n});\r\n\n\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nexport const EMBED = 'punctuation.expression.unescaped.handlebars';\nexport const EMBED_UNESCAPED = 'punctuation.expression.handlebars';\nexport const KEYWORD = 'keyword.helper.handlebars';\nexport const VARIABLE = 'variable.parameter.handlebars';","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport modes = require('vs/editor/common/modes');\nimport htmlMode = require('vs/languages/html/common/html');\nimport handlebarsTokenTypes = require('vs/languages/handlebars/common/handlebarsTokenTypes');\nimport htmlWorker = require('vs/languages/html/common/htmlWorker');\nimport {IInstantiationService} from 'vs/platform/instantiation/common/instantiation';\nimport {IModeService} from 'vs/editor/common/services/modeService';\nimport {RichEditSupport} from 'vs/editor/common/modes/supports/richEditSupport';\nimport {createWordRegExp} from 'vs/editor/common/modes/abstractMode';\nimport {ILeavingNestedModeData} from 'vs/editor/common/modes/supports/tokenizationSupport';\nimport {IThreadService} from 'vs/platform/thread/common/thread';\nimport {wireCancellationToken} from 'vs/base/common/async';\n\nexport enum States {\n\tHTML,\n\tExpression,\n\tUnescapedExpression\n}\n\nexport class HandlebarsState extends htmlMode.State {\n\n\tconstructor(mode:modes.IMode,\n\t\tpublic kind:htmlMode.States,\n\t\tpublic handlebarsKind:States,\n\t\tpublic lastTagName:string,\n\t\tpublic lastAttributeName:string,\n\t\tpublic embeddedContentType:string,\n\t\tpublic attributeValueQuote:string,\n\t\tpublic attributeValue:string) {\n\n\t\tsuper(mode, kind, lastTagName, lastAttributeName, embeddedContentType, attributeValueQuote, attributeValue);\n\t}\n\n\tpublic makeClone(): HandlebarsState {\n\t\treturn new HandlebarsState(this.getMode(), this.kind, this.handlebarsKind, this.lastTagName, this.lastAttributeName, this.embeddedContentType, this.attributeValueQuote, this.attributeValue);\n\t}\n\n\tpublic equals(other:modes.IState):boolean {\n\t\tif (other instanceof HandlebarsState) {\n\t\t\treturn (\n\t\t\t\tsuper.equals(other)\n\t\t\t);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic tokenize(stream:modes.IStream) : modes.ITokenizationResult {\n\t\tswitch(this.handlebarsKind) {\n\t\t\tcase States.HTML:\n\t\t\t\tif (stream.advanceIfString('{{{').length > 0) {\n\t\t\t\t\tthis.handlebarsKind = States.UnescapedExpression;\n\t\t\t\t\treturn { type: handlebarsTokenTypes.EMBED_UNESCAPED };\n\t\t\t\t}\n\t\t\t\telse if (stream.advanceIfString('{{').length > 0) {\n\t\t\t\t\tthis.handlebarsKind = States.Expression;\n\t\t\t\t\treturn { type: handlebarsTokenTypes.EMBED };\n\t\t\t\t}\n\t\t\tbreak;\n\n\t\t\tcase States.Expression:\n\t\t\tcase States.UnescapedExpression:\n\t\t\t\tif (this.handlebarsKind === States.Expression && stream.advanceIfString('}}').length > 0) {\n\t\t\t\t\tthis.handlebarsKind = States.HTML;\n\t\t\t\t\treturn { type: handlebarsTokenTypes.EMBED };\n\t\t\t\t}\n\t\t\t\telse if (this.handlebarsKind === States.UnescapedExpression &&stream.advanceIfString('}}}').length > 0) {\n\t\t\t\t\tthis.handlebarsKind = States.HTML;\n\t\t\t\t\treturn { type: handlebarsTokenTypes.EMBED_UNESCAPED };\n\t\t\t\t}\n\t\t\t\telse if(stream.skipWhitespace().length > 0) {\n\t\t\t\t\treturn { type: ''};\n\t\t\t\t}\n\n\t\t\t\tif(stream.peek() === '#') {\n\t\t\t\t\tstream.advanceWhile(/^[^\\s}]/);\n\t\t\t\t\treturn { type: handlebarsTokenTypes.KEYWORD };\n\t\t\t\t}\n\n\t\t\t\tif(stream.peek() === '/') {\n\t\t\t\t\tstream.advanceWhile(/^[^\\s}]/);\n\t\t\t\t\treturn { type: handlebarsTokenTypes.KEYWORD };\n\t\t\t\t}\n\n\t\t\t\tif(stream.advanceIfString('else')) {\n\t\t\t\t\tvar next = stream.peek();\n\t\t\t\t\tif(next === ' ' || next === '\\t' || next === '}') {\n\t\t\t\t\t\treturn { type: handlebarsTokenTypes.KEYWORD };\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tstream.goBack(4);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif(stream.advanceWhile(/^[^\\s}]/).length > 0) {\n\t\t\t\t\treturn { type: handlebarsTokenTypes.VARIABLE };\n\t\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\treturn super.tokenize(stream);\n\t}\n}\n\nexport class HandlebarsMode extends htmlMode.HTMLMode<htmlWorker.HTMLWorker> {\n\n\tconstructor(\n\t\tdescriptor:modes.IModeDescriptor,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IModeService modeService: IModeService,\n\t\t@IThreadService threadService: IThreadService\n\t) {\n\t\tsuper(descriptor, instantiationService, modeService, threadService);\n\t}\n\n\tprotected _registerSupports(): void {\n\t\tmodes.HoverProviderRegistry.register(this.getId(), {\n\t\t\tprovideHover: (model, position, token): Thenable<modes.Hover> => {\n\t\t\t\treturn wireCancellationToken(token, this._provideHover(model.uri, position));\n\t\t\t}\n\t\t}, true);\n\n\t\tmodes.ReferenceProviderRegistry.register(this.getId(), {\n\t\t\tprovideReferences: (model, position, context, token): Thenable<modes.Location[]> => {\n\t\t\t\treturn wireCancellationToken(token, this._provideReferences(model.uri, position, context));\n\t\t\t}\n\t\t}, true);\n\n\t\tmodes.SuggestRegistry.register(this.getId(), {\n\t\t\ttriggerCharacters: ['.', ':', '<', '\"', '=', '/'],\n\t\t\tshouldAutotriggerSuggest: true,\n\t\t\tprovideCompletionItems: (model, position, token): Thenable<modes.ISuggestResult[]> => {\n\t\t\t\treturn wireCancellationToken(token, this._provideCompletionItems(model.uri, position));\n\t\t\t}\n\t\t}, true);\n\n\t\tmodes.DocumentHighlightProviderRegistry.register(this.getId(), {\n\t\t\tprovideDocumentHighlights: (model, position, token): Thenable<modes.DocumentHighlight[]> => {\n\t\t\t\treturn wireCancellationToken(token, this._provideDocumentHighlights(model.uri, position));\n\t\t\t}\n\t\t}, true);\n\n\t\tmodes.LinkProviderRegistry.register(this.getId(), {\n\t\t\tprovideLinks: (model, token): Thenable<modes.ILink[]> => {\n\t\t\t\treturn wireCancellationToken(token, this._provideLinks(model.uri));\n\t\t\t}\n\t\t}, true);\n\t}\n\n\tprotected _createRichEditSupport(): modes.IRichEditSupport {\n\t\treturn new RichEditSupport(this.getId(), null, {\n\n\t\t\twordPattern: createWordRegExp('#-?%'),\n\n\t\t\tcomments: {\n\t\t\t\tblockComment: ['<!--', '-->']\n\t\t\t},\n\n\t\t\tbrackets: [\n\t\t\t\t['<!--', '-->'],\n\t\t\t\t['{{', '}}']\n\t\t\t],\n\n\t\t\t__electricCharacterSupport: {\n\t\t\t\tcaseInsensitive: true,\n\t\t\t\tembeddedElectricCharacters: ['*', '}', ']', ')']\n\t\t\t},\n\n\t\t\tautoClosingPairs: [\n\t\t\t\t{ open: '{', close: '}' },\n\t\t\t\t{ open: '[', close: ']' },\n\t\t\t\t{ open: '(', close: ')' },\n\t\t\t\t{ open: '\"', close: '\"' },\n\t\t\t\t{ open: '\\'', close: '\\'' }\n\t\t\t],\n\t\t\t\n\t\t\tsurroundingPairs: [\n\t\t\t\t{ open: '<', close: '>' },\n\t\t\t\t{ open: '\"', close: '\"' },\n\t\t\t\t{ open: '\\'', close: '\\'' }\n\t\t\t],\n\n\t\t\tonEnterRules: [\n\t\t\t\t{\n\t\t\t\t\tbeforeText: new RegExp(`<(?!(?:${htmlMode.EMPTY_ELEMENTS.join('|')}))(\\\\w[\\\\w\\\\d]*)([^/>]*(?!/)>)[^<]*$`, 'i'),\n\t\t\t\t\tafterText: /^<\\/(\\w[\\w\\d]*)\\s*>$/i,\n\t\t\t\t\taction: { indentAction: modes.IndentAction.IndentOutdent }\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tbeforeText: new RegExp(`<(?!(?:${htmlMode.EMPTY_ELEMENTS.join('|')}))(\\\\w[\\\\w\\\\d]*)([^/>]*(?!/)>)[^<]*$`, 'i'),\n\t\t\t\t\taction: { indentAction: modes.IndentAction.Indent }\n\t\t\t\t}\n\t\t\t],\n\t\t});\n\t}\n\n\tpublic getInitialState() : modes.IState {\n\t\treturn new HandlebarsState(this, htmlMode.States.Content, States.HTML, '', '', '', '', '');\n\t}\n\n\tpublic getLeavingNestedModeData(line:string, state:modes.IState):ILeavingNestedModeData {\n\t\tvar leavingNestedModeData = super.getLeavingNestedModeData(line, state);\n\t\tif (leavingNestedModeData) {\n\t\t\tleavingNestedModeData.stateAfterNestedMode = new HandlebarsState(this, htmlMode.States.Content, States.HTML, '', '', '', '', '');\n\t\t}\n\t\treturn leavingNestedModeData;\n\t}\n}\n"]}