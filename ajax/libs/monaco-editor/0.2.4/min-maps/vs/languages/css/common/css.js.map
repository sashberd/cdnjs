{"version":3,"sources":["vs/languages/css/common/css.js","vs/languages/css/common/file:/C:/Alex/src/vscode/src/vs/languages/css/common/cssTokenTypes.ts","vs/languages/css/common/file:/C:/Alex/src/vscode/src/vs/languages/css/common/css.ts"],"names":["define","require","exports","TOKEN_SELECTOR","TOKEN_SELECTOR_TAG","TOKEN_PROPERTY","TOKEN_VALUE","TOKEN_AT_KEYWORD","__extends","this","d","b","__","constructor","p","hasOwnProperty","prototype","Object","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","objects","modes","threadService_1","cssTokenTypes","abstractMode_1","abstractState_1","instantiation_1","thread_1","richEditSupport_1","tokenizationSupport_1","async_1","States","identRegEx","State","_super","mode","kind","inComment","quote","inMeta","metaBraceCount","call","nextState","next","token","makeClone","getMode","equals","other","tokenizeInComment","stream","test","advanceUntilString","type","tokenizeInString","ch","afterBackslash","eos","consumeIdent","goBack","advanceIfRegExp2","advance","tokenize","skipWhitespace2","advanceIfString2","ValuePostUrl","ValueInUrlFunction","Value","MetaPostUrl","MetaInUrlFunction","Meta","Selector","Rule","advanceIfStringCaseInsensitive2","peek","Unit","AbstractState","CSSMode","descriptor","instantiationService","threadService","_this","id","_modeWorkerManager","ModeWorkerManager","_threadService","tokenizationSupport","TokenizationSupport","getInitialState","richEditSupport","RichEditSupport","getId","wordPattern","comments","blockComment","brackets","autoClosingPairs","open","close","notIn","inplaceReplaceSupport","configSupport","DocumentHighlightProviderRegistry","register","provideDocumentHighlights","model","position","wireCancellationToken","_provideDocumentHighlights","uri","HoverProviderRegistry","provideHover","_provideHover","ReferenceProviderRegistry","provideReferences","context","_provideReferences","DocumentSymbolProviderRegistry","provideDocumentSymbols","_provideDocumentSymbols","DefinitionProviderRegistry","provideDefinition","_provideDefinition","SuggestRegistry","triggerCharacters","shouldAutotriggerSuggest","provideCompletionItems","_provideCompletionItems","CodeActionProviderRegistry","provideCodeActions","range","_provideCodeActions","creationDone","isInMainThread","_pickAWorkerToValidate","_worker","runner","worker","configure","options","_configureWorkers","w","_doConfigure","navigateValueSet","resource","up","enableValidator","findColorDeclarations","marker","$_configureWorkers","AllWorkersAttr","$navigateValueSet","OneWorkerAttr","$_pickAWorkerToValidate","ThreadAffinity","Group1","$_provideDocumentHighlights","$_provideCompletionItems","$_provideDefinition","$_provideHover","$_provideReferences","$_provideDocumentSymbols","$findColorDeclarations","IInstantiationService","IThreadService","AbstractMode"],"mappings":"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","file":"vs/languages/css/common/css.js","sourcesContent":["/*!-----------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.2.3(84e204b238a1eff25d4c6f611fdcd76a494005a7)\n * Released under the MIT license\n * https://github.com/Microsoft/vscode/blob/master/LICENSE.txt\n *-----------------------------------------------------------*/\n\ndefine(\"vs/languages/css/common/cssTokenTypes\", [\"require\", \"exports\"], function (require, exports) {\r\n    /*---------------------------------------------------------------------------------------------\r\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n     *--------------------------------------------------------------------------------------------*/\r\n    'use strict';\r\n    exports.TOKEN_SELECTOR = 'entity.name.selector';\r\n    exports.TOKEN_SELECTOR_TAG = 'entity.name.tag';\r\n    exports.TOKEN_PROPERTY = 'support.type.property-name';\r\n    exports.TOKEN_VALUE = 'support.property-value';\r\n    exports.TOKEN_AT_KEYWORD = 'keyword.control.at-rule';\r\n});\r\n\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\ndefine(\"vs/languages/css/common/css\", [\"require\", \"exports\", 'vs/base/common/objects', 'vs/editor/common/modes', 'vs/platform/thread/common/threadService', 'vs/languages/css/common/cssTokenTypes', 'vs/editor/common/modes/abstractMode', 'vs/editor/common/modes/abstractState', 'vs/platform/instantiation/common/instantiation', 'vs/platform/thread/common/thread', 'vs/editor/common/modes/supports/richEditSupport', 'vs/editor/common/modes/supports/tokenizationSupport', 'vs/base/common/async'], function (require, exports, objects, modes, threadService_1, cssTokenTypes, abstractMode_1, abstractState_1, instantiation_1, thread_1, richEditSupport_1, tokenizationSupport_1, async_1) {\r\n    /*---------------------------------------------------------------------------------------------\r\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n     *--------------------------------------------------------------------------------------------*/\r\n    'use strict';\r\n    exports.cssTokenTypes = cssTokenTypes;\r\n    (function (States) {\r\n        States[States[\"Selector\"] = 0] = \"Selector\";\r\n        States[States[\"Rule\"] = 1] = \"Rule\";\r\n        States[States[\"Value\"] = 2] = \"Value\";\r\n        States[States[\"ValuePostUrl\"] = 3] = \"ValuePostUrl\";\r\n        States[States[\"ValueInUrlFunction\"] = 4] = \"ValueInUrlFunction\";\r\n        States[States[\"Unit\"] = 5] = \"Unit\";\r\n        States[States[\"Meta\"] = 6] = \"Meta\";\r\n        States[States[\"MetaPostUrl\"] = 7] = \"MetaPostUrl\";\r\n        States[States[\"MetaInUrlFunction\"] = 8] = \"MetaInUrlFunction\";\r\n    })(exports.States || (exports.States = {}));\r\n    var States = exports.States;\r\n    var identRegEx = /^-?-?([a-zA-Z]|(\\\\(([0-9a-fA-F]{1,6}\\s?)|[^[0-9a-fA-F])))([\\w\\-]|(\\\\(([0-9a-fA-F]{1,6}\\s?)|[^[0-9a-fA-F])))*/;\r\n    var State = (function (_super) {\r\n        __extends(State, _super);\r\n        function State(mode, kind, inComment, quote, inMeta, metaBraceCount) {\r\n            _super.call(this, mode);\r\n            this.kind = kind;\r\n            this.inComment = inComment;\r\n            this.quote = quote;\r\n            this.inMeta = inMeta;\r\n            this.metaBraceCount = metaBraceCount;\r\n        }\r\n        State.prototype.nextState = function (next, token) {\r\n            this.kind = next;\r\n            return token;\r\n        };\r\n        State.prototype.makeClone = function () {\r\n            return new State(this.getMode(), this.kind, this.inComment, this.quote, this.inMeta, this.metaBraceCount);\r\n        };\r\n        State.prototype.equals = function (other) {\r\n            return _super.prototype.equals.call(this, other) && objects.equals(this, other);\r\n        };\r\n        State.prototype.tokenizeInComment = function (stream) {\r\n            if (/\\*\\/$/.test(stream.advanceUntilString('*/', true))) {\r\n                this.inComment = false;\r\n            }\r\n            return { type: 'comment.css' };\r\n        };\r\n        State.prototype.tokenizeInString = function (stream) {\r\n            var ch, afterBackslash = false, quote = this.quote;\r\n            while (!stream.eos()) {\r\n                ch = stream.next();\r\n                if (afterBackslash) {\r\n                    // Ignore any character after \\\r\n                    afterBackslash = false;\r\n                }\r\n                else if (ch === '\\\\') {\r\n                    // Mark next character for ignoring\r\n                    afterBackslash = true;\r\n                }\r\n                else if (ch === quote) {\r\n                    // Matching quote found\r\n                    this.quote = null;\r\n                    break;\r\n                }\r\n            }\r\n            return { type: 'string.css' };\r\n        };\r\n        State.prototype.consumeIdent = function (stream) {\r\n            stream.goBack(1);\r\n            if (stream.advanceIfRegExp2(identRegEx)) {\r\n                return true;\r\n            }\r\n            stream.advance(1);\r\n            return false;\r\n        };\r\n        State.prototype.tokenize = function (stream) {\r\n            if (this.inComment) {\r\n                return this.tokenizeInComment(stream);\r\n            }\r\n            if (this.quote !== null) {\r\n                return this.tokenizeInString(stream);\r\n            }\r\n            if (stream.skipWhitespace2()) {\r\n                return { type: '' };\r\n            }\r\n            if (stream.advanceIfString2('/*')) {\r\n                this.inComment = true;\r\n                return this.tokenizeInComment(stream);\r\n            }\r\n            if (stream.advanceIfString2('\\'')) {\r\n                this.quote = '\\'';\r\n                return this.tokenizeInString(stream);\r\n            }\r\n            if (stream.advanceIfString2('\\\"')) {\r\n                this.quote = '\\\"';\r\n                return this.tokenizeInString(stream);\r\n            }\r\n            var ch = stream.next();\r\n            // These states can immediately transition to States.Value or Meta (without consuming ch), that's why they're handled above the switch stmt.\r\n            switch (this.kind) {\r\n                case States.ValuePostUrl:\r\n                    if (ch === '(') {\r\n                        return this.nextState(States.ValueInUrlFunction, { type: 'punctuation.parenthesis.css' });\r\n                    }\r\n                    this.kind = States.Value;\r\n                    break;\r\n                case States.MetaPostUrl:\r\n                    if (ch === '(') {\r\n                        return this.nextState(States.MetaInUrlFunction, { type: 'punctuation.parenthesis.css' });\r\n                    }\r\n                    this.kind = States.Meta;\r\n                    break;\r\n                case States.ValueInUrlFunction:\r\n                case States.MetaInUrlFunction:\r\n                    // This state is after 'url(' was encountered in the value\r\n                    if (ch !== ')') {\r\n                        stream.advanceIfRegExp2(/^[^\\)]*/);\r\n                        return { type: 'string.css' };\r\n                    }\r\n                    this.kind = (this.kind === States.ValueInUrlFunction) ? States.Value : States.Meta;\r\n                    break;\r\n            }\r\n            switch (this.kind) {\r\n                case States.Selector:\r\n                    if (ch === '{') {\r\n                        return this.nextState(States.Rule, { type: 'punctuation.bracket.css' });\r\n                    }\r\n                    if (ch === '(' || ch === ')') {\r\n                        return { type: 'punctuation.parenthesis.css' };\r\n                    }\r\n                    if (ch === '@' && !this.inMeta) {\r\n                        stream.advanceIfRegExp2(identRegEx);\r\n                        return this.nextState(States.Meta, { type: cssTokenTypes.TOKEN_AT_KEYWORD + '.css' });\r\n                    }\r\n                    if (ch === '}' && this.inMeta) {\r\n                        this.inMeta = false;\r\n                        return this.nextState(States.Selector, { type: 'punctuation.bracket.css' });\r\n                    }\r\n                    if (/[\\*\\(\\)\\[\\]\\+>=\\~\\|;]/.test(ch)) {\r\n                        return { type: 'punctuation.css' };\r\n                    }\r\n                    if (ch === '#') {\r\n                        stream.advanceIfRegExp2(identRegEx);\r\n                        return { type: cssTokenTypes.TOKEN_SELECTOR + '.id.css' };\r\n                    }\r\n                    if (ch === '.') {\r\n                        stream.advanceIfRegExp2(identRegEx);\r\n                        return { type: cssTokenTypes.TOKEN_SELECTOR + '.class.css' };\r\n                    }\r\n                    this.consumeIdent(stream);\r\n                    return { type: cssTokenTypes.TOKEN_SELECTOR_TAG + '.css' };\r\n                case States.Meta:\r\n                    if (ch === '{') {\r\n                        var nextState = States.Rule;\r\n                        if (this.inMeta) {\r\n                            nextState = States.Selector;\r\n                        }\r\n                        return this.nextState(nextState, { type: 'punctuation.bracket.css' });\r\n                    }\r\n                    if (ch === '(' || ch === ')') {\r\n                        return { type: 'punctuation.parenthesis.css' };\r\n                    }\r\n                    if (ch === ';') {\r\n                        if (this.metaBraceCount === 0) {\r\n                            this.inMeta = false;\r\n                        }\r\n                        return this.nextState(States.Selector, { type: 'punctuation.css' });\r\n                    }\r\n                    if ((ch === 'u' || ch === 'U') && stream.advanceIfStringCaseInsensitive2('rl')) {\r\n                        stream.advanceIfStringCaseInsensitive2('-prefix'); // support 'url-prefix' (part of @-mox-document)\r\n                        return this.nextState(States.MetaPostUrl, { type: cssTokenTypes.TOKEN_VALUE + '.css' });\r\n                    }\r\n                    if (/[\\*\\(\\)\\[\\]\\+>=\\~\\|]/.test(ch)) {\r\n                        return { type: 'punctuation.css' };\r\n                    }\r\n                    this.inMeta = true;\r\n                    this.consumeIdent(stream);\r\n                    return { type: cssTokenTypes.TOKEN_VALUE + '.css' };\r\n                case States.Rule:\r\n                    if (ch === '}') {\r\n                        return this.nextState(States.Selector, { type: 'punctuation.bracket.css' });\r\n                    }\r\n                    if (ch === ':') {\r\n                        return this.nextState(States.Value, { type: 'punctuation.css' });\r\n                    }\r\n                    if (ch === '(' || ch === ')') {\r\n                        return { type: 'punctuation.parenthesis.css' };\r\n                    }\r\n                    this.consumeIdent(stream);\r\n                    return { type: cssTokenTypes.TOKEN_PROPERTY + '.css' };\r\n                case States.Value:\r\n                    if (ch === '}') {\r\n                        return this.nextState(States.Selector, { type: 'punctuation.bracket.css' });\r\n                    }\r\n                    if (ch === ';') {\r\n                        return this.nextState(States.Rule, { type: 'punctuation.css' });\r\n                    }\r\n                    if ((ch === 'u' || ch === 'U') && stream.advanceIfStringCaseInsensitive2('rl')) {\r\n                        return this.nextState(States.ValuePostUrl, { type: cssTokenTypes.TOKEN_VALUE + '.css' });\r\n                    }\r\n                    if (ch === '(' || ch === ')') {\r\n                        return { type: 'punctuation.parenthesis.css' };\r\n                    }\r\n                    if (ch === ',') {\r\n                        return { type: 'punctuation.css' };\r\n                    }\r\n                    if (ch === '#') {\r\n                        stream.advanceIfRegExp2(/^[\\w]*/);\r\n                        return { type: cssTokenTypes.TOKEN_VALUE + '.hex.css' };\r\n                    }\r\n                    if (/\\d/.test(ch) || (/-|\\+/.test(ch) && !stream.eos() && /\\d/.test(stream.peek()))) {\r\n                        stream.advanceIfRegExp2(/^[\\d\\.]*/);\r\n                        return this.nextState(States.Unit, { type: cssTokenTypes.TOKEN_VALUE + '.numeric.css' });\r\n                    }\r\n                    if (ch === '!') {\r\n                        return { type: cssTokenTypes.TOKEN_VALUE + '.keyword.css' }; // !\r\n                    }\r\n                    if ((ch === 'i' || ch === 'I') && stream.advanceIfStringCaseInsensitive2('mportant')) {\r\n                        return { type: cssTokenTypes.TOKEN_VALUE + '.keyword.css' }; // important\r\n                    }\r\n                    if (this.consumeIdent(stream)) {\r\n                        return { type: cssTokenTypes.TOKEN_VALUE + '.css' };\r\n                    }\r\n                    break;\r\n                case States.Unit:\r\n                    // css units - see: http://www.w3.org/TR/css3-values/#font-relative-lengths\r\n                    stream.goBack(1);\r\n                    if (stream.advanceIfRegExp2(/^(em|ex|ch|rem|vw|vh|vm|cm|mm|in|px|pt|pc|deg|grad|rad|turn|s|ms|Hz|kHz|%)/)) {\r\n                        return { type: cssTokenTypes.TOKEN_VALUE + '.unit.css' };\r\n                    }\r\n                    // no unit, back to value state\r\n                    this.nextState(States.Value, null);\r\n                    return this.tokenize(stream);\r\n            }\r\n            return { type: '' };\r\n        };\r\n        return State;\r\n    }(abstractState_1.AbstractState));\r\n    exports.State = State;\r\n    var CSSMode = (function (_super) {\r\n        __extends(CSSMode, _super);\r\n        function CSSMode(descriptor, instantiationService, threadService) {\r\n            var _this = this;\r\n            _super.call(this, descriptor.id);\r\n            this._modeWorkerManager = new abstractMode_1.ModeWorkerManager(descriptor, 'vs/languages/css/common/cssWorker', 'CSSWorker', null, instantiationService);\r\n            this._threadService = threadService;\r\n            this.tokenizationSupport = new tokenizationSupport_1.TokenizationSupport(this, {\r\n                getInitialState: function () { return new State(_this, States.Selector, false, null, false, 0); }\r\n            }, false, false);\r\n            this.richEditSupport = new richEditSupport_1.RichEditSupport(this.getId(), null, {\r\n                // TODO@Martin: This definition does not work with umlauts for example\r\n                wordPattern: /(#?-?\\d*\\.\\d\\w*%?)|((::|[@#.!:])?[\\w-?]+%?)|::|[@#.!:]/g,\r\n                comments: {\r\n                    blockComment: ['/*', '*/']\r\n                },\r\n                brackets: [\r\n                    ['{', '}'],\r\n                    ['[', ']'],\r\n                    ['(', ')']\r\n                ],\r\n                autoClosingPairs: [\r\n                    { open: '{', close: '}' },\r\n                    { open: '[', close: ']' },\r\n                    { open: '(', close: ')' },\r\n                    { open: '\"', close: '\"', notIn: ['string'] },\r\n                    { open: '\\'', close: '\\'', notIn: ['string'] }\r\n                ]\r\n            });\r\n            this.inplaceReplaceSupport = this;\r\n            this.configSupport = this;\r\n            modes.DocumentHighlightProviderRegistry.register(this.getId(), {\r\n                provideDocumentHighlights: function (model, position, token) {\r\n                    return async_1.wireCancellationToken(token, _this._provideDocumentHighlights(model.uri, position));\r\n                }\r\n            }, true);\r\n            modes.HoverProviderRegistry.register(this.getId(), {\r\n                provideHover: function (model, position, token) {\r\n                    return async_1.wireCancellationToken(token, _this._provideHover(model.uri, position));\r\n                }\r\n            }, true);\r\n            modes.ReferenceProviderRegistry.register(this.getId(), {\r\n                provideReferences: function (model, position, context, token) {\r\n                    return async_1.wireCancellationToken(token, _this._provideReferences(model.uri, position));\r\n                }\r\n            }, true);\r\n            modes.DocumentSymbolProviderRegistry.register(this.getId(), {\r\n                provideDocumentSymbols: function (model, token) {\r\n                    return async_1.wireCancellationToken(token, _this._provideDocumentSymbols(model.uri));\r\n                }\r\n            }, true);\r\n            modes.DefinitionProviderRegistry.register(this.getId(), {\r\n                provideDefinition: function (model, position, token) {\r\n                    return async_1.wireCancellationToken(token, _this._provideDefinition(model.uri, position));\r\n                }\r\n            }, true);\r\n            modes.SuggestRegistry.register(this.getId(), {\r\n                triggerCharacters: [' ', ':'],\r\n                shouldAutotriggerSuggest: true,\r\n                provideCompletionItems: function (model, position, token) {\r\n                    return async_1.wireCancellationToken(token, _this._provideCompletionItems(model.uri, position));\r\n                }\r\n            }, true);\r\n            modes.CodeActionProviderRegistry.register(this.getId(), {\r\n                provideCodeActions: function (model, range, token) {\r\n                    return async_1.wireCancellationToken(token, _this._provideCodeActions(model.uri, range));\r\n                }\r\n            }, true);\r\n        }\r\n        CSSMode.prototype.creationDone = function () {\r\n            if (this._threadService.isInMainThread) {\r\n                // Pick a worker to do validation\r\n                this._pickAWorkerToValidate();\r\n            }\r\n        };\r\n        CSSMode.prototype._worker = function (runner) {\r\n            return this._modeWorkerManager.worker(runner);\r\n        };\r\n        CSSMode.prototype.configure = function (options) {\r\n            if (this._threadService.isInMainThread) {\r\n                return this._configureWorkers(options);\r\n            }\r\n            else {\r\n                return this._worker(function (w) { return w._doConfigure(options); });\r\n            }\r\n        };\r\n        CSSMode.prototype._configureWorkers = function (options) {\r\n            return this._worker(function (w) { return w._doConfigure(options); });\r\n        };\r\n        CSSMode.prototype.navigateValueSet = function (resource, position, up) {\r\n            return this._worker(function (w) { return w.navigateValueSet(resource, position, up); });\r\n        };\r\n        CSSMode.prototype._pickAWorkerToValidate = function () {\r\n            return this._worker(function (w) { return w.enableValidator(); });\r\n        };\r\n        CSSMode.prototype._provideDocumentHighlights = function (resource, position) {\r\n            return this._worker(function (w) { return w.provideDocumentHighlights(resource, position); });\r\n        };\r\n        CSSMode.prototype._provideCompletionItems = function (resource, position) {\r\n            return this._worker(function (w) { return w.provideCompletionItems(resource, position); });\r\n        };\r\n        CSSMode.prototype._provideDefinition = function (resource, position) {\r\n            return this._worker(function (w) { return w.provideDefinition(resource, position); });\r\n        };\r\n        CSSMode.prototype._provideHover = function (resource, position) {\r\n            return this._worker(function (w) { return w.provideHover(resource, position); });\r\n        };\r\n        CSSMode.prototype._provideReferences = function (resource, position) {\r\n            return this._worker(function (w) { return w.provideReferences(resource, position); });\r\n        };\r\n        CSSMode.prototype._provideDocumentSymbols = function (resource) {\r\n            return this._worker(function (w) { return w.provideDocumentSymbols(resource); });\r\n        };\r\n        CSSMode.prototype.findColorDeclarations = function (resource) {\r\n            return this._worker(function (w) { return w.findColorDeclarations(resource); });\r\n        };\r\n        CSSMode.prototype._provideCodeActions = function (resource, marker) {\r\n            return this._worker(function (w) { return w.provideCodeActions(resource, marker); });\r\n        };\r\n        CSSMode.$_configureWorkers = threadService_1.AllWorkersAttr(CSSMode, CSSMode.prototype._configureWorkers);\r\n        CSSMode.$navigateValueSet = threadService_1.OneWorkerAttr(CSSMode, CSSMode.prototype.navigateValueSet);\r\n        CSSMode.$_pickAWorkerToValidate = threadService_1.OneWorkerAttr(CSSMode, CSSMode.prototype._pickAWorkerToValidate, thread_1.ThreadAffinity.Group1);\r\n        CSSMode.$_provideDocumentHighlights = threadService_1.OneWorkerAttr(CSSMode, CSSMode.prototype._provideDocumentHighlights);\r\n        CSSMode.$_provideCompletionItems = threadService_1.OneWorkerAttr(CSSMode, CSSMode.prototype._provideCompletionItems);\r\n        CSSMode.$_provideDefinition = threadService_1.OneWorkerAttr(CSSMode, CSSMode.prototype._provideDefinition);\r\n        CSSMode.$_provideHover = threadService_1.OneWorkerAttr(CSSMode, CSSMode.prototype._provideHover);\r\n        CSSMode.$_provideReferences = threadService_1.OneWorkerAttr(CSSMode, CSSMode.prototype._provideReferences);\r\n        CSSMode.$_provideDocumentSymbols = threadService_1.OneWorkerAttr(CSSMode, CSSMode.prototype._provideDocumentSymbols);\r\n        CSSMode.$findColorDeclarations = threadService_1.OneWorkerAttr(CSSMode, CSSMode.prototype.findColorDeclarations);\r\n        CSSMode._provideCodeActions = threadService_1.OneWorkerAttr(CSSMode, CSSMode.prototype._provideCodeActions);\r\n        CSSMode = __decorate([\r\n            __param(1, instantiation_1.IInstantiationService),\r\n            __param(2, thread_1.IThreadService)\r\n        ], CSSMode);\r\n        return CSSMode;\r\n    }(abstractMode_1.AbstractMode));\r\n    exports.CSSMode = CSSMode;\r\n});\r\n\n\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nexport const TOKEN_SELECTOR = 'entity.name.selector';\nexport const TOKEN_SELECTOR_TAG = 'entity.name.tag';\nexport const TOKEN_PROPERTY =  'support.type.property-name';\nexport const TOKEN_VALUE =  'support.property-value';\nexport const TOKEN_AT_KEYWORD = 'keyword.control.at-rule';\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport WinJS = require('vs/base/common/winjs.base');\nimport objects = require('vs/base/common/objects');\nimport URI from 'vs/base/common/uri';\nimport editorCommon = require('vs/editor/common/editorCommon');\nimport modes = require('vs/editor/common/modes');\nimport {OneWorkerAttr, AllWorkersAttr} from 'vs/platform/thread/common/threadService';\nimport cssWorker = require('vs/languages/css/common/cssWorker');\nimport cssTokenTypes = require('vs/languages/css/common/cssTokenTypes');\nimport {AbstractMode, ModeWorkerManager} from 'vs/editor/common/modes/abstractMode';\nimport {AbstractState} from 'vs/editor/common/modes/abstractState';\nimport {IMarker} from 'vs/platform/markers/common/markers';\nimport {IInstantiationService} from 'vs/platform/instantiation/common/instantiation';\nimport {IThreadService, ThreadAffinity} from 'vs/platform/thread/common/thread';\nimport {RichEditSupport} from 'vs/editor/common/modes/supports/richEditSupport';\nimport {TokenizationSupport} from 'vs/editor/common/modes/supports/tokenizationSupport';\nimport {wireCancellationToken} from 'vs/base/common/async';\n\nexport enum States {\n\tSelector,\n\tRule,\n\tValue,\n\tValuePostUrl,\n\tValueInUrlFunction,\n\tUnit,\n\tMeta,\n\tMetaPostUrl,\n\tMetaInUrlFunction,\n}\n\nexport { cssTokenTypes };\n\nvar identRegEx = /^-?-?([a-zA-Z]|(\\\\(([0-9a-fA-F]{1,6}\\s?)|[^[0-9a-fA-F])))([\\w\\-]|(\\\\(([0-9a-fA-F]{1,6}\\s?)|[^[0-9a-fA-F])))*/;\n\nexport class State extends AbstractState {\n\n\tpublic kind:States;\n\tpublic inComment:boolean;\n\tpublic quote:string;\n\tpublic inMeta:boolean;\n\tpublic metaBraceCount: number;\n\n\tconstructor(mode:modes.IMode, kind:States, inComment:boolean, quote:string, inMeta:boolean, metaBraceCount: number) {\n\t\tsuper(mode);\n\t\tthis.kind = kind;\n\t\tthis.inComment = inComment;\n\t\tthis.quote = quote;\n\t\tthis.inMeta = inMeta;\n\t\tthis.metaBraceCount = metaBraceCount;\n\t}\n\n\tprivate nextState(next:States, token:modes.ITokenizationResult):modes.ITokenizationResult {\n\t\tthis.kind = next;\n\t\treturn token;\n\t}\n\n\tpublic makeClone():State {\n\t\treturn new State(this.getMode(), this.kind, this.inComment, this.quote, this.inMeta, this.metaBraceCount);\n\t}\n\n\tpublic equals(other:modes.IState):boolean {\n\t\treturn super.equals(other) && objects.equals(this, other);\n\t}\n\n\tprivate tokenizeInComment(stream:modes.IStream):modes.ITokenizationResult {\n\t\tif (/\\*\\/$/.test(stream.advanceUntilString('*/', true))) {\n\t\t\tthis.inComment = false;\n\t\t}\n\t\treturn { type:'comment.css' };\n\t}\n\n\tprivate tokenizeInString(stream:modes.IStream):modes.ITokenizationResult {\n\t\tvar ch:string, afterBackslash = false, quote = this.quote;\n\n\t\twhile (!stream.eos()) {\n\t\t\tch = stream.next();\n\n\t\t\tif (afterBackslash) {\n\t\t\t\t// Ignore any character after \\\n\t\t\t\tafterBackslash = false;\n\t\t\t} else if (ch === '\\\\') {\n\t\t\t\t// Mark next character for ignoring\n\t\t\t\tafterBackslash = true;\n\t\t\t} else if (ch === quote) {\n\t\t\t\t// Matching quote found\n\t\t\t\tthis.quote = null;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn { type:'string.css' };\n\t}\n\n\tprivate consumeIdent(stream:modes.IStream) {\n\t\tstream.goBack(1);\n\t\tif (stream.advanceIfRegExp2(identRegEx)) {\n\t\t\treturn true;\n\t\t}\n\t\tstream.advance(1);\n\t\treturn false;\n\t}\n\n\tpublic tokenize(stream:modes.IStream):modes.ITokenizationResult {\n\t\tif (this.inComment) {\n\t\t\treturn this.tokenizeInComment(stream);\n\t\t}\n\t\tif (this.quote !== null) {\n\t\t\treturn this.tokenizeInString(stream);\n\t\t}\n\t\tif (stream.skipWhitespace2()) {\n\t\t\treturn { type:'' };\n\t\t}\n\t\tif (stream.advanceIfString2('/*')) {\n\t\t\tthis.inComment = true;\n\t\t\treturn this.tokenizeInComment(stream);\n\t\t}\n\t\tif (stream.advanceIfString2('\\'')) {\n\t\t\tthis.quote = '\\'';\n\t\t\treturn this.tokenizeInString(stream);\n\t\t}\n\t\tif (stream.advanceIfString2('\\\"')) {\n\t\t\tthis.quote = '\\\"';\n\t\t\treturn this.tokenizeInString(stream);\n\t\t}\n\n\t\tvar ch = stream.next();\n\n\t\t// These states can immediately transition to States.Value or Meta (without consuming ch), that's why they're handled above the switch stmt.\n\t\tswitch (this.kind) {\n\t\t\tcase States.ValuePostUrl:\n\t\t\t\tif (ch === '(') {\n\t\t\t\t\treturn this.nextState(States.ValueInUrlFunction, { type: 'punctuation.parenthesis.css' });\n\t\t\t\t}\n\t\t\t\tthis.kind = States.Value;\n\t\t\t\tbreak;\n\t\t\tcase States.MetaPostUrl:\n\t\t\t\tif (ch === '(') {\n\t\t\t\t\treturn this.nextState(States.MetaInUrlFunction, { type: 'punctuation.parenthesis.css' });\n\t\t\t\t}\n\t\t\t\tthis.kind = States.Meta;\n\t\t\t\tbreak;\n\t\t\tcase States.ValueInUrlFunction:\n\t\t\tcase States.MetaInUrlFunction:\n\t\t\t\t// This state is after 'url(' was encountered in the value\n\t\t\t\tif (ch !== ')') {\n\t\t\t\t\tstream.advanceIfRegExp2(/^[^\\)]*/);\n\t\t\t\t\treturn { type: 'string.css' };\n\t\t\t\t}\n\t\t\t\tthis.kind = (this.kind === States.ValueInUrlFunction) ? States.Value : States.Meta;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tswitch (this.kind) {\n\t\t\tcase States.Selector:\n\t\t\t\tif (ch === '{') {\n\t\t\t\t\treturn this.nextState(States.Rule, { type: 'punctuation.bracket.css' });\n\t\t\t\t}\n\t\t\t\tif (ch === '(' || ch === ')') {\n\t\t\t\t\treturn { type: 'punctuation.parenthesis.css' };\n\t\t\t\t}\n\t\t\t\tif (ch === '@' && !this.inMeta) {  //@import, @media, @key-word-animation\n\t\t\t\t\tstream.advanceIfRegExp2(identRegEx);\n\t\t\t\t\treturn this.nextState(States.Meta, { type: cssTokenTypes.TOKEN_AT_KEYWORD + '.css' });\n\t\t\t\t}\n\t\t\t\tif (ch === '}' && this.inMeta) {  //@import, @media, @key-word-animation\n\t\t\t\t\tthis.inMeta = false;\n\t\t\t\t\treturn this.nextState(States.Selector, { type: 'punctuation.bracket.css' });\n\t\t\t\t}\n\t\t\t\tif (/[\\*\\(\\)\\[\\]\\+>=\\~\\|;]/.test(ch)) {\n\t\t\t\t\treturn { type: 'punctuation.css' };\n\t\t\t\t}\n\t\t\t\tif (ch === '#') {\n\t\t\t\t\tstream.advanceIfRegExp2(identRegEx);\n\t\t\t\t\treturn { type: cssTokenTypes.TOKEN_SELECTOR + '.id.css' };\n\t\t\t\t}\n\t\t\t\tif (ch === '.') {\n\t\t\t\t\tstream.advanceIfRegExp2(identRegEx);\n\t\t\t\t\treturn { type: cssTokenTypes.TOKEN_SELECTOR + '.class.css' };\n\t\t\t\t}\n\t\t\t\tthis.consumeIdent(stream);\n\t\t\t\treturn { type: cssTokenTypes.TOKEN_SELECTOR_TAG + '.css' };\n\n\t\t\tcase States.Meta:\n\t\t\t\tif (ch === '{') {\n\t\t\t\t\tvar nextState = States.Rule;\n\t\t\t\t\tif (this.inMeta) {\n\t\t\t\t\t\tnextState = States.Selector;\n\t\t\t\t\t}\n\t\t\t\t\treturn this.nextState(nextState, { type: 'punctuation.bracket.css' });\n\t\t\t\t}\n\t\t\t\tif (ch === '(' || ch === ')') {\n\t\t\t\t\treturn { type: 'punctuation.parenthesis.css' };\n\t\t\t\t}\n\t\t\t\tif (ch === ';') {\n\t\t\t\t\tif (this.metaBraceCount === 0) {\n\t\t\t\t\t\tthis.inMeta = false;\n\t\t\t\t\t}\n\t\t\t\t\treturn this.nextState(States.Selector, { type: 'punctuation.css' });\n\t\t\t\t}\n\t\t\t\tif ((ch === 'u' || ch === 'U') && stream.advanceIfStringCaseInsensitive2('rl')) {\n\t\t\t\t\tstream.advanceIfStringCaseInsensitive2('-prefix'); // support 'url-prefix' (part of @-mox-document)\n\t\t\t\t\treturn this.nextState(States.MetaPostUrl, { type: cssTokenTypes.TOKEN_VALUE + '.css' });\n\t\t\t\t}\n\t\t\t\tif (/[\\*\\(\\)\\[\\]\\+>=\\~\\|]/.test(ch)) {\n\t\t\t\t\treturn { type: 'punctuation.css' };\n\t\t\t\t}\n\t\t\t\tthis.inMeta = true;\n\t\t\t\tthis.consumeIdent(stream);\n\t\t\t\treturn { type: cssTokenTypes.TOKEN_VALUE + '.css' };\n\n\t\t\tcase States.Rule:\n\t\t\t\tif (ch === '}') {\n\t\t\t\t\treturn this.nextState(States.Selector, { type: 'punctuation.bracket.css' });\n\t\t\t\t}\n\t\t\t\tif (ch === ':') {\n\t\t\t\t\treturn this.nextState(States.Value, { type: 'punctuation.css' });\n\t\t\t\t}\n\t\t\t\tif (ch === '(' || ch === ')') {\n\t\t\t\t\treturn { type: 'punctuation.parenthesis.css' };\n\t\t\t\t}\n\t\t\t\tthis.consumeIdent(stream);\n\t\t\t\treturn { type: cssTokenTypes.TOKEN_PROPERTY + '.css' };\n\n\t\t\tcase States.Value:\n\t\t\t\tif (ch === '}') {\n\t\t\t\t\treturn this.nextState(States.Selector, { type: 'punctuation.bracket.css' });\n\t\t\t\t}\n\t\t\t\tif (ch === ';') {\n\t\t\t\t\treturn this.nextState(States.Rule, { type: 'punctuation.css' });\n\t\t\t\t}\n\t\t\t\tif ((ch === 'u' || ch === 'U') && stream.advanceIfStringCaseInsensitive2('rl')) {\n\t\t\t\t\treturn this.nextState(States.ValuePostUrl, { type: cssTokenTypes.TOKEN_VALUE + '.css' });\n\t\t\t\t}\n\n\t\t\t\tif (ch === '(' || ch === ')') {\n\t\t\t\t\treturn { type: 'punctuation.parenthesis.css' };\n\t\t\t\t}\n\t\t\t\tif (ch === ',') {\n\t\t\t\t\treturn { type: 'punctuation.css' };\n\t\t\t\t}\n\t\t\t\tif (ch === '#') {\n\t\t\t\t\tstream.advanceIfRegExp2(/^[\\w]*/);\n\t\t\t\t\treturn { type: cssTokenTypes.TOKEN_VALUE + '.hex.css' };\n\t\t\t\t}\n\t\t\t\tif (/\\d/.test(ch) || (/-|\\+/.test(ch) && !stream.eos() && /\\d/.test(stream.peek()))) {\n\t\t\t\t\tstream.advanceIfRegExp2(/^[\\d\\.]*/);\n\t\t\t\t\treturn this.nextState(States.Unit, { type: cssTokenTypes.TOKEN_VALUE + '.numeric.css' });\n\t\t\t\t}\n\t\t\t\tif (ch === '!') {\n\t\t\t\t\treturn { type: cssTokenTypes.TOKEN_VALUE + '.keyword.css' };  // !\n\t\t\t\t}\n\t\t\t\tif ((ch === 'i' || ch === 'I') && stream.advanceIfStringCaseInsensitive2('mportant')) {\n\t\t\t\t\treturn { type: cssTokenTypes.TOKEN_VALUE + '.keyword.css' };  // important\n\t\t\t\t}\n\t\t\t\tif (this.consumeIdent(stream)) {\n\t\t\t\t\treturn { type: cssTokenTypes.TOKEN_VALUE + '.css' };\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase States.Unit:\n\t\t\t\t// css units - see: http://www.w3.org/TR/css3-values/#font-relative-lengths\n\t\t\t\tstream.goBack(1);\n\t\t\t\tif(stream.advanceIfRegExp2(/^(em|ex|ch|rem|vw|vh|vm|cm|mm|in|px|pt|pc|deg|grad|rad|turn|s|ms|Hz|kHz|%)/)) {\n\t\t\t\t\treturn { type: cssTokenTypes.TOKEN_VALUE + '.unit.css' };\n\t\t\t\t}\n\t\t\t\t// no unit, back to value state\n\t\t\t\tthis.nextState(States.Value, null);\n\t\t\t\treturn this.tokenize(stream);\n\t\t}\n\t\treturn { type:'' };\n\t}\n}\n\nexport class CSSMode extends AbstractMode {\n\n\tpublic tokenizationSupport: modes.ITokenizationSupport;\n\tpublic richEditSupport: modes.IRichEditSupport;\n\tpublic inplaceReplaceSupport:modes.IInplaceReplaceSupport;\n\tpublic configSupport:modes.IConfigurationSupport;\n\n\tprivate _modeWorkerManager: ModeWorkerManager<cssWorker.CSSWorker>;\n\tprivate _threadService:IThreadService;\n\n\tconstructor(\n\t\tdescriptor:modes.IModeDescriptor,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IThreadService threadService: IThreadService\n\t) {\n\t\tsuper(descriptor.id);\n\t\tthis._modeWorkerManager = new ModeWorkerManager<cssWorker.CSSWorker>(descriptor, 'vs/languages/css/common/cssWorker', 'CSSWorker', null, instantiationService);\n\t\tthis._threadService = threadService;\n\n\t\tthis.tokenizationSupport = new TokenizationSupport(this, {\n\t\t\tgetInitialState: () => new State(this, States.Selector, false, null, false, 0)\n\t\t}, false, false);\n\n\t\tthis.richEditSupport = new RichEditSupport(this.getId(), null, {\n\t\t\t// TODO@Martin: This definition does not work with umlauts for example\n\t\t\twordPattern: /(#?-?\\d*\\.\\d\\w*%?)|((::|[@#.!:])?[\\w-?]+%?)|::|[@#.!:]/g,\n\n\t\t\tcomments: {\n\t\t\t\tblockComment: ['/*', '*/']\n\t\t\t},\n\n\t\t\tbrackets: [\n\t\t\t\t['{', '}'],\n\t\t\t\t['[', ']'],\n\t\t\t\t['(', ')']\n\t\t\t],\n\n\t\t\tautoClosingPairs: [\n\t\t\t\t{ open: '{', close: '}' },\n\t\t\t\t{ open: '[', close: ']' },\n\t\t\t\t{ open: '(', close: ')' },\n\t\t\t\t{ open: '\"', close: '\"', notIn: ['string'] },\n\t\t\t\t{ open: '\\'', close: '\\'', notIn: ['string'] }\n\t\t\t]\n\t\t});\n\n\t\tthis.inplaceReplaceSupport = this;\n\t\tthis.configSupport = this;\n\n\t\tmodes.DocumentHighlightProviderRegistry.register(this.getId(), {\n\t\t\tprovideDocumentHighlights: (model, position, token): Thenable<modes.DocumentHighlight[]> => {\n\t\t\t\treturn wireCancellationToken(token, this._provideDocumentHighlights(model.uri, position));\n\t\t\t}\n\t\t}, true);\n\n\t\tmodes.HoverProviderRegistry.register(this.getId(), {\n\t\t\tprovideHover: (model, position, token): Thenable<modes.Hover> => {\n\t\t\t\treturn wireCancellationToken(token, this._provideHover(model.uri, position));\n\t\t\t}\n\t\t}, true);\n\n\t\tmodes.ReferenceProviderRegistry.register(this.getId(), {\n\t\t\tprovideReferences: (model, position, context, token): Thenable<modes.Location[]> => {\n\t\t\t\treturn wireCancellationToken(token, this._provideReferences(model.uri, position));\n\t\t\t}\n\t\t}, true);\n\n\t\tmodes.DocumentSymbolProviderRegistry.register(this.getId(), {\n\t\t\tprovideDocumentSymbols: (model, token): Thenable<modes.SymbolInformation[]> => {\n\t\t\t\treturn wireCancellationToken(token, this._provideDocumentSymbols(model.uri));\n\t\t\t}\n\t\t}, true);\n\n\t\tmodes.DefinitionProviderRegistry.register(this.getId(), {\n\t\t\tprovideDefinition: (model, position, token): Thenable<modes.Definition> => {\n\t\t\t\treturn wireCancellationToken(token, this._provideDefinition(model.uri, position));\n\t\t\t}\n\t\t}, true);\n\n\t\tmodes.SuggestRegistry.register(this.getId(), {\n\t\t\ttriggerCharacters: [' ', ':'],\n\t\t\tshouldAutotriggerSuggest: true,\n\t\t\tprovideCompletionItems: (model, position, token): Thenable<modes.ISuggestResult[]> => {\n\t\t\t\treturn wireCancellationToken(token, this._provideCompletionItems(model.uri, position));\n\t\t\t}\n\t\t}, true);\n\n\t\tmodes.CodeActionProviderRegistry.register(this.getId(), {\n\t\t\tprovideCodeActions: (model, range, token): Thenable<modes.IQuickFix[]> => {\n\t\t\t\treturn wireCancellationToken(token, this._provideCodeActions(model.uri, range));\n\t\t\t}\n\t\t}, true);\n\t}\n\n\tpublic creationDone(): void {\n\t\tif (this._threadService.isInMainThread) {\n\t\t\t// Pick a worker to do validation\n\t\t\tthis._pickAWorkerToValidate();\n\t\t}\n\t}\n\n\tprivate _worker<T>(runner:(worker:cssWorker.CSSWorker)=>WinJS.TPromise<T>): WinJS.TPromise<T> {\n\t\treturn this._modeWorkerManager.worker(runner);\n\t}\n\n\tpublic configure(options:any): WinJS.TPromise<void> {\n\t\tif (this._threadService.isInMainThread) {\n\t\t\treturn this._configureWorkers(options);\n\t\t} else {\n\t\t\treturn this._worker((w) => w._doConfigure(options));\n\t\t}\n\t}\n\n\tstatic $_configureWorkers = AllWorkersAttr(CSSMode, CSSMode.prototype._configureWorkers);\n\tprivate _configureWorkers(options:any): WinJS.TPromise<void> {\n\t\treturn this._worker((w) => w._doConfigure(options));\n\t}\n\n\tstatic $navigateValueSet = OneWorkerAttr(CSSMode, CSSMode.prototype.navigateValueSet);\n\tpublic navigateValueSet(resource:URI, position:editorCommon.IRange, up:boolean):WinJS.TPromise<modes.IInplaceReplaceSupportResult> {\n\t\treturn this._worker((w) => w.navigateValueSet(resource, position, up));\n\t}\n\n\tstatic $_pickAWorkerToValidate = OneWorkerAttr(CSSMode, CSSMode.prototype._pickAWorkerToValidate, ThreadAffinity.Group1);\n\tprivate _pickAWorkerToValidate(): WinJS.TPromise<void> {\n\t\treturn this._worker((w) => w.enableValidator());\n\t}\n\n\tstatic $_provideDocumentHighlights = OneWorkerAttr(CSSMode, CSSMode.prototype._provideDocumentHighlights);\n\tprivate _provideDocumentHighlights(resource:URI, position:editorCommon.IPosition): WinJS.TPromise<modes.DocumentHighlight[]> {\n\t\treturn this._worker((w) => w.provideDocumentHighlights(resource, position));\n\t}\n\n\tstatic $_provideCompletionItems = OneWorkerAttr(CSSMode, CSSMode.prototype._provideCompletionItems);\n\tprivate _provideCompletionItems(resource:URI, position:editorCommon.IPosition):WinJS.TPromise<modes.ISuggestResult[]> {\n\t\treturn this._worker((w) => w.provideCompletionItems(resource, position));\n\t}\n\n\tstatic $_provideDefinition = OneWorkerAttr(CSSMode, CSSMode.prototype._provideDefinition);\n\tprivate _provideDefinition(resource:URI, position:editorCommon.IPosition):WinJS.TPromise<modes.Definition> {\n\t\treturn this._worker((w) => w.provideDefinition(resource, position));\n\t}\n\n\tstatic $_provideHover = OneWorkerAttr(CSSMode, CSSMode.prototype._provideHover);\n\tprivate _provideHover(resource:URI, position:editorCommon.IPosition): WinJS.TPromise<modes.Hover> {\n\t\treturn this._worker((w) => w.provideHover(resource, position));\n\t}\n\n\tstatic $_provideReferences = OneWorkerAttr(CSSMode, CSSMode.prototype._provideReferences);\n\tprivate _provideReferences(resource:URI, position:editorCommon.IPosition):WinJS.TPromise<modes.Location[]> {\n\t\treturn this._worker((w) => w.provideReferences(resource, position));\n\t}\n\n\tstatic $_provideDocumentSymbols = OneWorkerAttr(CSSMode, CSSMode.prototype._provideDocumentSymbols);\n\tprivate _provideDocumentSymbols(resource:URI):WinJS.TPromise<modes.SymbolInformation[]> {\n\t\treturn this._worker((w) => w.provideDocumentSymbols(resource));\n\t}\n\n\tstatic $findColorDeclarations = OneWorkerAttr(CSSMode, CSSMode.prototype.findColorDeclarations);\n\tpublic findColorDeclarations(resource:URI):WinJS.TPromise<{range:editorCommon.IRange; value:string; }[]> {\n\t\treturn this._worker((w) => w.findColorDeclarations(resource));\n\t}\n\n\tstatic _provideCodeActions = OneWorkerAttr(CSSMode, CSSMode.prototype._provideCodeActions);\n\tprivate _provideCodeActions(resource: URI, marker: IMarker | editorCommon.IRange): WinJS.TPromise<modes.IQuickFix[]>{\n\t\treturn this._worker((w) => w.provideCodeActions(resource, marker));\n\t}\n}"]}