{"version":3,"sources":["vs/editor/browser/standalone/standaloneWorker.js","vs/editor/browser/standalone/file:/C:/Alex/src/vscode/src/vs/base/common/uri.ts","vs/editor/browser/standalone/file:/C:/Alex/src/vscode/src/vs/editor/common/core/arrays.ts","vs/editor/browser/standalone/file:/C:/Alex/src/vscode/src/vs/editor/common/core/modeTransition.ts","vs/editor/browser/standalone/file:/C:/Alex/src/vscode/src/vs/editor/common/core/position.ts","vs/editor/browser/standalone/file:/C:/Alex/src/vscode/src/vs/editor/common/core/range.ts","vs/editor/browser/standalone/file:/C:/Alex/src/vscode/src/vs/editor/common/editorCommon.ts","vs/editor/browser/standalone/file:/C:/Alex/src/vscode/src/vs/editor/common/core/selection.ts","vs/editor/browser/standalone/file:/C:/Alex/src/vscode/src/vs/editor/common/viewModel/prefixSumComputer.ts","vs/editor/browser/standalone/file:/C:/Alex/src/vscode/src/vs/editor/common/model/mirrorModel2.ts","vs/editor/browser/standalone/file:/C:/Alex/src/vscode/src/vs/base/common/callbackList.ts","vs/editor/browser/standalone/file:/C:/Alex/src/vscode/src/vs/base/common/event.ts","vs/editor/browser/standalone/file:/C:/Alex/src/vscode/src/vs/base/common/cancellation.ts","vs/editor/browser/standalone/fake","vs/editor/browser/standalone/file:/C:/Alex/src/vscode/src/vs/base/common/keyCodes.ts","vs/editor/browser/standalone/file:/C:/Alex/src/vscode/src/vs/base/common/severity.ts","vs/editor/browser/standalone/file:/C:/Alex/src/vscode/src/vs/editor/common/standalone/standaloneBase.ts","vs/editor/browser/standalone/file:/C:/Alex/src/vscode/src/vs/editor/common/config/defaultConfig.ts","vs/editor/browser/standalone/file:/C:/Alex/src/vscode/src/vs/editor/common/modes/nullMode.ts","vs/editor/browser/standalone/file:/C:/Alex/src/vscode/src/vs/editor/common/model/textModelWithTokensHelpers.ts","vs/editor/browser/standalone/file:/C:/Alex/src/vscode/src/vs/editor/browser/standalone/standaloneWorker.ts"],"names":["define","require","exports","platform","_encode","ch","charCodeAt","toString","toUpperCase","encodeURIComponent2","str","encodeURIComponent","replace","encodeNoop","URI","this","_scheme","_empty","_authority","_path","_query","_fragment","_formatted","_fsPath","Object","defineProperty","prototype","get","enumerable","configurable","value","scheme","_driveLetterPath","test","toLowerCase","substr","isWindows","change","ret","authority","path","query","fragment","_validate","parse","data","_parseComponents","decodeURIComponent","file","_slash","idx","indexOf","substring","match","_regexp","exec","create","Error","skipEncoding","_asFormatted","uri","encoder","parts","push","m","_upperCaseDrive","length","lastIdx","join","toJSON","fsPath","external","$mid","revive","result","Arrays","findIndexInSegmentsArray","arr","desiredIndex","low","high","mid","Math","ceil","startIndex","arrays_1","ModeTransition","mode","modeTransitions","i","len","modeTransition","Position","lineNumber","column","equals","other","a","b","isBefore","isBeforeOrEqual","clone","lift","pos","isIPosition","obj","asEmptyRange","position","startLineNumber","startColumn","endLineNumber","endColumn","startPosition","range","endPosition","position_1","Range","isEmpty","containsPosition","containsRange","plusRange","intersectRanges","equalsRange","getEndPosition","getStartPosition","cloneRange","setEndPosition","setStartPosition","collapseToStart","isIRange","otherRange","areIntersectingOrTouching","resultStartLineNumber","resultStartColumn","resultEndLineNumber","resultEndColumn","otherStartLineNumber","otherStartColumn","otherEndLineNumber","otherEndColumn","max","min","compareRangesUsingStarts","aStartLineNumber","bStartLineNumber","aStartColumn","bStartColumn","aEndLineNumber","bEndLineNumber","aEndColumn","bEndColumn","compareRangesUsingEnds","spansMultipleLines","__extends","d","__","constructor","p","hasOwnProperty","cursorStyleToString","cursorStyle","TextEditorCursorStyle","Line","Block","Underline","SelectionDirection","WrappingIndent","InternalEditorScrollbarOptions","source","arrowSize","vertical","horizontal","useShadows","Boolean","verticalHasArrows","horizontalHasArrows","handleMouseWheel","horizontalScrollbarSize","horizontalSliderSize","verticalScrollbarSize","verticalSliderSize","mouseWheelScrollSensitivity","Number","EditorWrappingInfo","isViewportWrapping","wrappingColumn","wrappingIndent","wordWrapBreakBeforeCharacters","String","wordWrapBreakAfterCharacters","wordWrapBreakObtrusiveCharacters","InternalEditorViewOptions","theme","canUseTranslate3d","experimentalScreenReader","rulers","_toSortedIntegerArray","ariaLabel","lineNumbers","selectOnLineNumbers","glyphMargin","revealHorizontalRightPadding","roundedSelection","overviewRulerLanes","cursorBlinking","hideCursorInOverviewRuler","scrollBeyondLastLine","editorClassName","stopRenderingLineAfter","renderWhitespace","indentGuides","scrollbar","Array","isArray","arrSource","map","el","r","parseInt","isNaN","sort","_numberArraysEqual","createChangeEvent","newOpts","EditorContribOptions","selectionClipboard","hover","contextmenu","quickSuggestions","quickSuggestionsDelay","iconsInSuggestions","formatOnType","suggestOnTriggerCharacters","acceptSuggestionOnEnter","selectionHighlight","outlineMarkers","referenceInfos","folding","InternalEditorOptions","lineHeight","readOnly","wordSeparators","autoClosingBrackets","useTabStops","tabFocusMode","layoutInfo","fontInfo","viewInfo","wrappingInfo","contribInfo","OverviewRulerLane","EndOfLinePreference","DefaultEndOfLine","EndOfLineSequence","TrackedRangeStickiness","CursorChangeReason","VerticalRevealType","OverviewRulerPosition","width","height","top","right","EditorLayoutInfo","glyphMarginLeft","glyphMarginWidth","glyphMarginHeight","lineNumbersLeft","lineNumbersWidth","lineNumbersHeight","decorationsLeft","decorationsWidth","decorationsHeight","contentLeft","contentWidth","contentHeight","verticalScrollbarWidth","horizontalScrollbarHeight","overviewRuler","MouseTargetType","KEYBINDING_CONTEXT_EDITOR_TEXT_FOCUS","KEYBINDING_CONTEXT_EDITOR_FOCUS","KEYBINDING_CONTEXT_EDITOR_TAB_MOVES_FOCUS","KEYBINDING_CONTEXT_EDITOR_HAS_MULTIPLE_SELECTIONS","KEYBINDING_CONTEXT_EDITOR_HAS_NON_EMPTY_SELECTION","KEYBINDING_CONTEXT_EDITOR_LANGUAGE_ID","SHOW_ACCESSIBILITY_HELP_ACTION_ID","BareFontInfo","opts","fontFamily","fontSize","getId","FontInfo","_super","call","typicalHalfwidthCharacterWidth","typicalFullwidthCharacterWidth","spaceWidth","maxDigitWidth","ViewEventNames","ModelFlushedEvent","LinesDeletedEvent","LinesInsertedEvent","LineChangedEvent","TokensChangedEvent","DecorationsChangedEvent","CursorPositionChangedEvent","CursorSelectionChangedEvent","RevealRangeEvent","LineMappingChangedEvent","ScrollRequestEvent","Viewport","left","CodeEditorStateFlag","EditorType","ICodeEditor","IDiffEditor","ClassName","EditorWarningDecoration","EditorErrorDecoration","EventType","Disposed","ConfigurationChanged","ModelDispose","ModelChanged","ModelTokensChanged","ModelModeChanged","ModelModeSupportChanged","ModelOptionsChanged","ModelRawContentChanged","ModelContentChanged2","ModelRawContentChangedFlush","ModelRawContentChangedLinesDeleted","ModelRawContentChangedLinesInserted","ModelRawContentChangedLineChanged","EditorTextBlur","EditorTextFocus","EditorFocus","EditorBlur","ModelDecorationsChanged","CursorPositionChanged","CursorSelectionChanged","CursorRevealRange","CursorScrollRequest","ViewFocusGained","ViewFocusLost","ViewFocusChanged","ViewScrollChanged","ViewZonesChanged","ViewLayoutChanged","ContextMenu","MouseDown","MouseUp","MouseMove","MouseLeave","KeyDown","KeyUp","EditorLayout","DiffUpdated","Handler","ExecuteCommand","ExecuteCommands","CursorLeft","CursorLeftSelect","CursorWordLeft","CursorWordStartLeft","CursorWordEndLeft","CursorWordLeftSelect","CursorWordStartLeftSelect","CursorWordEndLeftSelect","CursorRight","CursorRightSelect","CursorWordRight","CursorWordStartRight","CursorWordEndRight","CursorWordRightSelect","CursorWordStartRightSelect","CursorWordEndRightSelect","CursorUp","CursorUpSelect","CursorDown","CursorDownSelect","CursorPageUp","CursorPageUpSelect","CursorPageDown","CursorPageDownSelect","CursorHome","CursorHomeSelect","CursorEnd","CursorEndSelect","ExpandLineSelection","CursorTop","CursorTopSelect","CursorBottom","CursorBottomSelect","CursorColumnSelectLeft","CursorColumnSelectRight","CursorColumnSelectUp","CursorColumnSelectPageUp","CursorColumnSelectDown","CursorColumnSelectPageDown","AddCursorDown","AddCursorUp","CursorUndo","MoveTo","MoveToSelect","ColumnSelect","CreateCursor","LastCursorMoveToSelect","JumpToBracket","Type","ReplacePreviousChar","Paste","Tab","Indent","Outdent","DeleteLeft","DeleteRight","DeleteWordLeft","DeleteWordStartLeft","DeleteWordEndLeft","DeleteWordRight","DeleteWordStartRight","DeleteWordEndRight","DeleteAllLeft","DeleteAllRight","RemoveSecondaryCursors","CancelSelection","Cut","Undo","Redo","WordSelect","WordSelectDrag","LastCursorWordSelect","LineSelect","LineSelectDrag","LastCursorLineSelect","LastCursorLineSelectDrag","LineInsertBefore","LineInsertAfter","LineBreakInsert","SelectAll","ScrollLineUp","ScrollLineDown","ScrollPageUp","ScrollPageDown","ColorZone","from","to","colorId","OverviewRulerZone","forceHeight","color","darkColor","_color","_darkColor","_colorZones","getColor","useDarkColor","compareTo","setColorZones","colorZones","getColorZones","range_1","editorCommon_1","Selection","selectionStartLineNumber","selectionStartColumn","positionLineNumber","positionColumn","equalsSelection","selectionsEqual","getDirection","LTR","RTL","createSelection","liftSelection","sel","selectionsArrEqual","isISelection","createWithDirection","direction","PrefixSumIndexOfResult","index","remainder","PrefixSumComputer","values","prefixSum","prefixSumValidIndex","getCount","insertValue","insertIndex","floor","splice","insertValues","slice","concat","_zeroArray","count","changeValue","removeValues","cnt","getTotalValue","getAccumulatedValue","getIndexOf","accumulatedValue","midStop","midStart","prefixSumComputer_1","MirrorModel2","lines","eol","versionId","_uri","_lines","_eol","_versionId","dispose","getText","onEvents","events","newEOL","e","_lineStarts","lastVersionId","_acceptDeleteRange","_acceptInsertText","text","_ensureLineStarts","lineStartValues","eolLength","_setLineText","lineIndex","newValue","insertText","insertLines","split","newLengths","errors_1","CallbackList","add","callback","context","bucket","_this","_callbacks","_contexts","remove","foundCallbackWithDifferentContext","invoke","args","_i","arguments","callbacks","contexts","apply","onUnexpectedError","undefined","callbackList_1","fromEventEmitter","emitter","eventType","listener","thisArgs","disposables","addListener2","mapEvent","event","Event","_disposable","None","Emitter","_options","_event","onFirstListenerAdd","_noop","_disposed","onLastListenerRemove","fire","EventDelayerState","EventBufferer","buffers","wrapEvent","buffer","bufferEvents","fn","pop","forEach","flush","event_1","CancellationToken","freeze","isCancellationRequested","onCancellationRequested","Cancelled","shortcutEvent","handle","setTimeout","bind","clearTimeout","MutableToken","_isCancelled","cancel","_emitter","CancellationTokenSource","_token","nls","defaultPlatform","createMapping","fill1","fill2","MAP","REVERSE_MAP","FINAL_REVERSE_MAP","entry","Mapping","_asString","keybinding","labelProvider","Platform","ctrlCmd","BinaryKeybindings","hasCtrlCmd","shift","hasShift","alt","hasAlt","winCtrl","hasWinCtrl","keyCode","extractKeyCode","keyLabel","getLabelForKey","isMacintosh","ctrlKeyLabel","shiftKeyLabel","altKeyLabel","cmdKeyLabel","windowsKeyLabel","actualResult","modifierSeparator","hasChord","extractChordPart","_pushKey","tagName","className","_asHTML","isChord","chordTo","children","KeyCode","fromKeyCode","toKeyCode","_fromKeyCode","_toKeyCode","Unknown","STRING","TO_STRING_MAP","Backspace","Enter","Shift","Ctrl","Alt","PauseBreak","CapsLock","Escape","Space","PageUp","PageDown","End","Home","LeftArrow","UpArrow","RightArrow","DownArrow","Insert","Delete","KEY_0","KEY_1","KEY_2","KEY_3","KEY_4","KEY_5","KEY_6","KEY_7","KEY_8","KEY_9","KEY_A","KEY_B","KEY_C","KEY_D","KEY_E","KEY_F","KEY_G","KEY_H","KEY_I","KEY_J","KEY_K","KEY_L","KEY_M","KEY_N","KEY_O","KEY_P","KEY_Q","KEY_R","KEY_S","KEY_T","KEY_U","KEY_V","KEY_W","KEY_X","KEY_Y","KEY_Z","F1","F2","F3","F4","F5","F6","F7","F8","F9","F10","F11","F12","F13","F14","F15","F16","F17","F18","F19","NumLock","ScrollLock","US_SEMICOLON","US_EQUAL","US_COMMA","US_MINUS","US_DOT","US_SLASH","US_BACKTICK","US_OPEN_SQUARE_BRACKET","US_BACKSLASH","US_CLOSE_SQUARE_BRACKET","US_QUOTE","OEM_8","OEM_102","NUMPAD_0","NUMPAD_1","NUMPAD_2","NUMPAD_3","NUMPAD_4","NUMPAD_5","NUMPAD_6","NUMPAD_7","NUMPAD_8","NUMPAD_9","NUMPAD_MULTIPLY","NUMPAD_ADD","NUMPAD_SEPARATOR","NUMPAD_SUBTRACT","NUMPAD_DECIMAL","NUMPAD_DIVIDE","FROM_STRING_MAP","USER_SETTINGS","TO_USER_SETTINGS_MAP","FROM_USER_SETTINGS_MAP","key","fromString","BIN_CTRLCMD_MASK","BIN_SHIFT_MASK","BIN_ALT_MASK","BIN_WINCTRL_MASK","BIN_KEYCODE_MASK","extractFirstPart","KeyMod","chord","firstPart","secondPart","CtrlCmd","WinCtrl","CommonKeybindings","ENTER","SHIFT_ENTER","CTRLCMD_ENTER","WINCTRL_ENTER","TAB","SHIFT_TAB","ESCAPE","SPACE","DELETE","SHIFT_DELETE","CTRLCMD_BACKSPACE","UP_ARROW","SHIFT_UP_ARROW","CTRLCMD_UP_ARROW","DOWN_ARROW","SHIFT_DOWN_ARROW","CTRLCMD_DOWN_ARROW","LEFT_ARROW","RIGHT_ARROW","PAGE_UP","SHIFT_PAGE_UP","PAGE_DOWN","SHIFT_PAGE_DOWN","CTRLCMD_S","CTRLCMD_C","CTRLCMD_V","Keybinding","_toUSLabel","MacUIKeyLabelProvider","INSTANCE","ClassicUIKeyLabelProvider","_toUSAriaLabel","AriaKeyLabelProvider","_toUSHTMLLabel","_toCustomLabel","_toCustomHTMLLabel","_toElectronAccelerator","ElectronAcceleratorLabelProvider","getUserSettingsKeybindingRegex","_cachedKeybindingRegex","numpadKey","oemKey","specialKey","casualKey","mod","toUserSettingsLabel","UserSettingsKeyLabelProvider","fromUserSettingsLabel","input","trim","firstSpaceIdx","toCustomLabel","toCustomHTMLLabel","localize","leftArrowUnicodeLabel","upArrowUnicodeLabel","rightArrowUnicodeLabel","downArrowUnicodeLabel","fromCharCode","strings","Severity","fromValue","equalsIgnoreCase","_error","_warning","_warn","Warning","_info","Info","Ignore","_displayStrings","empty","compare","keyCodes_1","selection_1","winjs_base_1","cancellation_1","severity_1","uri_1","createMonacoBaseAPI","editor","worker","languages","Promise","TPromise","Uri","USUAL_WORD_SEPARATORS","DEFAULT_INDENTATION","tabSize","insertSpaces","detectIndentation","DEFAULT_TRIM_AUTO_WHITESPACE","DEFAULT_WINDOWS_FONT_FAMILY","DEFAULT_MAC_FONT_FAMILY","DEFAULT_LINUX_FONT_FAMILY","GOLDEN_LINE_HEIGHT_RATIO","ConfigClass","lineNumbersMinChars","lineDecorationsWidth","fontLigatures","disableTranslate3d","automaticLayout","isLinux","DefaultConfig","defaultConfig_1","nullTokenize","state","deltaOffset","stopAtOffset","tokens","type","actualStopOffset","endState","NullState","stateData","stateDataClone","getMode","otherStateData","getStateData","tokenize","stream","advanceToEOS","setStateData","NullMode","richEditSupport","wordDefinition","DEFAULT_WORD_REGEXP","createWordRegExp","allowInWords","usualSeparators","RegExp","ID","toSimplifiedMode","nullMode_1","modeTransition_1","WordHelper","_safeGetWordDefinition","ensureValidWordDefinition","global","flags","ignoreCase","multiline","lastIndex","massageWordDefinitionOf","_getWordAtColumn","txt","modeIndex","modeStartIndex","modeEndIndex","_getWordAtText","getWordAtPosition","textSource","_lineIsTokenized","getLineContent","_getLineModeTransitions","columnIndex","textOffset","k","startWord","endWord","word","words","mirrorModel2_1","textModelWithTokensHelpers_1","standaloneBase_1","standaloneWorker","createMonacoWorkerAPI","mirrorModels","getModels","MirrorModel","getLinesContent","getLineCount","wordAtText","getWordUntilPosition","wordAtPosition","_getAllWords","line","_wordenize","info","start","end","getAllUniqueWords","skipWordOnce","foundSkipWord","uniqueWords","filter","content","getValueInRange","lineEnding","startLineIndex","endLineIndex","resultLines","StandaloneWorker","_models","_foreignModule","all","keys","acceptNewModel","url","EOL","acceptModelChanged","strURL","model","acceptRemovedModel","loadModule","moduleId","cc","ee","c","foreignModule","methods","prop","fmr","method","wrapError","as","self","monaco"],"mappings":"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","file":"vs/editor/browser/standalone/standaloneWorker.js","sourcesContent":["/*!-----------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.2.3(84e204b238a1eff25d4c6f611fdcd76a494005a7)\n * Released under the MIT license\n * https://github.com/Microsoft/vscode/blob/master/LICENSE.txt\n *-----------------------------------------------------------*/\n\ndefine(\"vs/base/common/uri\", [\"require\", \"exports\", 'vs/base/common/platform'], function (require, exports, platform) {\r\n    /*---------------------------------------------------------------------------------------------\r\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n     *--------------------------------------------------------------------------------------------*/\r\n    'use strict';\r\n    function _encode(ch) {\r\n        return '%' + ch.charCodeAt(0).toString(16).toUpperCase();\r\n    }\r\n    // see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/encodeURIComponent\r\n    function encodeURIComponent2(str) {\r\n        return encodeURIComponent(str).replace(/[!'()*]/g, _encode);\r\n    }\r\n    function encodeNoop(str) {\r\n        return str;\r\n    }\r\n    /**\r\n     * Uniform Resource Identifier (URI) http://tools.ietf.org/html/rfc3986.\r\n     * This class is a simple parser which creates the basic component paths\r\n     * (http://tools.ietf.org/html/rfc3986#section-3) with minimal validation\r\n     * and encoding.\r\n     *\r\n     *       foo://example.com:8042/over/there?name=ferret#nose\r\n     *       \\_/   \\______________/\\_________/ \\_________/ \\__/\r\n     *        |           |            |            |        |\r\n     *     scheme     authority       path        query   fragment\r\n     *        |   _____________________|__\r\n     *       / \\ /                        \\\r\n     *       urn:example:animal:ferret:nose\r\n     *\r\n     *\r\n     */\r\n    var URI = (function () {\r\n        function URI() {\r\n            this._scheme = URI._empty;\r\n            this._authority = URI._empty;\r\n            this._path = URI._empty;\r\n            this._query = URI._empty;\r\n            this._fragment = URI._empty;\r\n            this._formatted = null;\r\n            this._fsPath = null;\r\n        }\r\n        Object.defineProperty(URI.prototype, \"scheme\", {\r\n            /**\r\n             * scheme is the 'http' part of 'http://www.msft.com/some/path?query#fragment'.\r\n             * The part before the first colon.\r\n             */\r\n            get: function () {\r\n                return this._scheme;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(URI.prototype, \"authority\", {\r\n            /**\r\n             * authority is the 'www.msft.com' part of 'http://www.msft.com/some/path?query#fragment'.\r\n             * The part between the first double slashes and the next slash.\r\n             */\r\n            get: function () {\r\n                return this._authority;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(URI.prototype, \"path\", {\r\n            /**\r\n             * path is the '/some/path' part of 'http://www.msft.com/some/path?query#fragment'.\r\n             */\r\n            get: function () {\r\n                return this._path;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(URI.prototype, \"query\", {\r\n            /**\r\n             * query is the 'query' part of 'http://www.msft.com/some/path?query#fragment'.\r\n             */\r\n            get: function () {\r\n                return this._query;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(URI.prototype, \"fragment\", {\r\n            /**\r\n             * fragment is the 'fragment' part of 'http://www.msft.com/some/path?query#fragment'.\r\n             */\r\n            get: function () {\r\n                return this._fragment;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(URI.prototype, \"fsPath\", {\r\n            // ---- filesystem path -----------------------\r\n            /**\r\n             * Returns a string representing the corresponding file system path of this URI.\r\n             * Will handle UNC paths and normalize windows drive letters to lower-case. Also\r\n             * uses the platform specific path separator. Will *not* validate the path for\r\n             * invalid characters and semantics. Will *not* look at the scheme of this URI.\r\n             */\r\n            get: function () {\r\n                if (!this._fsPath) {\r\n                    var value;\r\n                    if (this._authority && this.scheme === 'file') {\r\n                        // unc path: file://shares/c$/far/boo\r\n                        value = \"//\" + this._authority + this._path;\r\n                    }\r\n                    else if (URI._driveLetterPath.test(this._path)) {\r\n                        // windows drive letter: file:///c:/far/boo\r\n                        value = this._path[1].toLowerCase() + this._path.substr(2);\r\n                    }\r\n                    else {\r\n                        // other path\r\n                        value = this._path;\r\n                    }\r\n                    if (platform.isWindows) {\r\n                        value = value.replace(/\\//g, '\\\\');\r\n                    }\r\n                    this._fsPath = value;\r\n                }\r\n                return this._fsPath;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        // ---- modify to new -------------------------\r\n        URI.prototype.with = function (change) {\r\n            var ret = new URI();\r\n            ret._scheme = change.scheme || this.scheme;\r\n            ret._authority = change.authority || this.authority;\r\n            ret._path = change.path || this.path;\r\n            ret._query = change.query || this.query;\r\n            ret._fragment = change.fragment || this.fragment;\r\n            URI._validate(ret);\r\n            return ret;\r\n        };\r\n        // ---- parse & validate ------------------------\r\n        URI.parse = function (value) {\r\n            var ret = new URI();\r\n            var data = URI._parseComponents(value);\r\n            ret._scheme = data.scheme;\r\n            ret._authority = decodeURIComponent(data.authority);\r\n            ret._path = decodeURIComponent(data.path);\r\n            ret._query = decodeURIComponent(data.query);\r\n            ret._fragment = decodeURIComponent(data.fragment);\r\n            URI._validate(ret);\r\n            return ret;\r\n        };\r\n        URI.file = function (path) {\r\n            var ret = new URI();\r\n            ret._scheme = 'file';\r\n            // normalize to fwd-slashes\r\n            path = path.replace(/\\\\/g, URI._slash);\r\n            // check for authority as used in UNC shares\r\n            // or use the path as given\r\n            if (path[0] === URI._slash && path[0] === path[1]) {\r\n                var idx = path.indexOf(URI._slash, 2);\r\n                if (idx === -1) {\r\n                    ret._authority = path.substring(2);\r\n                }\r\n                else {\r\n                    ret._authority = path.substring(2, idx);\r\n                    ret._path = path.substring(idx);\r\n                }\r\n            }\r\n            else {\r\n                ret._path = path;\r\n            }\r\n            // Ensure that path starts with a slash\r\n            // or that it is at least a slash\r\n            if (ret._path[0] !== URI._slash) {\r\n                ret._path = URI._slash + ret._path;\r\n            }\r\n            URI._validate(ret);\r\n            return ret;\r\n        };\r\n        URI._parseComponents = function (value) {\r\n            var ret = {\r\n                scheme: URI._empty,\r\n                authority: URI._empty,\r\n                path: URI._empty,\r\n                query: URI._empty,\r\n                fragment: URI._empty,\r\n            };\r\n            var match = URI._regexp.exec(value);\r\n            if (match) {\r\n                ret.scheme = match[2] || ret.scheme;\r\n                ret.authority = match[4] || ret.authority;\r\n                ret.path = match[5] || ret.path;\r\n                ret.query = match[7] || ret.query;\r\n                ret.fragment = match[9] || ret.fragment;\r\n            }\r\n            return ret;\r\n        };\r\n        URI.create = function (scheme, authority, path, query, fragment) {\r\n            return new URI().with({ scheme: scheme, authority: authority, path: path, query: query, fragment: fragment });\r\n        };\r\n        URI._validate = function (ret) {\r\n            // validation\r\n            // path, http://tools.ietf.org/html/rfc3986#section-3.3\r\n            // If a URI contains an authority component, then the path component\r\n            // must either be empty or begin with a slash (\"/\") character.  If a URI\r\n            // does not contain an authority component, then the path cannot begin\r\n            // with two slash characters (\"//\").\r\n            if (ret.authority && ret.path && ret.path[0] !== '/') {\r\n                throw new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character');\r\n            }\r\n            if (!ret.authority && ret.path.indexOf('//') === 0) {\r\n                throw new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")');\r\n            }\r\n        };\r\n        // ---- printing/externalize ---------------------------\r\n        /**\r\n         *\r\n         * @param skipEncoding Do not encode the result, default is `false`\r\n         */\r\n        URI.prototype.toString = function (skipEncoding) {\r\n            if (skipEncoding === void 0) { skipEncoding = false; }\r\n            if (!skipEncoding) {\r\n                if (!this._formatted) {\r\n                    this._formatted = URI._asFormatted(this, false);\r\n                }\r\n                return this._formatted;\r\n            }\r\n            else {\r\n                // we don't cache that\r\n                return URI._asFormatted(this, true);\r\n            }\r\n        };\r\n        URI._asFormatted = function (uri, skipEncoding) {\r\n            var encoder = !skipEncoding\r\n                ? encodeURIComponent2\r\n                : encodeNoop;\r\n            var parts = [];\r\n            var scheme = uri.scheme, authority = uri.authority, path = uri.path, query = uri.query, fragment = uri.fragment;\r\n            if (scheme) {\r\n                parts.push(scheme, ':');\r\n            }\r\n            if (authority || scheme === 'file') {\r\n                parts.push('//');\r\n            }\r\n            if (authority) {\r\n                authority = authority.toLowerCase();\r\n                var idx = authority.indexOf(':');\r\n                if (idx === -1) {\r\n                    parts.push(encoder(authority));\r\n                }\r\n                else {\r\n                    parts.push(encoder(authority.substr(0, idx)), authority.substr(idx));\r\n                }\r\n            }\r\n            if (path) {\r\n                // lower-case windown drive letters in /C:/fff\r\n                var m = URI._upperCaseDrive.exec(path);\r\n                if (m) {\r\n                    path = m[1] + m[2].toLowerCase() + path.substr(m[1].length + m[2].length);\r\n                }\r\n                // encode every segement but not slashes\r\n                // make sure that # and ? are always encoded\r\n                // when occurring in paths - otherwise the result\r\n                // cannot be parsed back again\r\n                var lastIdx = 0;\r\n                while (true) {\r\n                    var idx = path.indexOf(URI._slash, lastIdx);\r\n                    if (idx === -1) {\r\n                        parts.push(encoder(path.substring(lastIdx)).replace(/[#?]/, _encode));\r\n                        break;\r\n                    }\r\n                    parts.push(encoder(path.substring(lastIdx, idx)).replace(/[#?]/, _encode), URI._slash);\r\n                    lastIdx = idx + 1;\r\n                }\r\n                ;\r\n            }\r\n            if (query) {\r\n                parts.push('?', encoder(query));\r\n            }\r\n            if (fragment) {\r\n                parts.push('#', encoder(fragment));\r\n            }\r\n            return parts.join(URI._empty);\r\n        };\r\n        URI.prototype.toJSON = function () {\r\n            return {\r\n                scheme: this.scheme,\r\n                authority: this.authority,\r\n                path: this.path,\r\n                fsPath: this.fsPath,\r\n                query: this.query,\r\n                fragment: this.fragment.replace(/URL_MARSHAL_REMOVE.*$/, ''),\r\n                external: this.toString().replace(/#?URL_MARSHAL_REMOVE.*$/, ''),\r\n                $mid: 1\r\n            };\r\n        };\r\n        URI.revive = function (data) {\r\n            var result = new URI();\r\n            result._scheme = data.scheme;\r\n            result._authority = data.authority;\r\n            result._path = data.path;\r\n            result._query = data.query;\r\n            result._fragment = data.fragment;\r\n            result._fsPath = data.fsPath;\r\n            result._formatted = data.external;\r\n            URI._validate(result);\r\n            return result;\r\n        };\r\n        URI._empty = '';\r\n        URI._slash = '/';\r\n        URI._regexp = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\r\n        URI._driveLetterPath = /^\\/[a-zA-z]:/;\r\n        URI._upperCaseDrive = /^(\\/)?([A-Z]:)/;\r\n        return URI;\r\n    }());\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.default = URI;\r\n});\r\n\ndefine(\"vs/editor/common/core/arrays\", [\"require\", \"exports\"], function (require, exports) {\r\n    /*---------------------------------------------------------------------------------------------\r\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n     *--------------------------------------------------------------------------------------------*/\r\n    'use strict';\r\n    var Arrays;\r\n    (function (Arrays) {\r\n        /**\r\n         * Given a sorted array of natural number segments, find the segment containing a natural number.\r\n         *    For example, the segments [0, 5), [5, 9), [9, infinity) will be represented in the following manner:\r\n         *       [{ startIndex: 0 }, { startIndex: 5 }, { startIndex: 9 }]\r\n         *    Searching for 0, 1, 2, 3 or 4 will return 0.\r\n         *    Searching for 5, 6, 7 or 8 will return 1.\r\n         *    Searching for 9, 10, 11, ... will return 2.\r\n         * @param arr A sorted array representing natural number segments\r\n         * @param desiredIndex The search\r\n         * @return The index of the containing segment in the array.\r\n         */\r\n        function findIndexInSegmentsArray(arr, desiredIndex) {\r\n            var low = 0;\r\n            var high = arr.length - 1;\r\n            if (high <= 0) {\r\n                return 0;\r\n            }\r\n            while (low < high) {\r\n                var mid = low + Math.ceil((high - low) / 2);\r\n                if (arr[mid].startIndex > desiredIndex) {\r\n                    high = mid - 1;\r\n                }\r\n                else {\r\n                    low = mid;\r\n                }\r\n            }\r\n            return low;\r\n        }\r\n        Arrays.findIndexInSegmentsArray = findIndexInSegmentsArray;\r\n    })(Arrays = exports.Arrays || (exports.Arrays = {}));\r\n});\r\n\ndefine(\"vs/editor/common/core/modeTransition\", [\"require\", \"exports\", 'vs/editor/common/core/arrays'], function (require, exports, arrays_1) {\r\n    /*---------------------------------------------------------------------------------------------\r\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n     *--------------------------------------------------------------------------------------------*/\r\n    'use strict';\r\n    var ModeTransition = (function () {\r\n        function ModeTransition(startIndex, mode) {\r\n            this.startIndex = startIndex | 0;\r\n            this.mode = mode;\r\n        }\r\n        ModeTransition.findIndexInSegmentsArray = function (arr, desiredIndex) {\r\n            return arrays_1.Arrays.findIndexInSegmentsArray(arr, desiredIndex);\r\n        };\r\n        ModeTransition.create = function (modeTransitions) {\r\n            var result = [];\r\n            for (var i = 0, len = modeTransitions.length; i < len; i++) {\r\n                var modeTransition = modeTransitions[i];\r\n                result.push(new ModeTransition(modeTransition.startIndex, modeTransition.mode));\r\n            }\r\n            return result;\r\n        };\r\n        return ModeTransition;\r\n    }());\r\n    exports.ModeTransition = ModeTransition;\r\n});\r\n\ndefine(\"vs/editor/common/core/position\", [\"require\", \"exports\"], function (require, exports) {\r\n    /*---------------------------------------------------------------------------------------------\r\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n     *--------------------------------------------------------------------------------------------*/\r\n    'use strict';\r\n    /**\r\n     * A position in the editor.\r\n     */\r\n    var Position = (function () {\r\n        function Position(lineNumber, column) {\r\n            this.lineNumber = lineNumber;\r\n            this.column = column;\r\n        }\r\n        /**\r\n         * Test if this position equals other position\r\n         */\r\n        Position.prototype.equals = function (other) {\r\n            return Position.equals(this, other);\r\n        };\r\n        Position.equals = function (a, b) {\r\n            if (!a && !b) {\r\n                return true;\r\n            }\r\n            return (!!a &&\r\n                !!b &&\r\n                a.lineNumber === b.lineNumber &&\r\n                a.column === b.column);\r\n        };\r\n        /**\r\n         * Test if this position is before other position. If the two positions are equal, the result will be false.\r\n         */\r\n        Position.prototype.isBefore = function (other) {\r\n            return Position.isBefore(this, other);\r\n        };\r\n        Position.isBefore = function (a, b) {\r\n            if (a.lineNumber < b.lineNumber) {\r\n                return true;\r\n            }\r\n            if (b.lineNumber < a.lineNumber) {\r\n                return false;\r\n            }\r\n            return a.column < b.column;\r\n        };\r\n        /**\r\n         * Test if this position is before other position. If the two positions are equal, the result will be true.\r\n         */\r\n        Position.prototype.isBeforeOrEqual = function (other) {\r\n            return Position.isBeforeOrEqual(this, other);\r\n        };\r\n        Position.isBeforeOrEqual = function (a, b) {\r\n            if (a.lineNumber < b.lineNumber) {\r\n                return true;\r\n            }\r\n            if (b.lineNumber < a.lineNumber) {\r\n                return false;\r\n            }\r\n            return a.column <= b.column;\r\n        };\r\n        /**\r\n         * Clone this position.\r\n         */\r\n        Position.prototype.clone = function () {\r\n            return new Position(this.lineNumber, this.column);\r\n        };\r\n        Position.prototype.toString = function () {\r\n            return '(' + this.lineNumber + ',' + this.column + ')';\r\n        };\r\n        // ---\r\n        Position.lift = function (pos) {\r\n            return new Position(pos.lineNumber, pos.column);\r\n        };\r\n        Position.isIPosition = function (obj) {\r\n            return (obj\r\n                && (typeof obj.lineNumber === 'number')\r\n                && (typeof obj.column === 'number'));\r\n        };\r\n        Position.asEmptyRange = function (position) {\r\n            return {\r\n                startLineNumber: position.lineNumber,\r\n                startColumn: position.column,\r\n                endLineNumber: position.lineNumber,\r\n                endColumn: position.column\r\n            };\r\n        };\r\n        Position.startPosition = function (range) {\r\n            return {\r\n                lineNumber: range.startLineNumber,\r\n                column: range.startColumn\r\n            };\r\n        };\r\n        Position.endPosition = function (range) {\r\n            return {\r\n                lineNumber: range.endLineNumber,\r\n                column: range.endColumn\r\n            };\r\n        };\r\n        return Position;\r\n    }());\r\n    exports.Position = Position;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\ndefine(\"vs/editor/common/core/range\", [\"require\", \"exports\", 'vs/editor/common/core/position'], function (require, exports, position_1) {\r\n    'use strict';\r\n    /**\r\n     * A range in the editor.\r\n     */\r\n    var Range = (function () {\r\n        function Range(startLineNumber, startColumn, endLineNumber, endColumn) {\r\n            if ((startLineNumber > endLineNumber) || (startLineNumber === endLineNumber && startColumn > endColumn)) {\r\n                this.startLineNumber = endLineNumber;\r\n                this.startColumn = endColumn;\r\n                this.endLineNumber = startLineNumber;\r\n                this.endColumn = startColumn;\r\n            }\r\n            else {\r\n                this.startLineNumber = startLineNumber;\r\n                this.startColumn = startColumn;\r\n                this.endLineNumber = endLineNumber;\r\n                this.endColumn = endColumn;\r\n            }\r\n        }\r\n        /**\r\n         * Test if this range is empty.\r\n         */\r\n        Range.prototype.isEmpty = function () {\r\n            return Range.isEmpty(this);\r\n        };\r\n        /**\r\n         * Test if position is in this range. If the position is at the edges, will return true.\r\n         */\r\n        Range.prototype.containsPosition = function (position) {\r\n            return Range.containsPosition(this, position);\r\n        };\r\n        /**\r\n         * Test if range is in this range. If the range is equal to this range, will return true.\r\n         */\r\n        Range.prototype.containsRange = function (range) {\r\n            return Range.containsRange(this, range);\r\n        };\r\n        /**\r\n         * A reunion of the two ranges. The smallest position will be used as the start point, and the largest one as the end point.\r\n         */\r\n        Range.prototype.plusRange = function (range) {\r\n            return Range.plusRange(this, range);\r\n        };\r\n        /**\r\n         * A intersection of the two ranges.\r\n         */\r\n        Range.prototype.intersectRanges = function (range) {\r\n            return Range.intersectRanges(this, range);\r\n        };\r\n        /**\r\n         * Test if this range equals other.\r\n         */\r\n        Range.prototype.equalsRange = function (other) {\r\n            return Range.equalsRange(this, other);\r\n        };\r\n        /**\r\n         * Return the end position (which will be after or equal to the start position)\r\n         */\r\n        Range.prototype.getEndPosition = function () {\r\n            return new position_1.Position(this.endLineNumber, this.endColumn);\r\n        };\r\n        /**\r\n         * Return the start position (which will be before or equal to the end position)\r\n         */\r\n        Range.prototype.getStartPosition = function () {\r\n            return new position_1.Position(this.startLineNumber, this.startColumn);\r\n        };\r\n        /**\r\n         * Clone this range.\r\n         */\r\n        Range.prototype.cloneRange = function () {\r\n            return new Range(this.startLineNumber, this.startColumn, this.endLineNumber, this.endColumn);\r\n        };\r\n        /**\r\n         * Transform to a user presentable string representation.\r\n         */\r\n        Range.prototype.toString = function () {\r\n            return '[' + this.startLineNumber + ',' + this.startColumn + ' -> ' + this.endLineNumber + ',' + this.endColumn + ']';\r\n        };\r\n        /**\r\n         * Create a new range using this range's start position, and using endLineNumber and endColumn as the end position.\r\n         */\r\n        Range.prototype.setEndPosition = function (endLineNumber, endColumn) {\r\n            return new Range(this.startLineNumber, this.startColumn, endLineNumber, endColumn);\r\n        };\r\n        /**\r\n         * Create a new range using this range's end position, and using startLineNumber and startColumn as the start position.\r\n         */\r\n        Range.prototype.setStartPosition = function (startLineNumber, startColumn) {\r\n            return new Range(startLineNumber, startColumn, this.endLineNumber, this.endColumn);\r\n        };\r\n        Range.prototype.collapseToStart = function () {\r\n            return new Range(this.startLineNumber, this.startColumn, this.startLineNumber, this.startColumn);\r\n        };\r\n        // ---\r\n        Range.lift = function (range) {\r\n            if (!range) {\r\n                return null;\r\n            }\r\n            return new Range(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn);\r\n        };\r\n        Range.isIRange = function (obj) {\r\n            return (obj\r\n                && (typeof obj.startLineNumber === 'number')\r\n                && (typeof obj.startColumn === 'number')\r\n                && (typeof obj.endLineNumber === 'number')\r\n                && (typeof obj.endColumn === 'number'));\r\n        };\r\n        Range.isEmpty = function (range) {\r\n            return (range.startLineNumber === range.endLineNumber && range.startColumn === range.endColumn);\r\n        };\r\n        Range.containsPosition = function (range, position) {\r\n            if (position.lineNumber < range.startLineNumber || position.lineNumber > range.endLineNumber) {\r\n                return false;\r\n            }\r\n            if (position.lineNumber === range.startLineNumber && position.column < range.startColumn) {\r\n                return false;\r\n            }\r\n            if (position.lineNumber === range.endLineNumber && position.column > range.endColumn) {\r\n                return false;\r\n            }\r\n            return true;\r\n        };\r\n        Range.containsRange = function (range, otherRange) {\r\n            if (otherRange.startLineNumber < range.startLineNumber || otherRange.endLineNumber < range.startLineNumber) {\r\n                return false;\r\n            }\r\n            if (otherRange.startLineNumber > range.endLineNumber || otherRange.endLineNumber > range.endLineNumber) {\r\n                return false;\r\n            }\r\n            if (otherRange.startLineNumber === range.startLineNumber && otherRange.startColumn < range.startColumn) {\r\n                return false;\r\n            }\r\n            if (otherRange.endLineNumber === range.endLineNumber && otherRange.endColumn > range.endColumn) {\r\n                return false;\r\n            }\r\n            return true;\r\n        };\r\n        Range.areIntersectingOrTouching = function (a, b) {\r\n            // Check if `a` is before `b`\r\n            if (a.endLineNumber < b.startLineNumber || (a.endLineNumber === b.startLineNumber && a.endColumn < b.startColumn)) {\r\n                return false;\r\n            }\r\n            // Check if `b` is before `a`\r\n            if (b.endLineNumber < a.startLineNumber || (b.endLineNumber === a.startLineNumber && b.endColumn < a.startColumn)) {\r\n                return false;\r\n            }\r\n            // These ranges must intersect\r\n            return true;\r\n        };\r\n        Range.intersectRanges = function (a, b) {\r\n            var resultStartLineNumber = a.startLineNumber, resultStartColumn = a.startColumn, resultEndLineNumber = a.endLineNumber, resultEndColumn = a.endColumn, otherStartLineNumber = b.startLineNumber, otherStartColumn = b.startColumn, otherEndLineNumber = b.endLineNumber, otherEndColumn = b.endColumn;\r\n            if (resultStartLineNumber < otherStartLineNumber) {\r\n                resultStartLineNumber = otherStartLineNumber;\r\n                resultStartColumn = otherStartColumn;\r\n            }\r\n            else if (resultStartLineNumber === otherStartLineNumber) {\r\n                resultStartColumn = Math.max(resultStartColumn, otherStartColumn);\r\n            }\r\n            if (resultEndLineNumber > otherEndLineNumber) {\r\n                resultEndLineNumber = otherEndLineNumber;\r\n                resultEndColumn = otherEndColumn;\r\n            }\r\n            else if (resultEndLineNumber === otherEndLineNumber) {\r\n                resultEndColumn = Math.min(resultEndColumn, otherEndColumn);\r\n            }\r\n            // Check if selection is now empty\r\n            if (resultStartLineNumber > resultEndLineNumber) {\r\n                return null;\r\n            }\r\n            if (resultStartLineNumber === resultEndLineNumber && resultStartColumn > resultEndColumn) {\r\n                return null;\r\n            }\r\n            return new Range(resultStartLineNumber, resultStartColumn, resultEndLineNumber, resultEndColumn);\r\n        };\r\n        Range.plusRange = function (a, b) {\r\n            var startLineNumber, startColumn, endLineNumber, endColumn;\r\n            if (b.startLineNumber < a.startLineNumber) {\r\n                startLineNumber = b.startLineNumber;\r\n                startColumn = b.startColumn;\r\n            }\r\n            else if (b.startLineNumber === a.startLineNumber) {\r\n                startLineNumber = b.startLineNumber;\r\n                startColumn = Math.min(b.startColumn, a.startColumn);\r\n            }\r\n            else {\r\n                startLineNumber = a.startLineNumber;\r\n                startColumn = a.startColumn;\r\n            }\r\n            if (b.endLineNumber > a.endLineNumber) {\r\n                endLineNumber = b.endLineNumber;\r\n                endColumn = b.endColumn;\r\n            }\r\n            else if (b.endLineNumber === a.endLineNumber) {\r\n                endLineNumber = b.endLineNumber;\r\n                endColumn = Math.max(b.endColumn, a.endColumn);\r\n            }\r\n            else {\r\n                endLineNumber = a.endLineNumber;\r\n                endColumn = a.endColumn;\r\n            }\r\n            return new Range(startLineNumber, startColumn, endLineNumber, endColumn);\r\n        };\r\n        Range.equalsRange = function (a, b) {\r\n            return (!!a &&\r\n                !!b &&\r\n                a.startLineNumber === b.startLineNumber &&\r\n                a.startColumn === b.startColumn &&\r\n                a.endLineNumber === b.endLineNumber &&\r\n                a.endColumn === b.endColumn);\r\n        };\r\n        /**\r\n         * A function that compares ranges, useful for sorting ranges\r\n         * It will first compare ranges on the startPosition and then on the endPosition\r\n         */\r\n        Range.compareRangesUsingStarts = function (a, b) {\r\n            var aStartLineNumber = a.startLineNumber | 0;\r\n            var bStartLineNumber = b.startLineNumber | 0;\r\n            var aStartColumn = a.startColumn | 0;\r\n            var bStartColumn = b.startColumn | 0;\r\n            var aEndLineNumber = a.endLineNumber | 0;\r\n            var bEndLineNumber = b.endLineNumber | 0;\r\n            var aEndColumn = a.endColumn | 0;\r\n            var bEndColumn = b.endColumn | 0;\r\n            if (aStartLineNumber === bStartLineNumber) {\r\n                if (aStartColumn === bStartColumn) {\r\n                    if (aEndLineNumber === bEndLineNumber) {\r\n                        return aEndColumn - bEndColumn;\r\n                    }\r\n                    return aEndLineNumber - bEndLineNumber;\r\n                }\r\n                return aStartColumn - bStartColumn;\r\n            }\r\n            return aStartLineNumber - bStartLineNumber;\r\n        };\r\n        /**\r\n         * A function that compares ranges, useful for sorting ranges\r\n         * It will first compare ranges on the endPosition and then on the startPosition\r\n         */\r\n        Range.compareRangesUsingEnds = function (a, b) {\r\n            if (a.endLineNumber === b.endLineNumber) {\r\n                if (a.endColumn === b.endColumn) {\r\n                    if (a.startLineNumber === b.startLineNumber) {\r\n                        return a.startColumn - b.startColumn;\r\n                    }\r\n                    return a.startLineNumber - b.startLineNumber;\r\n                }\r\n                return a.endColumn - b.endColumn;\r\n            }\r\n            return a.endLineNumber - b.endLineNumber;\r\n        };\r\n        Range.spansMultipleLines = function (range) {\r\n            return range.endLineNumber > range.startLineNumber;\r\n        };\r\n        Range.collapseToStart = function (range) {\r\n            return {\r\n                startLineNumber: range.startLineNumber,\r\n                startColumn: range.startColumn,\r\n                endLineNumber: range.startLineNumber,\r\n                endColumn: range.startColumn\r\n            };\r\n        };\r\n        return Range;\r\n    }());\r\n    exports.Range = Range;\r\n});\r\n\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\ndefine(\"vs/editor/common/editorCommon\", [\"require\", \"exports\"], function (require, exports) {\r\n    /*---------------------------------------------------------------------------------------------\r\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n     *--------------------------------------------------------------------------------------------*/\r\n    'use strict';\r\n    /**\r\n     * The direction of a selection.\r\n     */\r\n    (function (SelectionDirection) {\r\n        /**\r\n         * The selection starts above where it ends.\r\n         */\r\n        SelectionDirection[SelectionDirection[\"LTR\"] = 0] = \"LTR\";\r\n        /**\r\n         * The selection starts below where it ends.\r\n         */\r\n        SelectionDirection[SelectionDirection[\"RTL\"] = 1] = \"RTL\";\r\n    })(exports.SelectionDirection || (exports.SelectionDirection = {}));\r\n    var SelectionDirection = exports.SelectionDirection;\r\n    (function (WrappingIndent) {\r\n        WrappingIndent[WrappingIndent[\"None\"] = 0] = \"None\";\r\n        WrappingIndent[WrappingIndent[\"Same\"] = 1] = \"Same\";\r\n        WrappingIndent[WrappingIndent[\"Indent\"] = 2] = \"Indent\";\r\n    })(exports.WrappingIndent || (exports.WrappingIndent = {}));\r\n    var WrappingIndent = exports.WrappingIndent;\r\n    var InternalEditorScrollbarOptions = (function () {\r\n        /**\r\n         * @internal\r\n         */\r\n        function InternalEditorScrollbarOptions(source) {\r\n            this.arrowSize = source.arrowSize | 0;\r\n            this.vertical = source.vertical | 0;\r\n            this.horizontal = source.horizontal | 0;\r\n            this.useShadows = Boolean(source.useShadows);\r\n            this.verticalHasArrows = Boolean(source.verticalHasArrows);\r\n            this.horizontalHasArrows = Boolean(source.horizontalHasArrows);\r\n            this.handleMouseWheel = Boolean(source.handleMouseWheel);\r\n            this.horizontalScrollbarSize = source.horizontalScrollbarSize | 0;\r\n            this.horizontalSliderSize = source.horizontalSliderSize | 0;\r\n            this.verticalScrollbarSize = source.verticalScrollbarSize | 0;\r\n            this.verticalSliderSize = source.verticalSliderSize | 0;\r\n            this.mouseWheelScrollSensitivity = Number(source.mouseWheelScrollSensitivity);\r\n        }\r\n        /**\r\n         * @internal\r\n         */\r\n        InternalEditorScrollbarOptions.prototype.equals = function (other) {\r\n            return (this.arrowSize === other.arrowSize\r\n                && this.vertical === other.vertical\r\n                && this.horizontal === other.horizontal\r\n                && this.useShadows === other.useShadows\r\n                && this.verticalHasArrows === other.verticalHasArrows\r\n                && this.horizontalHasArrows === other.horizontalHasArrows\r\n                && this.handleMouseWheel === other.handleMouseWheel\r\n                && this.horizontalScrollbarSize === other.horizontalScrollbarSize\r\n                && this.horizontalSliderSize === other.horizontalSliderSize\r\n                && this.verticalScrollbarSize === other.verticalScrollbarSize\r\n                && this.verticalSliderSize === other.verticalSliderSize\r\n                && this.mouseWheelScrollSensitivity === other.mouseWheelScrollSensitivity);\r\n        };\r\n        /**\r\n         * @internal\r\n         */\r\n        InternalEditorScrollbarOptions.prototype.clone = function () {\r\n            return new InternalEditorScrollbarOptions(this);\r\n        };\r\n        return InternalEditorScrollbarOptions;\r\n    }());\r\n    exports.InternalEditorScrollbarOptions = InternalEditorScrollbarOptions;\r\n    var EditorWrappingInfo = (function () {\r\n        /**\r\n         * @internal\r\n         */\r\n        function EditorWrappingInfo(source) {\r\n            this.isViewportWrapping = Boolean(source.isViewportWrapping);\r\n            this.wrappingColumn = source.wrappingColumn | 0;\r\n            this.wrappingIndent = source.wrappingIndent | 0;\r\n            this.wordWrapBreakBeforeCharacters = String(source.wordWrapBreakBeforeCharacters);\r\n            this.wordWrapBreakAfterCharacters = String(source.wordWrapBreakAfterCharacters);\r\n            this.wordWrapBreakObtrusiveCharacters = String(source.wordWrapBreakObtrusiveCharacters);\r\n        }\r\n        /**\r\n         * @internal\r\n         */\r\n        EditorWrappingInfo.prototype.equals = function (other) {\r\n            return (this.isViewportWrapping === other.isViewportWrapping\r\n                && this.wrappingColumn === other.wrappingColumn\r\n                && this.wrappingIndent === other.wrappingIndent\r\n                && this.wordWrapBreakBeforeCharacters === other.wordWrapBreakBeforeCharacters\r\n                && this.wordWrapBreakAfterCharacters === other.wordWrapBreakAfterCharacters\r\n                && this.wordWrapBreakObtrusiveCharacters === other.wordWrapBreakObtrusiveCharacters);\r\n        };\r\n        /**\r\n         * @internal\r\n         */\r\n        EditorWrappingInfo.prototype.clone = function () {\r\n            return new EditorWrappingInfo(this);\r\n        };\r\n        return EditorWrappingInfo;\r\n    }());\r\n    exports.EditorWrappingInfo = EditorWrappingInfo;\r\n    var InternalEditorViewOptions = (function () {\r\n        /**\r\n         * @internal\r\n         */\r\n        function InternalEditorViewOptions(source) {\r\n            this.theme = String(source.theme);\r\n            this.canUseTranslate3d = Boolean(source.canUseTranslate3d);\r\n            this.experimentalScreenReader = Boolean(source.experimentalScreenReader);\r\n            this.rulers = InternalEditorViewOptions._toSortedIntegerArray(source.rulers);\r\n            this.ariaLabel = String(source.ariaLabel);\r\n            this.lineNumbers = source.lineNumbers;\r\n            this.selectOnLineNumbers = Boolean(source.selectOnLineNumbers);\r\n            this.glyphMargin = Boolean(source.glyphMargin);\r\n            this.revealHorizontalRightPadding = source.revealHorizontalRightPadding | 0;\r\n            this.roundedSelection = Boolean(source.roundedSelection);\r\n            this.overviewRulerLanes = source.overviewRulerLanes | 0;\r\n            this.cursorBlinking = String(source.cursorBlinking);\r\n            this.cursorStyle = source.cursorStyle | 0;\r\n            this.hideCursorInOverviewRuler = Boolean(source.hideCursorInOverviewRuler);\r\n            this.scrollBeyondLastLine = Boolean(source.scrollBeyondLastLine);\r\n            this.editorClassName = String(source.editorClassName);\r\n            this.stopRenderingLineAfter = source.stopRenderingLineAfter | 0;\r\n            this.renderWhitespace = Boolean(source.renderWhitespace);\r\n            this.indentGuides = Boolean(source.indentGuides);\r\n            this.scrollbar = source.scrollbar.clone();\r\n        }\r\n        InternalEditorViewOptions._toSortedIntegerArray = function (source) {\r\n            if (!Array.isArray(source)) {\r\n                return [];\r\n            }\r\n            var arrSource = source;\r\n            var result = arrSource.map(function (el) {\r\n                var r = parseInt(el, 10);\r\n                if (isNaN(r)) {\r\n                    return 0;\r\n                }\r\n                return r;\r\n            });\r\n            result.sort();\r\n            return result;\r\n        };\r\n        InternalEditorViewOptions._numberArraysEqual = function (a, b) {\r\n            if (a.length !== b.length) {\r\n                return false;\r\n            }\r\n            for (var i = 0; i < a.length; i++) {\r\n                if (a[i] !== b[i]) {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        };\r\n        /**\r\n         * @internal\r\n         */\r\n        InternalEditorViewOptions.prototype.equals = function (other) {\r\n            return (this.theme === other.theme\r\n                && this.canUseTranslate3d === other.canUseTranslate3d\r\n                && this.experimentalScreenReader === other.experimentalScreenReader\r\n                && InternalEditorViewOptions._numberArraysEqual(this.rulers, other.rulers)\r\n                && this.ariaLabel === other.ariaLabel\r\n                && this.lineNumbers === other.lineNumbers\r\n                && this.selectOnLineNumbers === other.selectOnLineNumbers\r\n                && this.glyphMargin === other.glyphMargin\r\n                && this.revealHorizontalRightPadding === other.revealHorizontalRightPadding\r\n                && this.roundedSelection === other.roundedSelection\r\n                && this.overviewRulerLanes === other.overviewRulerLanes\r\n                && this.cursorBlinking === other.cursorBlinking\r\n                && this.cursorStyle === other.cursorStyle\r\n                && this.hideCursorInOverviewRuler === other.hideCursorInOverviewRuler\r\n                && this.scrollBeyondLastLine === other.scrollBeyondLastLine\r\n                && this.editorClassName === other.editorClassName\r\n                && this.stopRenderingLineAfter === other.stopRenderingLineAfter\r\n                && this.renderWhitespace === other.renderWhitespace\r\n                && this.indentGuides === other.indentGuides\r\n                && this.scrollbar.equals(other.scrollbar));\r\n        };\r\n        /**\r\n         * @internal\r\n         */\r\n        InternalEditorViewOptions.prototype.createChangeEvent = function (newOpts) {\r\n            return {\r\n                theme: this.theme !== newOpts.theme,\r\n                canUseTranslate3d: this.canUseTranslate3d !== newOpts.canUseTranslate3d,\r\n                experimentalScreenReader: this.experimentalScreenReader !== newOpts.experimentalScreenReader,\r\n                rulers: (!InternalEditorViewOptions._numberArraysEqual(this.rulers, newOpts.rulers)),\r\n                ariaLabel: this.ariaLabel !== newOpts.ariaLabel,\r\n                lineNumbers: this.lineNumbers !== newOpts.lineNumbers,\r\n                selectOnLineNumbers: this.selectOnLineNumbers !== newOpts.selectOnLineNumbers,\r\n                glyphMargin: this.glyphMargin !== newOpts.glyphMargin,\r\n                revealHorizontalRightPadding: this.revealHorizontalRightPadding !== newOpts.revealHorizontalRightPadding,\r\n                roundedSelection: this.roundedSelection !== newOpts.roundedSelection,\r\n                overviewRulerLanes: this.overviewRulerLanes !== newOpts.overviewRulerLanes,\r\n                cursorBlinking: this.cursorBlinking !== newOpts.cursorBlinking,\r\n                cursorStyle: this.cursorStyle !== newOpts.cursorStyle,\r\n                hideCursorInOverviewRuler: this.hideCursorInOverviewRuler !== newOpts.hideCursorInOverviewRuler,\r\n                scrollBeyondLastLine: this.scrollBeyondLastLine !== newOpts.scrollBeyondLastLine,\r\n                editorClassName: this.editorClassName !== newOpts.editorClassName,\r\n                stopRenderingLineAfter: this.stopRenderingLineAfter !== newOpts.stopRenderingLineAfter,\r\n                renderWhitespace: this.renderWhitespace !== newOpts.renderWhitespace,\r\n                indentGuides: this.indentGuides !== newOpts.indentGuides,\r\n                scrollbar: (!this.scrollbar.equals(newOpts.scrollbar)),\r\n            };\r\n        };\r\n        /**\r\n         * @internal\r\n         */\r\n        InternalEditorViewOptions.prototype.clone = function () {\r\n            return new InternalEditorViewOptions(this);\r\n        };\r\n        return InternalEditorViewOptions;\r\n    }());\r\n    exports.InternalEditorViewOptions = InternalEditorViewOptions;\r\n    var EditorContribOptions = (function () {\r\n        /**\r\n         * @internal\r\n         */\r\n        function EditorContribOptions(source) {\r\n            this.selectionClipboard = Boolean(source.selectionClipboard);\r\n            this.hover = Boolean(source.hover);\r\n            this.contextmenu = Boolean(source.contextmenu);\r\n            this.quickSuggestions = Boolean(source.quickSuggestions);\r\n            this.quickSuggestionsDelay = source.quickSuggestionsDelay | 0;\r\n            this.iconsInSuggestions = Boolean(source.iconsInSuggestions);\r\n            this.formatOnType = Boolean(source.formatOnType);\r\n            this.suggestOnTriggerCharacters = Boolean(source.suggestOnTriggerCharacters);\r\n            this.acceptSuggestionOnEnter = Boolean(source.acceptSuggestionOnEnter);\r\n            this.selectionHighlight = Boolean(source.selectionHighlight);\r\n            this.outlineMarkers = Boolean(source.outlineMarkers);\r\n            this.referenceInfos = Boolean(source.referenceInfos);\r\n            this.folding = Boolean(source.folding);\r\n        }\r\n        /**\r\n         * @internal\r\n         */\r\n        EditorContribOptions.prototype.equals = function (other) {\r\n            return (this.selectionClipboard === other.selectionClipboard\r\n                && this.hover === other.hover\r\n                && this.contextmenu === other.contextmenu\r\n                && this.quickSuggestions === other.quickSuggestions\r\n                && this.quickSuggestionsDelay === other.quickSuggestionsDelay\r\n                && this.iconsInSuggestions === other.iconsInSuggestions\r\n                && this.formatOnType === other.formatOnType\r\n                && this.suggestOnTriggerCharacters === other.suggestOnTriggerCharacters\r\n                && this.acceptSuggestionOnEnter === other.acceptSuggestionOnEnter\r\n                && this.selectionHighlight === other.selectionHighlight\r\n                && this.outlineMarkers === other.outlineMarkers\r\n                && this.referenceInfos === other.referenceInfos\r\n                && this.folding === other.folding);\r\n        };\r\n        /**\r\n         * @internal\r\n         */\r\n        EditorContribOptions.prototype.clone = function () {\r\n            return new EditorContribOptions(this);\r\n        };\r\n        return EditorContribOptions;\r\n    }());\r\n    exports.EditorContribOptions = EditorContribOptions;\r\n    /**\r\n     * Internal configuration options (transformed or computed) for the editor.\r\n     */\r\n    var InternalEditorOptions = (function () {\r\n        /**\r\n         * @internal\r\n         */\r\n        function InternalEditorOptions(source) {\r\n            this.lineHeight = source.lineHeight | 0;\r\n            this.readOnly = Boolean(source.readOnly);\r\n            this.wordSeparators = String(source.wordSeparators);\r\n            this.autoClosingBrackets = Boolean(source.autoClosingBrackets);\r\n            this.useTabStops = Boolean(source.useTabStops);\r\n            this.tabFocusMode = Boolean(source.tabFocusMode);\r\n            this.layoutInfo = source.layoutInfo.clone();\r\n            this.fontInfo = source.fontInfo.clone();\r\n            this.viewInfo = source.viewInfo.clone();\r\n            this.wrappingInfo = source.wrappingInfo.clone();\r\n            this.contribInfo = source.contribInfo.clone();\r\n        }\r\n        /**\r\n         * @internal\r\n         */\r\n        InternalEditorOptions.prototype.equals = function (other) {\r\n            return (this.lineHeight === other.lineHeight\r\n                && this.readOnly === other.readOnly\r\n                && this.wordSeparators === other.wordSeparators\r\n                && this.autoClosingBrackets === other.autoClosingBrackets\r\n                && this.useTabStops === other.useTabStops\r\n                && this.tabFocusMode === other.tabFocusMode\r\n                && this.layoutInfo.equals(other.layoutInfo)\r\n                && this.fontInfo.equals(other.fontInfo)\r\n                && this.viewInfo.equals(other.viewInfo)\r\n                && this.wrappingInfo.equals(other.wrappingInfo)\r\n                && this.contribInfo.equals(other.contribInfo));\r\n        };\r\n        /**\r\n         * @internal\r\n         */\r\n        InternalEditorOptions.prototype.createChangeEvent = function (newOpts) {\r\n            return {\r\n                lineHeight: (this.lineHeight !== newOpts.lineHeight),\r\n                readOnly: (this.readOnly !== newOpts.readOnly),\r\n                wordSeparators: (this.wordSeparators !== newOpts.wordSeparators),\r\n                autoClosingBrackets: (this.autoClosingBrackets !== newOpts.autoClosingBrackets),\r\n                useTabStops: (this.useTabStops !== newOpts.useTabStops),\r\n                tabFocusMode: (this.tabFocusMode !== newOpts.tabFocusMode),\r\n                layoutInfo: (!this.layoutInfo.equals(newOpts.layoutInfo)),\r\n                fontInfo: (!this.fontInfo.equals(newOpts.fontInfo)),\r\n                viewInfo: this.viewInfo.createChangeEvent(newOpts.viewInfo),\r\n                wrappingInfo: (!this.wrappingInfo.equals(newOpts.wrappingInfo)),\r\n                contribInfo: (!this.contribInfo.equals(newOpts.contribInfo)),\r\n            };\r\n        };\r\n        /**\r\n         * @internal\r\n         */\r\n        InternalEditorOptions.prototype.clone = function () {\r\n            return new InternalEditorOptions(this);\r\n        };\r\n        return InternalEditorOptions;\r\n    }());\r\n    exports.InternalEditorOptions = InternalEditorOptions;\r\n    /**\r\n     * Vertical Lane in the overview ruler of the editor.\r\n     */\r\n    (function (OverviewRulerLane) {\r\n        OverviewRulerLane[OverviewRulerLane[\"Left\"] = 1] = \"Left\";\r\n        OverviewRulerLane[OverviewRulerLane[\"Center\"] = 2] = \"Center\";\r\n        OverviewRulerLane[OverviewRulerLane[\"Right\"] = 4] = \"Right\";\r\n        OverviewRulerLane[OverviewRulerLane[\"Full\"] = 7] = \"Full\";\r\n    })(exports.OverviewRulerLane || (exports.OverviewRulerLane = {}));\r\n    var OverviewRulerLane = exports.OverviewRulerLane;\r\n    /**\r\n     * End of line character preference.\r\n     */\r\n    (function (EndOfLinePreference) {\r\n        /**\r\n         * Use the end of line character identified in the text buffer.\r\n         */\r\n        EndOfLinePreference[EndOfLinePreference[\"TextDefined\"] = 0] = \"TextDefined\";\r\n        /**\r\n         * Use line feed (\\n) as the end of line character.\r\n         */\r\n        EndOfLinePreference[EndOfLinePreference[\"LF\"] = 1] = \"LF\";\r\n        /**\r\n         * Use carriage return and line feed (\\r\\n) as the end of line character.\r\n         */\r\n        EndOfLinePreference[EndOfLinePreference[\"CRLF\"] = 2] = \"CRLF\";\r\n    })(exports.EndOfLinePreference || (exports.EndOfLinePreference = {}));\r\n    var EndOfLinePreference = exports.EndOfLinePreference;\r\n    /**\r\n     * The default end of line to use when instantiating models.\r\n     */\r\n    (function (DefaultEndOfLine) {\r\n        /**\r\n         * Use line feed (\\n) as the end of line character.\r\n         */\r\n        DefaultEndOfLine[DefaultEndOfLine[\"LF\"] = 1] = \"LF\";\r\n        /**\r\n         * Use carriage return and line feed (\\r\\n) as the end of line character.\r\n         */\r\n        DefaultEndOfLine[DefaultEndOfLine[\"CRLF\"] = 2] = \"CRLF\";\r\n    })(exports.DefaultEndOfLine || (exports.DefaultEndOfLine = {}));\r\n    var DefaultEndOfLine = exports.DefaultEndOfLine;\r\n    /**\r\n     * End of line character preference.\r\n     */\r\n    (function (EndOfLineSequence) {\r\n        /**\r\n         * Use line feed (\\n) as the end of line character.\r\n         */\r\n        EndOfLineSequence[EndOfLineSequence[\"LF\"] = 0] = \"LF\";\r\n        /**\r\n         * Use carriage return and line feed (\\r\\n) as the end of line character.\r\n         */\r\n        EndOfLineSequence[EndOfLineSequence[\"CRLF\"] = 1] = \"CRLF\";\r\n    })(exports.EndOfLineSequence || (exports.EndOfLineSequence = {}));\r\n    var EndOfLineSequence = exports.EndOfLineSequence;\r\n    (function (TrackedRangeStickiness) {\r\n        TrackedRangeStickiness[TrackedRangeStickiness[\"AlwaysGrowsWhenTypingAtEdges\"] = 0] = \"AlwaysGrowsWhenTypingAtEdges\";\r\n        TrackedRangeStickiness[TrackedRangeStickiness[\"NeverGrowsWhenTypingAtEdges\"] = 1] = \"NeverGrowsWhenTypingAtEdges\";\r\n        TrackedRangeStickiness[TrackedRangeStickiness[\"GrowsOnlyWhenTypingBefore\"] = 2] = \"GrowsOnlyWhenTypingBefore\";\r\n        TrackedRangeStickiness[TrackedRangeStickiness[\"GrowsOnlyWhenTypingAfter\"] = 3] = \"GrowsOnlyWhenTypingAfter\";\r\n    })(exports.TrackedRangeStickiness || (exports.TrackedRangeStickiness = {}));\r\n    var TrackedRangeStickiness = exports.TrackedRangeStickiness;\r\n    (function (CursorChangeReason) {\r\n        CursorChangeReason[CursorChangeReason[\"NotSet\"] = 0] = \"NotSet\";\r\n        CursorChangeReason[CursorChangeReason[\"ContentFlush\"] = 1] = \"ContentFlush\";\r\n        CursorChangeReason[CursorChangeReason[\"RecoverFromMarkers\"] = 2] = \"RecoverFromMarkers\";\r\n        CursorChangeReason[CursorChangeReason[\"Explicit\"] = 3] = \"Explicit\";\r\n        CursorChangeReason[CursorChangeReason[\"Paste\"] = 4] = \"Paste\";\r\n        CursorChangeReason[CursorChangeReason[\"Undo\"] = 5] = \"Undo\";\r\n        CursorChangeReason[CursorChangeReason[\"Redo\"] = 6] = \"Redo\";\r\n    })(exports.CursorChangeReason || (exports.CursorChangeReason = {}));\r\n    var CursorChangeReason = exports.CursorChangeReason;\r\n    /**\r\n     * @internal\r\n     */\r\n    (function (VerticalRevealType) {\r\n        VerticalRevealType[VerticalRevealType[\"Simple\"] = 0] = \"Simple\";\r\n        VerticalRevealType[VerticalRevealType[\"Center\"] = 1] = \"Center\";\r\n        VerticalRevealType[VerticalRevealType[\"CenterIfOutsideViewport\"] = 2] = \"CenterIfOutsideViewport\";\r\n    })(exports.VerticalRevealType || (exports.VerticalRevealType = {}));\r\n    var VerticalRevealType = exports.VerticalRevealType;\r\n    /**\r\n     * A description for the overview ruler position.\r\n     */\r\n    var OverviewRulerPosition = (function () {\r\n        /**\r\n         * @internal\r\n         */\r\n        function OverviewRulerPosition(source) {\r\n            this.width = source.width | 0;\r\n            this.height = source.height | 0;\r\n            this.top = source.top | 0;\r\n            this.right = source.right | 0;\r\n        }\r\n        /**\r\n         * @internal\r\n         */\r\n        OverviewRulerPosition.prototype.equals = function (other) {\r\n            return (this.width === other.width\r\n                && this.height === other.height\r\n                && this.top === other.top\r\n                && this.right === other.right);\r\n        };\r\n        /**\r\n         * @internal\r\n         */\r\n        OverviewRulerPosition.prototype.clone = function () {\r\n            return new OverviewRulerPosition(this);\r\n        };\r\n        return OverviewRulerPosition;\r\n    }());\r\n    exports.OverviewRulerPosition = OverviewRulerPosition;\r\n    /**\r\n     * The internal layout details of the editor.\r\n     */\r\n    var EditorLayoutInfo = (function () {\r\n        /**\r\n         * @internal\r\n         */\r\n        function EditorLayoutInfo(source) {\r\n            this.width = source.width | 0;\r\n            this.height = source.height | 0;\r\n            this.glyphMarginLeft = source.glyphMarginLeft | 0;\r\n            this.glyphMarginWidth = source.glyphMarginWidth | 0;\r\n            this.glyphMarginHeight = source.glyphMarginHeight | 0;\r\n            this.lineNumbersLeft = source.lineNumbersLeft | 0;\r\n            this.lineNumbersWidth = source.lineNumbersWidth | 0;\r\n            this.lineNumbersHeight = source.lineNumbersHeight | 0;\r\n            this.decorationsLeft = source.decorationsLeft | 0;\r\n            this.decorationsWidth = source.decorationsWidth | 0;\r\n            this.decorationsHeight = source.decorationsHeight | 0;\r\n            this.contentLeft = source.contentLeft | 0;\r\n            this.contentWidth = source.contentWidth | 0;\r\n            this.contentHeight = source.contentHeight | 0;\r\n            this.verticalScrollbarWidth = source.verticalScrollbarWidth | 0;\r\n            this.horizontalScrollbarHeight = source.horizontalScrollbarHeight | 0;\r\n            this.overviewRuler = source.overviewRuler.clone();\r\n        }\r\n        /**\r\n         * @internal\r\n         */\r\n        EditorLayoutInfo.prototype.equals = function (other) {\r\n            return (this.width === other.width\r\n                && this.height === other.height\r\n                && this.glyphMarginLeft === other.glyphMarginLeft\r\n                && this.glyphMarginWidth === other.glyphMarginWidth\r\n                && this.glyphMarginHeight === other.glyphMarginHeight\r\n                && this.lineNumbersLeft === other.lineNumbersLeft\r\n                && this.lineNumbersWidth === other.lineNumbersWidth\r\n                && this.lineNumbersHeight === other.lineNumbersHeight\r\n                && this.decorationsLeft === other.decorationsLeft\r\n                && this.decorationsWidth === other.decorationsWidth\r\n                && this.decorationsHeight === other.decorationsHeight\r\n                && this.contentLeft === other.contentLeft\r\n                && this.contentWidth === other.contentWidth\r\n                && this.contentHeight === other.contentHeight\r\n                && this.verticalScrollbarWidth === other.verticalScrollbarWidth\r\n                && this.horizontalScrollbarHeight === other.horizontalScrollbarHeight\r\n                && this.overviewRuler.equals(other.overviewRuler));\r\n        };\r\n        /**\r\n         * @internal\r\n         */\r\n        EditorLayoutInfo.prototype.clone = function () {\r\n            return new EditorLayoutInfo(this);\r\n        };\r\n        return EditorLayoutInfo;\r\n    }());\r\n    exports.EditorLayoutInfo = EditorLayoutInfo;\r\n    /**\r\n     * Type of hit element with the mouse in the editor.\r\n     */\r\n    (function (MouseTargetType) {\r\n        /**\r\n         * Mouse is on top of an unknown element.\r\n         */\r\n        MouseTargetType[MouseTargetType[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\r\n        /**\r\n         * Mouse is on top of the textarea used for input.\r\n         */\r\n        MouseTargetType[MouseTargetType[\"TEXTAREA\"] = 1] = \"TEXTAREA\";\r\n        /**\r\n         * Mouse is on top of the glyph margin\r\n         */\r\n        MouseTargetType[MouseTargetType[\"GUTTER_GLYPH_MARGIN\"] = 2] = \"GUTTER_GLYPH_MARGIN\";\r\n        /**\r\n         * Mouse is on top of the line numbers\r\n         */\r\n        MouseTargetType[MouseTargetType[\"GUTTER_LINE_NUMBERS\"] = 3] = \"GUTTER_LINE_NUMBERS\";\r\n        /**\r\n         * Mouse is on top of the line decorations\r\n         */\r\n        MouseTargetType[MouseTargetType[\"GUTTER_LINE_DECORATIONS\"] = 4] = \"GUTTER_LINE_DECORATIONS\";\r\n        /**\r\n         * Mouse is on top of the whitespace left in the gutter by a view zone.\r\n         */\r\n        MouseTargetType[MouseTargetType[\"GUTTER_VIEW_ZONE\"] = 5] = \"GUTTER_VIEW_ZONE\";\r\n        /**\r\n         * Mouse is on top of text in the content.\r\n         */\r\n        MouseTargetType[MouseTargetType[\"CONTENT_TEXT\"] = 6] = \"CONTENT_TEXT\";\r\n        /**\r\n         * Mouse is on top of empty space in the content (e.g. after line text or below last line)\r\n         */\r\n        MouseTargetType[MouseTargetType[\"CONTENT_EMPTY\"] = 7] = \"CONTENT_EMPTY\";\r\n        /**\r\n         * Mouse is on top of a view zone in the content.\r\n         */\r\n        MouseTargetType[MouseTargetType[\"CONTENT_VIEW_ZONE\"] = 8] = \"CONTENT_VIEW_ZONE\";\r\n        /**\r\n         * Mouse is on top of a content widget.\r\n         */\r\n        MouseTargetType[MouseTargetType[\"CONTENT_WIDGET\"] = 9] = \"CONTENT_WIDGET\";\r\n        /**\r\n         * Mouse is on top of the decorations overview ruler.\r\n         */\r\n        MouseTargetType[MouseTargetType[\"OVERVIEW_RULER\"] = 10] = \"OVERVIEW_RULER\";\r\n        /**\r\n         * Mouse is on top of a scrollbar.\r\n         */\r\n        MouseTargetType[MouseTargetType[\"SCROLLBAR\"] = 11] = \"SCROLLBAR\";\r\n        /**\r\n         * Mouse is on top of an overlay widget.\r\n         */\r\n        MouseTargetType[MouseTargetType[\"OVERLAY_WIDGET\"] = 12] = \"OVERLAY_WIDGET\";\r\n    })(exports.MouseTargetType || (exports.MouseTargetType = {}));\r\n    var MouseTargetType = exports.MouseTargetType;\r\n    exports.KEYBINDING_CONTEXT_EDITOR_TEXT_FOCUS = 'editorTextFocus';\r\n    exports.KEYBINDING_CONTEXT_EDITOR_FOCUS = 'editorFocus';\r\n    /**\r\n     * @internal\r\n     */\r\n    exports.KEYBINDING_CONTEXT_EDITOR_TAB_MOVES_FOCUS = 'editorTabMovesFocus';\r\n    exports.KEYBINDING_CONTEXT_EDITOR_HAS_MULTIPLE_SELECTIONS = 'editorHasMultipleSelections';\r\n    exports.KEYBINDING_CONTEXT_EDITOR_HAS_NON_EMPTY_SELECTION = 'editorHasSelection';\r\n    exports.KEYBINDING_CONTEXT_EDITOR_LANGUAGE_ID = 'editorLangId';\r\n    /**\r\n     * @internal\r\n     */\r\n    exports.SHOW_ACCESSIBILITY_HELP_ACTION_ID = 'editor.action.showAccessibilityHelp';\r\n    var BareFontInfo = (function () {\r\n        /**\r\n         * @internal\r\n         */\r\n        function BareFontInfo(opts) {\r\n            this.fontFamily = String(opts.fontFamily);\r\n            this.fontSize = opts.fontSize | 0;\r\n            this.lineHeight = opts.lineHeight | 0;\r\n        }\r\n        /**\r\n         * @internal\r\n         */\r\n        BareFontInfo.prototype.getId = function () {\r\n            return this.fontFamily + '-' + this.fontSize + '-' + this.lineHeight;\r\n        };\r\n        return BareFontInfo;\r\n    }());\r\n    exports.BareFontInfo = BareFontInfo;\r\n    var FontInfo = (function (_super) {\r\n        __extends(FontInfo, _super);\r\n        /**\r\n         * @internal\r\n         */\r\n        function FontInfo(opts) {\r\n            _super.call(this, opts);\r\n            this.typicalHalfwidthCharacterWidth = opts.typicalHalfwidthCharacterWidth;\r\n            this.typicalFullwidthCharacterWidth = opts.typicalFullwidthCharacterWidth;\r\n            this.spaceWidth = opts.spaceWidth;\r\n            this.maxDigitWidth = opts.maxDigitWidth;\r\n        }\r\n        /**\r\n         * @internal\r\n         */\r\n        FontInfo.prototype.equals = function (other) {\r\n            return (this.fontFamily === other.fontFamily\r\n                && this.fontSize === other.fontSize\r\n                && this.lineHeight === other.lineHeight\r\n                && this.typicalHalfwidthCharacterWidth === other.typicalHalfwidthCharacterWidth\r\n                && this.typicalFullwidthCharacterWidth === other.typicalFullwidthCharacterWidth\r\n                && this.spaceWidth === other.spaceWidth\r\n                && this.maxDigitWidth === other.maxDigitWidth);\r\n        };\r\n        /**\r\n         * @internal\r\n         */\r\n        FontInfo.prototype.clone = function () {\r\n            return new FontInfo(this);\r\n        };\r\n        return FontInfo;\r\n    }(BareFontInfo));\r\n    exports.FontInfo = FontInfo;\r\n    /**\r\n     * @internal\r\n     */\r\n    exports.ViewEventNames = {\r\n        ModelFlushedEvent: 'modelFlushedEvent',\r\n        LinesDeletedEvent: 'linesDeletedEvent',\r\n        LinesInsertedEvent: 'linesInsertedEvent',\r\n        LineChangedEvent: 'lineChangedEvent',\r\n        TokensChangedEvent: 'tokensChangedEvent',\r\n        DecorationsChangedEvent: 'decorationsChangedEvent',\r\n        CursorPositionChangedEvent: 'cursorPositionChangedEvent',\r\n        CursorSelectionChangedEvent: 'cursorSelectionChangedEvent',\r\n        RevealRangeEvent: 'revealRangeEvent',\r\n        LineMappingChangedEvent: 'lineMappingChangedEvent',\r\n        ScrollRequestEvent: 'scrollRequestEvent'\r\n    };\r\n    /**\r\n     * @internal\r\n     */\r\n    var Viewport = (function () {\r\n        function Viewport(top, left, width, height) {\r\n            this.top = top | 0;\r\n            this.left = left | 0;\r\n            this.width = width | 0;\r\n            this.height = height | 0;\r\n        }\r\n        return Viewport;\r\n    }());\r\n    exports.Viewport = Viewport;\r\n    /**\r\n     * @internal\r\n     */\r\n    (function (CodeEditorStateFlag) {\r\n        CodeEditorStateFlag[CodeEditorStateFlag[\"Value\"] = 0] = \"Value\";\r\n        CodeEditorStateFlag[CodeEditorStateFlag[\"Selection\"] = 1] = \"Selection\";\r\n        CodeEditorStateFlag[CodeEditorStateFlag[\"Position\"] = 2] = \"Position\";\r\n        CodeEditorStateFlag[CodeEditorStateFlag[\"Scroll\"] = 3] = \"Scroll\";\r\n    })(exports.CodeEditorStateFlag || (exports.CodeEditorStateFlag = {}));\r\n    var CodeEditorStateFlag = exports.CodeEditorStateFlag;\r\n    exports.EditorType = {\r\n        ICodeEditor: 'vs.editor.ICodeEditor',\r\n        IDiffEditor: 'vs.editor.IDiffEditor'\r\n    };\r\n    /**\r\n     * @internal\r\n     */\r\n    exports.ClassName = {\r\n        EditorWarningDecoration: 'greensquiggly',\r\n        EditorErrorDecoration: 'redsquiggly'\r\n    };\r\n    /**\r\n     * @internal\r\n     */\r\n    exports.EventType = {\r\n        Disposed: 'disposed',\r\n        ConfigurationChanged: 'configurationChanged',\r\n        ModelDispose: 'modelDispose',\r\n        ModelChanged: 'modelChanged',\r\n        ModelTokensChanged: 'modelTokensChanged',\r\n        ModelModeChanged: 'modelsModeChanged',\r\n        ModelModeSupportChanged: 'modelsModeSupportChanged',\r\n        ModelOptionsChanged: 'modelOptionsChanged',\r\n        ModelRawContentChanged: 'contentChanged',\r\n        ModelContentChanged2: 'contentChanged2',\r\n        ModelRawContentChangedFlush: 'flush',\r\n        ModelRawContentChangedLinesDeleted: 'linesDeleted',\r\n        ModelRawContentChangedLinesInserted: 'linesInserted',\r\n        ModelRawContentChangedLineChanged: 'lineChanged',\r\n        EditorTextBlur: 'blur',\r\n        EditorTextFocus: 'focus',\r\n        EditorFocus: 'widgetFocus',\r\n        EditorBlur: 'widgetBlur',\r\n        ModelDecorationsChanged: 'decorationsChanged',\r\n        CursorPositionChanged: 'positionChanged',\r\n        CursorSelectionChanged: 'selectionChanged',\r\n        CursorRevealRange: 'revealRange',\r\n        CursorScrollRequest: 'scrollRequest',\r\n        ViewFocusGained: 'focusGained',\r\n        ViewFocusLost: 'focusLost',\r\n        ViewFocusChanged: 'focusChanged',\r\n        ViewScrollChanged: 'scrollChanged',\r\n        ViewZonesChanged: 'zonesChanged',\r\n        ViewLayoutChanged: 'viewLayoutChanged',\r\n        ContextMenu: 'contextMenu',\r\n        MouseDown: 'mousedown',\r\n        MouseUp: 'mouseup',\r\n        MouseMove: 'mousemove',\r\n        MouseLeave: 'mouseleave',\r\n        KeyDown: 'keydown',\r\n        KeyUp: 'keyup',\r\n        EditorLayout: 'editorLayout',\r\n        DiffUpdated: 'diffUpdated'\r\n    };\r\n    exports.Handler = {\r\n        ExecuteCommand: 'executeCommand',\r\n        ExecuteCommands: 'executeCommands',\r\n        CursorLeft: 'cursorLeft',\r\n        CursorLeftSelect: 'cursorLeftSelect',\r\n        CursorWordLeft: 'cursorWordLeft',\r\n        CursorWordStartLeft: 'cursorWordStartLeft',\r\n        CursorWordEndLeft: 'cursorWordEndLeft',\r\n        CursorWordLeftSelect: 'cursorWordLeftSelect',\r\n        CursorWordStartLeftSelect: 'cursorWordStartLeftSelect',\r\n        CursorWordEndLeftSelect: 'cursorWordEndLeftSelect',\r\n        CursorRight: 'cursorRight',\r\n        CursorRightSelect: 'cursorRightSelect',\r\n        CursorWordRight: 'cursorWordRight',\r\n        CursorWordStartRight: 'cursorWordStartRight',\r\n        CursorWordEndRight: 'cursorWordEndRight',\r\n        CursorWordRightSelect: 'cursorWordRightSelect',\r\n        CursorWordStartRightSelect: 'cursorWordStartRightSelect',\r\n        CursorWordEndRightSelect: 'cursorWordEndRightSelect',\r\n        CursorUp: 'cursorUp',\r\n        CursorUpSelect: 'cursorUpSelect',\r\n        CursorDown: 'cursorDown',\r\n        CursorDownSelect: 'cursorDownSelect',\r\n        CursorPageUp: 'cursorPageUp',\r\n        CursorPageUpSelect: 'cursorPageUpSelect',\r\n        CursorPageDown: 'cursorPageDown',\r\n        CursorPageDownSelect: 'cursorPageDownSelect',\r\n        CursorHome: 'cursorHome',\r\n        CursorHomeSelect: 'cursorHomeSelect',\r\n        CursorEnd: 'cursorEnd',\r\n        CursorEndSelect: 'cursorEndSelect',\r\n        ExpandLineSelection: 'expandLineSelection',\r\n        CursorTop: 'cursorTop',\r\n        CursorTopSelect: 'cursorTopSelect',\r\n        CursorBottom: 'cursorBottom',\r\n        CursorBottomSelect: 'cursorBottomSelect',\r\n        CursorColumnSelectLeft: 'cursorColumnSelectLeft',\r\n        CursorColumnSelectRight: 'cursorColumnSelectRight',\r\n        CursorColumnSelectUp: 'cursorColumnSelectUp',\r\n        CursorColumnSelectPageUp: 'cursorColumnSelectPageUp',\r\n        CursorColumnSelectDown: 'cursorColumnSelectDown',\r\n        CursorColumnSelectPageDown: 'cursorColumnSelectPageDown',\r\n        AddCursorDown: 'addCursorDown',\r\n        AddCursorUp: 'addCursorUp',\r\n        CursorUndo: 'cursorUndo',\r\n        MoveTo: 'moveTo',\r\n        MoveToSelect: 'moveToSelect',\r\n        ColumnSelect: 'columnSelect',\r\n        CreateCursor: 'createCursor',\r\n        LastCursorMoveToSelect: 'lastCursorMoveToSelect',\r\n        JumpToBracket: 'jumpToBracket',\r\n        Type: 'type',\r\n        ReplacePreviousChar: 'replacePreviousChar',\r\n        Paste: 'paste',\r\n        Tab: 'tab',\r\n        Indent: 'indent',\r\n        Outdent: 'outdent',\r\n        DeleteLeft: 'deleteLeft',\r\n        DeleteRight: 'deleteRight',\r\n        DeleteWordLeft: 'deleteWordLeft',\r\n        DeleteWordStartLeft: 'deleteWordStartLeft',\r\n        DeleteWordEndLeft: 'deleteWordEndLeft',\r\n        DeleteWordRight: 'deleteWordRight',\r\n        DeleteWordStartRight: 'deleteWordStartRight',\r\n        DeleteWordEndRight: 'deleteWordEndRight',\r\n        DeleteAllLeft: 'deleteAllLeft',\r\n        DeleteAllRight: 'deleteAllRight',\r\n        RemoveSecondaryCursors: 'removeSecondaryCursors',\r\n        CancelSelection: 'cancelSelection',\r\n        Cut: 'cut',\r\n        Undo: 'undo',\r\n        Redo: 'redo',\r\n        WordSelect: 'wordSelect',\r\n        WordSelectDrag: 'wordSelectDrag',\r\n        LastCursorWordSelect: 'lastCursorWordSelect',\r\n        LineSelect: 'lineSelect',\r\n        LineSelectDrag: 'lineSelectDrag',\r\n        LastCursorLineSelect: 'lastCursorLineSelect',\r\n        LastCursorLineSelectDrag: 'lastCursorLineSelectDrag',\r\n        LineInsertBefore: 'lineInsertBefore',\r\n        LineInsertAfter: 'lineInsertAfter',\r\n        LineBreakInsert: 'lineBreakInsert',\r\n        SelectAll: 'selectAll',\r\n        ScrollLineUp: 'scrollLineUp',\r\n        ScrollLineDown: 'scrollLineDown',\r\n        ScrollPageUp: 'scrollPageUp',\r\n        ScrollPageDown: 'scrollPageDown'\r\n    };\r\n    (function (TextEditorCursorStyle) {\r\n        TextEditorCursorStyle[TextEditorCursorStyle[\"Line\"] = 1] = \"Line\";\r\n        TextEditorCursorStyle[TextEditorCursorStyle[\"Block\"] = 2] = \"Block\";\r\n        TextEditorCursorStyle[TextEditorCursorStyle[\"Underline\"] = 3] = \"Underline\";\r\n    })(exports.TextEditorCursorStyle || (exports.TextEditorCursorStyle = {}));\r\n    var TextEditorCursorStyle = exports.TextEditorCursorStyle;\r\n    /**\r\n     * @internal\r\n     */\r\n    function cursorStyleToString(cursorStyle) {\r\n        if (cursorStyle === TextEditorCursorStyle.Line) {\r\n            return 'line';\r\n        }\r\n        else if (cursorStyle === TextEditorCursorStyle.Block) {\r\n            return 'block';\r\n        }\r\n        else if (cursorStyle === TextEditorCursorStyle.Underline) {\r\n            return 'underline';\r\n        }\r\n        else {\r\n            throw new Error('cursorStyleToString: Unknown cursorStyle');\r\n        }\r\n    }\r\n    exports.cursorStyleToString = cursorStyleToString;\r\n    /**\r\n     * @internal\r\n     */\r\n    var ColorZone = (function () {\r\n        function ColorZone(from, to, colorId, position) {\r\n            this.from = from | 0;\r\n            this.to = to | 0;\r\n            this.colorId = colorId | 0;\r\n            this.position = position | 0;\r\n        }\r\n        return ColorZone;\r\n    }());\r\n    exports.ColorZone = ColorZone;\r\n    /**\r\n     * A zone in the overview ruler\r\n     * @internal\r\n     */\r\n    var OverviewRulerZone = (function () {\r\n        function OverviewRulerZone(startLineNumber, endLineNumber, position, forceHeight, color, darkColor) {\r\n            this.startLineNumber = startLineNumber;\r\n            this.endLineNumber = endLineNumber;\r\n            this.position = position;\r\n            this.forceHeight = forceHeight;\r\n            this._color = color;\r\n            this._darkColor = darkColor;\r\n            this._colorZones = null;\r\n        }\r\n        OverviewRulerZone.prototype.getColor = function (useDarkColor) {\r\n            if (useDarkColor) {\r\n                return this._darkColor;\r\n            }\r\n            return this._color;\r\n        };\r\n        OverviewRulerZone.prototype.equals = function (other) {\r\n            return (this.startLineNumber === other.startLineNumber\r\n                && this.endLineNumber === other.endLineNumber\r\n                && this.position === other.position\r\n                && this.forceHeight === other.forceHeight\r\n                && this._color === other._color\r\n                && this._darkColor === other._darkColor);\r\n        };\r\n        OverviewRulerZone.prototype.compareTo = function (other) {\r\n            if (this.startLineNumber === other.startLineNumber) {\r\n                if (this.endLineNumber === other.endLineNumber) {\r\n                    if (this.forceHeight === other.forceHeight) {\r\n                        if (this.position === other.position) {\r\n                            if (this._darkColor === other._darkColor) {\r\n                                if (this._color === other._color) {\r\n                                    return 0;\r\n                                }\r\n                                return this._color < other._color ? -1 : 1;\r\n                            }\r\n                            return this._darkColor < other._darkColor ? -1 : 1;\r\n                        }\r\n                        return this.position - other.position;\r\n                    }\r\n                    return this.forceHeight - other.forceHeight;\r\n                }\r\n                return this.endLineNumber - other.endLineNumber;\r\n            }\r\n            return this.startLineNumber - other.startLineNumber;\r\n        };\r\n        OverviewRulerZone.prototype.setColorZones = function (colorZones) {\r\n            this._colorZones = colorZones;\r\n        };\r\n        OverviewRulerZone.prototype.getColorZones = function () {\r\n            return this._colorZones;\r\n        };\r\n        return OverviewRulerZone;\r\n    }());\r\n    exports.OverviewRulerZone = OverviewRulerZone;\r\n});\r\n\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\ndefine(\"vs/editor/common/core/selection\", [\"require\", \"exports\", 'vs/editor/common/core/range', 'vs/editor/common/editorCommon'], function (require, exports, range_1, editorCommon_1) {\r\n    /*---------------------------------------------------------------------------------------------\r\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n     *--------------------------------------------------------------------------------------------*/\r\n    'use strict';\r\n    /**\r\n     * A selection in the editor.\r\n     */\r\n    var Selection = (function (_super) {\r\n        __extends(Selection, _super);\r\n        function Selection(selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn) {\r\n            _super.call(this, selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn);\r\n            this.selectionStartLineNumber = selectionStartLineNumber;\r\n            this.selectionStartColumn = selectionStartColumn;\r\n            this.positionLineNumber = positionLineNumber;\r\n            this.positionColumn = positionColumn;\r\n        }\r\n        /**\r\n         * Clone this selection.\r\n         */\r\n        Selection.prototype.clone = function () {\r\n            return new Selection(this.selectionStartLineNumber, this.selectionStartColumn, this.positionLineNumber, this.positionColumn);\r\n        };\r\n        Selection.prototype.toString = function () {\r\n            return '[' + this.selectionStartLineNumber + ',' + this.selectionStartColumn + ' -> ' + this.positionLineNumber + ',' + this.positionColumn + ']';\r\n        };\r\n        /**\r\n         * Test if equals other selection.\r\n         */\r\n        Selection.prototype.equalsSelection = function (other) {\r\n            return (Selection.selectionsEqual(this, other));\r\n        };\r\n        /**\r\n         * Get directions (LTR or RTL).\r\n         */\r\n        Selection.prototype.getDirection = function () {\r\n            if (this.selectionStartLineNumber === this.startLineNumber && this.selectionStartColumn === this.startColumn) {\r\n                return editorCommon_1.SelectionDirection.LTR;\r\n            }\r\n            return editorCommon_1.SelectionDirection.RTL;\r\n        };\r\n        /**\r\n         * Create a new selection with a different `positionLineNumber` and `positionColumn`.\r\n         */\r\n        Selection.prototype.setEndPosition = function (endLineNumber, endColumn) {\r\n            if (this.getDirection() === editorCommon_1.SelectionDirection.LTR) {\r\n                return new Selection(this.startLineNumber, this.startColumn, endLineNumber, endColumn);\r\n            }\r\n            return new Selection(endLineNumber, endColumn, this.startLineNumber, this.startColumn);\r\n        };\r\n        /**\r\n         * Create a new selection with a different `selectionStartLineNumber` and `selectionStartColumn`.\r\n         */\r\n        Selection.prototype.setStartPosition = function (startLineNumber, startColumn) {\r\n            if (this.getDirection() === editorCommon_1.SelectionDirection.LTR) {\r\n                return new Selection(startLineNumber, startColumn, this.endLineNumber, this.endColumn);\r\n            }\r\n            return new Selection(this.endLineNumber, this.endColumn, startLineNumber, startColumn);\r\n        };\r\n        // ----\r\n        Selection.createSelection = function (selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn) {\r\n            return new Selection(selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn);\r\n        };\r\n        Selection.liftSelection = function (sel) {\r\n            return new Selection(sel.selectionStartLineNumber, sel.selectionStartColumn, sel.positionLineNumber, sel.positionColumn);\r\n        };\r\n        Selection.selectionsEqual = function (a, b) {\r\n            return (a.selectionStartLineNumber === b.selectionStartLineNumber &&\r\n                a.selectionStartColumn === b.selectionStartColumn &&\r\n                a.positionLineNumber === b.positionLineNumber &&\r\n                a.positionColumn === b.positionColumn);\r\n        };\r\n        Selection.selectionsArrEqual = function (a, b) {\r\n            if (a && !b || !a && b) {\r\n                return false;\r\n            }\r\n            if (!a && !b) {\r\n                return true;\r\n            }\r\n            if (a.length !== b.length) {\r\n                return false;\r\n            }\r\n            for (var i = 0, len = a.length; i < len; i++) {\r\n                if (!this.selectionsEqual(a[i], b[i])) {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        };\r\n        Selection.isISelection = function (obj) {\r\n            return (obj\r\n                && (typeof obj.selectionStartLineNumber === 'number')\r\n                && (typeof obj.selectionStartColumn === 'number')\r\n                && (typeof obj.positionLineNumber === 'number')\r\n                && (typeof obj.positionColumn === 'number'));\r\n        };\r\n        Selection.createWithDirection = function (startLineNumber, startColumn, endLineNumber, endColumn, direction) {\r\n            if (direction === editorCommon_1.SelectionDirection.LTR) {\r\n                return new Selection(startLineNumber, startColumn, endLineNumber, endColumn);\r\n            }\r\n            return new Selection(endLineNumber, endColumn, startLineNumber, startColumn);\r\n        };\r\n        return Selection;\r\n    }(range_1.Range));\r\n    exports.Selection = Selection;\r\n});\r\n\ndefine(\"vs/editor/common/viewModel/prefixSumComputer\", [\"require\", \"exports\"], function (require, exports) {\r\n    /*---------------------------------------------------------------------------------------------\r\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n     *--------------------------------------------------------------------------------------------*/\r\n    'use strict';\r\n    var PrefixSumIndexOfResult = (function () {\r\n        function PrefixSumIndexOfResult(index, remainder) {\r\n            this.index = index;\r\n            this.remainder = remainder;\r\n        }\r\n        return PrefixSumIndexOfResult;\r\n    }());\r\n    exports.PrefixSumIndexOfResult = PrefixSumIndexOfResult;\r\n    var PrefixSumComputer = (function () {\r\n        function PrefixSumComputer(values) {\r\n            this.values = values;\r\n            this.prefixSum = [];\r\n            for (var i = 0, len = this.values.length; i < len; i++) {\r\n                this.prefixSum[i] = 0;\r\n            }\r\n            this.prefixSumValidIndex = -1;\r\n        }\r\n        PrefixSumComputer.prototype.getCount = function () {\r\n            return this.values.length;\r\n        };\r\n        PrefixSumComputer.prototype.insertValue = function (insertIndex, value) {\r\n            insertIndex = Math.floor(insertIndex); //@perf\r\n            value = Math.floor(value); //@perf\r\n            this.values.splice(insertIndex, 0, value);\r\n            this.prefixSum.splice(insertIndex, 0, 0);\r\n            if (insertIndex - 1 < this.prefixSumValidIndex) {\r\n                this.prefixSumValidIndex = insertIndex - 1;\r\n            }\r\n        };\r\n        PrefixSumComputer.prototype.insertValues = function (insertIndex, values) {\r\n            insertIndex = Math.floor(insertIndex); //@perf\r\n            if (values.length === 0) {\r\n                return;\r\n            }\r\n            this.values = this.values.slice(0, insertIndex).concat(values).concat(this.values.slice(insertIndex));\r\n            this.prefixSum = this.prefixSum.slice(0, insertIndex).concat(PrefixSumComputer._zeroArray(values.length)).concat(this.prefixSum.slice(insertIndex));\r\n            if (insertIndex - 1 < this.prefixSumValidIndex) {\r\n                this.prefixSumValidIndex = insertIndex - 1;\r\n            }\r\n        };\r\n        PrefixSumComputer._zeroArray = function (count) {\r\n            count = Math.floor(count); //@perf\r\n            var r = [];\r\n            for (var i = 0; i < count; i++) {\r\n                r[i] = 0;\r\n            }\r\n            return r;\r\n        };\r\n        PrefixSumComputer.prototype.changeValue = function (index, value) {\r\n            index = Math.floor(index); //@perf\r\n            value = Math.floor(value); //@perf\r\n            if (this.values[index] === value) {\r\n                return;\r\n            }\r\n            this.values[index] = value;\r\n            if (index - 1 < this.prefixSumValidIndex) {\r\n                this.prefixSumValidIndex = index - 1;\r\n            }\r\n        };\r\n        PrefixSumComputer.prototype.removeValues = function (startIndex, cnt) {\r\n            startIndex = Math.floor(startIndex); //@perf\r\n            cnt = Math.floor(cnt); //@perf\r\n            this.values.splice(startIndex, cnt);\r\n            this.prefixSum.splice(startIndex, cnt);\r\n            if (startIndex - 1 < this.prefixSumValidIndex) {\r\n                this.prefixSumValidIndex = startIndex - 1;\r\n            }\r\n        };\r\n        PrefixSumComputer.prototype.getTotalValue = function () {\r\n            if (this.values.length === 0) {\r\n                return 0;\r\n            }\r\n            return this.getAccumulatedValue(this.values.length - 1);\r\n        };\r\n        PrefixSumComputer.prototype.getAccumulatedValue = function (index) {\r\n            index = Math.floor(index); //@perf\r\n            if (index < 0) {\r\n                return 0;\r\n            }\r\n            if (index <= this.prefixSumValidIndex) {\r\n                return this.prefixSum[index];\r\n            }\r\n            var startIndex = this.prefixSumValidIndex + 1;\r\n            if (startIndex === 0) {\r\n                this.prefixSum[0] = this.values[0];\r\n                startIndex++;\r\n            }\r\n            if (index >= this.values.length) {\r\n                index = this.values.length - 1;\r\n            }\r\n            for (var i = startIndex; i <= index; i++) {\r\n                this.prefixSum[i] = this.prefixSum[i - 1] + this.values[i];\r\n            }\r\n            this.prefixSumValidIndex = Math.max(this.prefixSumValidIndex, index);\r\n            return this.prefixSum[index];\r\n        };\r\n        PrefixSumComputer.prototype.getIndexOf = function (accumulatedValue) {\r\n            accumulatedValue = Math.floor(accumulatedValue); //@perf\r\n            var low = 0;\r\n            var high = this.values.length - 1;\r\n            var mid;\r\n            var midStop;\r\n            var midStart;\r\n            while (low <= high) {\r\n                mid = low + ((high - low) / 2) | 0;\r\n                midStop = this.getAccumulatedValue(mid);\r\n                midStart = midStop - this.values[mid];\r\n                if (accumulatedValue < midStart) {\r\n                    high = mid - 1;\r\n                }\r\n                else if (accumulatedValue >= midStop) {\r\n                    low = mid + 1;\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n            return new PrefixSumIndexOfResult(mid, accumulatedValue - midStart);\r\n        };\r\n        return PrefixSumComputer;\r\n    }());\r\n    exports.PrefixSumComputer = PrefixSumComputer;\r\n});\r\n\ndefine(\"vs/editor/common/model/mirrorModel2\", [\"require\", \"exports\", 'vs/editor/common/viewModel/prefixSumComputer'], function (require, exports, prefixSumComputer_1) {\r\n    /*---------------------------------------------------------------------------------------------\r\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n     *--------------------------------------------------------------------------------------------*/\r\n    'use strict';\r\n    var MirrorModel2 = (function () {\r\n        function MirrorModel2(uri, lines, eol, versionId) {\r\n            this._uri = uri;\r\n            this._lines = lines;\r\n            this._eol = eol;\r\n            this._versionId = versionId;\r\n        }\r\n        MirrorModel2.prototype.dispose = function () {\r\n            this._lines.length = 0;\r\n        };\r\n        Object.defineProperty(MirrorModel2.prototype, \"version\", {\r\n            get: function () {\r\n                return this._versionId;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        MirrorModel2.prototype.getText = function () {\r\n            return this._lines.join(this._eol);\r\n        };\r\n        MirrorModel2.prototype.onEvents = function (events) {\r\n            var newEOL = null;\r\n            for (var i = 0, len = events.length; i < len; i++) {\r\n                var e = events[i];\r\n                if (e.eol) {\r\n                    newEOL = e.eol;\r\n                }\r\n            }\r\n            if (newEOL && newEOL !== this._eol) {\r\n                this._eol = newEOL;\r\n                this._lineStarts = null;\r\n            }\r\n            // Update my lines\r\n            var lastVersionId = -1;\r\n            for (var i = 0, len = events.length; i < len; i++) {\r\n                var e = events[i];\r\n                this._acceptDeleteRange(e.range);\r\n                this._acceptInsertText({\r\n                    lineNumber: e.range.startLineNumber,\r\n                    column: e.range.startColumn\r\n                }, e.text);\r\n                lastVersionId = Math.max(lastVersionId, e.versionId);\r\n            }\r\n            if (lastVersionId !== -1) {\r\n                this._versionId = lastVersionId;\r\n            }\r\n        };\r\n        MirrorModel2.prototype._ensureLineStarts = function () {\r\n            if (!this._lineStarts) {\r\n                var lineStartValues = [];\r\n                var eolLength = this._eol.length;\r\n                for (var i = 0, len = this._lines.length; i < len; i++) {\r\n                    lineStartValues.push(this._lines[i].length + eolLength);\r\n                }\r\n                this._lineStarts = new prefixSumComputer_1.PrefixSumComputer(lineStartValues);\r\n            }\r\n        };\r\n        /**\r\n         * All changes to a line's text go through this method\r\n         */\r\n        MirrorModel2.prototype._setLineText = function (lineIndex, newValue) {\r\n            this._lines[lineIndex] = newValue;\r\n            if (this._lineStarts) {\r\n                // update prefix sum\r\n                this._lineStarts.changeValue(lineIndex, this._lines[lineIndex].length + this._eol.length);\r\n            }\r\n        };\r\n        MirrorModel2.prototype._acceptDeleteRange = function (range) {\r\n            if (range.startLineNumber === range.endLineNumber) {\r\n                if (range.startColumn === range.endColumn) {\r\n                    // Nothing to delete\r\n                    return;\r\n                }\r\n                // Delete text on the affected line\r\n                this._setLineText(range.startLineNumber - 1, this._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\r\n                    + this._lines[range.startLineNumber - 1].substring(range.endColumn - 1));\r\n                return;\r\n            }\r\n            // Take remaining text on last line and append it to remaining text on first line\r\n            this._setLineText(range.startLineNumber - 1, this._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\r\n                + this._lines[range.endLineNumber - 1].substring(range.endColumn - 1));\r\n            // Delete middle lines\r\n            this._lines.splice(range.startLineNumber, range.endLineNumber - range.startLineNumber);\r\n            if (this._lineStarts) {\r\n                // update prefix sum\r\n                this._lineStarts.removeValues(range.startLineNumber, range.endLineNumber - range.startLineNumber);\r\n            }\r\n        };\r\n        MirrorModel2.prototype._acceptInsertText = function (position, insertText) {\r\n            if (insertText.length === 0) {\r\n                // Nothing to insert\r\n                return;\r\n            }\r\n            var insertLines = insertText.split(/\\r\\n|\\r|\\n/);\r\n            if (insertLines.length === 1) {\r\n                // Inserting text on one line\r\n                this._setLineText(position.lineNumber - 1, this._lines[position.lineNumber - 1].substring(0, position.column - 1)\r\n                    + insertLines[0]\r\n                    + this._lines[position.lineNumber - 1].substring(position.column - 1));\r\n                return;\r\n            }\r\n            // Append overflowing text from first line to the end of text to insert\r\n            insertLines[insertLines.length - 1] += this._lines[position.lineNumber - 1].substring(position.column - 1);\r\n            // Delete overflowing text from first line and insert text on first line\r\n            this._setLineText(position.lineNumber - 1, this._lines[position.lineNumber - 1].substring(0, position.column - 1)\r\n                + insertLines[0]);\r\n            // Insert new lines & store lengths\r\n            var newLengths = new Array(insertLines.length - 1);\r\n            for (var i = 1; i < insertLines.length; i++) {\r\n                this._lines.splice(position.lineNumber + i - 1, 0, insertLines[i]);\r\n                newLengths[i - 1] = insertLines[i].length + this._eol.length;\r\n            }\r\n            if (this._lineStarts) {\r\n                // update prefix sum\r\n                this._lineStarts.insertValues(position.lineNumber, newLengths);\r\n            }\r\n        };\r\n        return MirrorModel2;\r\n    }());\r\n    exports.MirrorModel2 = MirrorModel2;\r\n});\r\n\ndefine(\"vs/base/common/callbackList\", [\"require\", \"exports\", 'vs/base/common/errors'], function (require, exports, errors_1) {\r\n    /*---------------------------------------------------------------------------------------------\r\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n     *--------------------------------------------------------------------------------------------*/\r\n    'use strict';\r\n    var CallbackList = (function () {\r\n        function CallbackList() {\r\n        }\r\n        CallbackList.prototype.add = function (callback, context, bucket) {\r\n            var _this = this;\r\n            if (context === void 0) { context = null; }\r\n            if (!this._callbacks) {\r\n                this._callbacks = [];\r\n                this._contexts = [];\r\n            }\r\n            this._callbacks.push(callback);\r\n            this._contexts.push(context);\r\n            if (Array.isArray(bucket)) {\r\n                bucket.push({ dispose: function () { return _this.remove(callback, context); } });\r\n            }\r\n        };\r\n        CallbackList.prototype.remove = function (callback, context) {\r\n            if (context === void 0) { context = null; }\r\n            if (!this._callbacks) {\r\n                return;\r\n            }\r\n            var foundCallbackWithDifferentContext = false;\r\n            for (var i = 0, len = this._callbacks.length; i < len; i++) {\r\n                if (this._callbacks[i] === callback) {\r\n                    if (this._contexts[i] === context) {\r\n                        // callback & context match => remove it\r\n                        this._callbacks.splice(i, 1);\r\n                        this._contexts.splice(i, 1);\r\n                        return;\r\n                    }\r\n                    else {\r\n                        foundCallbackWithDifferentContext = true;\r\n                    }\r\n                }\r\n            }\r\n            if (foundCallbackWithDifferentContext) {\r\n                throw new Error('When adding a listener with a context, you should remove it with the same context');\r\n            }\r\n        };\r\n        CallbackList.prototype.invoke = function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i - 0] = arguments[_i];\r\n            }\r\n            if (!this._callbacks) {\r\n                return;\r\n            }\r\n            var ret = [], callbacks = this._callbacks.slice(0), contexts = this._contexts.slice(0);\r\n            for (var i = 0, len = callbacks.length; i < len; i++) {\r\n                try {\r\n                    ret.push(callbacks[i].apply(contexts[i], args));\r\n                }\r\n                catch (e) {\r\n                    errors_1.onUnexpectedError(e);\r\n                }\r\n            }\r\n            return ret;\r\n        };\r\n        CallbackList.prototype.isEmpty = function () {\r\n            return !this._callbacks || this._callbacks.length === 0;\r\n        };\r\n        CallbackList.prototype.dispose = function () {\r\n            this._callbacks = undefined;\r\n            this._contexts = undefined;\r\n        };\r\n        return CallbackList;\r\n    }());\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.default = CallbackList;\r\n});\r\n\ndefine(\"vs/base/common/event\", [\"require\", \"exports\", 'vs/base/common/callbackList'], function (require, exports, callbackList_1) {\r\n    /*---------------------------------------------------------------------------------------------\r\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n     *--------------------------------------------------------------------------------------------*/\r\n    'use strict';\r\n    var Event;\r\n    (function (Event) {\r\n        var _disposable = { dispose: function () { } };\r\n        Event.None = function () { return _disposable; };\r\n    })(Event || (Event = {}));\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.default = Event;\r\n    /**\r\n     * The Emitter can be used to expose an Event to the public\r\n     * to fire it from the insides.\r\n     * Sample:\r\n        class Document {\r\n    \r\n            private _onDidChange = new Emitter<(value:string)=>any>();\r\n    \r\n            public onDidChange = this._onDidChange.event;\r\n    \r\n            // getter-style\r\n            // get onDidChange(): Event<(value:string)=>any> {\r\n            // \treturn this._onDidChange.event;\r\n            // }\r\n    \r\n            private _doIt() {\r\n                //...\r\n                this._onDidChange.fire(value);\r\n            }\r\n        }\r\n     */\r\n    var Emitter = (function () {\r\n        function Emitter(_options) {\r\n            this._options = _options;\r\n        }\r\n        Object.defineProperty(Emitter.prototype, \"event\", {\r\n            /**\r\n             * For the public to allow to subscribe\r\n             * to events from this Emitter\r\n             */\r\n            get: function () {\r\n                var _this = this;\r\n                if (!this._event) {\r\n                    this._event = function (listener, thisArgs, disposables) {\r\n                        if (!_this._callbacks) {\r\n                            _this._callbacks = new callbackList_1.default();\r\n                        }\r\n                        if (_this._options && _this._options.onFirstListenerAdd && _this._callbacks.isEmpty()) {\r\n                            _this._options.onFirstListenerAdd(_this);\r\n                        }\r\n                        _this._callbacks.add(listener, thisArgs);\r\n                        var result;\r\n                        result = {\r\n                            dispose: function () {\r\n                                result.dispose = Emitter._noop;\r\n                                if (!_this._disposed) {\r\n                                    _this._callbacks.remove(listener, thisArgs);\r\n                                    if (_this._options && _this._options.onLastListenerRemove && _this._callbacks.isEmpty()) {\r\n                                        _this._options.onLastListenerRemove(_this);\r\n                                    }\r\n                                }\r\n                            }\r\n                        };\r\n                        if (Array.isArray(disposables)) {\r\n                            disposables.push(result);\r\n                        }\r\n                        return result;\r\n                    };\r\n                }\r\n                return this._event;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        /**\r\n         * To be kept private to fire an event to\r\n         * subscribers\r\n         */\r\n        Emitter.prototype.fire = function (event) {\r\n            if (this._callbacks) {\r\n                this._callbacks.invoke.call(this._callbacks, event);\r\n            }\r\n        };\r\n        Emitter.prototype.dispose = function () {\r\n            if (this._callbacks) {\r\n                this._callbacks.dispose();\r\n                this._callbacks = undefined;\r\n                this._disposed = true;\r\n            }\r\n        };\r\n        Emitter._noop = function () { };\r\n        return Emitter;\r\n    }());\r\n    exports.Emitter = Emitter;\r\n    /**\r\n     * Creates an Event which is backed-up by the event emitter. This allows\r\n     * to use the existing eventing pattern and is likely using less memory.\r\n     * Sample:\r\n     *\r\n     * \tclass Document {\r\n     *\r\n     *\t\tprivate _eventbus = new EventEmitter();\r\n     *\r\n     *\t\tpublic onDidChange = fromEventEmitter(this._eventbus, 'changed');\r\n     *\r\n     *\t\t// getter-style\r\n     *\t\t// get onDidChange(): Event<(value:string)=>any> {\r\n     *\t\t// \tcache fromEventEmitter result and return\r\n     *\t\t// }\r\n     *\r\n     *\t\tprivate _doIt() {\r\n     *\t\t\t// ...\r\n     *\t\t\tthis._eventbus.emit('changed', value)\r\n     *\t\t}\r\n     *\t}\r\n     */\r\n    function fromEventEmitter(emitter, eventType) {\r\n        return function (listener, thisArgs, disposables) {\r\n            var result = emitter.addListener2(eventType, function () {\r\n                listener.apply(thisArgs, arguments);\r\n            });\r\n            if (Array.isArray(disposables)) {\r\n                disposables.push(result);\r\n            }\r\n            return result;\r\n        };\r\n    }\r\n    exports.fromEventEmitter = fromEventEmitter;\r\n    function mapEvent(event, map) {\r\n        return function (listener, thisArgs, disposables) {\r\n            return event(function (i) { return listener(map(i)); }, thisArgs, disposables);\r\n        };\r\n    }\r\n    exports.mapEvent = mapEvent;\r\n    var EventDelayerState;\r\n    (function (EventDelayerState) {\r\n        EventDelayerState[EventDelayerState[\"Idle\"] = 0] = \"Idle\";\r\n        EventDelayerState[EventDelayerState[\"Running\"] = 1] = \"Running\";\r\n    })(EventDelayerState || (EventDelayerState = {}));\r\n    /**\r\n     * The EventDelayer is useful in situations in which you want\r\n     * to delay firing your events during some code.\r\n     * You can wrap that code and be sure that the event will not\r\n     * be fired during that wrap.\r\n     *\r\n     * ```\r\n     * const emitter: Emitter;\r\n     * const delayer = new EventDelayer();\r\n     * const delayedEvent = delayer.delay(emitter.event);\r\n     *\r\n     * delayedEvent(console.log);\r\n     *\r\n     * delayer.wrap(() => {\r\n     *   emitter.fire(); // event will not be fired yet\r\n     * });\r\n     *\r\n     * // event will only be fired at this point\r\n     * ```\r\n     */\r\n    var EventBufferer = (function () {\r\n        function EventBufferer() {\r\n            this.buffers = [];\r\n        }\r\n        EventBufferer.prototype.wrapEvent = function (event) {\r\n            var _this = this;\r\n            return function (listener, thisArgs, disposables) {\r\n                return event(function (i) {\r\n                    var buffer = _this.buffers[_this.buffers.length - 1];\r\n                    if (buffer) {\r\n                        buffer.push(function () { return listener.call(thisArgs, i); });\r\n                    }\r\n                    else {\r\n                        listener.call(thisArgs, i);\r\n                    }\r\n                }, void 0, disposables);\r\n            };\r\n        };\r\n        EventBufferer.prototype.bufferEvents = function (fn) {\r\n            var buffer = [];\r\n            this.buffers.push(buffer);\r\n            fn();\r\n            this.buffers.pop();\r\n            buffer.forEach(function (flush) { return flush(); });\r\n        };\r\n        return EventBufferer;\r\n    }());\r\n    exports.EventBufferer = EventBufferer;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\ndefine(\"vs/base/common/cancellation\", [\"require\", \"exports\", 'vs/base/common/event'], function (require, exports, event_1) {\r\n    'use strict';\r\n    var CancellationToken;\r\n    (function (CancellationToken) {\r\n        CancellationToken.None = Object.freeze({\r\n            isCancellationRequested: false,\r\n            onCancellationRequested: event_1.default.None\r\n        });\r\n        CancellationToken.Cancelled = Object.freeze({\r\n            isCancellationRequested: true,\r\n            onCancellationRequested: event_1.default.None\r\n        });\r\n    })(CancellationToken = exports.CancellationToken || (exports.CancellationToken = {}));\r\n    var shortcutEvent = Object.freeze(function (callback, context) {\r\n        var handle = setTimeout(callback.bind(context), 0);\r\n        return { dispose: function () { clearTimeout(handle); } };\r\n    });\r\n    var MutableToken = (function () {\r\n        function MutableToken() {\r\n            this._isCancelled = false;\r\n        }\r\n        MutableToken.prototype.cancel = function () {\r\n            if (!this._isCancelled) {\r\n                this._isCancelled = true;\r\n                if (this._emitter) {\r\n                    this._emitter.fire(undefined);\r\n                    this._emitter = undefined;\r\n                }\r\n            }\r\n        };\r\n        Object.defineProperty(MutableToken.prototype, \"isCancellationRequested\", {\r\n            get: function () {\r\n                return this._isCancelled;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(MutableToken.prototype, \"onCancellationRequested\", {\r\n            get: function () {\r\n                if (this._isCancelled) {\r\n                    return shortcutEvent;\r\n                }\r\n                if (!this._emitter) {\r\n                    this._emitter = new event_1.Emitter();\r\n                }\r\n                return this._emitter.event;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        return MutableToken;\r\n    }());\r\n    var CancellationTokenSource = (function () {\r\n        function CancellationTokenSource() {\r\n        }\r\n        Object.defineProperty(CancellationTokenSource.prototype, \"token\", {\r\n            get: function () {\r\n                if (!this._token) {\r\n                    // be lazy and create the token only when\r\n                    // actually needed\r\n                    this._token = new MutableToken();\r\n                }\r\n                return this._token;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        CancellationTokenSource.prototype.cancel = function () {\r\n            if (!this._token) {\r\n                // save an object by returning the default\r\n                // cancelled token when cancellation happens\r\n                // before someone asks for the token\r\n                this._token = CancellationToken.Cancelled;\r\n            }\r\n            else {\r\n                this._token.cancel();\r\n            }\r\n        };\r\n        CancellationTokenSource.prototype.dispose = function () {\r\n            this.cancel();\r\n        };\r\n        return CancellationTokenSource;\r\n    }());\r\n    exports.CancellationTokenSource = CancellationTokenSource;\r\n});\r\n\ndefine(\"vs/nls!vs/base/common/keyCodes\",['vs/nls', 'vs/nls!vs/editor/browser/standalone/standaloneWorker'], function(nls, data) { return nls.create(\"vs/base/common/keyCodes\", data); });\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\ndefine(\"vs/base/common/keyCodes\", [\"require\", \"exports\", 'vs/nls!vs/base/common/keyCodes', 'vs/base/common/platform'], function (require, exports, nls, defaultPlatform) {\r\n    'use strict';\r\n    /**\r\n     * Virtual Key Codes, the value does not hold any inherent meaning.\r\n     * Inspired somewhat from https://msdn.microsoft.com/en-us/library/windows/desktop/dd375731(v=vs.85).aspx\r\n     * But these are \"more general\", as they should work across browsers & OS`s.\r\n     */\r\n    (function (KeyCode) {\r\n        /**\r\n         * Placed first to cover the 0 value of the enum.\r\n         */\r\n        KeyCode[KeyCode[\"Unknown\"] = 0] = \"Unknown\";\r\n        KeyCode[KeyCode[\"Backspace\"] = 1] = \"Backspace\";\r\n        KeyCode[KeyCode[\"Tab\"] = 2] = \"Tab\";\r\n        KeyCode[KeyCode[\"Enter\"] = 3] = \"Enter\";\r\n        KeyCode[KeyCode[\"Shift\"] = 4] = \"Shift\";\r\n        KeyCode[KeyCode[\"Ctrl\"] = 5] = \"Ctrl\";\r\n        KeyCode[KeyCode[\"Alt\"] = 6] = \"Alt\";\r\n        KeyCode[KeyCode[\"PauseBreak\"] = 7] = \"PauseBreak\";\r\n        KeyCode[KeyCode[\"CapsLock\"] = 8] = \"CapsLock\";\r\n        KeyCode[KeyCode[\"Escape\"] = 9] = \"Escape\";\r\n        KeyCode[KeyCode[\"Space\"] = 10] = \"Space\";\r\n        KeyCode[KeyCode[\"PageUp\"] = 11] = \"PageUp\";\r\n        KeyCode[KeyCode[\"PageDown\"] = 12] = \"PageDown\";\r\n        KeyCode[KeyCode[\"End\"] = 13] = \"End\";\r\n        KeyCode[KeyCode[\"Home\"] = 14] = \"Home\";\r\n        KeyCode[KeyCode[\"LeftArrow\"] = 15] = \"LeftArrow\";\r\n        KeyCode[KeyCode[\"UpArrow\"] = 16] = \"UpArrow\";\r\n        KeyCode[KeyCode[\"RightArrow\"] = 17] = \"RightArrow\";\r\n        KeyCode[KeyCode[\"DownArrow\"] = 18] = \"DownArrow\";\r\n        KeyCode[KeyCode[\"Insert\"] = 19] = \"Insert\";\r\n        KeyCode[KeyCode[\"Delete\"] = 20] = \"Delete\";\r\n        KeyCode[KeyCode[\"KEY_0\"] = 21] = \"KEY_0\";\r\n        KeyCode[KeyCode[\"KEY_1\"] = 22] = \"KEY_1\";\r\n        KeyCode[KeyCode[\"KEY_2\"] = 23] = \"KEY_2\";\r\n        KeyCode[KeyCode[\"KEY_3\"] = 24] = \"KEY_3\";\r\n        KeyCode[KeyCode[\"KEY_4\"] = 25] = \"KEY_4\";\r\n        KeyCode[KeyCode[\"KEY_5\"] = 26] = \"KEY_5\";\r\n        KeyCode[KeyCode[\"KEY_6\"] = 27] = \"KEY_6\";\r\n        KeyCode[KeyCode[\"KEY_7\"] = 28] = \"KEY_7\";\r\n        KeyCode[KeyCode[\"KEY_8\"] = 29] = \"KEY_8\";\r\n        KeyCode[KeyCode[\"KEY_9\"] = 30] = \"KEY_9\";\r\n        KeyCode[KeyCode[\"KEY_A\"] = 31] = \"KEY_A\";\r\n        KeyCode[KeyCode[\"KEY_B\"] = 32] = \"KEY_B\";\r\n        KeyCode[KeyCode[\"KEY_C\"] = 33] = \"KEY_C\";\r\n        KeyCode[KeyCode[\"KEY_D\"] = 34] = \"KEY_D\";\r\n        KeyCode[KeyCode[\"KEY_E\"] = 35] = \"KEY_E\";\r\n        KeyCode[KeyCode[\"KEY_F\"] = 36] = \"KEY_F\";\r\n        KeyCode[KeyCode[\"KEY_G\"] = 37] = \"KEY_G\";\r\n        KeyCode[KeyCode[\"KEY_H\"] = 38] = \"KEY_H\";\r\n        KeyCode[KeyCode[\"KEY_I\"] = 39] = \"KEY_I\";\r\n        KeyCode[KeyCode[\"KEY_J\"] = 40] = \"KEY_J\";\r\n        KeyCode[KeyCode[\"KEY_K\"] = 41] = \"KEY_K\";\r\n        KeyCode[KeyCode[\"KEY_L\"] = 42] = \"KEY_L\";\r\n        KeyCode[KeyCode[\"KEY_M\"] = 43] = \"KEY_M\";\r\n        KeyCode[KeyCode[\"KEY_N\"] = 44] = \"KEY_N\";\r\n        KeyCode[KeyCode[\"KEY_O\"] = 45] = \"KEY_O\";\r\n        KeyCode[KeyCode[\"KEY_P\"] = 46] = \"KEY_P\";\r\n        KeyCode[KeyCode[\"KEY_Q\"] = 47] = \"KEY_Q\";\r\n        KeyCode[KeyCode[\"KEY_R\"] = 48] = \"KEY_R\";\r\n        KeyCode[KeyCode[\"KEY_S\"] = 49] = \"KEY_S\";\r\n        KeyCode[KeyCode[\"KEY_T\"] = 50] = \"KEY_T\";\r\n        KeyCode[KeyCode[\"KEY_U\"] = 51] = \"KEY_U\";\r\n        KeyCode[KeyCode[\"KEY_V\"] = 52] = \"KEY_V\";\r\n        KeyCode[KeyCode[\"KEY_W\"] = 53] = \"KEY_W\";\r\n        KeyCode[KeyCode[\"KEY_X\"] = 54] = \"KEY_X\";\r\n        KeyCode[KeyCode[\"KEY_Y\"] = 55] = \"KEY_Y\";\r\n        KeyCode[KeyCode[\"KEY_Z\"] = 56] = \"KEY_Z\";\r\n        KeyCode[KeyCode[\"Meta\"] = 57] = \"Meta\";\r\n        KeyCode[KeyCode[\"ContextMenu\"] = 58] = \"ContextMenu\";\r\n        KeyCode[KeyCode[\"F1\"] = 59] = \"F1\";\r\n        KeyCode[KeyCode[\"F2\"] = 60] = \"F2\";\r\n        KeyCode[KeyCode[\"F3\"] = 61] = \"F3\";\r\n        KeyCode[KeyCode[\"F4\"] = 62] = \"F4\";\r\n        KeyCode[KeyCode[\"F5\"] = 63] = \"F5\";\r\n        KeyCode[KeyCode[\"F6\"] = 64] = \"F6\";\r\n        KeyCode[KeyCode[\"F7\"] = 65] = \"F7\";\r\n        KeyCode[KeyCode[\"F8\"] = 66] = \"F8\";\r\n        KeyCode[KeyCode[\"F9\"] = 67] = \"F9\";\r\n        KeyCode[KeyCode[\"F10\"] = 68] = \"F10\";\r\n        KeyCode[KeyCode[\"F11\"] = 69] = \"F11\";\r\n        KeyCode[KeyCode[\"F12\"] = 70] = \"F12\";\r\n        KeyCode[KeyCode[\"F13\"] = 71] = \"F13\";\r\n        KeyCode[KeyCode[\"F14\"] = 72] = \"F14\";\r\n        KeyCode[KeyCode[\"F15\"] = 73] = \"F15\";\r\n        KeyCode[KeyCode[\"F16\"] = 74] = \"F16\";\r\n        KeyCode[KeyCode[\"F17\"] = 75] = \"F17\";\r\n        KeyCode[KeyCode[\"F18\"] = 76] = \"F18\";\r\n        KeyCode[KeyCode[\"F19\"] = 77] = \"F19\";\r\n        KeyCode[KeyCode[\"NumLock\"] = 78] = \"NumLock\";\r\n        KeyCode[KeyCode[\"ScrollLock\"] = 79] = \"ScrollLock\";\r\n        /**\r\n         * Used for miscellaneous characters; it can vary by keyboard.\r\n         * For the US standard keyboard, the ';:' key\r\n         */\r\n        KeyCode[KeyCode[\"US_SEMICOLON\"] = 80] = \"US_SEMICOLON\";\r\n        /**\r\n         * For any country/region, the '+' key\r\n         * For the US standard keyboard, the '=+' key\r\n         */\r\n        KeyCode[KeyCode[\"US_EQUAL\"] = 81] = \"US_EQUAL\";\r\n        /**\r\n         * For any country/region, the ',' key\r\n         * For the US standard keyboard, the ',<' key\r\n         */\r\n        KeyCode[KeyCode[\"US_COMMA\"] = 82] = \"US_COMMA\";\r\n        /**\r\n         * For any country/region, the '-' key\r\n         * For the US standard keyboard, the '-_' key\r\n         */\r\n        KeyCode[KeyCode[\"US_MINUS\"] = 83] = \"US_MINUS\";\r\n        /**\r\n         * For any country/region, the '.' key\r\n         * For the US standard keyboard, the '.>' key\r\n         */\r\n        KeyCode[KeyCode[\"US_DOT\"] = 84] = \"US_DOT\";\r\n        /**\r\n         * Used for miscellaneous characters; it can vary by keyboard.\r\n         * For the US standard keyboard, the '/?' key\r\n         */\r\n        KeyCode[KeyCode[\"US_SLASH\"] = 85] = \"US_SLASH\";\r\n        /**\r\n         * Used for miscellaneous characters; it can vary by keyboard.\r\n         * For the US standard keyboard, the '`~' key\r\n         */\r\n        KeyCode[KeyCode[\"US_BACKTICK\"] = 86] = \"US_BACKTICK\";\r\n        /**\r\n         * Used for miscellaneous characters; it can vary by keyboard.\r\n         * For the US standard keyboard, the '[{' key\r\n         */\r\n        KeyCode[KeyCode[\"US_OPEN_SQUARE_BRACKET\"] = 87] = \"US_OPEN_SQUARE_BRACKET\";\r\n        /**\r\n         * Used for miscellaneous characters; it can vary by keyboard.\r\n         * For the US standard keyboard, the '\\|' key\r\n         */\r\n        KeyCode[KeyCode[\"US_BACKSLASH\"] = 88] = \"US_BACKSLASH\";\r\n        /**\r\n         * Used for miscellaneous characters; it can vary by keyboard.\r\n         * For the US standard keyboard, the ']}' key\r\n         */\r\n        KeyCode[KeyCode[\"US_CLOSE_SQUARE_BRACKET\"] = 89] = \"US_CLOSE_SQUARE_BRACKET\";\r\n        /**\r\n         * Used for miscellaneous characters; it can vary by keyboard.\r\n         * For the US standard keyboard, the ''\"' key\r\n         */\r\n        KeyCode[KeyCode[\"US_QUOTE\"] = 90] = \"US_QUOTE\";\r\n        /**\r\n         * Used for miscellaneous characters; it can vary by keyboard.\r\n         */\r\n        KeyCode[KeyCode[\"OEM_8\"] = 91] = \"OEM_8\";\r\n        /**\r\n         * Either the angle bracket key or the backslash key on the RT 102-key keyboard.\r\n         */\r\n        KeyCode[KeyCode[\"OEM_102\"] = 92] = \"OEM_102\";\r\n        KeyCode[KeyCode[\"NUMPAD_0\"] = 93] = \"NUMPAD_0\";\r\n        KeyCode[KeyCode[\"NUMPAD_1\"] = 94] = \"NUMPAD_1\";\r\n        KeyCode[KeyCode[\"NUMPAD_2\"] = 95] = \"NUMPAD_2\";\r\n        KeyCode[KeyCode[\"NUMPAD_3\"] = 96] = \"NUMPAD_3\";\r\n        KeyCode[KeyCode[\"NUMPAD_4\"] = 97] = \"NUMPAD_4\";\r\n        KeyCode[KeyCode[\"NUMPAD_5\"] = 98] = \"NUMPAD_5\";\r\n        KeyCode[KeyCode[\"NUMPAD_6\"] = 99] = \"NUMPAD_6\";\r\n        KeyCode[KeyCode[\"NUMPAD_7\"] = 100] = \"NUMPAD_7\";\r\n        KeyCode[KeyCode[\"NUMPAD_8\"] = 101] = \"NUMPAD_8\";\r\n        KeyCode[KeyCode[\"NUMPAD_9\"] = 102] = \"NUMPAD_9\";\r\n        KeyCode[KeyCode[\"NUMPAD_MULTIPLY\"] = 103] = \"NUMPAD_MULTIPLY\";\r\n        KeyCode[KeyCode[\"NUMPAD_ADD\"] = 104] = \"NUMPAD_ADD\";\r\n        KeyCode[KeyCode[\"NUMPAD_SEPARATOR\"] = 105] = \"NUMPAD_SEPARATOR\";\r\n        KeyCode[KeyCode[\"NUMPAD_SUBTRACT\"] = 106] = \"NUMPAD_SUBTRACT\";\r\n        KeyCode[KeyCode[\"NUMPAD_DECIMAL\"] = 107] = \"NUMPAD_DECIMAL\";\r\n        KeyCode[KeyCode[\"NUMPAD_DIVIDE\"] = 108] = \"NUMPAD_DIVIDE\";\r\n        /**\r\n         * Placed last to cover the length of the enum.\r\n         */\r\n        KeyCode[KeyCode[\"MAX_VALUE\"] = 109] = \"MAX_VALUE\";\r\n    })(exports.KeyCode || (exports.KeyCode = {}));\r\n    var KeyCode = exports.KeyCode;\r\n    var Mapping = (function () {\r\n        function Mapping(fromKeyCode, toKeyCode) {\r\n            this._fromKeyCode = fromKeyCode;\r\n            this._toKeyCode = toKeyCode;\r\n        }\r\n        Mapping.prototype.fromKeyCode = function (keyCode) {\r\n            return this._fromKeyCode[keyCode];\r\n        };\r\n        Mapping.prototype.toKeyCode = function (str) {\r\n            if (this._toKeyCode.hasOwnProperty(str)) {\r\n                return this._toKeyCode[str];\r\n            }\r\n            return KeyCode.Unknown;\r\n        };\r\n        return Mapping;\r\n    }());\r\n    function createMapping(fill1, fill2) {\r\n        var MAP = [];\r\n        fill1(MAP);\r\n        var REVERSE_MAP = {};\r\n        for (var i = 0, len = MAP.length; i < len; i++) {\r\n            if (!MAP[i]) {\r\n                continue;\r\n            }\r\n            REVERSE_MAP[MAP[i]] = i;\r\n        }\r\n        fill2(REVERSE_MAP);\r\n        var FINAL_REVERSE_MAP = {};\r\n        for (var entry in REVERSE_MAP) {\r\n            if (REVERSE_MAP.hasOwnProperty(entry)) {\r\n                FINAL_REVERSE_MAP[entry] = REVERSE_MAP[entry];\r\n                FINAL_REVERSE_MAP[entry.toLowerCase()] = REVERSE_MAP[entry];\r\n            }\r\n        }\r\n        return new Mapping(MAP, FINAL_REVERSE_MAP);\r\n    }\r\n    var STRING = createMapping(function (TO_STRING_MAP) {\r\n        TO_STRING_MAP[KeyCode.Unknown] = 'unknown';\r\n        TO_STRING_MAP[KeyCode.Backspace] = 'Backspace';\r\n        TO_STRING_MAP[KeyCode.Tab] = 'Tab';\r\n        TO_STRING_MAP[KeyCode.Enter] = 'Enter';\r\n        TO_STRING_MAP[KeyCode.Shift] = 'Shift';\r\n        TO_STRING_MAP[KeyCode.Ctrl] = 'Ctrl';\r\n        TO_STRING_MAP[KeyCode.Alt] = 'Alt';\r\n        TO_STRING_MAP[KeyCode.PauseBreak] = 'PauseBreak';\r\n        TO_STRING_MAP[KeyCode.CapsLock] = 'CapsLock';\r\n        TO_STRING_MAP[KeyCode.Escape] = 'Escape';\r\n        TO_STRING_MAP[KeyCode.Space] = 'Space';\r\n        TO_STRING_MAP[KeyCode.PageUp] = 'PageUp';\r\n        TO_STRING_MAP[KeyCode.PageDown] = 'PageDown';\r\n        TO_STRING_MAP[KeyCode.End] = 'End';\r\n        TO_STRING_MAP[KeyCode.Home] = 'Home';\r\n        TO_STRING_MAP[KeyCode.LeftArrow] = 'LeftArrow';\r\n        TO_STRING_MAP[KeyCode.UpArrow] = 'UpArrow';\r\n        TO_STRING_MAP[KeyCode.RightArrow] = 'RightArrow';\r\n        TO_STRING_MAP[KeyCode.DownArrow] = 'DownArrow';\r\n        TO_STRING_MAP[KeyCode.Insert] = 'Insert';\r\n        TO_STRING_MAP[KeyCode.Delete] = 'Delete';\r\n        TO_STRING_MAP[KeyCode.KEY_0] = '0';\r\n        TO_STRING_MAP[KeyCode.KEY_1] = '1';\r\n        TO_STRING_MAP[KeyCode.KEY_2] = '2';\r\n        TO_STRING_MAP[KeyCode.KEY_3] = '3';\r\n        TO_STRING_MAP[KeyCode.KEY_4] = '4';\r\n        TO_STRING_MAP[KeyCode.KEY_5] = '5';\r\n        TO_STRING_MAP[KeyCode.KEY_6] = '6';\r\n        TO_STRING_MAP[KeyCode.KEY_7] = '7';\r\n        TO_STRING_MAP[KeyCode.KEY_8] = '8';\r\n        TO_STRING_MAP[KeyCode.KEY_9] = '9';\r\n        TO_STRING_MAP[KeyCode.KEY_A] = 'A';\r\n        TO_STRING_MAP[KeyCode.KEY_B] = 'B';\r\n        TO_STRING_MAP[KeyCode.KEY_C] = 'C';\r\n        TO_STRING_MAP[KeyCode.KEY_D] = 'D';\r\n        TO_STRING_MAP[KeyCode.KEY_E] = 'E';\r\n        TO_STRING_MAP[KeyCode.KEY_F] = 'F';\r\n        TO_STRING_MAP[KeyCode.KEY_G] = 'G';\r\n        TO_STRING_MAP[KeyCode.KEY_H] = 'H';\r\n        TO_STRING_MAP[KeyCode.KEY_I] = 'I';\r\n        TO_STRING_MAP[KeyCode.KEY_J] = 'J';\r\n        TO_STRING_MAP[KeyCode.KEY_K] = 'K';\r\n        TO_STRING_MAP[KeyCode.KEY_L] = 'L';\r\n        TO_STRING_MAP[KeyCode.KEY_M] = 'M';\r\n        TO_STRING_MAP[KeyCode.KEY_N] = 'N';\r\n        TO_STRING_MAP[KeyCode.KEY_O] = 'O';\r\n        TO_STRING_MAP[KeyCode.KEY_P] = 'P';\r\n        TO_STRING_MAP[KeyCode.KEY_Q] = 'Q';\r\n        TO_STRING_MAP[KeyCode.KEY_R] = 'R';\r\n        TO_STRING_MAP[KeyCode.KEY_S] = 'S';\r\n        TO_STRING_MAP[KeyCode.KEY_T] = 'T';\r\n        TO_STRING_MAP[KeyCode.KEY_U] = 'U';\r\n        TO_STRING_MAP[KeyCode.KEY_V] = 'V';\r\n        TO_STRING_MAP[KeyCode.KEY_W] = 'W';\r\n        TO_STRING_MAP[KeyCode.KEY_X] = 'X';\r\n        TO_STRING_MAP[KeyCode.KEY_Y] = 'Y';\r\n        TO_STRING_MAP[KeyCode.KEY_Z] = 'Z';\r\n        TO_STRING_MAP[KeyCode.ContextMenu] = 'ContextMenu';\r\n        TO_STRING_MAP[KeyCode.F1] = 'F1';\r\n        TO_STRING_MAP[KeyCode.F2] = 'F2';\r\n        TO_STRING_MAP[KeyCode.F3] = 'F3';\r\n        TO_STRING_MAP[KeyCode.F4] = 'F4';\r\n        TO_STRING_MAP[KeyCode.F5] = 'F5';\r\n        TO_STRING_MAP[KeyCode.F6] = 'F6';\r\n        TO_STRING_MAP[KeyCode.F7] = 'F7';\r\n        TO_STRING_MAP[KeyCode.F8] = 'F8';\r\n        TO_STRING_MAP[KeyCode.F9] = 'F9';\r\n        TO_STRING_MAP[KeyCode.F10] = 'F10';\r\n        TO_STRING_MAP[KeyCode.F11] = 'F11';\r\n        TO_STRING_MAP[KeyCode.F12] = 'F12';\r\n        TO_STRING_MAP[KeyCode.F13] = 'F13';\r\n        TO_STRING_MAP[KeyCode.F14] = 'F14';\r\n        TO_STRING_MAP[KeyCode.F15] = 'F15';\r\n        TO_STRING_MAP[KeyCode.F16] = 'F16';\r\n        TO_STRING_MAP[KeyCode.F17] = 'F17';\r\n        TO_STRING_MAP[KeyCode.F18] = 'F18';\r\n        TO_STRING_MAP[KeyCode.F19] = 'F19';\r\n        TO_STRING_MAP[KeyCode.NumLock] = 'NumLock';\r\n        TO_STRING_MAP[KeyCode.ScrollLock] = 'ScrollLock';\r\n        TO_STRING_MAP[KeyCode.US_SEMICOLON] = ';';\r\n        TO_STRING_MAP[KeyCode.US_EQUAL] = '=';\r\n        TO_STRING_MAP[KeyCode.US_COMMA] = ',';\r\n        TO_STRING_MAP[KeyCode.US_MINUS] = '-';\r\n        TO_STRING_MAP[KeyCode.US_DOT] = '.';\r\n        TO_STRING_MAP[KeyCode.US_SLASH] = '/';\r\n        TO_STRING_MAP[KeyCode.US_BACKTICK] = '`';\r\n        TO_STRING_MAP[KeyCode.US_OPEN_SQUARE_BRACKET] = '[';\r\n        TO_STRING_MAP[KeyCode.US_BACKSLASH] = '\\\\';\r\n        TO_STRING_MAP[KeyCode.US_CLOSE_SQUARE_BRACKET] = ']';\r\n        TO_STRING_MAP[KeyCode.US_QUOTE] = '\\'';\r\n        TO_STRING_MAP[KeyCode.OEM_8] = 'OEM_8';\r\n        TO_STRING_MAP[KeyCode.OEM_102] = 'OEM_102';\r\n        TO_STRING_MAP[KeyCode.NUMPAD_0] = 'NumPad0';\r\n        TO_STRING_MAP[KeyCode.NUMPAD_1] = 'NumPad1';\r\n        TO_STRING_MAP[KeyCode.NUMPAD_2] = 'NumPad2';\r\n        TO_STRING_MAP[KeyCode.NUMPAD_3] = 'NumPad3';\r\n        TO_STRING_MAP[KeyCode.NUMPAD_4] = 'NumPad4';\r\n        TO_STRING_MAP[KeyCode.NUMPAD_5] = 'NumPad5';\r\n        TO_STRING_MAP[KeyCode.NUMPAD_6] = 'NumPad6';\r\n        TO_STRING_MAP[KeyCode.NUMPAD_7] = 'NumPad7';\r\n        TO_STRING_MAP[KeyCode.NUMPAD_8] = 'NumPad8';\r\n        TO_STRING_MAP[KeyCode.NUMPAD_9] = 'NumPad9';\r\n        TO_STRING_MAP[KeyCode.NUMPAD_MULTIPLY] = 'NumPad_Multiply';\r\n        TO_STRING_MAP[KeyCode.NUMPAD_ADD] = 'NumPad_Add';\r\n        TO_STRING_MAP[KeyCode.NUMPAD_SEPARATOR] = 'NumPad_Separator';\r\n        TO_STRING_MAP[KeyCode.NUMPAD_SUBTRACT] = 'NumPad_Subtract';\r\n        TO_STRING_MAP[KeyCode.NUMPAD_DECIMAL] = 'NumPad_Decimal';\r\n        TO_STRING_MAP[KeyCode.NUMPAD_DIVIDE] = 'NumPad_Divide';\r\n        // for (let i = 0; i < KeyCode.MAX_VALUE; i++) {\r\n        // \tif (!TO_STRING_MAP[i]) {\r\n        // \t\tconsole.warn('Missing string representation for ' + KeyCode[i]);\r\n        // \t}\r\n        // }\r\n    }, function (FROM_STRING_MAP) {\r\n        FROM_STRING_MAP['\\r'] = KeyCode.Enter;\r\n    });\r\n    var USER_SETTINGS = createMapping(function (TO_USER_SETTINGS_MAP) {\r\n        for (var i = 0, len = STRING._fromKeyCode.length; i < len; i++) {\r\n            TO_USER_SETTINGS_MAP[i] = STRING._fromKeyCode[i];\r\n        }\r\n        TO_USER_SETTINGS_MAP[KeyCode.LeftArrow] = 'Left';\r\n        TO_USER_SETTINGS_MAP[KeyCode.UpArrow] = 'Up';\r\n        TO_USER_SETTINGS_MAP[KeyCode.RightArrow] = 'Right';\r\n        TO_USER_SETTINGS_MAP[KeyCode.DownArrow] = 'Down';\r\n    }, function (FROM_USER_SETTINGS_MAP) {\r\n        FROM_USER_SETTINGS_MAP['OEM_1'] = KeyCode.US_SEMICOLON;\r\n        FROM_USER_SETTINGS_MAP['OEM_PLUS'] = KeyCode.US_EQUAL;\r\n        FROM_USER_SETTINGS_MAP['OEM_COMMA'] = KeyCode.US_COMMA;\r\n        FROM_USER_SETTINGS_MAP['OEM_MINUS'] = KeyCode.US_MINUS;\r\n        FROM_USER_SETTINGS_MAP['OEM_PERIOD'] = KeyCode.US_DOT;\r\n        FROM_USER_SETTINGS_MAP['OEM_2'] = KeyCode.US_SLASH;\r\n        FROM_USER_SETTINGS_MAP['OEM_3'] = KeyCode.US_BACKTICK;\r\n        FROM_USER_SETTINGS_MAP['OEM_4'] = KeyCode.US_OPEN_SQUARE_BRACKET;\r\n        FROM_USER_SETTINGS_MAP['OEM_5'] = KeyCode.US_BACKSLASH;\r\n        FROM_USER_SETTINGS_MAP['OEM_6'] = KeyCode.US_CLOSE_SQUARE_BRACKET;\r\n        FROM_USER_SETTINGS_MAP['OEM_7'] = KeyCode.US_QUOTE;\r\n        FROM_USER_SETTINGS_MAP['OEM_8'] = KeyCode.OEM_8;\r\n        FROM_USER_SETTINGS_MAP['OEM_102'] = KeyCode.OEM_102;\r\n    });\r\n    var KeyCode;\r\n    (function (KeyCode) {\r\n        function toString(key) {\r\n            return STRING.fromKeyCode(key);\r\n        }\r\n        KeyCode.toString = toString;\r\n        function fromString(key) {\r\n            return STRING.toKeyCode(key);\r\n        }\r\n        KeyCode.fromString = fromString;\r\n    })(KeyCode = exports.KeyCode || (exports.KeyCode = {}));\r\n    // Binary encoding strategy:\r\n    // 15:  1 bit for ctrlCmd\r\n    // 14:  1 bit for shift\r\n    // 13:  1 bit for alt\r\n    // 12:  1 bit for winCtrl\r\n    //  0: 12 bits for keyCode (up to a maximum keyCode of 4096. Given we have 83 at this point thats good enough)\r\n    var BIN_CTRLCMD_MASK = 1 << 15;\r\n    var BIN_SHIFT_MASK = 1 << 14;\r\n    var BIN_ALT_MASK = 1 << 13;\r\n    var BIN_WINCTRL_MASK = 1 << 12;\r\n    var BIN_KEYCODE_MASK = 0x00000fff;\r\n    var BinaryKeybindings = (function () {\r\n        function BinaryKeybindings() {\r\n        }\r\n        BinaryKeybindings.extractFirstPart = function (keybinding) {\r\n            return keybinding & 0x0000ffff;\r\n        };\r\n        BinaryKeybindings.extractChordPart = function (keybinding) {\r\n            return (keybinding >> 16) & 0x0000ffff;\r\n        };\r\n        BinaryKeybindings.hasChord = function (keybinding) {\r\n            return (this.extractChordPart(keybinding) !== 0);\r\n        };\r\n        BinaryKeybindings.hasCtrlCmd = function (keybinding) {\r\n            return (keybinding & BIN_CTRLCMD_MASK ? true : false);\r\n        };\r\n        BinaryKeybindings.hasShift = function (keybinding) {\r\n            return (keybinding & BIN_SHIFT_MASK ? true : false);\r\n        };\r\n        BinaryKeybindings.hasAlt = function (keybinding) {\r\n            return (keybinding & BIN_ALT_MASK ? true : false);\r\n        };\r\n        BinaryKeybindings.hasWinCtrl = function (keybinding) {\r\n            return (keybinding & BIN_WINCTRL_MASK ? true : false);\r\n        };\r\n        BinaryKeybindings.extractKeyCode = function (keybinding) {\r\n            return (keybinding & BIN_KEYCODE_MASK);\r\n        };\r\n        return BinaryKeybindings;\r\n    }());\r\n    exports.BinaryKeybindings = BinaryKeybindings;\r\n    var KeyMod = (function () {\r\n        function KeyMod() {\r\n        }\r\n        KeyMod.chord = function (firstPart, secondPart) {\r\n            return firstPart | ((secondPart & 0x0000ffff) << 16);\r\n        };\r\n        KeyMod.CtrlCmd = BIN_CTRLCMD_MASK;\r\n        KeyMod.Shift = BIN_SHIFT_MASK;\r\n        KeyMod.Alt = BIN_ALT_MASK;\r\n        KeyMod.WinCtrl = BIN_WINCTRL_MASK;\r\n        return KeyMod;\r\n    }());\r\n    exports.KeyMod = KeyMod;\r\n    /**\r\n     * A set of usual keybindings that can be reused in code\r\n     */\r\n    var CommonKeybindings = (function () {\r\n        function CommonKeybindings() {\r\n        }\r\n        CommonKeybindings.ENTER = KeyCode.Enter;\r\n        CommonKeybindings.SHIFT_ENTER = KeyMod.Shift | KeyCode.Enter;\r\n        CommonKeybindings.CTRLCMD_ENTER = KeyMod.CtrlCmd | KeyCode.Enter;\r\n        CommonKeybindings.WINCTRL_ENTER = KeyMod.WinCtrl | KeyCode.Enter;\r\n        CommonKeybindings.TAB = KeyCode.Tab;\r\n        CommonKeybindings.SHIFT_TAB = KeyMod.Shift | KeyCode.Tab;\r\n        CommonKeybindings.ESCAPE = KeyCode.Escape;\r\n        CommonKeybindings.SPACE = KeyCode.Space;\r\n        CommonKeybindings.DELETE = KeyCode.Delete;\r\n        CommonKeybindings.SHIFT_DELETE = KeyMod.Shift | KeyCode.Delete;\r\n        CommonKeybindings.CTRLCMD_BACKSPACE = KeyMod.CtrlCmd | KeyCode.Backspace;\r\n        CommonKeybindings.UP_ARROW = KeyCode.UpArrow;\r\n        CommonKeybindings.SHIFT_UP_ARROW = KeyMod.Shift | KeyCode.UpArrow;\r\n        CommonKeybindings.CTRLCMD_UP_ARROW = KeyMod.CtrlCmd | KeyCode.UpArrow;\r\n        CommonKeybindings.DOWN_ARROW = KeyCode.DownArrow;\r\n        CommonKeybindings.SHIFT_DOWN_ARROW = KeyMod.Shift | KeyCode.DownArrow;\r\n        CommonKeybindings.CTRLCMD_DOWN_ARROW = KeyMod.CtrlCmd | KeyCode.DownArrow;\r\n        CommonKeybindings.LEFT_ARROW = KeyCode.LeftArrow;\r\n        CommonKeybindings.RIGHT_ARROW = KeyCode.RightArrow;\r\n        CommonKeybindings.PAGE_UP = KeyCode.PageUp;\r\n        CommonKeybindings.SHIFT_PAGE_UP = KeyMod.Shift | KeyCode.PageUp;\r\n        CommonKeybindings.PAGE_DOWN = KeyCode.PageDown;\r\n        CommonKeybindings.SHIFT_PAGE_DOWN = KeyMod.Shift | KeyCode.PageDown;\r\n        CommonKeybindings.F2 = KeyCode.F2;\r\n        CommonKeybindings.CTRLCMD_S = KeyMod.CtrlCmd | KeyCode.KEY_S;\r\n        CommonKeybindings.CTRLCMD_C = KeyMod.CtrlCmd | KeyCode.KEY_C;\r\n        CommonKeybindings.CTRLCMD_V = KeyMod.CtrlCmd | KeyCode.KEY_V;\r\n        return CommonKeybindings;\r\n    }());\r\n    exports.CommonKeybindings = CommonKeybindings;\r\n    var Keybinding = (function () {\r\n        function Keybinding(keybinding) {\r\n            this.value = keybinding;\r\n        }\r\n        /**\r\n         * Format the binding to a format appropiate for rendering in the UI\r\n         */\r\n        Keybinding._toUSLabel = function (value, Platform) {\r\n            return _asString(value, (Platform.isMacintosh ? MacUIKeyLabelProvider.INSTANCE : ClassicUIKeyLabelProvider.INSTANCE), Platform);\r\n        };\r\n        /**\r\n         * Format the binding to a format appropiate for placing in an aria-label.\r\n         */\r\n        Keybinding._toUSAriaLabel = function (value, Platform) {\r\n            return _asString(value, AriaKeyLabelProvider.INSTANCE, Platform);\r\n        };\r\n        /**\r\n         * Format the binding to a format appropiate for rendering in the UI\r\n         */\r\n        Keybinding._toUSHTMLLabel = function (value, Platform) {\r\n            return _asHTML(value, (Platform.isMacintosh ? MacUIKeyLabelProvider.INSTANCE : ClassicUIKeyLabelProvider.INSTANCE), Platform);\r\n        };\r\n        /**\r\n         * Format the binding to a format appropiate for rendering in the UI\r\n         */\r\n        Keybinding._toCustomLabel = function (value, labelProvider, Platform) {\r\n            return _asString(value, labelProvider, Platform);\r\n        };\r\n        /**\r\n         * Format the binding to a format appropiate for rendering in the UI\r\n         */\r\n        Keybinding._toCustomHTMLLabel = function (value, labelProvider, Platform) {\r\n            return _asHTML(value, labelProvider, Platform);\r\n        };\r\n        /**\r\n         * This prints the binding in a format suitable for electron's accelerators.\r\n         * See https://github.com/electron/electron/blob/master/docs/api/accelerator.md\r\n         */\r\n        Keybinding._toElectronAccelerator = function (value, Platform) {\r\n            if (BinaryKeybindings.hasChord(value)) {\r\n                // Electron cannot handle chords\r\n                return null;\r\n            }\r\n            return _asString(value, ElectronAcceleratorLabelProvider.INSTANCE, Platform);\r\n        };\r\n        Keybinding.getUserSettingsKeybindingRegex = function () {\r\n            if (!this._cachedKeybindingRegex) {\r\n                var numpadKey = 'numpad(0|1|2|3|4|5|6|7|8|9|_multiply|_add|_subtract|_decimal|_divide|_separator)';\r\n                var oemKey = '`|\\\\-|=|\\\\[|\\\\]|\\\\\\\\\\\\\\\\|;|\\'|,|\\\\.|\\\\/|oem_8|oem_102';\r\n                var specialKey = 'left|up|right|down|pageup|pagedown|end|home|tab|enter|escape|space|backspace|delete|pausebreak|capslock|insert|contextmenu|numlock|scrolllock';\r\n                var casualKey = '[a-z]|[0-9]|f(1|2|3|4|5|6|7|8|9|10|11|12|13|14|15|16|17|18|19)';\r\n                var key = '((' + [numpadKey, oemKey, specialKey, casualKey].join(')|(') + '))';\r\n                var mod = '((ctrl|shift|alt|cmd|win|meta)\\\\+)*';\r\n                var keybinding = '(' + mod + key + ')';\r\n                this._cachedKeybindingRegex = '\"\\\\s*(' + keybinding + '(\\\\s+' + keybinding + ')?' + ')\\\\s*\"';\r\n            }\r\n            return this._cachedKeybindingRegex;\r\n        };\r\n        /**\r\n         * Format the binding to a format appropiate for the user settings file.\r\n         */\r\n        Keybinding.toUserSettingsLabel = function (value, Platform) {\r\n            if (Platform === void 0) { Platform = defaultPlatform; }\r\n            var result = _asString(value, UserSettingsKeyLabelProvider.INSTANCE, Platform);\r\n            result = result.toLowerCase();\r\n            if (Platform.isMacintosh) {\r\n                result = result.replace(/meta/g, 'cmd');\r\n            }\r\n            else if (Platform.isWindows) {\r\n                result = result.replace(/meta/g, 'win');\r\n            }\r\n            return result;\r\n        };\r\n        Keybinding.fromUserSettingsLabel = function (input, Platform) {\r\n            if (Platform === void 0) { Platform = defaultPlatform; }\r\n            if (!input) {\r\n                return null;\r\n            }\r\n            input = input.toLowerCase().trim();\r\n            var ctrlCmd = false, shift = false, alt = false, winCtrl = false, key = '';\r\n            while (/^(ctrl|shift|alt|meta|win|cmd)(\\+|\\-)/.test(input)) {\r\n                if (/^ctrl(\\+|\\-)/.test(input)) {\r\n                    if (Platform.isMacintosh) {\r\n                        winCtrl = true;\r\n                    }\r\n                    else {\r\n                        ctrlCmd = true;\r\n                    }\r\n                    input = input.substr('ctrl-'.length);\r\n                }\r\n                if (/^shift(\\+|\\-)/.test(input)) {\r\n                    shift = true;\r\n                    input = input.substr('shift-'.length);\r\n                }\r\n                if (/^alt(\\+|\\-)/.test(input)) {\r\n                    alt = true;\r\n                    input = input.substr('alt-'.length);\r\n                }\r\n                if (/^meta(\\+|\\-)/.test(input)) {\r\n                    if (Platform.isMacintosh) {\r\n                        ctrlCmd = true;\r\n                    }\r\n                    else {\r\n                        winCtrl = true;\r\n                    }\r\n                    input = input.substr('meta-'.length);\r\n                }\r\n                if (/^win(\\+|\\-)/.test(input)) {\r\n                    if (Platform.isMacintosh) {\r\n                        ctrlCmd = true;\r\n                    }\r\n                    else {\r\n                        winCtrl = true;\r\n                    }\r\n                    input = input.substr('win-'.length);\r\n                }\r\n                if (/^cmd(\\+|\\-)/.test(input)) {\r\n                    if (Platform.isMacintosh) {\r\n                        ctrlCmd = true;\r\n                    }\r\n                    else {\r\n                        winCtrl = true;\r\n                    }\r\n                    input = input.substr('cmd-'.length);\r\n                }\r\n            }\r\n            var chord = 0;\r\n            var firstSpaceIdx = input.indexOf(' ');\r\n            if (firstSpaceIdx > 0) {\r\n                key = input.substring(0, firstSpaceIdx);\r\n                chord = Keybinding.fromUserSettingsLabel(input.substring(firstSpaceIdx), Platform);\r\n            }\r\n            else {\r\n                key = input;\r\n            }\r\n            var keyCode = USER_SETTINGS.toKeyCode(key);\r\n            var result = 0;\r\n            if (ctrlCmd) {\r\n                result |= KeyMod.CtrlCmd;\r\n            }\r\n            if (shift) {\r\n                result |= KeyMod.Shift;\r\n            }\r\n            if (alt) {\r\n                result |= KeyMod.Alt;\r\n            }\r\n            if (winCtrl) {\r\n                result |= KeyMod.WinCtrl;\r\n            }\r\n            result |= keyCode;\r\n            return KeyMod.chord(result, chord);\r\n        };\r\n        Keybinding.prototype.hasCtrlCmd = function () {\r\n            return BinaryKeybindings.hasCtrlCmd(this.value);\r\n        };\r\n        Keybinding.prototype.hasShift = function () {\r\n            return BinaryKeybindings.hasShift(this.value);\r\n        };\r\n        Keybinding.prototype.hasAlt = function () {\r\n            return BinaryKeybindings.hasAlt(this.value);\r\n        };\r\n        Keybinding.prototype.hasWinCtrl = function () {\r\n            return BinaryKeybindings.hasWinCtrl(this.value);\r\n        };\r\n        Keybinding.prototype.extractKeyCode = function () {\r\n            return BinaryKeybindings.extractKeyCode(this.value);\r\n        };\r\n        /**\r\n         * Format the binding to a format appropiate for rendering in the UI\r\n         */\r\n        Keybinding.prototype._toUSLabel = function (Platform) {\r\n            if (Platform === void 0) { Platform = defaultPlatform; }\r\n            return Keybinding._toUSLabel(this.value, Platform);\r\n        };\r\n        /**\r\n         * Format the binding to a format appropiate for placing in an aria-label.\r\n         */\r\n        Keybinding.prototype._toUSAriaLabel = function (Platform) {\r\n            if (Platform === void 0) { Platform = defaultPlatform; }\r\n            return Keybinding._toUSAriaLabel(this.value, Platform);\r\n        };\r\n        /**\r\n         * Format the binding to a format appropiate for rendering in the UI\r\n         */\r\n        Keybinding.prototype._toUSHTMLLabel = function (Platform) {\r\n            if (Platform === void 0) { Platform = defaultPlatform; }\r\n            return Keybinding._toUSHTMLLabel(this.value, Platform);\r\n        };\r\n        /**\r\n         * Format the binding to a format appropiate for rendering in the UI\r\n         */\r\n        Keybinding.prototype.toCustomLabel = function (labelProvider, Platform) {\r\n            if (Platform === void 0) { Platform = defaultPlatform; }\r\n            return Keybinding._toCustomLabel(this.value, labelProvider, Platform);\r\n        };\r\n        /**\r\n         * Format the binding to a format appropiate for rendering in the UI\r\n         */\r\n        Keybinding.prototype.toCustomHTMLLabel = function (labelProvider, Platform) {\r\n            if (Platform === void 0) { Platform = defaultPlatform; }\r\n            return Keybinding._toCustomHTMLLabel(this.value, labelProvider, Platform);\r\n        };\r\n        /**\r\n         * This prints the binding in a format suitable for electron's accelerators.\r\n         * See https://github.com/electron/electron/blob/master/docs/api/accelerator.md\r\n         */\r\n        Keybinding.prototype._toElectronAccelerator = function (Platform) {\r\n            if (Platform === void 0) { Platform = defaultPlatform; }\r\n            return Keybinding._toElectronAccelerator(this.value, Platform);\r\n        };\r\n        /**\r\n         * Format the binding to a format appropiate for the user settings file.\r\n         */\r\n        Keybinding.prototype.toUserSettingsLabel = function (Platform) {\r\n            if (Platform === void 0) { Platform = defaultPlatform; }\r\n            return Keybinding.toUserSettingsLabel(this.value, Platform);\r\n        };\r\n        Keybinding._cachedKeybindingRegex = null;\r\n        return Keybinding;\r\n    }());\r\n    exports.Keybinding = Keybinding;\r\n    /**\r\n     * Print for Electron\r\n     */\r\n    var ElectronAcceleratorLabelProvider = (function () {\r\n        function ElectronAcceleratorLabelProvider() {\r\n            this.ctrlKeyLabel = 'Ctrl';\r\n            this.shiftKeyLabel = 'Shift';\r\n            this.altKeyLabel = 'Alt';\r\n            this.cmdKeyLabel = 'Cmd';\r\n            this.windowsKeyLabel = 'Super';\r\n            this.modifierSeparator = '+';\r\n        }\r\n        ElectronAcceleratorLabelProvider.prototype.getLabelForKey = function (keyCode) {\r\n            switch (keyCode) {\r\n                case KeyCode.UpArrow:\r\n                    return 'Up';\r\n                case KeyCode.DownArrow:\r\n                    return 'Down';\r\n                case KeyCode.LeftArrow:\r\n                    return 'Left';\r\n                case KeyCode.RightArrow:\r\n                    return 'Right';\r\n            }\r\n            return KeyCode.toString(keyCode);\r\n        };\r\n        ElectronAcceleratorLabelProvider.INSTANCE = new ElectronAcceleratorLabelProvider();\r\n        return ElectronAcceleratorLabelProvider;\r\n    }());\r\n    exports.ElectronAcceleratorLabelProvider = ElectronAcceleratorLabelProvider;\r\n    /**\r\n     * Print for Mac UI\r\n     */\r\n    var MacUIKeyLabelProvider = (function () {\r\n        function MacUIKeyLabelProvider() {\r\n            this.ctrlKeyLabel = '\\u2303';\r\n            this.shiftKeyLabel = '\\u21E7';\r\n            this.altKeyLabel = '\\u2325';\r\n            this.cmdKeyLabel = '\\u2318';\r\n            this.windowsKeyLabel = nls.localize(0, null);\r\n            this.modifierSeparator = '';\r\n        }\r\n        MacUIKeyLabelProvider.prototype.getLabelForKey = function (keyCode) {\r\n            switch (keyCode) {\r\n                case KeyCode.LeftArrow:\r\n                    return MacUIKeyLabelProvider.leftArrowUnicodeLabel;\r\n                case KeyCode.UpArrow:\r\n                    return MacUIKeyLabelProvider.upArrowUnicodeLabel;\r\n                case KeyCode.RightArrow:\r\n                    return MacUIKeyLabelProvider.rightArrowUnicodeLabel;\r\n                case KeyCode.DownArrow:\r\n                    return MacUIKeyLabelProvider.downArrowUnicodeLabel;\r\n            }\r\n            return KeyCode.toString(keyCode);\r\n        };\r\n        MacUIKeyLabelProvider.INSTANCE = new MacUIKeyLabelProvider();\r\n        MacUIKeyLabelProvider.leftArrowUnicodeLabel = String.fromCharCode(8592);\r\n        MacUIKeyLabelProvider.upArrowUnicodeLabel = String.fromCharCode(8593);\r\n        MacUIKeyLabelProvider.rightArrowUnicodeLabel = String.fromCharCode(8594);\r\n        MacUIKeyLabelProvider.downArrowUnicodeLabel = String.fromCharCode(8595);\r\n        return MacUIKeyLabelProvider;\r\n    }());\r\n    exports.MacUIKeyLabelProvider = MacUIKeyLabelProvider;\r\n    /**\r\n     * Aria label provider for Mac.\r\n     */\r\n    var AriaKeyLabelProvider = (function () {\r\n        function AriaKeyLabelProvider() {\r\n            this.ctrlKeyLabel = nls.localize(1, null);\r\n            this.shiftKeyLabel = nls.localize(2, null);\r\n            this.altKeyLabel = nls.localize(3, null);\r\n            this.cmdKeyLabel = nls.localize(4, null);\r\n            this.windowsKeyLabel = nls.localize(5, null);\r\n            this.modifierSeparator = '+';\r\n        }\r\n        AriaKeyLabelProvider.prototype.getLabelForKey = function (keyCode) {\r\n            return KeyCode.toString(keyCode);\r\n        };\r\n        AriaKeyLabelProvider.INSTANCE = new MacUIKeyLabelProvider();\r\n        return AriaKeyLabelProvider;\r\n    }());\r\n    exports.AriaKeyLabelProvider = AriaKeyLabelProvider;\r\n    /**\r\n     * Print for Windows, Linux UI\r\n     */\r\n    var ClassicUIKeyLabelProvider = (function () {\r\n        function ClassicUIKeyLabelProvider() {\r\n            this.ctrlKeyLabel = nls.localize(6, null);\r\n            this.shiftKeyLabel = nls.localize(7, null);\r\n            this.altKeyLabel = nls.localize(8, null);\r\n            this.cmdKeyLabel = nls.localize(9, null);\r\n            this.windowsKeyLabel = nls.localize(10, null);\r\n            this.modifierSeparator = '+';\r\n        }\r\n        ClassicUIKeyLabelProvider.prototype.getLabelForKey = function (keyCode) {\r\n            return KeyCode.toString(keyCode);\r\n        };\r\n        ClassicUIKeyLabelProvider.INSTANCE = new ClassicUIKeyLabelProvider();\r\n        return ClassicUIKeyLabelProvider;\r\n    }());\r\n    exports.ClassicUIKeyLabelProvider = ClassicUIKeyLabelProvider;\r\n    /**\r\n     * Print for the user settings file.\r\n     */\r\n    var UserSettingsKeyLabelProvider = (function () {\r\n        function UserSettingsKeyLabelProvider() {\r\n            this.ctrlKeyLabel = 'Ctrl';\r\n            this.shiftKeyLabel = 'Shift';\r\n            this.altKeyLabel = 'Alt';\r\n            this.cmdKeyLabel = 'Meta';\r\n            this.windowsKeyLabel = 'Meta';\r\n            this.modifierSeparator = '+';\r\n        }\r\n        UserSettingsKeyLabelProvider.prototype.getLabelForKey = function (keyCode) {\r\n            return USER_SETTINGS.fromKeyCode(keyCode);\r\n        };\r\n        UserSettingsKeyLabelProvider.INSTANCE = new UserSettingsKeyLabelProvider();\r\n        return UserSettingsKeyLabelProvider;\r\n    }());\r\n    function _asString(keybinding, labelProvider, Platform) {\r\n        var result = [], ctrlCmd = BinaryKeybindings.hasCtrlCmd(keybinding), shift = BinaryKeybindings.hasShift(keybinding), alt = BinaryKeybindings.hasAlt(keybinding), winCtrl = BinaryKeybindings.hasWinCtrl(keybinding), keyCode = BinaryKeybindings.extractKeyCode(keybinding);\r\n        var keyLabel = labelProvider.getLabelForKey(keyCode);\r\n        if (!keyLabel) {\r\n            // cannot trigger this key code under this kb layout\r\n            return '';\r\n        }\r\n        // translate modifier keys: Ctrl-Shift-Alt-Meta\r\n        if ((ctrlCmd && !Platform.isMacintosh) || (winCtrl && Platform.isMacintosh)) {\r\n            result.push(labelProvider.ctrlKeyLabel);\r\n        }\r\n        if (shift) {\r\n            result.push(labelProvider.shiftKeyLabel);\r\n        }\r\n        if (alt) {\r\n            result.push(labelProvider.altKeyLabel);\r\n        }\r\n        if (ctrlCmd && Platform.isMacintosh) {\r\n            result.push(labelProvider.cmdKeyLabel);\r\n        }\r\n        if (winCtrl && !Platform.isMacintosh) {\r\n            result.push(labelProvider.windowsKeyLabel);\r\n        }\r\n        // the actual key\r\n        result.push(keyLabel);\r\n        var actualResult = result.join(labelProvider.modifierSeparator);\r\n        if (BinaryKeybindings.hasChord(keybinding)) {\r\n            return actualResult + ' ' + _asString(BinaryKeybindings.extractChordPart(keybinding), labelProvider, Platform);\r\n        }\r\n        return actualResult;\r\n    }\r\n    function _pushKey(result, str) {\r\n        if (result.length > 0) {\r\n            result.push({\r\n                tagName: 'span',\r\n                text: '+'\r\n            });\r\n        }\r\n        result.push({\r\n            tagName: 'span',\r\n            className: 'monaco-kbkey',\r\n            text: str\r\n        });\r\n    }\r\n    function _asHTML(keybinding, labelProvider, Platform, isChord) {\r\n        if (isChord === void 0) { isChord = false; }\r\n        var result = [], ctrlCmd = BinaryKeybindings.hasCtrlCmd(keybinding), shift = BinaryKeybindings.hasShift(keybinding), alt = BinaryKeybindings.hasAlt(keybinding), winCtrl = BinaryKeybindings.hasWinCtrl(keybinding), keyCode = BinaryKeybindings.extractKeyCode(keybinding);\r\n        var keyLabel = labelProvider.getLabelForKey(keyCode);\r\n        if (!keyLabel) {\r\n            // cannot trigger this key code under this kb layout\r\n            return [];\r\n        }\r\n        // translate modifier keys: Ctrl-Shift-Alt-Meta\r\n        if ((ctrlCmd && !Platform.isMacintosh) || (winCtrl && Platform.isMacintosh)) {\r\n            _pushKey(result, labelProvider.ctrlKeyLabel);\r\n        }\r\n        if (shift) {\r\n            _pushKey(result, labelProvider.shiftKeyLabel);\r\n        }\r\n        if (alt) {\r\n            _pushKey(result, labelProvider.altKeyLabel);\r\n        }\r\n        if (ctrlCmd && Platform.isMacintosh) {\r\n            _pushKey(result, labelProvider.cmdKeyLabel);\r\n        }\r\n        if (winCtrl && !Platform.isMacintosh) {\r\n            _pushKey(result, labelProvider.windowsKeyLabel);\r\n        }\r\n        // the actual key\r\n        _pushKey(result, keyLabel);\r\n        var chordTo = null;\r\n        if (BinaryKeybindings.hasChord(keybinding)) {\r\n            chordTo = _asHTML(BinaryKeybindings.extractChordPart(keybinding), labelProvider, Platform, true);\r\n            result.push({\r\n                tagName: 'span',\r\n                text: ' '\r\n            });\r\n            result = result.concat(chordTo);\r\n        }\r\n        if (isChord) {\r\n            return result;\r\n        }\r\n        return [{\r\n                tagName: 'span',\r\n                className: 'monaco-kb',\r\n                children: result\r\n            }];\r\n    }\r\n});\r\n\ndefine(\"vs/nls!vs/base/common/severity\",['vs/nls', 'vs/nls!vs/editor/browser/standalone/standaloneWorker'], function(nls, data) { return nls.create(\"vs/base/common/severity\", data); });\ndefine(\"vs/base/common/severity\", [\"require\", \"exports\", 'vs/nls!vs/base/common/severity', 'vs/base/common/strings'], function (require, exports, nls, strings) {\r\n    /*---------------------------------------------------------------------------------------------\r\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n     *--------------------------------------------------------------------------------------------*/\r\n    'use strict';\r\n    var Severity;\r\n    (function (Severity) {\r\n        Severity[Severity[\"Ignore\"] = 0] = \"Ignore\";\r\n        Severity[Severity[\"Info\"] = 1] = \"Info\";\r\n        Severity[Severity[\"Warning\"] = 2] = \"Warning\";\r\n        Severity[Severity[\"Error\"] = 3] = \"Error\";\r\n    })(Severity || (Severity = {}));\r\n    var Severity;\r\n    (function (Severity) {\r\n        var _error = 'error', _warning = 'warning', _warn = 'warn', _info = 'info';\r\n        var _displayStrings = Object.create(null);\r\n        _displayStrings[Severity.Error] = nls.localize(0, null);\r\n        _displayStrings[Severity.Warning] = nls.localize(1, null);\r\n        _displayStrings[Severity.Info] = nls.localize(2, null);\r\n        /**\r\n         * Parses 'error', 'warning', 'warn', 'info' in call casings\r\n         * and falls back to ignore.\r\n         */\r\n        function fromValue(value) {\r\n            if (!value) {\r\n                return Severity.Ignore;\r\n            }\r\n            if (strings.equalsIgnoreCase(_error, value)) {\r\n                return Severity.Error;\r\n            }\r\n            if (strings.equalsIgnoreCase(_warning, value) || strings.equalsIgnoreCase(_warn, value)) {\r\n                return Severity.Warning;\r\n            }\r\n            if (strings.equalsIgnoreCase(_info, value)) {\r\n                return Severity.Info;\r\n            }\r\n            return Severity.Ignore;\r\n        }\r\n        Severity.fromValue = fromValue;\r\n        function toString(value) {\r\n            return _displayStrings[value] || strings.empty;\r\n        }\r\n        Severity.toString = toString;\r\n        function compare(a, b) {\r\n            return b - a;\r\n        }\r\n        Severity.compare = compare;\r\n    })(Severity || (Severity = {}));\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.default = Severity;\r\n});\r\n\ndefine(\"vs/editor/common/standalone/standaloneBase\", [\"require\", \"exports\", 'vs/base/common/event', 'vs/base/common/keyCodes', 'vs/editor/common/core/position', 'vs/editor/common/core/range', 'vs/editor/common/core/selection', 'vs/editor/common/editorCommon', 'vs/base/common/winjs.base', 'vs/base/common/cancellation', 'vs/base/common/severity', 'vs/base/common/uri'], function (require, exports, event_1, keyCodes_1, position_1, range_1, selection_1, editorCommon_1, winjs_base_1, cancellation_1, severity_1, uri_1) {\r\n    /*---------------------------------------------------------------------------------------------\r\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n     *--------------------------------------------------------------------------------------------*/\r\n    'use strict';\r\n    function createMonacoBaseAPI() {\r\n        return {\r\n            editor: undefined,\r\n            worker: undefined,\r\n            languages: undefined,\r\n            CancellationTokenSource: cancellation_1.CancellationTokenSource,\r\n            Emitter: event_1.Emitter,\r\n            KeyCode: keyCodes_1.KeyCode,\r\n            KeyMod: keyCodes_1.KeyMod,\r\n            Position: position_1.Position,\r\n            Range: range_1.Range,\r\n            Selection: selection_1.Selection,\r\n            SelectionDirection: editorCommon_1.SelectionDirection,\r\n            Severity: severity_1.default,\r\n            Promise: winjs_base_1.TPromise,\r\n            Uri: uri_1.default\r\n        };\r\n    }\r\n    exports.createMonacoBaseAPI = createMonacoBaseAPI;\r\n});\r\n\ndefine(\"vs/nls!vs/editor/common/config/defaultConfig\",['vs/nls', 'vs/nls!vs/editor/browser/standalone/standaloneWorker'], function(nls, data) { return nls.create(\"vs/editor/common/config/defaultConfig\", data); });\ndefine(\"vs/editor/common/config/defaultConfig\", [\"require\", \"exports\", 'vs/nls!vs/editor/common/config/defaultConfig', 'vs/base/common/platform'], function (require, exports, nls, platform) {\r\n    /*---------------------------------------------------------------------------------------------\r\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n     *--------------------------------------------------------------------------------------------*/\r\n    'use strict';\r\n    exports.USUAL_WORD_SEPARATORS = '`~!@#$%^&*()-=+[{]}\\\\|;:\\'\",.<>/?';\r\n    exports.DEFAULT_INDENTATION = {\r\n        tabSize: 4,\r\n        insertSpaces: true,\r\n        detectIndentation: true\r\n    };\r\n    exports.DEFAULT_TRIM_AUTO_WHITESPACE = true;\r\n    var DEFAULT_WINDOWS_FONT_FAMILY = 'Consolas, \\'Courier New\\', monospace';\r\n    var DEFAULT_MAC_FONT_FAMILY = 'Menlo, Monaco, \\'Courier New\\', monospace';\r\n    var DEFAULT_LINUX_FONT_FAMILY = '\\'Droid Sans Mono\\', \\'Courier New\\', monospace, \\'Droid Sans Fallback\\'';\r\n    /**\r\n     * Determined from empirical observations.\r\n     */\r\n    exports.GOLDEN_LINE_HEIGHT_RATIO = platform.isMacintosh ? 1.5 : 1.35;\r\n    var ConfigClass = (function () {\r\n        function ConfigClass() {\r\n            this.editor = {\r\n                experimentalScreenReader: true,\r\n                rulers: [],\r\n                wordSeparators: exports.USUAL_WORD_SEPARATORS,\r\n                selectionClipboard: true,\r\n                ariaLabel: nls.localize(0, null),\r\n                lineNumbers: true,\r\n                selectOnLineNumbers: true,\r\n                lineNumbersMinChars: 5,\r\n                glyphMargin: false,\r\n                lineDecorationsWidth: 10,\r\n                revealHorizontalRightPadding: 30,\r\n                roundedSelection: true,\r\n                theme: 'vs',\r\n                readOnly: false,\r\n                scrollbar: {\r\n                    verticalScrollbarSize: 14,\r\n                    horizontal: 'auto',\r\n                    useShadows: true,\r\n                    verticalHasArrows: false,\r\n                    horizontalHasArrows: false\r\n                },\r\n                overviewRulerLanes: 2,\r\n                cursorBlinking: 'blink',\r\n                cursorStyle: 'line',\r\n                fontLigatures: false,\r\n                disableTranslate3d: false,\r\n                hideCursorInOverviewRuler: false,\r\n                scrollBeyondLastLine: true,\r\n                automaticLayout: false,\r\n                wrappingColumn: 300,\r\n                wrappingIndent: 'same',\r\n                wordWrapBreakBeforeCharacters: '([{‘“〈《「『【〔（［｛｢£¥＄￡￥+＋',\r\n                wordWrapBreakAfterCharacters: ' \\t})]?|&,;¢°′″‰℃、。｡､￠，．：；？！％・･ゝゞヽヾーァィゥェォッャュョヮヵヶぁぃぅぇぉっゃゅょゎゕゖㇰㇱㇲㇳㇴㇵㇶㇷㇸㇹㇺㇻㇼㇽㇾㇿ々〻ｧｨｩｪｫｬｭｮｯｰ’”〉》」』】〕）］｝｣',\r\n                wordWrapBreakObtrusiveCharacters: '.',\r\n                tabFocusMode: false,\r\n                // Features\r\n                hover: true,\r\n                contextmenu: true,\r\n                mouseWheelScrollSensitivity: 1,\r\n                quickSuggestions: true,\r\n                quickSuggestionsDelay: 10,\r\n                iconsInSuggestions: true,\r\n                autoClosingBrackets: true,\r\n                formatOnType: false,\r\n                suggestOnTriggerCharacters: true,\r\n                acceptSuggestionOnEnter: true,\r\n                selectionHighlight: true,\r\n                outlineMarkers: false,\r\n                referenceInfos: true,\r\n                folding: true,\r\n                renderWhitespace: false,\r\n                indentGuides: false,\r\n                useTabStops: true,\r\n                fontFamily: (platform.isMacintosh ? DEFAULT_MAC_FONT_FAMILY : (platform.isLinux ? DEFAULT_LINUX_FONT_FAMILY : DEFAULT_WINDOWS_FONT_FAMILY)),\r\n                fontSize: (platform.isMacintosh ? 12 : 14),\r\n                lineHeight: 0\r\n            };\r\n        }\r\n        return ConfigClass;\r\n    }());\r\n    exports.DefaultConfig = new ConfigClass();\r\n});\r\n\ndefine(\"vs/editor/common/modes/nullMode\", [\"require\", \"exports\", 'vs/editor/common/config/defaultConfig'], function (require, exports, defaultConfig_1) {\r\n    /*---------------------------------------------------------------------------------------------\r\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n     *--------------------------------------------------------------------------------------------*/\r\n    'use strict';\r\n    var NullState = (function () {\r\n        function NullState(mode, stateData) {\r\n            this.mode = mode;\r\n            this.stateData = stateData;\r\n        }\r\n        NullState.prototype.clone = function () {\r\n            var stateDataClone = (this.stateData ? this.stateData.clone() : null);\r\n            return new NullState(this.mode, stateDataClone);\r\n        };\r\n        NullState.prototype.equals = function (other) {\r\n            if (this.mode !== other.getMode()) {\r\n                return false;\r\n            }\r\n            var otherStateData = other.getStateData();\r\n            if (!this.stateData && !otherStateData) {\r\n                return true;\r\n            }\r\n            if (this.stateData && otherStateData) {\r\n                return this.stateData.equals(otherStateData);\r\n            }\r\n            return false;\r\n        };\r\n        NullState.prototype.getMode = function () {\r\n            return this.mode;\r\n        };\r\n        NullState.prototype.tokenize = function (stream) {\r\n            stream.advanceToEOS();\r\n            return { type: '' };\r\n        };\r\n        NullState.prototype.getStateData = function () {\r\n            return this.stateData;\r\n        };\r\n        NullState.prototype.setStateData = function (stateData) {\r\n            this.stateData = stateData;\r\n        };\r\n        return NullState;\r\n    }());\r\n    exports.NullState = NullState;\r\n    var NullMode = (function () {\r\n        function NullMode() {\r\n            this.richEditSupport = {\r\n                wordDefinition: NullMode.DEFAULT_WORD_REGEXP\r\n            };\r\n        }\r\n        /**\r\n         * Create a word definition regular expression based on default word separators.\r\n         * Optionally provide allowed separators that should be included in words.\r\n         *\r\n         * The default would look like this:\r\n         * /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#\\$\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g\r\n         */\r\n        NullMode.createWordRegExp = function (allowInWords) {\r\n            if (allowInWords === void 0) { allowInWords = ''; }\r\n            var usualSeparators = defaultConfig_1.USUAL_WORD_SEPARATORS;\r\n            var source = '(-?\\\\d*\\\\.\\\\d\\\\w*)|([^';\r\n            for (var i = 0; i < usualSeparators.length; i++) {\r\n                if (allowInWords.indexOf(usualSeparators[i]) >= 0) {\r\n                    continue;\r\n                }\r\n                source += '\\\\' + usualSeparators[i];\r\n            }\r\n            source += '\\\\s]+)';\r\n            return new RegExp(source, 'g');\r\n        };\r\n        NullMode.prototype.getId = function () {\r\n            return NullMode.ID;\r\n        };\r\n        NullMode.prototype.toSimplifiedMode = function () {\r\n            return this;\r\n        };\r\n        // catches numbers (including floating numbers) in the first group, and alphanum in the second\r\n        NullMode.DEFAULT_WORD_REGEXP = NullMode.createWordRegExp();\r\n        NullMode.ID = 'vs.editor.modes.nullMode';\r\n        return NullMode;\r\n    }());\r\n    exports.NullMode = NullMode;\r\n    function nullTokenize(mode, buffer, state, deltaOffset, stopAtOffset) {\r\n        if (deltaOffset === void 0) { deltaOffset = 0; }\r\n        var tokens = [\r\n            {\r\n                startIndex: deltaOffset,\r\n                type: ''\r\n            }\r\n        ];\r\n        var modeTransitions = [\r\n            {\r\n                startIndex: deltaOffset,\r\n                mode: mode\r\n            }\r\n        ];\r\n        return {\r\n            tokens: tokens,\r\n            actualStopOffset: deltaOffset + buffer.length,\r\n            endState: state,\r\n            modeTransitions: modeTransitions\r\n        };\r\n    }\r\n    exports.nullTokenize = nullTokenize;\r\n});\r\n\ndefine(\"vs/editor/common/model/textModelWithTokensHelpers\", [\"require\", \"exports\", 'vs/editor/common/modes/nullMode', 'vs/editor/common/core/modeTransition'], function (require, exports, nullMode_1, modeTransition_1) {\r\n    /*---------------------------------------------------------------------------------------------\r\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n     *--------------------------------------------------------------------------------------------*/\r\n    'use strict';\r\n    var WordHelper = (function () {\r\n        function WordHelper() {\r\n        }\r\n        WordHelper._safeGetWordDefinition = function (mode) {\r\n            return (mode.richEditSupport ? mode.richEditSupport.wordDefinition : null);\r\n        };\r\n        WordHelper.ensureValidWordDefinition = function (wordDefinition) {\r\n            var result = nullMode_1.NullMode.DEFAULT_WORD_REGEXP;\r\n            if (wordDefinition && (wordDefinition instanceof RegExp)) {\r\n                if (!wordDefinition.global) {\r\n                    var flags = 'g';\r\n                    if (wordDefinition.ignoreCase) {\r\n                        flags += 'i';\r\n                    }\r\n                    if (wordDefinition.multiline) {\r\n                        flags += 'm';\r\n                    }\r\n                    result = new RegExp(wordDefinition.source, flags);\r\n                }\r\n                else {\r\n                    result = wordDefinition;\r\n                }\r\n            }\r\n            result.lastIndex = 0;\r\n            return result;\r\n        };\r\n        WordHelper.massageWordDefinitionOf = function (mode) {\r\n            return WordHelper.ensureValidWordDefinition(WordHelper._safeGetWordDefinition(mode));\r\n        };\r\n        WordHelper._getWordAtColumn = function (txt, column, modeIndex, modeTransitions) {\r\n            var modeStartIndex = modeTransitions[modeIndex].startIndex, modeEndIndex = (modeIndex + 1 < modeTransitions.length ? modeTransitions[modeIndex + 1].startIndex : txt.length), mode = modeTransitions[modeIndex].mode;\r\n            return WordHelper._getWordAtText(column, WordHelper.massageWordDefinitionOf(mode), txt.substring(modeStartIndex, modeEndIndex), modeStartIndex);\r\n        };\r\n        WordHelper.getWordAtPosition = function (textSource, position) {\r\n            if (!textSource._lineIsTokenized(position.lineNumber)) {\r\n                return WordHelper._getWordAtText(position.column, WordHelper.massageWordDefinitionOf(textSource.getMode()), textSource.getLineContent(position.lineNumber), 0);\r\n            }\r\n            var result = null;\r\n            var txt = textSource.getLineContent(position.lineNumber), modeTransitions = textSource._getLineModeTransitions(position.lineNumber), columnIndex = position.column - 1, modeIndex = modeTransition_1.ModeTransition.findIndexInSegmentsArray(modeTransitions, columnIndex);\r\n            result = WordHelper._getWordAtColumn(txt, position.column, modeIndex, modeTransitions);\r\n            if (!result && modeIndex > 0 && modeTransitions[modeIndex].startIndex === columnIndex) {\r\n                // The position is right at the beginning of `modeIndex`, so try looking at `modeIndex` - 1 too\r\n                result = WordHelper._getWordAtColumn(txt, position.column, modeIndex - 1, modeTransitions);\r\n            }\r\n            return result;\r\n        };\r\n        WordHelper._getWordAtText = function (column, wordDefinition, text, textOffset) {\r\n            // console.log('_getWordAtText: ', column, text, textOffset);\r\n            var words = text.match(wordDefinition), k, startWord, endWord, startColumn, endColumn, word;\r\n            if (words) {\r\n                for (k = 0; k < words.length; k++) {\r\n                    word = words[k].trim();\r\n                    if (word.length > 0) {\r\n                        startWord = text.indexOf(word, endWord);\r\n                        endWord = startWord + word.length;\r\n                        startColumn = textOffset + startWord + 1;\r\n                        endColumn = textOffset + endWord + 1;\r\n                        if (startColumn <= column && column <= endColumn) {\r\n                            return {\r\n                                word: word,\r\n                                startColumn: startColumn,\r\n                                endColumn: endColumn\r\n                            };\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n        return WordHelper;\r\n    }());\r\n    exports.WordHelper = WordHelper;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\ndefine(\"vs/editor/browser/standalone/standaloneWorker\", [\"require\", \"exports\", 'vs/base/common/uri', 'vs/base/common/winjs.base', 'vs/editor/common/core/range', 'vs/editor/common/model/mirrorModel2', 'vs/editor/common/model/textModelWithTokensHelpers', 'vs/editor/common/standalone/standaloneBase'], function (require, exports, uri_1, winjs_base_1, range_1, mirrorModel2_1, textModelWithTokensHelpers_1, standaloneBase_1) {\r\n    'use strict';\r\n    var MirrorModel = (function (_super) {\r\n        __extends(MirrorModel, _super);\r\n        function MirrorModel() {\r\n            _super.apply(this, arguments);\r\n        }\r\n        Object.defineProperty(MirrorModel.prototype, \"uri\", {\r\n            get: function () {\r\n                return this._uri;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(MirrorModel.prototype, \"version\", {\r\n            get: function () {\r\n                return this._versionId;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        MirrorModel.prototype.getLinesContent = function () {\r\n            return this._lines.slice(0);\r\n        };\r\n        MirrorModel.prototype.getLineCount = function () {\r\n            return this._lines.length;\r\n        };\r\n        MirrorModel.prototype.getLineContent = function (lineNumber) {\r\n            return this._lines[lineNumber - 1];\r\n        };\r\n        MirrorModel.prototype.getWordAtPosition = function (position, wordDefinition) {\r\n            var wordAtText = textModelWithTokensHelpers_1.WordHelper._getWordAtText(position.column, textModelWithTokensHelpers_1.WordHelper.ensureValidWordDefinition(wordDefinition), this._lines[position.lineNumber - 1], 0);\r\n            if (wordAtText) {\r\n                return new range_1.Range(position.lineNumber, wordAtText.startColumn, position.lineNumber, wordAtText.endColumn);\r\n            }\r\n            return null;\r\n        };\r\n        MirrorModel.prototype.getWordUntilPosition = function (position, wordDefinition) {\r\n            var wordAtPosition = this.getWordAtPosition(position, wordDefinition);\r\n            if (!wordAtPosition) {\r\n                return {\r\n                    word: '',\r\n                    startColumn: position.column,\r\n                    endColumn: position.column\r\n                };\r\n            }\r\n            return {\r\n                word: this._lines[position.lineNumber - 1].substring(wordAtPosition.startColumn - 1, position.column - 1),\r\n                startColumn: wordAtPosition.startColumn,\r\n                endColumn: position.column\r\n            };\r\n        };\r\n        MirrorModel.prototype._getAllWords = function (wordDefinition) {\r\n            var _this = this;\r\n            var result = [];\r\n            this._lines.forEach(function (line) {\r\n                _this._wordenize(line, wordDefinition).forEach(function (info) {\r\n                    result.push(line.substring(info.start, info.end));\r\n                });\r\n            });\r\n            return result;\r\n        };\r\n        MirrorModel.prototype.getAllUniqueWords = function (wordDefinition, skipWordOnce) {\r\n            var foundSkipWord = false;\r\n            var uniqueWords = {};\r\n            return this._getAllWords(wordDefinition).filter(function (word) {\r\n                if (skipWordOnce && !foundSkipWord && skipWordOnce === word) {\r\n                    foundSkipWord = true;\r\n                    return false;\r\n                }\r\n                else if (uniqueWords[word]) {\r\n                    return false;\r\n                }\r\n                else {\r\n                    uniqueWords[word] = true;\r\n                    return true;\r\n                }\r\n            });\r\n        };\r\n        //\t// TODO@Joh, TODO@Alex - remove these and make sure the super-things work\r\n        MirrorModel.prototype._wordenize = function (content, wordDefinition) {\r\n            var result = [];\r\n            var match;\r\n            while (match = wordDefinition.exec(content)) {\r\n                if (match[0].length === 0) {\r\n                    // it did match the empty string\r\n                    break;\r\n                }\r\n                result.push({ start: match.index, end: match.index + match[0].length });\r\n            }\r\n            return result;\r\n        };\r\n        MirrorModel.prototype.getValueInRange = function (range) {\r\n            if (range.startLineNumber === range.endLineNumber) {\r\n                return this._lines[range.startLineNumber - 1].substring(range.startColumn - 1, range.endColumn - 1);\r\n            }\r\n            var lineEnding = this._eol, startLineIndex = range.startLineNumber - 1, endLineIndex = range.endLineNumber - 1, resultLines = [];\r\n            resultLines.push(this._lines[startLineIndex].substring(range.startColumn - 1));\r\n            for (var i = startLineIndex + 1; i < endLineIndex; i++) {\r\n                resultLines.push(this._lines[i]);\r\n            }\r\n            resultLines.push(this._lines[endLineIndex].substring(0, range.endColumn - 1));\r\n            return resultLines.join(lineEnding);\r\n        };\r\n        return MirrorModel;\r\n    }(mirrorModel2_1.MirrorModel2));\r\n    exports.MirrorModel = MirrorModel;\r\n    var StandaloneWorker /*extends EditorSimpleWorker*/ = (function () {\r\n        function StandaloneWorker /*extends EditorSimpleWorker*/() {\r\n            // super();\r\n            this._models = Object.create(null);\r\n            this._foreignModule = null;\r\n        }\r\n        StandaloneWorker /*extends EditorSimpleWorker*/.prototype.getModels = function () {\r\n            var _this = this;\r\n            var all = [];\r\n            Object.keys(this._models).forEach(function (key) { return all.push(_this._models[key]); });\r\n            return all;\r\n        };\r\n        StandaloneWorker /*extends EditorSimpleWorker*/.prototype.acceptNewModel = function (data) {\r\n            this._models[data.url] = new MirrorModel(uri_1.default.parse(data.url), data.value.lines, data.value.EOL, data.versionId);\r\n        };\r\n        StandaloneWorker /*extends EditorSimpleWorker*/.prototype.acceptModelChanged = function (strURL, events) {\r\n            if (!this._models[strURL]) {\r\n                return;\r\n            }\r\n            var model = this._models[strURL];\r\n            model.onEvents(events);\r\n        };\r\n        StandaloneWorker /*extends EditorSimpleWorker*/.prototype.acceptRemovedModel = function (strURL) {\r\n            if (!this._models[strURL]) {\r\n                return;\r\n            }\r\n            delete this._models[strURL];\r\n        };\r\n        StandaloneWorker /*extends EditorSimpleWorker*/.prototype.loadModule = function (moduleId) {\r\n            var _this = this;\r\n            var cc;\r\n            var ee;\r\n            var r = new winjs_base_1.TPromise(function (c, e, p) {\r\n                cc = c;\r\n                ee = e;\r\n            });\r\n            require([moduleId], function (foreignModule) {\r\n                _this._foreignModule = foreignModule.create();\r\n                var methods = [];\r\n                for (var prop in _this._foreignModule) {\r\n                    if (typeof _this._foreignModule[prop] === 'function') {\r\n                        methods.push(prop);\r\n                    }\r\n                }\r\n                cc(methods);\r\n            }, ee);\r\n            return r;\r\n        };\r\n        // foreign method request\r\n        StandaloneWorker /*extends EditorSimpleWorker*/.prototype.fmr = function (method, args) {\r\n            if (!this._foreignModule || typeof this._foreignModule[method] !== 'function') {\r\n                return winjs_base_1.TPromise.wrapError(new Error('Missing requestHandler or method: ' + method));\r\n            }\r\n            try {\r\n                return winjs_base_1.TPromise.as(this._foreignModule[method].apply(this._foreignModule, args));\r\n            }\r\n            catch (e) {\r\n                return winjs_base_1.TPromise.wrapError(e);\r\n            }\r\n        };\r\n        return StandaloneWorker /*extends EditorSimpleWorker*/;\r\n    }());\r\n    exports.StandaloneWorker /*extends EditorSimpleWorker*/ = StandaloneWorker /*extends EditorSimpleWorker*/;\r\n    var standaloneWorker = new StandaloneWorker();\r\n    /**\r\n     * Called on the worker side\r\n     */\r\n    function create() {\r\n        return standaloneWorker;\r\n    }\r\n    exports.create = create;\r\n    function createMonacoWorkerAPI() {\r\n        return {\r\n            get mirrorModels() {\r\n                return standaloneWorker.getModels();\r\n            }\r\n        };\r\n    }\r\n    var global = self;\r\n    global.monaco = standaloneBase_1.createMonacoBaseAPI();\r\n    global.monaco.worker = createMonacoWorkerAPI();\r\n});\r\n\n\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport platform = require('vs/base/common/platform');\n\n\nfunction _encode(ch: string): string {\n\treturn '%' + ch.charCodeAt(0).toString(16).toUpperCase();\n}\n\n// see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/encodeURIComponent\nfunction encodeURIComponent2(str: string): string {\n\treturn encodeURIComponent(str).replace(/[!'()*]/g, _encode);\n}\n\nfunction encodeNoop(str: string): string {\n\treturn str;\n}\n\n\n/**\n * Uniform Resource Identifier (URI) http://tools.ietf.org/html/rfc3986.\n * This class is a simple parser which creates the basic component paths\n * (http://tools.ietf.org/html/rfc3986#section-3) with minimal validation\n * and encoding.\n *\n *       foo://example.com:8042/over/there?name=ferret#nose\n *       \\_/   \\______________/\\_________/ \\_________/ \\__/\n *        |           |            |            |        |\n *     scheme     authority       path        query   fragment\n *        |   _____________________|__\n *       / \\ /                        \\\n *       urn:example:animal:ferret:nose\n *\n *\n */\nexport default class URI {\n\n\tprivate static _empty = '';\n\tprivate static _slash = '/';\n\tprivate static _regexp = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\n\tprivate static _driveLetterPath = /^\\/[a-zA-z]:/;\n\tprivate static _upperCaseDrive = /^(\\/)?([A-Z]:)/;\n\n\tprivate _scheme: string;\n\tprivate _authority: string;\n\tprivate _path: string;\n\tprivate _query: string;\n\tprivate _fragment: string;\n\tprivate _formatted: string;\n\tprivate _fsPath: string;\n\n\tconstructor() {\n\t\tthis._scheme = URI._empty;\n\t\tthis._authority = URI._empty;\n\t\tthis._path = URI._empty;\n\t\tthis._query = URI._empty;\n\t\tthis._fragment = URI._empty;\n\n\t\tthis._formatted = null;\n\t\tthis._fsPath = null;\n\t}\n\n\t/**\n\t * scheme is the 'http' part of 'http://www.msft.com/some/path?query#fragment'.\n\t * The part before the first colon.\n\t */\n\tget scheme() {\n\t\treturn this._scheme;\n\t}\n\n\t/**\n\t * authority is the 'www.msft.com' part of 'http://www.msft.com/some/path?query#fragment'.\n\t * The part between the first double slashes and the next slash.\n\t */\n\tget authority() {\n\t\treturn this._authority;\n\t}\n\n\t/**\n\t * path is the '/some/path' part of 'http://www.msft.com/some/path?query#fragment'.\n\t */\n\tget path() {\n\t\treturn this._path;\n\t}\n\n\t/**\n\t * query is the 'query' part of 'http://www.msft.com/some/path?query#fragment'.\n\t */\n\tget query() {\n\t\treturn this._query;\n\t}\n\n\t/**\n\t * fragment is the 'fragment' part of 'http://www.msft.com/some/path?query#fragment'.\n\t */\n\tget fragment() {\n\t\treturn this._fragment;\n\t}\n\n\t// ---- filesystem path -----------------------\n\n\t/**\n\t * Returns a string representing the corresponding file system path of this URI.\n\t * Will handle UNC paths and normalize windows drive letters to lower-case. Also\n\t * uses the platform specific path separator. Will *not* validate the path for\n\t * invalid characters and semantics. Will *not* look at the scheme of this URI.\n\t */\n\tget fsPath() {\n\t\tif (!this._fsPath) {\n\t\t\tvar value: string;\n\t\t\tif (this._authority && this.scheme === 'file') {\n\t\t\t\t// unc path: file://shares/c$/far/boo\n\t\t\t\tvalue = `//${this._authority}${this._path}`;\n\t\t\t} else if (URI._driveLetterPath.test(this._path)) {\n\t\t\t\t// windows drive letter: file:///c:/far/boo\n\t\t\t\tvalue = this._path[1].toLowerCase() + this._path.substr(2);\n\t\t\t} else {\n\t\t\t\t// other path\n\t\t\t\tvalue = this._path;\n\t\t\t}\n\t\t\tif (platform.isWindows) {\n\t\t\t\tvalue = value.replace(/\\//g, '\\\\');\n\t\t\t}\n\t\t\tthis._fsPath = value;\n\t\t}\n\t\treturn this._fsPath;\n\t}\n\n\t// ---- modify to new -------------------------\n\n\tpublic with(change: { scheme?: string; authority?: string; path?: string; query?: string; fragment?: string }): URI {\n\t\tvar ret = new URI();\n\t\tret._scheme = change.scheme || this.scheme;\n\t\tret._authority = change.authority || this.authority;\n\t\tret._path = change.path || this.path;\n\t\tret._query = change.query || this.query;\n\t\tret._fragment = change.fragment || this.fragment;\n\t\tURI._validate(ret);\n\t\treturn ret;\n\t}\n\n\t// ---- parse & validate ------------------------\n\n\tpublic static parse(value: string): URI {\n\t\tconst ret = new URI();\n\t\tconst data = URI._parseComponents(value);\n\t\tret._scheme = data.scheme;\n\t\tret._authority = decodeURIComponent(data.authority);\n\t\tret._path = decodeURIComponent(data.path);\n\t\tret._query = decodeURIComponent(data.query);\n\t\tret._fragment = decodeURIComponent(data.fragment);\n\t\tURI._validate(ret);\n\t\treturn ret;\n\t}\n\n\tpublic static file(path: string): URI {\n\n\t\tconst ret = new URI();\n\t\tret._scheme = 'file';\n\n\t\t// normalize to fwd-slashes\n\t\tpath = path.replace(/\\\\/g, URI._slash);\n\n\t\t// check for authority as used in UNC shares\n\t\t// or use the path as given\n\t\tif (path[0] === URI._slash && path[0] === path[1]) {\n\t\t\tlet idx = path.indexOf(URI._slash, 2);\n\t\t\tif (idx === -1) {\n\t\t\t\tret._authority = path.substring(2);\n\t\t\t} else {\n\t\t\t\tret._authority = path.substring(2, idx);\n\t\t\t\tret._path = path.substring(idx);\n\t\t\t}\n\t\t} else {\n\t\t\tret._path = path;\n\t\t}\n\n\t\t// Ensure that path starts with a slash\n\t\t// or that it is at least a slash\n\t\tif (ret._path[0] !== URI._slash) {\n\t\t\tret._path = URI._slash + ret._path;\n\t\t}\n\n\t\tURI._validate(ret);\n\n\t\treturn ret;\n\t}\n\n\tprivate static _parseComponents(value: string): UriComponents {\n\n\t\tconst ret: UriComponents = {\n\t\t\tscheme: URI._empty,\n\t\t\tauthority: URI._empty,\n\t\t\tpath: URI._empty,\n\t\t\tquery: URI._empty,\n\t\t\tfragment: URI._empty,\n\t\t};\n\n\t\tconst match = URI._regexp.exec(value);\n\t\tif (match) {\n\t\t\tret.scheme = match[2] || ret.scheme;\n\t\t\tret.authority = match[4] || ret.authority;\n\t\t\tret.path = match[5] || ret.path;\n\t\t\tret.query = match[7] || ret.query;\n\t\t\tret.fragment = match[9] || ret.fragment;\n\t\t}\n\t\treturn ret;\n\t}\n\n\tpublic static create(scheme?: string, authority?: string, path?: string, query?: string, fragment?: string): URI {\n\t\treturn new URI().with({ scheme, authority, path, query, fragment });\n\t}\n\n\tprivate static _validate(ret: URI): void {\n\n\t\t// validation\n\t\t// path, http://tools.ietf.org/html/rfc3986#section-3.3\n\t\t// If a URI contains an authority component, then the path component\n\t\t// must either be empty or begin with a slash (\"/\") character.  If a URI\n\t\t// does not contain an authority component, then the path cannot begin\n\t\t// with two slash characters (\"//\").\n\t\tif (ret.authority && ret.path && ret.path[0] !== '/') {\n\t\t\tthrow new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character');\n\t\t}\n\t\tif (!ret.authority && ret.path.indexOf('//') === 0) {\n\t\t\tthrow new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")');\n\t\t}\n\t}\n\n\t// ---- printing/externalize ---------------------------\n\n\t/**\n\t *\n\t * @param skipEncoding Do not encode the result, default is `false`\n\t */\n\tpublic toString(skipEncoding: boolean = false): string {\n\t\tif (!skipEncoding) {\n\t\t\tif (!this._formatted) {\n\t\t\t\tthis._formatted = URI._asFormatted(this, false);\n\t\t\t}\n\t\t\treturn this._formatted;\n\t\t} else {\n\t\t\t// we don't cache that\n\t\t\treturn URI._asFormatted(this, true);\n\t\t}\n\t}\n\n\tprivate static _asFormatted(uri: URI, skipEncoding: boolean): string {\n\n\t\tconst encoder = !skipEncoding\n\t\t\t? encodeURIComponent2\n\t\t\t: encodeNoop;\n\n\t\tconst parts: string[] = [];\n\n\t\tlet {scheme, authority, path, query, fragment} = uri;\n\t\tif (scheme) {\n\t\t\tparts.push(scheme, ':');\n\t\t}\n\t\tif (authority || scheme === 'file') {\n\t\t\tparts.push('//');\n\t\t}\n\t\tif (authority) {\n\t\t\tauthority = authority.toLowerCase();\n\t\t\tlet idx = authority.indexOf(':');\n\t\t\tif (idx === -1) {\n\t\t\t\tparts.push(encoder(authority));\n\t\t\t} else {\n\t\t\t\tparts.push(encoder(authority.substr(0, idx)), authority.substr(idx));\n\t\t\t}\n\t\t}\n\t\tif (path) {\n\t\t\t// lower-case windown drive letters in /C:/fff\n\t\t\tconst m = URI._upperCaseDrive.exec(path);\n\t\t\tif (m) {\n\t\t\t\tpath = m[1] + m[2].toLowerCase() + path.substr(m[1].length + m[2].length);\n\t\t\t}\n\n\t\t\t// encode every segement but not slashes\n\t\t\t// make sure that # and ? are always encoded\n\t\t\t// when occurring in paths - otherwise the result\n\t\t\t// cannot be parsed back again\n\t\t\tlet lastIdx = 0;\n\t\t\twhile(true) {\n\t\t\t\tlet idx = path.indexOf(URI._slash, lastIdx);\n\t\t\t\tif (idx === -1) {\n\t\t\t\t\tparts.push(encoder(path.substring(lastIdx)).replace(/[#?]/, _encode));\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tparts.push(encoder(path.substring(lastIdx, idx)).replace(/[#?]/, _encode), URI._slash);\n\t\t\t\tlastIdx = idx + 1;\n\t\t\t};\n\t\t}\n\t\tif (query) {\n\t\t\tparts.push('?', encoder(query));\n\t\t}\n\t\tif (fragment) {\n\t\t\tparts.push('#', encoder(fragment));\n\t\t}\n\n\t\treturn parts.join(URI._empty);\n\t}\n\n\tpublic toJSON(): any {\n\t\treturn <UriState> {\n\t\t\tscheme: this.scheme,\n\t\t\tauthority: this.authority,\n\t\t\tpath: this.path,\n\t\t\tfsPath: this.fsPath,\n\t\t\tquery: this.query,\n\t\t\tfragment: this.fragment.replace(/URL_MARSHAL_REMOVE.*$/, ''), // TODO@Alex: implement derived resources (embedded mirror models) better\n\t\t\texternal: this.toString().replace(/#?URL_MARSHAL_REMOVE.*$/, ''), // TODO@Alex: implement derived resources (embedded mirror models) better\n\t\t\t$mid: 1\n\t\t};\n\t}\n\n\tstatic revive(data: any): URI {\n\t\tlet result = new URI();\n\t\tresult._scheme = (<UriState> data).scheme;\n\t\tresult._authority = (<UriState> data).authority;\n\t\tresult._path = (<UriState> data).path;\n\t\tresult._query = (<UriState> data).query;\n\t\tresult._fragment = (<UriState> data).fragment;\n\t\tresult._fsPath = (<UriState> data).fsPath;\n\t\tresult._formatted = (<UriState>data).external;\n\t\tURI._validate(result);\n\t\treturn result;\n\t}\n}\n\ninterface UriComponents {\n\tscheme: string;\n\tauthority: string;\n\tpath: string;\n\tquery: string;\n\tfragment: string;\n}\n\ninterface UriState extends UriComponents {\n\t$mid: number;\n\tfsPath: string;\n\texternal: string;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nexport namespace Arrays {\n\n\t/**\n\t * Given a sorted array of natural number segments, find the segment containing a natural number.\n\t *    For example, the segments [0, 5), [5, 9), [9, infinity) will be represented in the following manner:\n\t *       [{ startIndex: 0 }, { startIndex: 5 }, { startIndex: 9 }]\n\t *    Searching for 0, 1, 2, 3 or 4 will return 0.\n\t *    Searching for 5, 6, 7 or 8 will return 1.\n\t *    Searching for 9, 10, 11, ... will return 2.\n\t * @param arr A sorted array representing natural number segments\n\t * @param desiredIndex The search\n\t * @return The index of the containing segment in the array.\n\t */\n\texport function findIndexInSegmentsArray(arr: { startIndex: number; }[], desiredIndex: number): number {\n\n\t\tlet low = 0;\n\t\tlet high = arr.length - 1;\n\n\t\tif (high <= 0) {\n\t\t\treturn 0;\n\t\t}\n\n\t\twhile (low < high) {\n\n\t\t\tlet mid = low + Math.ceil((high - low) / 2);\n\n\t\t\tif (arr[mid].startIndex > desiredIndex) {\n\t\t\t\thigh = mid - 1;\n\t\t\t} else {\n\t\t\t\tlow = mid;\n\t\t\t}\n\t\t}\n\n\t\treturn low;\n\t}\n\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {IMode, IModeTransition} from 'vs/editor/common/modes';\nimport {Arrays} from 'vs/editor/common/core/arrays';\n\nexport class ModeTransition {\n\t_modeTransitionBrand: void;\n\n\tpublic startIndex:number;\n\tpublic mode:IMode;\n\n\tconstructor(startIndex:number, mode:IMode) {\n\t\tthis.startIndex = startIndex|0;\n\t\tthis.mode = mode;\n\t}\n\n\tpublic static findIndexInSegmentsArray(arr:ModeTransition[], desiredIndex: number): number {\n\t\treturn Arrays.findIndexInSegmentsArray(arr, desiredIndex);\n\t}\n\n\tpublic static create(modeTransitions:IModeTransition[]): ModeTransition[] {\n\t\tlet result:ModeTransition[] = [];\n\t\tfor (let i = 0, len = modeTransitions.length; i < len; i++) {\n\t\t\tlet modeTransition = modeTransitions[i];\n\t\t\tresult.push(new ModeTransition(modeTransition.startIndex, modeTransition.mode));\n\t\t}\n\t\treturn result;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {IPosition, IRange} from 'vs/editor/common/editorCommon';\n\n/**\n * A position in the editor.\n */\nexport class Position {\n\n\tpublic lineNumber: number;\n\tpublic column: number;\n\n\tconstructor(lineNumber: number, column: number) {\n\t\tthis.lineNumber = lineNumber;\n\t\tthis.column = column;\n\t}\n\n\t/**\n\t * Test if this position equals other position\n\t */\n\tpublic equals(other:IPosition): boolean {\n\t\treturn Position.equals(this, other);\n\t}\n\tpublic static equals(a:IPosition, b:IPosition): boolean {\n\t\tif (!a && !b) {\n\t\t\treturn true;\n\t\t}\n\t\treturn (\n\t\t\t!!a &&\n\t\t\t!!b &&\n\t\t\ta.lineNumber === b.lineNumber &&\n\t\t\ta.column === b.column\n\t\t);\n\t}\n\n\t/**\n\t * Test if this position is before other position. If the two positions are equal, the result will be false.\n\t */\n\tpublic isBefore(other:IPosition): boolean {\n\t\treturn Position.isBefore(this, other);\n\t}\n\tpublic static isBefore(a:IPosition, b:IPosition): boolean {\n\t\tif (a.lineNumber < b.lineNumber) {\n\t\t\treturn true;\n\t\t}\n\t\tif (b.lineNumber < a.lineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\treturn a.column < b.column;\n\t}\n\n\t/**\n\t * Test if this position is before other position. If the two positions are equal, the result will be true.\n\t */\n\tpublic isBeforeOrEqual(other:IPosition): boolean {\n\t\treturn Position.isBeforeOrEqual(this, other);\n\t}\n\tpublic static isBeforeOrEqual(a:IPosition, b:IPosition): boolean {\n\t\tif (a.lineNumber < b.lineNumber) {\n\t\t\treturn true;\n\t\t}\n\t\tif (b.lineNumber < a.lineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\treturn a.column <= b.column;\n\t}\n\n\t/**\n\t * Clone this position.\n\t */\n\tpublic clone(): Position {\n\t\treturn new Position(this.lineNumber, this.column);\n\t}\n\n\tpublic toString(): string {\n\t\treturn '(' + this.lineNumber + ',' + this.column + ')';\n\t}\n\n\t// ---\n\n\tpublic static lift(pos:IPosition): Position {\n\t\treturn new Position(pos.lineNumber, pos.column);\n\t}\n\n\tpublic static isIPosition(obj: any): obj is IPosition {\n\t\treturn (\n\t\t\tobj\n\t\t\t&& (typeof obj.lineNumber === 'number')\n\t\t\t&& (typeof obj.column === 'number')\n\t\t);\n\t}\n\n\tpublic static asEmptyRange(position:IPosition):IRange {\n\t\treturn {\n\t\t\tstartLineNumber: position.lineNumber,\n\t\t\tstartColumn: position.column,\n\t\t\tendLineNumber: position.lineNumber,\n\t\t\tendColumn: position.column\n\t\t};\n\t}\n\n\tpublic static startPosition(range:IRange):IPosition {\n\t\treturn {\n\t\t\tlineNumber: range.startLineNumber,\n\t\t\tcolumn: range.startColumn\n\t\t};\n\t}\n\n\tpublic static endPosition(range:IRange):IPosition {\n\t\treturn {\n\t\t\tlineNumber: range.endLineNumber,\n\t\t\tcolumn: range.endColumn\n\t\t};\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport {Position} from 'vs/editor/common/core/position';\nimport {IPosition, IRange} from 'vs/editor/common/editorCommon';\n\n/**\n * A range in the editor.\n */\nexport class Range {\n\n\tpublic startLineNumber:number;\n\tpublic startColumn:number;\n\tpublic endLineNumber:number;\n\tpublic endColumn:number;\n\n\tconstructor(startLineNumber:number, startColumn:number, endLineNumber:number, endColumn:number) {\n\t\tif ((startLineNumber > endLineNumber) || (startLineNumber === endLineNumber && startColumn > endColumn)) {\n\t\t\tthis.startLineNumber = endLineNumber;\n\t\t\tthis.startColumn = endColumn;\n\t\t\tthis.endLineNumber = startLineNumber;\n\t\t\tthis.endColumn = startColumn;\n\t\t} else {\n\t\t\tthis.startLineNumber = startLineNumber;\n\t\t\tthis.startColumn = startColumn;\n\t\t\tthis.endLineNumber = endLineNumber;\n\t\t\tthis.endColumn = endColumn;\n\t\t}\n\t}\n\n\t/**\n\t * Test if this range is empty.\n\t */\n\tpublic isEmpty(): boolean {\n\t\treturn Range.isEmpty(this);\n\t}\n\n\t/**\n\t * Test if position is in this range. If the position is at the edges, will return true.\n\t */\n\tpublic containsPosition(position:IPosition): boolean {\n\t\treturn Range.containsPosition(this, position);\n\t}\n\n\t/**\n\t * Test if range is in this range. If the range is equal to this range, will return true.\n\t */\n\tpublic containsRange(range:IRange): boolean {\n\t\treturn Range.containsRange(this, range);\n\t}\n\n\t/**\n\t * A reunion of the two ranges. The smallest position will be used as the start point, and the largest one as the end point.\n\t */\n\tpublic plusRange(range:IRange): Range {\n\t\treturn Range.plusRange(this, range);\n\t}\n\n\t/**\n\t * A intersection of the two ranges.\n\t */\n\tpublic intersectRanges(range:IRange): Range {\n\t\treturn Range.intersectRanges(this, range);\n\t}\n\n\t/**\n\t * Test if this range equals other.\n\t */\n\tpublic equalsRange(other:IRange): boolean {\n\t\treturn Range.equalsRange(this, other);\n\t}\n\n\t/**\n\t * Return the end position (which will be after or equal to the start position)\n\t */\n\tpublic getEndPosition(): Position {\n\t\treturn new Position(this.endLineNumber, this.endColumn);\n\t}\n\n\t/**\n\t * Return the start position (which will be before or equal to the end position)\n\t */\n\tpublic getStartPosition(): Position {\n\t\treturn new Position(this.startLineNumber, this.startColumn);\n\t}\n\n\t/**\n\t * Clone this range.\n\t */\n\tpublic cloneRange(): Range {\n\t\treturn new Range(this.startLineNumber, this.startColumn, this.endLineNumber, this.endColumn);\n\t}\n\n\t/**\n\t * Transform to a user presentable string representation.\n\t */\n\tpublic toString(): string {\n\t\treturn '[' + this.startLineNumber + ',' + this.startColumn + ' -> ' + this.endLineNumber + ',' + this.endColumn + ']';\n\t}\n\n\t/**\n\t * Create a new range using this range's start position, and using endLineNumber and endColumn as the end position.\n\t */\n\tpublic setEndPosition(endLineNumber: number, endColumn: number): Range {\n\t\treturn new Range(this.startLineNumber, this.startColumn, endLineNumber, endColumn);\n\t}\n\n\t/**\n\t * Create a new range using this range's end position, and using startLineNumber and startColumn as the start position.\n\t */\n\tpublic setStartPosition(startLineNumber: number, startColumn: number): Range {\n\t\treturn new Range(startLineNumber, startColumn, this.endLineNumber, this.endColumn);\n\t}\n\n\tpublic collapseToStart():Range  {\n\t\treturn new Range(this.startLineNumber, this.startColumn, this.startLineNumber, this.startColumn);\n\t}\n\n\t// ---\n\n\tpublic static lift(range:IRange): Range {\n\t\tif (!range) {\n\t\t\treturn null;\n\t\t}\n\t\treturn new Range(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn);\n\t}\n\n\tpublic static isIRange(obj: any): obj is IRange {\n\t\treturn (\n\t\t\tobj\n\t\t\t&& (typeof obj.startLineNumber === 'number')\n\t\t\t&& (typeof obj.startColumn === 'number')\n\t\t\t&& (typeof obj.endLineNumber === 'number')\n\t\t\t&& (typeof obj.endColumn === 'number')\n\t\t);\n\t}\n\n\tpublic static isEmpty(range:IRange): boolean {\n\t\treturn (range.startLineNumber === range.endLineNumber && range.startColumn === range.endColumn);\n\t}\n\n\tpublic static containsPosition(range:IRange, position:IPosition): boolean {\n\t\tif (position.lineNumber < range.startLineNumber || position.lineNumber > range.endLineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\tif (position.lineNumber === range.startLineNumber && position.column < range.startColumn) {\n\t\t\treturn false;\n\t\t}\n\t\tif (position.lineNumber === range.endLineNumber && position.column > range.endColumn) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic static containsRange(range:IRange, otherRange:IRange): boolean {\n\t\tif (otherRange.startLineNumber < range.startLineNumber || otherRange.endLineNumber < range.startLineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\tif (otherRange.startLineNumber > range.endLineNumber || otherRange.endLineNumber > range.endLineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\tif (otherRange.startLineNumber === range.startLineNumber && otherRange.startColumn < range.startColumn) {\n\t\t\treturn false;\n\t\t}\n\t\tif (otherRange.endLineNumber === range.endLineNumber && otherRange.endColumn > range.endColumn) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic static areIntersectingOrTouching(a:IRange, b:IRange): boolean {\n\t\t// Check if `a` is before `b`\n\t\tif (a.endLineNumber < b.startLineNumber || (a.endLineNumber === b.startLineNumber && a.endColumn < b.startColumn)) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Check if `b` is before `a`\n\t\tif (b.endLineNumber < a.startLineNumber || (b.endLineNumber === a.startLineNumber && b.endColumn < a.startColumn)) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// These ranges must intersect\n\t\treturn true;\n\t}\n\n\tpublic static intersectRanges(a:IRange, b:IRange): Range {\n\t\tvar resultStartLineNumber = a.startLineNumber,\n\t\t\tresultStartColumn = a.startColumn,\n\t\t\tresultEndLineNumber = a.endLineNumber,\n\t\t\tresultEndColumn = a.endColumn,\n\t\t\totherStartLineNumber = b.startLineNumber,\n\t\t\totherStartColumn = b.startColumn,\n\t\t\totherEndLineNumber = b.endLineNumber,\n\t\t\totherEndColumn = b.endColumn;\n\n\t\tif (resultStartLineNumber < otherStartLineNumber) {\n\t\t\tresultStartLineNumber = otherStartLineNumber;\n\t\t\tresultStartColumn = otherStartColumn;\n\t\t} else if (resultStartLineNumber === otherStartLineNumber) {\n\t\t\tresultStartColumn = Math.max(resultStartColumn, otherStartColumn);\n\t\t}\n\n\t\tif (resultEndLineNumber > otherEndLineNumber) {\n\t\t\tresultEndLineNumber = otherEndLineNumber;\n\t\t\tresultEndColumn = otherEndColumn;\n\t\t} else if (resultEndLineNumber === otherEndLineNumber) {\n\t\t\tresultEndColumn = Math.min(resultEndColumn, otherEndColumn);\n\t\t}\n\n\t\t// Check if selection is now empty\n\t\tif (resultStartLineNumber > resultEndLineNumber) {\n\t\t\treturn null;\n\t\t}\n\t\tif (resultStartLineNumber === resultEndLineNumber && resultStartColumn > resultEndColumn) {\n\t\t\treturn null;\n\t\t}\n\t\treturn new Range(resultStartLineNumber, resultStartColumn, resultEndLineNumber, resultEndColumn);\n\t}\n\n\tpublic static plusRange(a:IRange, b:IRange): Range {\n\t\tvar startLineNumber:number, startColumn:number, endLineNumber:number, endColumn:number;\n\t\tif (b.startLineNumber < a.startLineNumber) {\n\t\t\tstartLineNumber = b.startLineNumber;\n\t\t\tstartColumn = b.startColumn;\n\t\t} else if (b.startLineNumber === a.startLineNumber) {\n\t\t\tstartLineNumber = b.startLineNumber;\n\t\t\tstartColumn = Math.min(b.startColumn, a.startColumn);\n\t\t} else {\n\t\t\tstartLineNumber = a.startLineNumber;\n\t\t\tstartColumn = a.startColumn;\n\t\t}\n\n\t\tif (b.endLineNumber > a.endLineNumber) {\n\t\t\tendLineNumber = b.endLineNumber;\n\t\t\tendColumn = b.endColumn;\n\t\t} else if (b.endLineNumber === a.endLineNumber) {\n\t\t\tendLineNumber = b.endLineNumber;\n\t\t\tendColumn = Math.max(b.endColumn, a.endColumn);\n\t\t} else {\n\t\t\tendLineNumber = a.endLineNumber;\n\t\t\tendColumn = a.endColumn;\n\t\t}\n\n\t\treturn new Range(startLineNumber, startColumn, endLineNumber, endColumn);\n\t}\n\n\tpublic static equalsRange(a:IRange, b:IRange): boolean {\n\t\treturn (\n\t\t\t!!a &&\n\t\t\t!!b &&\n\t\t\ta.startLineNumber === b.startLineNumber &&\n\t\t\ta.startColumn === b.startColumn &&\n\t\t\ta.endLineNumber === b.endLineNumber &&\n\t\t\ta.endColumn === b.endColumn\n\t\t);\n\t}\n\n\t/**\n\t * A function that compares ranges, useful for sorting ranges\n\t * It will first compare ranges on the startPosition and then on the endPosition\n\t */\n\tpublic static compareRangesUsingStarts(a:IRange, b:IRange): number {\n\t\tlet aStartLineNumber = a.startLineNumber|0;\n\t\tlet bStartLineNumber = b.startLineNumber|0;\n\t\tlet aStartColumn = a.startColumn|0;\n\t\tlet bStartColumn = b.startColumn|0;\n\t\tlet aEndLineNumber = a.endLineNumber|0;\n\t\tlet bEndLineNumber = b.endLineNumber|0;\n\t\tlet aEndColumn = a.endColumn|0;\n\t\tlet bEndColumn = b.endColumn|0;\n\n\t\tif (aStartLineNumber === bStartLineNumber) {\n\t\t\tif (aStartColumn === bStartColumn) {\n\t\t\t\tif (aEndLineNumber === bEndLineNumber) {\n\t\t\t\t\treturn aEndColumn - bEndColumn;\n\t\t\t\t}\n\t\t\t\treturn aEndLineNumber - bEndLineNumber;\n\t\t\t}\n\t\t\treturn aStartColumn - bStartColumn;\n\t\t}\n\t\treturn aStartLineNumber - bStartLineNumber;\n\t}\n\n\t/**\n\t * A function that compares ranges, useful for sorting ranges\n\t * It will first compare ranges on the endPosition and then on the startPosition\n\t */\n\tpublic static compareRangesUsingEnds(a:IRange, b:IRange): number {\n\t\tif (a.endLineNumber === b.endLineNumber) {\n\t\t\tif (a.endColumn === b.endColumn) {\n\t\t\t\tif (a.startLineNumber === b.startLineNumber) {\n\t\t\t\t\treturn a.startColumn - b.startColumn;\n\t\t\t\t}\n\t\t\t\treturn a.startLineNumber - b.startLineNumber;\n\t\t\t}\n\t\t\treturn a.endColumn - b.endColumn;\n\t\t}\n\t\treturn a.endLineNumber - b.endLineNumber;\n\t}\n\n\tpublic static spansMultipleLines(range:IRange):boolean {\n\t\treturn range.endLineNumber > range.startLineNumber;\n\t}\n\n\tpublic static collapseToStart(range:IRange):IRange  {\n\t\treturn {\n\t\t\tstartLineNumber: range.startLineNumber,\n\t\t\tstartColumn: range.startColumn,\n\t\t\tendLineNumber: range.startLineNumber,\n\t\t\tendColumn: range.startColumn\n\t\t};\n\t}\n\n}\n\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {IAction} from 'vs/base/common/actions';\nimport {IEventEmitter, BulkListenerCallback} from 'vs/base/common/eventEmitter';\nimport {IHTMLContentElement} from 'vs/base/common/htmlContent';\nimport URI from 'vs/base/common/uri';\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {IInstantiationService, IConstructorSignature1, IConstructorSignature2} from 'vs/platform/instantiation/common/instantiation';\nimport {ILineContext, IMode, IModeTransition, IToken} from 'vs/editor/common/modes';\nimport {ViewLineToken} from 'vs/editor/common/core/viewLineToken';\nimport {ScrollbarVisibility} from 'vs/base/browser/ui/scrollbar/scrollableElementOptions';\nimport {IDisposable} from 'vs/base/common/lifecycle';\nimport {Position} from 'vs/editor/common/core/position';\nimport {Range} from 'vs/editor/common/core/range';\nimport {Selection} from 'vs/editor/common/core/selection';\n\n/**\n * @internal\n */\nexport interface Event<T> {\n\t(listener: (e: T) => any, thisArg?: any): IDisposable;\n}\n\n// --- position & range\n\n/**\n * A position in the editor. This interface is suitable for serialization.\n */\nexport interface IPosition {\n\t/**\n\t * line number (starts at 1)\n\t */\n\tlineNumber:number;\n\t/**\n\t * column (the first character in a line is between column 1 and column 2)\n\t */\n\tcolumn:number;\n}\n\n/**\n * A range in the editor. This interface is suitable for serialization.\n */\nexport interface IRange {\n\t/**\n\t * Line number on which the range starts (starts at 1).\n\t */\n\tstartLineNumber:number;\n\t/**\n\t * Column on which the range starts in line `startLineNumber` (starts at 1).\n\t */\n\tstartColumn:number;\n\t/**\n\t * Line number on which the range ends.\n\t */\n\tendLineNumber:number;\n\t/**\n\t * Column on which the range ends in line `endLineNumber`.\n\t */\n\tendColumn:number;\n}\n\n/**\n * A selection in the editor.\n * The selection is a range that has an orientation.\n */\nexport interface ISelection {\n\t/**\n\t * The line number on which the selection has started.\n\t */\n\tselectionStartLineNumber: number;\n\t/**\n\t * The column on `selectionStartLineNumber` where the selection has started.\n\t */\n\tselectionStartColumn: number;\n\t/**\n\t * The line number on which the selection has ended.\n\t */\n\tpositionLineNumber: number;\n\t/**\n\t * The column on `positionLineNumber` where the selection has ended.\n\t */\n\tpositionColumn: number;\n}\n\n/**\n * The direction of a selection.\n */\nexport enum SelectionDirection {\n\t/**\n\t * The selection starts above where it ends.\n\t */\n\tLTR,\n\t/**\n\t * The selection starts below where it ends.\n\t */\n\tRTL\n}\n\n/**\n * Configuration options for editor scrollbars\n */\nexport interface IEditorScrollbarOptions {\n\t/**\n\t * The size of arrows (if displayed).\n\t * Defaults to 11.\n\t */\n\tarrowSize?:number;\n\t/**\n\t * Render vertical scrollbar.\n\t * Accepted values: 'auto', 'visible', 'hidden'.\n\t * Defaults to 'auto'.\n\t */\n\tvertical?:string;\n\t/**\n\t * Render horizontal scrollbar.\n\t * Accepted values: 'auto', 'visible', 'hidden'.\n\t * Defaults to 'auto'.\n\t */\n\thorizontal?:string;\n\t/**\n\t * Cast horizontal and vertical shadows when the content is scrolled.\n\t * Defaults to false.\n\t */\n\tuseShadows?:boolean;\n\t/**\n\t * Render arrows at the top and bottom of the vertical scrollbar.\n\t * Defaults to false.\n\t */\n\tverticalHasArrows?:boolean;\n\t/**\n\t * Render arrows at the left and right of the horizontal scrollbar.\n\t * Defaults to false.\n\t */\n\thorizontalHasArrows?:boolean;\n\t/**\n\t * Listen to mouse wheel events and react to them by scrolling.\n\t * Defaults to true.\n\t */\n\thandleMouseWheel?: boolean;\n\t/**\n\t * Height in pixels for the horizontal scrollbar.\n\t * Defaults to 10 (px).\n\t */\n\thorizontalScrollbarSize?: number;\n\t/**\n\t * Width in pixels for the vertical scrollbar.\n\t * Defaults to 10 (px).\n\t */\n\tverticalScrollbarSize?: number;\n\tverticalSliderSize?: number;\n\thorizontalSliderSize?: number;\n}\n\nexport enum WrappingIndent {\n\tNone = 0,\n\tSame = 1,\n\tIndent = 2\n}\n\n/**\n * Configuration options for the editor.\n */\nexport interface IEditorOptions {\n\texperimentalScreenReader?: boolean;\n\tariaLabel?: string;\n\t/**\n\t * Render vertical lines at the specified columns.\n\t * Defaults to empty array.\n\t */\n\trulers?: number[];\n\t/**\n\t * A string containing the word separators used when doing word navigation.\n\t * Defaults to `~!@#$%^&*()-=+[{]}\\\\|;:\\'\",.<>/?\n\t */\n\twordSeparators?: string;\n\t/**\n\t * Enable Linux primary clipboard.\n\t * Defaults to true.\n\t */\n\tselectionClipboard?: boolean;\n\t/**\n\t * Control the rendering of line numbers.\n\t * If it is a function, it will be invoked when rendering a line number and the return value will be rendered.\n\t * Otherwise, if it is a truey, line numbers will be rendered normally (equivalent of using an identity function).\n\t * Otherwise, line numbers will not be rendered.\n\t * Defaults to true.\n\t */\n\tlineNumbers?:any;\n\t/**\n\t * Should the corresponding line be selected when clicking on the line number?\n\t * Defaults to true.\n\t */\n\tselectOnLineNumbers?:boolean;\n\t/**\n\t * Control the width of line numbers, by reserving horizontal space for rendering at least an amount of digits.\n\t * Defaults to 5.\n\t */\n\tlineNumbersMinChars?:number;\n\t/**\n\t * Enable the rendering of the glyph margin.\n\t * Defaults to false.\n\t */\n\tglyphMargin?:boolean;\n\t/**\n\t * The width reserved for line decorations (in px).\n\t * Line decorations are placed between line numbers and the editor content.\n\t * Defaults to 10.\n\t */\n\tlineDecorationsWidth?:number;\n\t/**\n\t * When revealing the cursor, a virtual padding (px) is added to the cursor, turning it into a rectangle.\n\t * This virtual padding ensures that the cursor gets revealed before hitting the edge of the viewport.\n\t * Defaults to 30 (px).\n\t */\n\trevealHorizontalRightPadding?:number;\n\t/**\n\t * Render the editor selection with rounded borders.\n\t * Defaults to true.\n\t */\n\troundedSelection?:boolean;\n\t/**\n\t * Theme to be used for rendering. Consists of two parts, the UI theme and the syntax theme,\n\t * separated by a space.\n\t * The current available UI themes are: 'vs' (default), 'vs-dark', 'hc-black'\n\t * The syntax themes are contributed. The default is 'default-theme'\n\t */\n\ttheme?:string;\n\t/**\n\t * Should the editor be read only.\n\t * Defaults to false.\n\t */\n\treadOnly?:boolean;\n\t/**\n\t * Control the behavior and rendering of the scrollbars.\n\t */\n\tscrollbar?:IEditorScrollbarOptions;\n\t/**\n\t * The number of vertical lanes the overview ruler should render.\n\t * Defaults to 2.\n\t */\n\toverviewRulerLanes?:number;\n\t/**\n\t * Control the cursor blinking animation.\n\t * Defaults to 'blink'.\n\t */\n\tcursorBlinking?:string;\n\t/**\n\t * Control the cursor style, either 'block' or 'line'.\n\t * Defaults to 'line'.\n\t */\n\tcursorStyle?:string;\n\t/**\n\t * Enable font ligatures.\n\t * Defaults to false.\n\t */\n\tfontLigatures?:boolean;\n\t/**\n\t * Disable the use of `translate3d`.\n\t * Defaults to false.\n\t */\n\tdisableTranslate3d?:boolean;\n\t/**\n\t * Should the cursor be hidden in the overview ruler.\n\t * Defaults to false.\n\t */\n\thideCursorInOverviewRuler?:boolean;\n\t/**\n\t * Enable that scrolling can go one screen size after the last line.\n\t * Defaults to true.\n\t */\n\tscrollBeyondLastLine?:boolean;\n\t/**\n\t * Enable that the editor will install an interval to check if its container dom node size has changed.\n\t * Enabling this might have a severe performance impact.\n\t * Defaults to false.\n\t */\n\tautomaticLayout?:boolean;\n\t/**\n\t * Control the wrapping strategy of the editor.\n\t * Using -1 means no wrapping whatsoever.\n\t * Using 0 means viewport width wrapping (ajusts with the resizing of the editor).\n\t * Using a positive number means wrapping after a fixed number of characters.\n\t * Defaults to 300.\n\t */\n\twrappingColumn?:number;\n\t/**\n\t * Control indentation of wrapped lines. Can be: 'none', 'same' or 'indent'.\n\t * Defaults to 'none'.\n\t */\n\twrappingIndent?: string;\n\t/**\n\t * Configure word wrapping characters. A break will be introduced before these characters.\n\t * Defaults to '{([+'.\n\t */\n\twordWrapBreakBeforeCharacters?: string;\n\t/**\n\t * Configure word wrapping characters. A break will be introduced after these characters.\n\t * Defaults to ' \\t})]?|&,;'.\n\t */\n\twordWrapBreakAfterCharacters?: string;\n\t/**\n\t * Configure word wrapping characters. A break will be introduced after these characters only if no `wordWrapBreakBeforeCharacters` or `wordWrapBreakAfterCharacters` were found.\n\t * Defaults to '.'.\n\t */\n\twordWrapBreakObtrusiveCharacters?: string;\n\n\t/**\n\t * Control what pressing Tab does.\n\t * If it is false, pressing Tab or Shift-Tab will be handled by the editor.\n\t * If it is true, pressing Tab or Shift-Tab will move the browser focus.\n\t * Defaults to false.\n\t */\n\ttabFocusMode?:boolean;\n\n\t/**\n\t * Performance guard: Stop rendering a line after x characters.\n\t * Defaults to 10000 if wrappingColumn is -1. Defaults to -1 if wrappingColumn is >= 0.\n\t * Use -1 to never stop rendering\n\t */\n\tstopRenderingLineAfter?:number;\n\t/**\n\t * Enable hover.\n\t * Defaults to true.\n\t */\n\thover?:boolean;\n\t/**\n\t * Enable custom contextmenu.\n\t * Defaults to true.\n\t */\n\tcontextmenu?:boolean;\n\t/**\n\t * A multiplier to be used on the `deltaX` and `deltaY` of mouse wheel scroll events.\n\t * Defaults to 1.\n\t */\n\tmouseWheelScrollSensitivity?: number;\n\t/**\n\t * Enable quick suggestions (shaddow suggestions)\n\t * Defaults to true.\n\t */\n\tquickSuggestions?:boolean;\n\t/**\n\t * Quick suggestions show delay (in ms)\n\t * Defaults to 500 (ms)\n\t */\n\tquickSuggestionsDelay?:number;\n\t/**\n\t * Render icons in suggestions box.\n\t * Defaults to true.\n\t */\n\ticonsInSuggestions?:boolean;\n\t/**\n\t * Enable auto closing brackets.\n\t * Defaults to true.\n\t */\n\tautoClosingBrackets?:boolean;\n\t/**\n\t * Enable format on type.\n\t * Defaults to false.\n\t */\n\tformatOnType?:boolean;\n\t/**\n\t * Enable the suggestion box to pop-up on trigger characters.\n\t * Defaults to true.\n\t */\n\tsuggestOnTriggerCharacters?: boolean;\n\t/**\n\t * Accept suggestions on ENTER.\n\t * Defaults to true.\n\t */\n\tacceptSuggestionOnEnter?: boolean;\n\t/**\n\t * Enable selection highlight.\n\t * Defaults to true.\n\t */\n\tselectionHighlight?:boolean;\n\t/**\n\t * Show lines before classes and methods (based on outline info).\n\t * Defaults to false.\n\t */\n\toutlineMarkers?: boolean;\n\t/**\n\t * Show reference infos (a.k.a. code lenses) for modes that support it\n\t * Defaults to true.\n\t */\n\treferenceInfos?: boolean;\n\t/**\n\t * Enable code folding\n\t * Defaults to true.\n\t */\n\tfolding?: boolean;\n\t/**\n\t * Enable rendering of leading whitespace.\n\t * Defaults to false.\n\t */\n\trenderWhitespace?: boolean;\n\t/**\n\t * Enable rendering of indent guides.\n\t * Defaults to true.\n\t */\n\tindentGuides?: boolean;\n\t/**\n\t * Inserting and deleting whitespace follows tab stops.\n\t */\n\tuseTabStops?: boolean;\n\t/**\n\t * The font family\n\t */\n\tfontFamily?: string;\n\t/**\n\t * The font size\n\t */\n\tfontSize?: number;\n\t/**\n\t * The line height\n\t */\n\tlineHeight?: number;\n}\n\n/**\n * Configuration options for the diff editor.\n */\nexport interface IDiffEditorOptions extends IEditorOptions {\n\t/**\n\t * Allow the user to resize the diff editor split view.\n\t * Defaults to true.\n\t */\n\tenableSplitViewResizing?: boolean;\n\t/**\n\t * Render the differences in two side-by-side editors.\n\t * Defaults to true.\n\t */\n\trenderSideBySide?: boolean;\n\t/**\n\t * Compute the diff by ignoring leading/trailing whitespace\n\t * Defaults to true.\n\t */\n\tignoreTrimWhitespace?: boolean;\n\t/**\n\t * Original model should be editable?\n\t * Defaults to false.\n\t */\n\toriginalEditable?: boolean;\n}\n\nexport class InternalEditorScrollbarOptions {\n\t_internalEditorScrollbarOptionsBrand: void;\n\n\tarrowSize:number;\n\tvertical:ScrollbarVisibility;\n\thorizontal:ScrollbarVisibility;\n\tuseShadows:boolean;\n\tverticalHasArrows:boolean;\n\thorizontalHasArrows:boolean;\n\thandleMouseWheel: boolean;\n\thorizontalScrollbarSize: number;\n\thorizontalSliderSize: number;\n\tverticalScrollbarSize: number;\n\tverticalSliderSize: number;\n\tmouseWheelScrollSensitivity: number;\n\n\t/**\n\t * @internal\n\t */\n\tconstructor(source:{\n\t\tarrowSize:number;\n\t\tvertical:ScrollbarVisibility;\n\t\thorizontal:ScrollbarVisibility;\n\t\tuseShadows:boolean;\n\t\tverticalHasArrows:boolean;\n\t\thorizontalHasArrows:boolean;\n\t\thandleMouseWheel: boolean;\n\t\thorizontalScrollbarSize: number;\n\t\thorizontalSliderSize: number;\n\t\tverticalScrollbarSize: number;\n\t\tverticalSliderSize: number;\n\t\tmouseWheelScrollSensitivity: number;\n\t}) {\n\t\tthis.arrowSize = source.arrowSize|0;\n\t\tthis.vertical = source.vertical|0;\n\t\tthis.horizontal = source.horizontal|0;\n\t\tthis.useShadows = Boolean(source.useShadows);\n\t\tthis.verticalHasArrows = Boolean(source.verticalHasArrows);\n\t\tthis.horizontalHasArrows = Boolean(source.horizontalHasArrows);\n\t\tthis.handleMouseWheel = Boolean(source.handleMouseWheel);\n\t\tthis.horizontalScrollbarSize = source.horizontalScrollbarSize|0;\n\t\tthis.horizontalSliderSize = source.horizontalSliderSize|0;\n\t\tthis.verticalScrollbarSize = source.verticalScrollbarSize|0;\n\t\tthis.verticalSliderSize = source.verticalSliderSize|0;\n\t\tthis.mouseWheelScrollSensitivity = Number(source.mouseWheelScrollSensitivity);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic equals(other:InternalEditorScrollbarOptions): boolean {\n\t\treturn (\n\t\t\tthis.arrowSize === other.arrowSize\n\t\t\t&& this.vertical === other.vertical\n\t\t\t&& this.horizontal === other.horizontal\n\t\t\t&& this.useShadows === other.useShadows\n\t\t\t&& this.verticalHasArrows === other.verticalHasArrows\n\t\t\t&& this.horizontalHasArrows === other.horizontalHasArrows\n\t\t\t&& this.handleMouseWheel === other.handleMouseWheel\n\t\t\t&& this.horizontalScrollbarSize === other.horizontalScrollbarSize\n\t\t\t&& this.horizontalSliderSize === other.horizontalSliderSize\n\t\t\t&& this.verticalScrollbarSize === other.verticalScrollbarSize\n\t\t\t&& this.verticalSliderSize === other.verticalSliderSize\n\t\t\t&& this.mouseWheelScrollSensitivity === other.mouseWheelScrollSensitivity\n\t\t);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic clone(): InternalEditorScrollbarOptions {\n\t\treturn new InternalEditorScrollbarOptions(this);\n\t}\n}\n\nexport class EditorWrappingInfo {\n\t_editorWrappingInfoBrand: void;\n\n\tisViewportWrapping: boolean;\n\twrappingColumn: number;\n\twrappingIndent: WrappingIndent;\n\twordWrapBreakBeforeCharacters: string;\n\twordWrapBreakAfterCharacters: string;\n\twordWrapBreakObtrusiveCharacters: string;\n\n\t/**\n\t * @internal\n\t */\n\tconstructor(source:{\n\t\tisViewportWrapping: boolean;\n\t\twrappingColumn: number;\n\t\twrappingIndent: WrappingIndent;\n\t\twordWrapBreakBeforeCharacters: string;\n\t\twordWrapBreakAfterCharacters: string;\n\t\twordWrapBreakObtrusiveCharacters: string;\n\t}) {\n\t\tthis.isViewportWrapping = Boolean(source.isViewportWrapping);\n\t\tthis.wrappingColumn = source.wrappingColumn|0;\n\t\tthis.wrappingIndent = source.wrappingIndent|0;\n\t\tthis.wordWrapBreakBeforeCharacters = String(source.wordWrapBreakBeforeCharacters);\n\t\tthis.wordWrapBreakAfterCharacters = String(source.wordWrapBreakAfterCharacters);\n\t\tthis.wordWrapBreakObtrusiveCharacters = String(source.wordWrapBreakObtrusiveCharacters);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic equals(other:EditorWrappingInfo): boolean {\n\t\treturn (\n\t\t\tthis.isViewportWrapping === other.isViewportWrapping\n\t\t\t&& this.wrappingColumn === other.wrappingColumn\n\t\t\t&& this.wrappingIndent === other.wrappingIndent\n\t\t\t&& this.wordWrapBreakBeforeCharacters === other.wordWrapBreakBeforeCharacters\n\t\t\t&& this.wordWrapBreakAfterCharacters === other.wordWrapBreakAfterCharacters\n\t\t\t&& this.wordWrapBreakObtrusiveCharacters === other.wordWrapBreakObtrusiveCharacters\n\t\t);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic clone(): EditorWrappingInfo {\n\t\treturn new EditorWrappingInfo(this);\n\t}\n}\n\nexport class InternalEditorViewOptions {\n\t_internalEditorViewOptionsBrand: void;\n\n\ttheme:string;\n\tcanUseTranslate3d:boolean;\n\texperimentalScreenReader: boolean;\n\trulers: number[];\n\tariaLabel: string;\n\tlineNumbers:any;\n\tselectOnLineNumbers:boolean;\n\tglyphMargin:boolean;\n\trevealHorizontalRightPadding:number;\n\troundedSelection:boolean;\n\toverviewRulerLanes:number;\n\tcursorBlinking:string;\n\tcursorStyle:TextEditorCursorStyle;\n\thideCursorInOverviewRuler:boolean;\n\tscrollBeyondLastLine:boolean;\n\teditorClassName: string;\n\tstopRenderingLineAfter: number;\n\trenderWhitespace: boolean;\n\tindentGuides: boolean;\n\tscrollbar:InternalEditorScrollbarOptions;\n\n\t/**\n\t * @internal\n\t */\n\tconstructor(source:{\n\t\ttheme:string;\n\t\tcanUseTranslate3d:boolean;\n\t\texperimentalScreenReader: boolean;\n\t\trulers: number[];\n\t\tariaLabel: string;\n\t\tlineNumbers:any;\n\t\tselectOnLineNumbers:boolean;\n\t\tglyphMargin:boolean;\n\t\trevealHorizontalRightPadding:number;\n\t\troundedSelection:boolean;\n\t\toverviewRulerLanes:number;\n\t\tcursorBlinking:string;\n\t\tcursorStyle:TextEditorCursorStyle;\n\t\thideCursorInOverviewRuler:boolean;\n\t\tscrollBeyondLastLine:boolean;\n\t\teditorClassName: string;\n\t\tstopRenderingLineAfter: number;\n\t\trenderWhitespace: boolean;\n\t\tindentGuides: boolean;\n\t\tscrollbar:InternalEditorScrollbarOptions;\n\t}) {\n\t\tthis.theme = String(source.theme);\n\t\tthis.canUseTranslate3d = Boolean(source.canUseTranslate3d);\n\t\tthis.experimentalScreenReader = Boolean(source.experimentalScreenReader);\n\t\tthis.rulers = InternalEditorViewOptions._toSortedIntegerArray(source.rulers);\n\t\tthis.ariaLabel = String(source.ariaLabel);\n\t\tthis.lineNumbers = source.lineNumbers;\n\t\tthis.selectOnLineNumbers = Boolean(source.selectOnLineNumbers);\n\t\tthis.glyphMargin = Boolean(source.glyphMargin);\n\t\tthis.revealHorizontalRightPadding = source.revealHorizontalRightPadding|0;\n\t\tthis.roundedSelection = Boolean(source.roundedSelection);\n\t\tthis.overviewRulerLanes = source.overviewRulerLanes|0;\n\t\tthis.cursorBlinking = String(source.cursorBlinking);\n\t\tthis.cursorStyle = source.cursorStyle|0;\n\t\tthis.hideCursorInOverviewRuler = Boolean(source.hideCursorInOverviewRuler);\n\t\tthis.scrollBeyondLastLine = Boolean(source.scrollBeyondLastLine);\n\t\tthis.editorClassName = String(source.editorClassName);\n\t\tthis.stopRenderingLineAfter = source.stopRenderingLineAfter|0;\n\t\tthis.renderWhitespace = Boolean(source.renderWhitespace);\n\t\tthis.indentGuides = Boolean(source.indentGuides);\n\t\tthis.scrollbar = source.scrollbar.clone();\n\t}\n\n\tprivate static _toSortedIntegerArray(source:any): number[] {\n\t\tif (!Array.isArray(source)) {\n\t\t\treturn [];\n\t\t}\n\t\tlet arrSource = <any[]>source;\n\t\tlet result = arrSource.map(el => {\n\t\t\tlet r = parseInt(el, 10);\n\t\t\tif (isNaN(r)) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\treturn r;\n\t\t});\n\t\tresult.sort();\n\t\treturn result;\n\t}\n\n\tprivate static _numberArraysEqual(a:number[], b:number[]): boolean {\n\t\tif (a.length !== b.length) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (let i = 0; i < a.length; i++) {\n\t\t\tif (a[i] !== b[i]) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic equals(other:InternalEditorViewOptions): boolean {\n\t\treturn (\n\t\t\tthis.theme === other.theme\n\t\t\t&& this.canUseTranslate3d === other.canUseTranslate3d\n\t\t\t&& this.experimentalScreenReader === other.experimentalScreenReader\n\t\t\t&& InternalEditorViewOptions._numberArraysEqual(this.rulers, other.rulers)\n\t\t\t&& this.ariaLabel === other.ariaLabel\n\t\t\t&& this.lineNumbers === other.lineNumbers\n\t\t\t&& this.selectOnLineNumbers === other.selectOnLineNumbers\n\t\t\t&& this.glyphMargin === other.glyphMargin\n\t\t\t&& this.revealHorizontalRightPadding === other.revealHorizontalRightPadding\n\t\t\t&& this.roundedSelection === other.roundedSelection\n\t\t\t&& this.overviewRulerLanes === other.overviewRulerLanes\n\t\t\t&& this.cursorBlinking === other.cursorBlinking\n\t\t\t&& this.cursorStyle === other.cursorStyle\n\t\t\t&& this.hideCursorInOverviewRuler === other.hideCursorInOverviewRuler\n\t\t\t&& this.scrollBeyondLastLine === other.scrollBeyondLastLine\n\t\t\t&& this.editorClassName === other.editorClassName\n\t\t\t&& this.stopRenderingLineAfter === other.stopRenderingLineAfter\n\t\t\t&& this.renderWhitespace === other.renderWhitespace\n\t\t\t&& this.indentGuides === other.indentGuides\n\t\t\t&& this.scrollbar.equals(other.scrollbar)\n\t\t);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic createChangeEvent(newOpts:InternalEditorViewOptions): IViewConfigurationChangedEvent {\n\t\treturn {\n\t\t\ttheme: this.theme !== newOpts.theme,\n\t\t\tcanUseTranslate3d: this.canUseTranslate3d !== newOpts.canUseTranslate3d,\n\t\t\texperimentalScreenReader: this.experimentalScreenReader !== newOpts.experimentalScreenReader,\n\t\t\trulers: (!InternalEditorViewOptions._numberArraysEqual(this.rulers, newOpts.rulers)),\n\t\t\tariaLabel: this.ariaLabel !== newOpts.ariaLabel,\n\t\t\tlineNumbers: this.lineNumbers !== newOpts.lineNumbers,\n\t\t\tselectOnLineNumbers: this.selectOnLineNumbers !== newOpts.selectOnLineNumbers,\n\t\t\tglyphMargin: this.glyphMargin !== newOpts.glyphMargin,\n\t\t\trevealHorizontalRightPadding: this.revealHorizontalRightPadding !== newOpts.revealHorizontalRightPadding,\n\t\t\troundedSelection: this.roundedSelection !== newOpts.roundedSelection,\n\t\t\toverviewRulerLanes: this.overviewRulerLanes !== newOpts.overviewRulerLanes,\n\t\t\tcursorBlinking: this.cursorBlinking !== newOpts.cursorBlinking,\n\t\t\tcursorStyle: this.cursorStyle !== newOpts.cursorStyle,\n\t\t\thideCursorInOverviewRuler: this.hideCursorInOverviewRuler !== newOpts.hideCursorInOverviewRuler,\n\t\t\tscrollBeyondLastLine: this.scrollBeyondLastLine !== newOpts.scrollBeyondLastLine,\n\t\t\teditorClassName: this.editorClassName !== newOpts.editorClassName,\n\t\t\tstopRenderingLineAfter: this.stopRenderingLineAfter !== newOpts.stopRenderingLineAfter,\n\t\t\trenderWhitespace: this.renderWhitespace !== newOpts.renderWhitespace,\n\t\t\tindentGuides: this.indentGuides !== newOpts.indentGuides,\n\t\t\tscrollbar: (!this.scrollbar.equals(newOpts.scrollbar)),\n\t\t};\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic clone(): InternalEditorViewOptions {\n\t\treturn new InternalEditorViewOptions(this);\n\t}\n}\n\nexport interface IViewConfigurationChangedEvent {\n\ttheme: boolean;\n\tcanUseTranslate3d: boolean;\n\texperimentalScreenReader: boolean;\n\trulers: boolean;\n\tariaLabel:  boolean;\n\tlineNumbers: boolean;\n\tselectOnLineNumbers: boolean;\n\tglyphMargin: boolean;\n\trevealHorizontalRightPadding: boolean;\n\troundedSelection: boolean;\n\toverviewRulerLanes: boolean;\n\tcursorBlinking: boolean;\n\tcursorStyle: boolean;\n\thideCursorInOverviewRuler: boolean;\n\tscrollBeyondLastLine: boolean;\n\teditorClassName:  boolean;\n\tstopRenderingLineAfter:  boolean;\n\trenderWhitespace:  boolean;\n\tindentGuides:  boolean;\n\tscrollbar: boolean;\n}\n\nexport class EditorContribOptions {\n\tselectionClipboard: boolean;\n\thover:boolean;\n\tcontextmenu:boolean;\n\tquickSuggestions:boolean;\n\tquickSuggestionsDelay:number;\n\ticonsInSuggestions:boolean;\n\tformatOnType:boolean;\n\tsuggestOnTriggerCharacters: boolean;\n\tacceptSuggestionOnEnter: boolean;\n\tselectionHighlight:boolean;\n\toutlineMarkers: boolean;\n\treferenceInfos: boolean;\n\tfolding: boolean;\n\n\t/**\n\t * @internal\n\t */\n\tconstructor(source:{\n\t\tselectionClipboard: boolean;\n\t\thover:boolean;\n\t\tcontextmenu:boolean;\n\t\tquickSuggestions:boolean;\n\t\tquickSuggestionsDelay:number;\n\t\ticonsInSuggestions:boolean;\n\t\tformatOnType:boolean;\n\t\tsuggestOnTriggerCharacters: boolean;\n\t\tacceptSuggestionOnEnter: boolean;\n\t\tselectionHighlight:boolean;\n\t\toutlineMarkers: boolean;\n\t\treferenceInfos: boolean;\n\t\tfolding: boolean;\n\t}) {\n\t\tthis.selectionClipboard = Boolean(source.selectionClipboard);\n\t\tthis.hover = Boolean(source.hover);\n\t\tthis.contextmenu = Boolean(source.contextmenu);\n\t\tthis.quickSuggestions = Boolean(source.quickSuggestions);\n\t\tthis.quickSuggestionsDelay = source.quickSuggestionsDelay|0;\n\t\tthis.iconsInSuggestions = Boolean(source.iconsInSuggestions);\n\t\tthis.formatOnType = Boolean(source.formatOnType);\n\t\tthis.suggestOnTriggerCharacters = Boolean(source.suggestOnTriggerCharacters);\n\t\tthis.acceptSuggestionOnEnter = Boolean(source.acceptSuggestionOnEnter);\n\t\tthis.selectionHighlight = Boolean(source.selectionHighlight);\n\t\tthis.outlineMarkers = Boolean(source.outlineMarkers);\n\t\tthis.referenceInfos = Boolean(source.referenceInfos);\n\t\tthis.folding = Boolean(source.folding);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic equals(other: EditorContribOptions): boolean {\n\t\treturn (\n\t\t\tthis.selectionClipboard === other.selectionClipboard\n\t\t\t&& this.hover === other.hover\n\t\t\t&& this.contextmenu === other.contextmenu\n\t\t\t&& this.quickSuggestions === other.quickSuggestions\n\t\t\t&& this.quickSuggestionsDelay === other.quickSuggestionsDelay\n\t\t\t&& this.iconsInSuggestions === other.iconsInSuggestions\n\t\t\t&& this.formatOnType === other.formatOnType\n\t\t\t&& this.suggestOnTriggerCharacters === other.suggestOnTriggerCharacters\n\t\t\t&& this.acceptSuggestionOnEnter === other.acceptSuggestionOnEnter\n\t\t\t&& this.selectionHighlight === other.selectionHighlight\n\t\t\t&& this.outlineMarkers === other.outlineMarkers\n\t\t\t&& this.referenceInfos === other.referenceInfos\n\t\t\t&& this.folding === other.folding\n\t\t);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic clone(): EditorContribOptions {\n\t\treturn new EditorContribOptions(this);\n\t}\n}\n\n/**\n * Internal configuration options (transformed or computed) for the editor.\n */\nexport class InternalEditorOptions {\n\t_internalEditorOptionsBrand: void;\n\n\tlineHeight:number; // todo: move to fontInfo\n\n\treadOnly:boolean;\n\t// ---- cursor options\n\twordSeparators: string;\n\tautoClosingBrackets:boolean;\n\tuseTabStops: boolean;\n\ttabFocusMode:boolean;\n\t// ---- grouped options\n\tlayoutInfo: EditorLayoutInfo;\n\tfontInfo: FontInfo;\n\tviewInfo: InternalEditorViewOptions;\n\twrappingInfo: EditorWrappingInfo;\n\tcontribInfo: EditorContribOptions;\n\n\t/**\n\t * @internal\n\t */\n\tconstructor(source: {\n\t\tlineHeight:number;\n\t\treadOnly:boolean;\n\t\twordSeparators: string;\n\t\tautoClosingBrackets:boolean;\n\t\tuseTabStops: boolean;\n\t\ttabFocusMode:boolean;\n\t\tlayoutInfo: EditorLayoutInfo;\n\t\tfontInfo: FontInfo;\n\t\tviewInfo: InternalEditorViewOptions;\n\t\twrappingInfo: EditorWrappingInfo;\n\t\tcontribInfo: EditorContribOptions;\n\t}) {\n\t\tthis.lineHeight = source.lineHeight|0;\n\t\tthis.readOnly = Boolean(source.readOnly);\n\t\tthis.wordSeparators = String(source.wordSeparators);\n\t\tthis.autoClosingBrackets = Boolean(source.autoClosingBrackets);\n\t\tthis.useTabStops = Boolean(source.useTabStops);\n\t\tthis.tabFocusMode = Boolean(source.tabFocusMode);\n\t\tthis.layoutInfo = source.layoutInfo.clone();\n\t\tthis.fontInfo = source.fontInfo.clone();\n\t\tthis.viewInfo = source.viewInfo.clone();\n\t\tthis.wrappingInfo = source.wrappingInfo.clone();\n\t\tthis.contribInfo = source.contribInfo.clone();\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic equals(other:InternalEditorOptions): boolean {\n\t\treturn (\n\t\t\tthis.lineHeight === other.lineHeight\n\t\t\t&& this.readOnly === other.readOnly\n\t\t\t&& this.wordSeparators === other.wordSeparators\n\t\t\t&& this.autoClosingBrackets === other.autoClosingBrackets\n\t\t\t&& this.useTabStops === other.useTabStops\n\t\t\t&& this.tabFocusMode === other.tabFocusMode\n\t\t\t&& this.layoutInfo.equals(other.layoutInfo)\n\t\t\t&& this.fontInfo.equals(other.fontInfo)\n\t\t\t&& this.viewInfo.equals(other.viewInfo)\n\t\t\t&& this.wrappingInfo.equals(other.wrappingInfo)\n\t\t\t&& this.contribInfo.equals(other.contribInfo)\n\t\t);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic createChangeEvent(newOpts:InternalEditorOptions): IConfigurationChangedEvent {\n\t\treturn {\n\t\t\tlineHeight: (this.lineHeight !== newOpts.lineHeight),\n\t\t\treadOnly: (this.readOnly !== newOpts.readOnly),\n\t\t\twordSeparators: (this.wordSeparators !== newOpts.wordSeparators),\n\t\t\tautoClosingBrackets: (this.autoClosingBrackets !== newOpts.autoClosingBrackets),\n\t\t\tuseTabStops: (this.useTabStops !== newOpts.useTabStops),\n\t\t\ttabFocusMode: (this.tabFocusMode !== newOpts.tabFocusMode),\n\t\t\tlayoutInfo: (!this.layoutInfo.equals(newOpts.layoutInfo)),\n\t\t\tfontInfo: (!this.fontInfo.equals(newOpts.fontInfo)),\n\t\t\tviewInfo: this.viewInfo.createChangeEvent(newOpts.viewInfo),\n\t\t\twrappingInfo: (!this.wrappingInfo.equals(newOpts.wrappingInfo)),\n\t\t\tcontribInfo: (!this.contribInfo.equals(newOpts.contribInfo)),\n\t\t};\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic clone(): InternalEditorOptions {\n\t\treturn new InternalEditorOptions(this);\n\t}\n}\n\n/**\n * An event describing that the configuration of the editor has changed.\n */\nexport interface IConfigurationChangedEvent {\n\tlineHeight: boolean;\n\treadOnly: boolean;\n\twordSeparators: boolean;\n\tautoClosingBrackets: boolean;\n\tuseTabStops: boolean;\n\ttabFocusMode: boolean;\n\tlayoutInfo: boolean;\n\tfontInfo: boolean;\n\tviewInfo: IViewConfigurationChangedEvent;\n\twrappingInfo: boolean;\n\tcontribInfo: boolean;\n}\n\n/**\n * An event describing that one or more supports of a mode have changed.\n */\nexport interface IModeSupportChangedEvent {\n\ttokenizationSupport:boolean;\n\trichEditSupport: boolean;\n}\n\n/**\n * Vertical Lane in the overview ruler of the editor.\n */\nexport enum OverviewRulerLane {\n\tLeft = 1,\n\tCenter = 2,\n\tRight = 4,\n\tFull = 7\n}\n\n/**\n * Options for rendering a model decoration in the overview ruler.\n */\nexport interface IModelDecorationOverviewRulerOptions {\n\t/**\n\t * CSS color to render in the overview ruler.\n\t * e.g.: rgba(100, 100, 100, 0.5)\n\t */\n\tcolor: string;\n\t/**\n\t * CSS color to render in the overview ruler.\n\t * e.g.: rgba(100, 100, 100, 0.5)\n\t */\n\tdarkColor: string;\n\t/**\n\t * The position in the overview ruler.\n\t */\n\tposition: OverviewRulerLane;\n}\n\n/**\n * Options for a model decoration.\n */\nexport interface IModelDecorationOptions {\n\t/**\n\t * Customize the growing behaviour of the decoration when typing at the edges of the decoration.\n\t * Defaults to TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges\n\t */\n\tstickiness?:TrackedRangeStickiness;\n\t/**\n\t * CSS class name describing the decoration.\n\t */\n\tclassName?:string;\n\t/**\n\t * Message to be rendered when hovering over the decoration.\n\t */\n\thoverMessage?:string;\n\t/**\n\t * Array of IHTMLContentElements to render as the decoration message.\n\t */\n\thtmlMessage?:IHTMLContentElement[];\n\t/**\n\t * Should the decoration expand to encompass a whole line.\n\t */\n\tisWholeLine?:boolean;\n\t/**\n\t * @deprecated : Use `overviewRuler` instead\n\t */\n\tshowInOverviewRuler?:string;\n\t/**\n\t * If set, render this decoration in the overview ruler.\n\t */\n\toverviewRuler?:IModelDecorationOverviewRulerOptions;\n\t/**\n\t * If set, the decoration will be rendered in the glyph margin with this CSS class name.\n\t */\n\tglyphMarginClassName?:string;\n\t/**\n\t * If set, the decoration will be rendered in the lines decorations with this CSS class name.\n\t */\n\tlinesDecorationsClassName?:string;\n\t/**\n\t * If set, the decoration will be rendered inline with the text with this CSS class name.\n\t * Please use this only for CSS rules that must impact the text. For example, use `className`\n\t * to have a background color decoration.\n\t */\n\tinlineClassName?:string;\n}\n\n/**\n * New model decorations.\n */\nexport interface IModelDeltaDecoration {\n\t/**\n\t * Range that this decoration covers.\n\t */\n\trange: IRange;\n\t/**\n\t * Options associated with this decoration.\n\t */\n\toptions: IModelDecorationOptions;\n}\n\n/**\n * A tracked range in the model.\n * @internal\n */\nexport interface IModelTrackedRange {\n\t/**\n\t * Identifier for a tracked range\n\t */\n\tid: string;\n\t/**\n\t * Range that this tracked range covers\n\t */\n\trange: Range;\n}\n\n/**\n * A decoration in the model.\n */\nexport interface IModelDecoration {\n\t/**\n\t * Identifier for a decoration.\n\t */\n\tid: string;\n\t/**\n\t * Identifier for a decoration's owener.\n\t */\n\townerId: number;\n\t/**\n\t * Range that this decoration covers.\n\t */\n\trange: Range;\n\t/**\n\t * Options associated with this decoration.\n\t */\n\toptions: IModelDecorationOptions;\n}\n\n/**\n * An accessor that can add, change or remove model decorations.\n * @internal\n */\nexport interface IModelDecorationsChangeAccessor {\n\t/**\n\t * Add a new decoration.\n\t * @param range Range that this decoration covers.\n\t * @param options Options associated with this decoration.\n\t * @return An unique identifier associated with this decoration.\n\t */\n\taddDecoration(range:IRange, options:IModelDecorationOptions): string;\n\t/**\n\t * Change the range that an existing decoration covers.\n\t * @param id The unique identifier associated with the decoration.\n\t * @param newRange The new range that this decoration covers.\n\t */\n\tchangeDecoration(id:string, newRange:IRange): void;\n\t/**\n\t * Change the options associated with an existing decoration.\n\t * @param id The unique identifier associated with the decoration.\n\t * @param newOptions The new options associated with this decoration.\n\t */\n\tchangeDecorationOptions(id: string, newOptions:IModelDecorationOptions): void;\n\t/**\n\t * Remove an existing decoration.\n\t * @param id The unique identifier associated with the decoration.\n\t */\n\tremoveDecoration(id:string): void;\n\t/**\n\t * Perform a minimum ammount of operations, in order to transform the decorations\n\t * identified by `oldDecorations` to the decorations described by `newDecorations`\n\t * and returns the new identifiers associated with the resulting decorations.\n\t *\n\t * @param oldDecorations Array containing previous decorations identifiers.\n\t * @param newDecorations Array describing what decorations should result after the call.\n\t * @return An array containing the new decorations identifiers.\n\t */\n\tdeltaDecorations(oldDecorations:string[], newDecorations:IModelDeltaDecoration[]): string[];\n}\n\n/**\n * Word inside a model.\n */\nexport interface IWordAtPosition {\n\t/**\n\t * The word.\n\t */\n\tword: string;\n\t/**\n\t * The column where the word starts.\n\t */\n\tstartColumn: number;\n\t/**\n\t * The column where the word ends.\n\t */\n\tendColumn: number;\n}\n\n/**\n * Range of a word inside a model.\n * @internal\n */\nexport interface IWordRange {\n\t/**\n\t * The index where the word starts.\n\t */\n\tstart:number;\n\t/**\n\t * The index where the word ends.\n\t */\n\tend:number;\n}\n\n/**\n * @internal\n */\nexport interface ITokenInfo {\n\ttoken: IToken;\n\tlineNumber: number;\n\tstartColumn: number;\n\tendColumn: number;\n}\n\n/**\n * @internal\n */\nexport interface ITokenIterator {\n\thasNext(): boolean;\n\tnext(): ITokenInfo;\n\thasPrev(): boolean;\n\tprev(): ITokenInfo;\n}\n\n/**\n * End of line character preference.\n */\nexport enum EndOfLinePreference {\n\t/**\n\t * Use the end of line character identified in the text buffer.\n\t */\n\tTextDefined = 0,\n\t/**\n\t * Use line feed (\\n) as the end of line character.\n\t */\n\tLF = 1,\n\t/**\n\t * Use carriage return and line feed (\\r\\n) as the end of line character.\n\t */\n\tCRLF = 2\n}\n\n/**\n * The default end of line to use when instantiating models.\n */\nexport enum DefaultEndOfLine {\n\t/**\n\t * Use line feed (\\n) as the end of line character.\n\t */\n\tLF = 1,\n\t/**\n\t * Use carriage return and line feed (\\r\\n) as the end of line character.\n\t */\n\tCRLF = 2\n}\n\n/**\n * End of line character preference.\n */\nexport enum EndOfLineSequence {\n\t/**\n\t * Use line feed (\\n) as the end of line character.\n\t */\n\tLF = 0,\n\t/**\n\t * Use carriage return and line feed (\\r\\n) as the end of line character.\n\t */\n\tCRLF = 1\n}\n\n/**\n * A read-only line marker in the model.\n * @internal\n */\nexport interface IReadOnlyLineMarker {\n\tid: string;\n\tcolumn: number;\n}\n\n/**\n * And identifier for a single edit operation.\n */\nexport interface ISingleEditOperationIdentifier {\n\t/**\n\t * Identifier major\n\t */\n\tmajor:number;\n\t/**\n\t * Identifier minor\n\t */\n\tminor:number;\n}\n\n/**\n * A builder and helper for edit operations for a command.\n */\nexport interface IEditOperationBuilder {\n\t/**\n\t * Add a new edit operation (a replace operation).\n\t * @param range The range to replace (delete). May be empty to represent a simple insert.\n\t * @param text The text to replace with. May be null to represent a simple delete.\n\t */\n\taddEditOperation(range:Range, text:string): void;\n\n\t/**\n\t * Track `selection` when applying edit operations.\n\t * A best effort will be made to not grow/expand the selection.\n\t * An empty selection will clamp to a nearby character.\n\t * @param selection The selection to track.\n\t * @param trackPreviousOnEmpty If set, and the selection is empty, indicates whether the selection\n\t *           should clamp to the previous or the next character.\n\t * @return A unique identifer.\n\t */\n\ttrackSelection(selection:Selection, trackPreviousOnEmpty?:boolean): string;\n}\n\n/**\n * A helper for computing cursor state after a command.\n */\nexport interface ICursorStateComputerData {\n\t/**\n\t * Get the inverse edit operations of the added edit operations.\n\t */\n\tgetInverseEditOperations(): IIdentifiedSingleEditOperation[];\n\t/**\n\t * Get a previously tracked selection.\n\t * @param id The unique identifier returned by `trackSelection`.\n\t * @return The selection.\n\t */\n\tgetTrackedSelection(id:string): Selection;\n}\n\n/**\n * A command that modifies text / cursor state on a model.\n */\nexport interface ICommand {\n\t/**\n\t * Get the edit operations needed to execute this command.\n\t * @param model The model the command will execute on.\n\t * @param builder A helper to collect the needed edit operations and to track selections.\n\t */\n\tgetEditOperations(model:ITokenizedModel, builder:IEditOperationBuilder): void;\n\t/**\n\t * Compute the cursor state after the edit operations were applied.\n\t * @param model The model the commad has executed on.\n\t * @param helper A helper to get inverse edit operations and to get previously tracked selections.\n\t * @return The cursor state after the command executed.\n\t */\n\tcomputeCursorState(model:ITokenizedModel, helper:ICursorStateComputerData): Selection;\n}\n\n/**\n * A single edit operation, that acts as a simple replace.\n * i.e. Replace text at `range` with `text` in model.\n */\nexport interface ISingleEditOperation {\n\t/**\n\t * The range to replace. This can be empty to emulate a simple insert.\n\t */\n\trange: IRange;\n\t/**\n\t * The text to replace with. This can be null to emulate a simple delete.\n\t */\n\ttext: string;\n\t/**\n\t * This indicates that this operation has \"insert\" semantics.\n\t * i.e. forceMoveMarkers = true => if `range` is collapsed, all markers at the position will be moved.\n\t */\n\tforceMoveMarkers?: boolean;\n}\n\n/**\n * A single edit operation, that has an identifier.\n */\nexport interface IIdentifiedSingleEditOperation {\n\t/**\n\t * An identifier associated with this single edit operation.\n\t */\n\tidentifier: ISingleEditOperationIdentifier;\n\t/**\n\t * The range to replace. This can be empty to emulate a simple insert.\n\t */\n\trange: Range;\n\t/**\n\t * The text to replace with. This can be null to emulate a simple delete.\n\t */\n\ttext: string;\n\t/**\n\t * This indicates that this operation has \"insert\" semantics.\n\t * i.e. forceMoveMarkers = true => if `range` is collapsed, all markers at the position will be moved.\n\t */\n\tforceMoveMarkers: boolean;\n\t/**\n\t * This indicates that this operation is inserting automatic whitespace\n\t * that can be removed on next model edit operation if `config.trimAutoWhitespace` is true.\n\t */\n\tisAutoWhitespaceEdit?: boolean;\n}\n\n/**\n * A callback that can compute the cursor state after applying a series of edit operations.\n */\nexport interface ICursorStateComputer {\n\t/**\n\t * A callback that can compute the resulting cursors state after some edit operations have been executed.\n\t */\n\t(inverseEditOperations:IIdentifiedSingleEditOperation[]): Selection[];\n}\n\n/**\n * A list of tokens on a line.\n * @internal\n */\nexport interface ILineTokens {\n\tgetTokenCount(): number;\n\tgetTokenStartIndex(tokenIndex:number): number;\n\tgetTokenType(tokenIndex:number): string;\n\tgetTokenEndIndex(tokenIndex:number, textLength:number): number;\n\n\t/**\n\t * Check if tokens have changed. This is called by the view to validate rendered lines\n\t * and decide which lines need re-rendering.\n\t */\n\tequals(other:ILineTokens): boolean;\n\n\t/**\n\t * Find the token containing offset `offset`.\n\t *    For example, with the following tokens [0, 5), [5, 9), [9, infinity)\n\t *    Searching for 0, 1, 2, 3 or 4 will return 0.\n\t *    Searching for 5, 6, 7 or 8 will return 1.\n\t *    Searching for 9, 10, 11, ... will return 2.\n\t * @param offset The search offset\n\t * @return The index of the token containing the offset.\n\t */\n\tfindIndexOfOffset(offset:number): number;\n\n\t/**\n\t * @internal\n\t */\n\tsliceAndInflate(startOffset:number, endOffset:number, deltaStartIndex:number): ViewLineToken[];\n\n\t/**\n\t * @internal\n\t */\n\tinflate(): ViewLineToken[];\n}\n\nexport interface ITextModelResolvedOptions {\n\ttabSize: number;\n\tinsertSpaces: boolean;\n\tdefaultEOL: DefaultEndOfLine;\n\ttrimAutoWhitespace: boolean;\n}\n\nexport interface ITextModelCreationOptions {\n\ttabSize: number;\n\tinsertSpaces: boolean;\n\tdetectIndentation: boolean;\n\ttrimAutoWhitespace: boolean;\n\tdefaultEOL: DefaultEndOfLine;\n}\n\nexport interface ITextModelUpdateOptions {\n\ttabSize?: number;\n\tinsertSpaces?: boolean;\n\ttrimAutoWhitespace?: boolean;\n}\n\nexport interface IModelOptionsChangedEvent {\n\ttabSize: boolean;\n\tinsertSpaces: boolean;\n\ttrimAutoWhitespace: boolean;\n}\n\n/**\n * A textual read-only model.\n */\nexport interface ITextModel {\n\n\tgetOptions(): ITextModelResolvedOptions;\n\n\t/**\n\t * Get the current version id of the model.\n\t * Anytime a change happens to the model (even undo/redo),\n\t * the version id is incremented.\n\t */\n\tgetVersionId(): number;\n\n\t/**\n\t * Get the alternative version id of the model.\n\t * This alternative version id is not always incremented,\n\t * it will return the same values in the case of undo-redo.\n\t */\n\tgetAlternativeVersionId(): number;\n\n\t/**\n\t * Replace the entire text buffer value contained in this model.\n\t */\n\tsetValue(newValue:string): void;\n\n\t/**\n\t * Replace the entire text buffer value contained in this model.\n\t */\n\tsetValueFromRawText(newValue:IRawText): void;\n\n\t/**\n\t * Get the text stored in this model.\n\t * @param eol The end of line character preference. Defaults to `EndOfLinePreference.TextDefined`.\n\t * @param preserverBOM Preserve a BOM character if it was detected when the model was constructed.\n\t * @return The text.\n\t */\n\tgetValue(eol?:EndOfLinePreference, preserveBOM?:boolean): string;\n\n\tgetValueLength(eol?:EndOfLinePreference, preserveBOM?:boolean): number;\n\n\ttoRawText(): IRawText;\n\n\tequals(other:IRawText): boolean;\n\n\t/**\n\t * Get the text in a certain range.\n\t * @param range The range describing what text to get.\n\t * @param eol The end of line character preference. This will only be used for multiline ranges. Defaults to `EndOfLinePreference.TextDefined`.\n\t * @return The text.\n\t */\n\tgetValueInRange(range:IRange, eol?:EndOfLinePreference): string;\n\n\t/**\n\t * Get the length of text in a certain range.\n\t * @param range The range describing what text length to get.\n\t * @return The text length.\n\t */\n\tgetValueLengthInRange(range:IRange): number;\n\n\t/**\n\t * Splits characters in two buckets. First bucket (A) is of characters that\n\t * sit in lines with length < `LONG_LINE_BOUNDARY`. Second bucket (B) is of\n\t * characters that sit in lines with length >= `LONG_LINE_BOUNDARY`.\n\t * If count(B) > count(A) return true. Returns false otherwise.\n\t * @internal\n\t */\n\tisDominatedByLongLines(): boolean;\n\n\t/**\n\t * Get the number of lines in the model.\n\t */\n\tgetLineCount(): number;\n\n\t/**\n\t * Get the text for a certain line.\n\t */\n\tgetLineContent(lineNumber:number): string;\n\n\t/**\n\t * Get the text for all lines.\n\t */\n\tgetLinesContent(): string[];\n\n\t/**\n\t * Get the end of line character predominantly used in the text buffer.\n\t * @return EOL char sequence (e.g.: '\\n' or '\\r\\n').\n\t */\n\tgetEOL(): string;\n\n\tsetEOL(eol: EndOfLineSequence): void;\n\n\t/**\n\t * Get the minimum legal column for line at `lineNumber`\n\t */\n\tgetLineMinColumn(lineNumber:number): number;\n\n\t/**\n\t * Get the maximum legal column for line at `lineNumber`\n\t */\n\tgetLineMaxColumn(lineNumber:number): number;\n\n\t/**\n\t * Returns the column before the first non whitespace character for line at `lineNumber`.\n\t * Returns 0 if line is empty or contains only whitespace.\n\t */\n\tgetLineFirstNonWhitespaceColumn(lineNumber:number): number;\n\n\t/**\n\t * Returns the column after the last non whitespace character for line at `lineNumber`.\n\t * Returns 0 if line is empty or contains only whitespace.\n\t */\n\tgetLineLastNonWhitespaceColumn(lineNumber:number): number;\n\n\t/**\n\t * Create a valid position,\n\t */\n\tvalidatePosition(position:IPosition): Position;\n\n\t/**\n\t * Advances the given position by the given offest (negative offsets are also accepted)\n\t * and returns it as a new valid position.\n\t *\n\t * If the offset and position are such that their combination goes beyond the beginning or\n\t * end of the model, throws an exception.\n\t *\n\t * If the ofsset is such that the new position would be in the middle of a multi-byte\n\t * line terminator, throws an exception.\n\t */\n\tmodifyPosition(position: IPosition, offset: number): Position;\n\n\t/**\n\t * Create a valid range.\n\t */\n\tvalidateRange(range:IRange): Range;\n\n\t/**\n\t * Converts the position to a zero-based offset.\n\t *\n\t * The position will be [adjusted](#TextDocument.validatePosition).\n\t *\n\t * @param position A position.\n\t * @return A valid zero-based offset.\n\t */\n\tgetOffsetAt(position: IPosition): number;\n\n\t/**\n\t * Converts a zero-based offset to a position.\n\t *\n\t * @param offset A zero-based offset.\n\t * @return A valid [position](#Position).\n\t */\n\tgetPositionAt(offset: number): Position;\n\n\t/**\n\t * Get a range covering the entire model\n\t */\n\tgetFullModelRange(): Range;\n\n\t/**\n\t * Returns iff the model was disposed or not.\n\t */\n\tisDisposed(): boolean;\n\n\t/**\n\t * No mode supports allowed on this model because it is simply too large.\n\t * (even tokenization would cause too much memory pressure)\n\t * @internal\n\t */\n\tisTooLargeForHavingAMode(): boolean;\n\n\t/**\n\t * Only basic mode supports allowed on this model because it is simply too large.\n\t * (tokenization is allowed and other basic supports)\n\t * @internal\n\t */\n\tisTooLargeForHavingARichMode(): boolean;\n}\n\nexport interface IReadOnlyModel extends ITextModel {\n\t/**\n\t * Gets the resource associated with this editor model.\n\t */\n\turi: URI;\n\n\tgetModeId(): string;\n\n\t/**\n\t * Get the word under or besides `position`.\n\t * @param position The position to look for a word.\n\t * @param skipSyntaxTokens Ignore syntax tokens, as identified by the mode.\n\t * @return The word under or besides `position`. Might be null.\n\t */\n\tgetWordAtPosition(position:IPosition): IWordAtPosition;\n\n\t/**\n\t * Get the word under or besides `position` trimmed to `position`.column\n\t * @param position The position to look for a word.\n\t * @param skipSyntaxTokens Ignore syntax tokens, as identified by the mode.\n\t * @return The word under or besides `position`. Will never be null.\n\t */\n\tgetWordUntilPosition(position:IPosition): IWordAtPosition;\n}\n\n/**\n * @internal\n */\nexport interface IRichEditBracket {\n\tmodeId: string;\n\topen: string;\n\tclose: string;\n\tforwardRegex: RegExp;\n\treversedRegex: RegExp;\n}\n\n/**\n * @internal\n */\nexport interface IFoundBracket {\n\trange: Range;\n\topen: string;\n\tclose: string;\n\tisOpen: boolean;\n}\n\n/**\n * A model that is tokenized.\n */\nexport interface ITokenizedModel extends ITextModel {\n\n\t/**\n\t * Tokenize if necessary and get the tokens for the line `lineNumber`.\n\t * @param lineNumber The line number\n\t * @param inaccurateTokensAcceptable Are inaccurate tokens acceptable? Defaults to false\n\t * @internal\n\t */\n\tgetLineTokens(lineNumber:number, inaccurateTokensAcceptable?:boolean): ILineTokens;\n\n\t/**\n\t * Tokenize if necessary and get the tokenization result for the line `lineNumber`, as returned by the language mode.\n\t * @internal\n\t */\n\tgetLineContext(lineNumber:number): ILineContext;\n\n\t/**\n\t * @internal\n\t */\n\t_getLineModeTransitions(lineNumber:number): IModeTransition[];\n\n\t/**\n\t * Get the current language mode associated with the model.\n\t */\n\tgetMode(): IMode;\n\n\t/**\n\t * Set the current language mode associated with the model.\n\t */\n\tsetMode(newMode:IMode|TPromise<IMode>): void;\n\n\t/**\n\t * A mode can be currently pending loading if a promise is used when constructing a model or calling setMode().\n\t *\n\t * If there is no currently pending loading mode, then the result promise will complete immediately.\n\t * Otherwise, the result will complete once the currently pending loading mode is loaded.\n\t * @internal\n\t */\n\twhenModeIsReady(): TPromise<IMode>;\n\n\t/**\n\t * Returns the true (inner-most) language mode at a given position.\n\t * @internal\n\t */\n\tgetModeAtPosition(lineNumber:number, column:number): IMode;\n\n\t/**\n\t * Get the word under or besides `position`.\n\t * @param position The position to look for a word.\n\t * @param skipSyntaxTokens Ignore syntax tokens, as identified by the mode.\n\t * @return The word under or besides `position`. Might be null.\n\t */\n\tgetWordAtPosition(position:IPosition): IWordAtPosition;\n\n\t/**\n\t * Get the word under or besides `position` trimmed to `position`.column\n\t * @param position The position to look for a word.\n\t * @param skipSyntaxTokens Ignore syntax tokens, as identified by the mode.\n\t * @return The word under or besides `position`. Will never be null.\n\t */\n\tgetWordUntilPosition(position:IPosition): IWordAtPosition;\n\n\t/**\n\t * Returns an iterator that can be used to read\n\t * next and previous tokens from the provided position.\n\t * The iterator is made available through the callback\n\t * function and can't be used afterwards.\n\t * @internal\n\t */\n\ttokenIterator(position: IPosition, callback: (it: ITokenIterator) =>any): any;\n\n\t/**\n\t * Find the matching bracket of `request` up, counting brackets.\n\t * @param request The bracket we're searching for\n\t * @param position The position at which to start the search.\n\t * @return The range of the matching bracket, or null if the bracket match was not found.\n\t * @internal\n\t */\n\tfindMatchingBracketUp(bracket:string, position:IPosition): Range;\n\n\t// /**\n\t//  * Find the first bracket in the model before `position`.\n\t//  * @param position The position at which to start the search.\n\t//  * @return The info for the first bracket before `position`, or null if there are no more brackets before `positions`.\n\t//  */\n\t// findPrevBracket(position:IPosition): IFoundBracket;\n\n\t// /**\n\t//  * Find the first bracket in the model after `position`.\n\t//  * @param position The position at which to start the search.\n\t//  * @return The info for the first bracket after `position`, or null if there are no more brackets after `positions`.\n\t//  */\n\t// findNextBracket(position:IPosition): IFoundBracket;\n\n\t/**\n\t * Given a `position`, if the position is on top or near a bracket,\n\t * find the matching bracket of that bracket and return the ranges of both brackets.\n\t * @param position The position at which to look for a bracket.\n\t * @internal\n\t */\n\tmatchBracket(position:IPosition): [Range,Range];\n}\n\n/**\n * A model that can track markers.\n */\nexport interface ITextModelWithMarkers extends ITextModel {\n\t/**\n\t * @internal\n\t */\n\t_addMarker(lineNumber:number, column:number, stickToPreviousCharacter:boolean): string;\n\t/**\n\t * @internal\n\t */\n\t_changeMarker(id:string, newLineNumber:number, newColumn:number): void;\n\t/**\n\t * @internal\n\t */\n\t_changeMarkerStickiness(id:string, newStickToPreviousCharacter:boolean): void;\n\t/**\n\t * @internal\n\t */\n\t_getMarker(id:string): Position;\n\t/**\n\t * @internal\n\t */\n\t_removeMarker(id:string): void;\n\t/**\n\t * @internal\n\t */\n\t_getLineMarkers(lineNumber: number): IReadOnlyLineMarker[];\n}\n\n/**\n * A map of changed ranges used during the model internal processing\n * @internal\n */\nexport interface IChangedTrackedRanges {\n\t[key:string]:IRange;\n}\n\nexport enum TrackedRangeStickiness {\n\tAlwaysGrowsWhenTypingAtEdges = 0,\n\tNeverGrowsWhenTypingAtEdges = 1,\n\tGrowsOnlyWhenTypingBefore = 2,\n\tGrowsOnlyWhenTypingAfter = 3,\n}\n\n/**\n * A model that can track ranges.\n */\nexport interface ITextModelWithTrackedRanges extends ITextModel {\n\t/**\n\t * Start tracking a range (across edit operations).\n\t * @param range The range to start tracking.\n\t * @param stickiness The behaviour when typing at the edges of the range.\n\t * @return A unique identifier for the tracked range.\n\t * @internal\n\t */\n\taddTrackedRange(range:IRange, stickiness:TrackedRangeStickiness): string;\n\n\t/**\n\t * Change the range of a tracked range.\n\t * @param id The id of the tracked range, as returned by a `addTrackedRange` call.\n\t * @param newRange The new range of the tracked range.\n\t * @internal\n\t */\n\tchangeTrackedRange(id:string, newRange:IRange): void;\n\n\t/**\n\t * Change the stickiness (behaviour when typing at the edges of the range) for a tracked range.\n\t * @param id The id of the tracked range, as returned by a `addTrackedRange` call.\n\t * @param newStickiness The new behaviour when typing at the edges of the range.\n\t * @internal\n\t */\n\tchangeTrackedRangeStickiness(id:string, newStickiness:TrackedRangeStickiness): void;\n\n\t/**\n\t * Remove a tracked range.\n\t * @param id The id of the tracked range, as returned by a `addTrackedRaneg` call.\n\t * @internal\n\t */\n\tremoveTrackedRange(id:string): void;\n\n\t/**\n\t * Get the range of a tracked range.\n\t * @param id The id of the tracked range, as returned by a `addTrackedRaneg` call.\n\t * @internal\n\t */\n\tgetTrackedRange(id:string): Range;\n\n\t/**\n\t * Gets all the tracked ranges for the lines between `startLineNumber` and `endLineNumber` as an array.\n\t * @param startLineNumber The start line number\n\t * @param endLineNumber The end line number\n\t * @return An array with the tracked ranges\n\t * @internal\n\t */\n\tgetLinesTrackedRanges(startLineNumber:number, endLineNumber:number): IModelTrackedRange[];\n}\n\n/**\n * A model that can have decorations.\n */\nexport interface ITextModelWithDecorations {\n\t/**\n\t * Change the decorations. The callback will be called with a change accessor\n\t * that becomes invalid as soon as the callback finishes executing.\n\t * This allows for all events to be queued up until the change\n\t * is completed. Returns whatever the callback returns.\n\t * @param ownerId Identifies the editor id in which these decorations should appear. If no `ownerId` is provided, the decorations will appear in all editors that attach this model.\n\t * @internal\n\t */\n\tchangeDecorations(callback: (changeAccessor:IModelDecorationsChangeAccessor)=>any, ownerId?:number): any;\n\n\t/**\n\t * Perform a minimum ammount of operations, in order to transform the decorations\n\t * identified by `oldDecorations` to the decorations described by `newDecorations`\n\t * and returns the new identifiers associated with the resulting decorations.\n\t *\n\t * @param oldDecorations Array containing previous decorations identifiers.\n\t * @param newDecorations Array describing what decorations should result after the call.\n\t * @param ownerId Identifies the editor id in which these decorations should appear. If no `ownerId` is provided, the decorations will appear in all editors that attach this model.\n\t * @return An array containing the new decorations identifiers.\n\t */\n\tdeltaDecorations(oldDecorations:string[], newDecorations:IModelDeltaDecoration[], ownerId?:number): string[];\n\n\t/**\n\t * Remove all decorations that have been added with this specific ownerId.\n\t * @param ownerId The owner id to search for.\n\t * @internal\n\t */\n\tremoveAllDecorationsWithOwnerId(ownerId:number): void;\n\n\t/**\n\t * Get the options associated with a decoration.\n\t * @param id The decoration id.\n\t * @return The decoration options or null if the decoration was not found.\n\t */\n\tgetDecorationOptions(id:string): IModelDecorationOptions;\n\n\t/**\n\t * Get the range associated with a decoration.\n\t * @param id The decoration id.\n\t * @return The decoration range or null if the decoration was not found.\n\t */\n\tgetDecorationRange(id:string): Range;\n\n\t/**\n\t * Gets all the decorations for the line `lineNumber` as an array.\n\t * @param lineNumber The line number\n\t * @param ownerId If set, it will ignore decorations belonging to other owners.\n\t * @param filterOutValidation If set, it will ignore decorations specific to validation (i.e. warnings, errors).\n\t * @return An array with the decorations\n\t */\n\tgetLineDecorations(lineNumber:number, ownerId?:number, filterOutValidation?:boolean): IModelDecoration[];\n\n\t/**\n\t * Gets all the decorations for the lines between `startLineNumber` and `endLineNumber` as an array.\n\t * @param startLineNumber The start line number\n\t * @param endLineNumber The end line number\n\t * @param ownerId If set, it will ignore decorations belonging to other owners.\n\t * @param filterOutValidation If set, it will ignore decorations specific to validation (i.e. warnings, errors).\n\t * @return An array with the decorations\n\t */\n\tgetLinesDecorations(startLineNumber:number, endLineNumber:number, ownerId?:number, filterOutValidation?:boolean): IModelDecoration[];\n\n\t/**\n\t * Gets all the deocorations in a range as an array. Only `startLineNumber` and `endLineNumber` from `range` are used for filtering.\n\t * So for now it returns all the decorations on the same line as `range`.\n\t * @param range The range to search in\n\t * @param ownerId If set, it will ignore decorations belonging to other owners.\n\t * @param filterOutValidation If set, it will ignore decorations specific to validation (i.e. warnings, errors).\n\t * @return An array with the decorations\n\t */\n\tgetDecorationsInRange(range:IRange, ownerId?:number, filterOutValidation?:boolean): IModelDecoration[];\n\n\t/**\n\t * Gets all the decorations as an array.\n\t * @param ownerId If set, it will ignore decorations belonging to other owners.\n\t * @param filterOutValidation If set, it will ignore decorations specific to validation (i.e. warnings, errors).\n\t */\n\tgetAllDecorations(ownerId?:number, filterOutValidation?:boolean): IModelDecoration[];\n}\n\n/**\n * An editable text model.\n */\nexport interface IEditableTextModel extends ITextModelWithMarkers {\n\n\tnormalizeIndentation(str:string): string;\n\n\tgetOneIndent(): string;\n\n\tupdateOptions(newOpts:ITextModelUpdateOptions): void;\n\n\tdetectIndentation(defaultInsertSpaces:boolean, defaultTabSize:number): void;\n\n\t/**\n\t * Push a stack element onto the undo stack. This acts as an undo/redo point.\n\t * The idea is to use `pushEditOperations` to edit the model and then to\n\t * `pushStackElement` to create an undo/redo stop point.\n\t */\n\tpushStackElement(): void;\n\n\t/**\n\t * Push edit operations, basically editing the model. This is the preferred way\n\t * of editing the model. The edit operations will land on the undo stack.\n\t * @param beforeCursorState The cursor state before the edit operaions. This cursor state will be returned when `undo` or `redo` are invoked.\n\t * @param editOperations The edit operations.\n\t * @param cursorStateComputer A callback that can compute the resulting cursors state after the edit operations have been executed.\n\t * @return The cursor state returned by the `cursorStateComputer`.\n\t */\n\tpushEditOperations(beforeCursorState:Selection[], editOperations:IIdentifiedSingleEditOperation[], cursorStateComputer:ICursorStateComputer): Selection[];\n\n\t/**\n\t * Edit the model without adding the edits to the undo stack.\n\t * This can have dire consequences on the undo stack! See @pushEditOperations for the preferred way.\n\t * @param operations The edit operations.\n\t * @return The inverse edit operations, that, when applied, will bring the model back to the previous state.\n\t */\n\tapplyEdits(operations:IIdentifiedSingleEditOperation[]): IIdentifiedSingleEditOperation[];\n\n\t/**\n\t * Undo edit operations until the first previous stop point created by `pushStackElement`.\n\t * The inverse edit operations will be pushed on the redo stack.\n\t * @internal\n\t */\n\tundo(): Selection[];\n\n\t/**\n\t * Redo edit operations until the next stop point created by `pushStackElement`.\n\t * The inverse edit operations will be pushed on the undo stack.\n\t * @internal\n\t */\n\tredo(): Selection[];\n\n\t/**\n\t * Set an editable range on the model.\n\t * @internal\n\t */\n\tsetEditableRange(range:IRange): void;\n\n\t/**\n\t * Check if the model has an editable range.\n\t * @internal\n\t */\n\thasEditableRange(): boolean;\n\n\t/**\n\t * Get the editable range on the model.\n\t * @internal\n\t */\n\tgetEditableRange(): Range;\n}\n\n/**\n * A model.\n */\nexport interface IModel extends IReadOnlyModel, IEditableTextModel, ITextModelWithMarkers, ITokenizedModel, ITextModelWithTrackedRanges, ITextModelWithDecorations, IEditorModel {\n\n\tonDidChangeRawContent(listener: (e:IModelContentChangedEvent)=>void): IDisposable;\n\tonDidChangeContent(listener: (e:IModelContentChangedEvent2)=>void): IDisposable;\n\tonDidChangeModeSupport(listener: (e:IModeSupportChangedEvent)=>void): IDisposable;\n\tonDidChangeDecorations(listener: (e:IModelDecorationsChangedEvent)=>void): IDisposable;\n\tonDidChangeOptions(listener: (e:IModelOptionsChangedEvent)=>void): IDisposable;\n\tonDidChangeMode(listener: (e:IModelModeChangedEvent)=>void): IDisposable;\n\tonWillDispose(listener: ()=>void): IDisposable;\n\n\t/**\n\t * @internal\n\t */\n\taddBulkListener(listener:BulkListenerCallback):IDisposable;\n\n\t/**\n\t * A unique identifier associated with this model.\n\t */\n\tid: string;\n\n\t/**\n\t * Destroy this model. This will unbind the model from the mode\n\t * and make all necessary clean-up to release this object to the GC.\n\t * @internal\n\t */\n\tdestroy(): void;\n\n\t/**\n\t * Destroy this model. This will unbind the model from the mode\n\t * and make all necessary clean-up to release this object to the GC.\n\t */\n\tdispose(): void;\n\n\t/**\n\t * Search the model.\n\t * @param searchString The string used to search. If it is a regular expression, set `isRegex` to true.\n\t * @param searchOnlyEditableRange Limit the searching to only search inside the editable range of the model.\n\t * @param isRegex Used to indicate that `searchString` is a regular expression.\n\t * @param matchCase Force the matching to match lower/upper case exactly.\n\t * @param wholeWord Force the matching to match entire words only.\n\t * @param limitResultCount Limit the number of results\n\t * @return The ranges where the matches are. It is empty if not matches have been found.\n\t */\n\tfindMatches(searchString:string, searchOnlyEditableRange:boolean, isRegex:boolean, matchCase:boolean, wholeWord:boolean, limitResultCount?:number): Range[];\n\t/**\n\t * Search the model.\n\t * @param searchString The string used to search. If it is a regular expression, set `isRegex` to true.\n\t * @param searchScope Limit the searching to only search inside this range.\n\t * @param isRegex Used to indicate that `searchString` is a regular expression.\n\t * @param matchCase Force the matching to match lower/upper case exactly.\n\t * @param wholeWord Force the matching to match entire words only.\n\t * @param limitResultCount Limit the number of results\n\t * @return The ranges where the matches are. It is empty if no matches have been found.\n\t */\n\tfindMatches(searchString:string, searchScope:IRange, isRegex:boolean, matchCase:boolean, wholeWord:boolean, limitResultCount?:number): Range[];\n\t/**\n\t * Search the model for the next match. Loops to the beginning of the model if needed.\n\t * @param searchString The string used to search. If it is a regular expression, set `isRegex` to true.\n\t * @param searchStart Start the searching at the specified position.\n\t * @param isRegex Used to indicate that `searchString` is a regular expression.\n\t * @param matchCase Force the matching to match lower/upper case exactly.\n\t * @param wholeWord Force the matching to match entire words only.\n\t * @return The range where the next match is. It is null if no next match has been found.\n\t */\n\tfindNextMatch(searchString:string, searchStart:IPosition, isRegex:boolean, matchCase:boolean, wholeWord:boolean): Range;\n\t/**\n\t * Search the model for the previous match. Loops to the end of the model if needed.\n\t * @param searchString The string used to search. If it is a regular expression, set `isRegex` to true.\n\t * @param searchStart Start the searching at the specified position.\n\t * @param isRegex Used to indicate that `searchString` is a regular expression.\n\t * @param matchCase Force the matching to match lower/upper case exactly.\n\t * @param wholeWord Force the matching to match entire words only.\n\t * @return The range where the previous match is. It is null if no previous match has been found.\n\t */\n\tfindPreviousMatch(searchString:string, searchStart:IPosition, isRegex:boolean, matchCase:boolean, wholeWord:boolean): Range;\n\n\t/**\n\t * @internal\n\t */\n\tonBeforeAttached(): void;\n\n\t/**\n\t * @internal\n\t */\n\tonBeforeDetached(): void;\n\n\t/**\n\t * Returns iff this model is attached to an editor or not.\n\t * @internal\n\t */\n\tisAttachedToEditor(): boolean;\n}\n\n/**\n * @internal\n */\nexport interface IRangeWithText {\n\ttext:string;\n\trange:IRange;\n}\n\n/**\n * @internal\n */\nexport interface IMirrorModel extends IEventEmitter, ITokenizedModel {\n\tgetEmbeddedAtPosition(position:IPosition): IMirrorModel;\n\tgetAllEmbedded(): IMirrorModel[];\n\n\turi: URI;\n\n\tgetOffsetFromPosition(position:IPosition): number;\n\tgetPositionFromOffset(offset:number): Position;\n\tgetOffsetAndLengthFromRange(range:IRange): {offset:number; length:number;};\n\tgetRangeFromOffsetAndLength(offset:number, length:number): Range;\n\tgetLineStart(lineNumber:number): number;\n\n\tgetAllWordsWithRange(): IRangeWithText[];\n\tgetAllUniqueWords(skipWordOnce?:string): string[];\n\n\tgetModeId(): string;\n}\n\n/**\n * An event describing that the current mode associated with a model has changed.\n */\nexport interface IModelModeChangedEvent {\n\t/**\n\t * Previous mode\n\t */\n\toldMode:IMode;\n\t/**\n\t * New mode\n\t */\n\tnewMode:IMode;\n}\n\n/**\n * An event describing a change in the text of a model.\n */\nexport interface IModelContentChangedEvent2 {\n\t/**\n\t * The range that got replaced.\n\t */\n\trange: IRange;\n\t/**\n\t * The length of the range that got replaced.\n\t */\n\trangeLength: number;\n\t/**\n\t * The new text for the range.\n\t */\n\ttext: string;\n\t/**\n\t * The (new) end-of-line character.\n\t */\n\teol: string;\n\t/**\n\t * The new version id the model has transitioned to.\n\t */\n\tversionId: number;\n\t/**\n\t * Flag that indicates that this event was generated while undoing.\n\t */\n\tisUndoing: boolean;\n\t/**\n\t * Flag that indicates that this event was generated while redoing.\n\t */\n\tisRedoing: boolean;\n}\n/**\n * An event describing a change in the text of a model.\n */\nexport interface IModelContentChangedEvent {\n\t/**\n\t * The event type. It can be used to detect the actual event type:\n\t * \t\tEditorCommon.EventType.ModelContentChangedFlush => IModelContentChangedFlushEvent\n\t * \t\tEditorCommon.EventType.ModelContentChangedLinesDeleted => IModelContentChangedLineChangedEvent\n\t * \t\tEditorCommon.EventType.ModelContentChangedLinesInserted => IModelContentChangedLinesDeletedEvent\n\t * \t\tEditorCommon.EventType.ModelContentChangedLineChanged => IModelContentChangedLinesInsertedEvent\n\t */\n\tchangeType: string;\n\t/**\n\t * The new version id the model has transitioned to.\n\t */\n\tversionId: number;\n\t/**\n\t * Flag that indicates that this event was generated while undoing.\n\t */\n\tisUndoing: boolean;\n\t/**\n\t * Flag that indicates that this event was generated while redoing.\n\t */\n\tisRedoing: boolean;\n}\nexport interface IRawText {\n\tlength: number;\n\tlines: string[];\n\tBOM: string;\n\tEOL: string;\n\toptions: ITextModelResolvedOptions;\n}\n/**\n * An event describing that a model has been reset to a new value.\n */\nexport interface IModelContentChangedFlushEvent extends IModelContentChangedEvent {\n\t/**\n\t * The new text content of the model.\n\t */\n\tdetail: IRawText;\n}\n/**\n * An event describing that a line has changed in a model.\n */\nexport interface IModelContentChangedLineChangedEvent extends IModelContentChangedEvent {\n\t/**\n\t * The line that has changed.\n\t */\n\tlineNumber: number;\n\t/**\n\t * The new value of the line.\n\t */\n\tdetail: string;\n}\n/**\n * An event describing that line(s) have been deleted in a model.\n */\nexport interface IModelContentChangedLinesDeletedEvent extends IModelContentChangedEvent {\n\t/**\n\t * At what line the deletion began (inclusive).\n\t */\n\tfromLineNumber: number;\n\t/**\n\t * At what line the deletion stopped (inclusive).\n\t */\n\ttoLineNumber: number;\n}\n/**\n * An event describing that line(s) have been inserted in a model.\n */\nexport interface IModelContentChangedLinesInsertedEvent extends IModelContentChangedEvent {\n\t/**\n\t * Before what line did the insertion begin\n\t */\n\tfromLineNumber: number;\n\t/**\n\t * `toLineNumber` - `fromLineNumber` + 1 denotes the number of lines that were inserted\n\t */\n\ttoLineNumber: number;\n\t/**\n\t * The text that was inserted\n\t */\n\tdetail: string;\n}\n/**\n * Decoration data associated with a model decorations changed event.\n */\nexport interface IModelDecorationsChangedEventDecorationData {\n\tid:string;\n\townerId:number;\n\trange:IRange;\n\tisForValidation:boolean;\n\toptions:IModelDecorationOptions;\n}\n/**\n * An event describing that model decorations have changed.\n */\nexport interface IModelDecorationsChangedEvent {\n\t/**\n\t * A summary with ids of decorations that have changed.\n\t */\n\tids:string[];\n\t/**\n\t * Lists of details\n\t */\n\taddedOrChangedDecorations:IModelDecorationsChangedEventDecorationData[];\n\tremovedDecorations:string[];\n\toldOptions:{[decorationId:string]:IModelDecorationOptions;};\n\toldRanges:{[decorationId:string]:IRange;};\n}\n/**\n * An event describing that a range of lines has been tokenized\n */\nexport interface IModelTokensChangedEvent {\n\t/**\n\t * The start of the range (inclusive)\n\t */\n\tfromLineNumber:number;\n\t/**\n\t * The end of the range (inclusive)\n\t */\n\ttoLineNumber:number;\n}\nexport enum CursorChangeReason {\n\tNotSet = 0,\n\tContentFlush = 1,\n\tRecoverFromMarkers = 2,\n\tExplicit = 3,\n\tPaste = 4,\n\tUndo = 5,\n\tRedo = 6,\n}\n/**\n * An event describing that the cursor position has changed.\n */\nexport interface ICursorPositionChangedEvent {\n\t/**\n\t * Primary cursor's position.\n\t */\n\tposition:Position;\n\t/**\n\t * Primary cursor's view position\n\t */\n\tviewPosition:Position;\n\t/**\n\t * Secondary cursors' position.\n\t */\n\tsecondaryPositions:Position[];\n\t/**\n\t * Secondary cursors' view position.\n\t */\n\tsecondaryViewPositions:Position[];\n\t/**\n\t * Reason.\n\t */\n\treason:CursorChangeReason;\n\t/**\n\t * Source of the call that caused the event.\n\t */\n\tsource:string;\n\t/**\n\t * Is the primary cursor in the editable range?\n\t */\n\tisInEditableRange:boolean;\n}\n/**\n * An event describing that the cursor selection has changed.\n */\nexport interface ICursorSelectionChangedEvent {\n\t/**\n\t * The primary selection.\n\t */\n\tselection:Selection;\n\t/**\n\t * The primary selection in view coordinates.\n\t */\n\tviewSelection:Selection;\n\t/**\n\t * The secondary selections.\n\t */\n\tsecondarySelections:Selection[];\n\t/**\n\t * The secondary selections in view coordinates.\n\t */\n\tsecondaryViewSelections:Selection[];\n\t/**\n\t * Source of the call that caused the event.\n\t */\n\tsource:string;\n\t/**\n\t * Reason.\n\t */\n\treason:CursorChangeReason;\n}\n/**\n * @internal\n */\nexport enum VerticalRevealType {\n\tSimple = 0,\n\tCenter = 1,\n\tCenterIfOutsideViewport = 2\n}\n/**\n * An event describing a request to reveal a specific range in the view of the editor.\n * @internal\n */\nexport interface ICursorRevealRangeEvent {\n\t/**\n\t * Range to be reavealed.\n\t */\n\trange:Range;\n\t/**\n\t * View range to be reavealed.\n\t */\n\tviewRange:Range;\n\n\tverticalType: VerticalRevealType;\n\t/**\n\t * If true: there should be a horizontal & vertical revealing\n\t * If false: there should be just a vertical revealing\n\t */\n\trevealHorizontal:boolean;\n}\n\n/**\n * @internal\n */\nexport interface ICursorScrollRequestEvent {\n\tdeltaLines: number;\n}\n\nexport interface IModelChangedEvent {\n\toldModelUrl: string;\n\tnewModelUrl: string;\n}\n\n/**\n * @internal\n */\nexport interface IEditorWhitespace {\n\tid:number;\n\tafterLineNumber:number;\n\theightInLines:number;\n}\n\n/**\n * A description for the overview ruler position.\n */\nexport class OverviewRulerPosition {\n\t_overviewRulerPositionBrand: void;\n\n\t/**\n\t * Width of the overview ruler\n\t */\n\twidth:number;\n\t/**\n\t * Height of the overview ruler\n\t */\n\theight:number;\n\t/**\n\t * Top position for the overview ruler\n\t */\n\ttop:number;\n\t/**\n\t * Right position for the overview ruler\n\t */\n\tright:number;\n\n\t/**\n\t * @internal\n\t */\n\tconstructor(source:{\n\t\twidth:number;\n\t\theight:number;\n\t\ttop:number;\n\t\tright:number;\n\t}) {\n\t\tthis.width = source.width|0;\n\t\tthis.height = source.height|0;\n\t\tthis.top = source.top|0;\n\t\tthis.right = source.right|0;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic equals(other:OverviewRulerPosition): boolean {\n\t\treturn (\n\t\t\tthis.width === other.width\n\t\t\t&& this.height === other.height\n\t\t\t&& this.top === other.top\n\t\t\t&& this.right === other.right\n\t\t);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic clone(): OverviewRulerPosition {\n\t\treturn new OverviewRulerPosition(this);\n\t}\n}\n\n/**\n * The internal layout details of the editor.\n */\nexport class EditorLayoutInfo {\n\t_editorLayoutInfoBrand: void;\n\n\t/**\n\t * Full editor width.\n\t */\n\twidth:number;\n\t/**\n\t * Full editor height.\n\t */\n\theight:number;\n\n\t/**\n\t * Left position for the glyph margin.\n\t */\n\tglyphMarginLeft:number;\n\t/**\n\t * The width of the glyph margin.\n\t */\n\tglyphMarginWidth:number;\n\t/**\n\t * The height of the glyph margin.\n\t */\n\tglyphMarginHeight:number;\n\n\t/**\n\t * Left position for the line numbers.\n\t */\n\tlineNumbersLeft:number;\n\t/**\n\t * The width of the line numbers.\n\t */\n\tlineNumbersWidth:number;\n\t/**\n\t * The height of the line numbers.\n\t */\n\tlineNumbersHeight:number;\n\n\t/**\n\t * Left position for the line decorations.\n\t */\n\tdecorationsLeft:number;\n\t/**\n\t * The width of the line decorations.\n\t */\n\tdecorationsWidth:number;\n\t/**\n\t * The height of the line decorations.\n\t */\n\tdecorationsHeight:number;\n\n\t/**\n\t * Left position for the content (actual text)\n\t */\n\tcontentLeft:number;\n\t/**\n\t * The width of the content (actual text)\n\t */\n\tcontentWidth:number;\n\t/**\n\t * The height of the content (actual height)\n\t */\n\tcontentHeight:number;\n\n\t/**\n\t * The width of the vertical scrollbar.\n\t */\n\tverticalScrollbarWidth:number;\n\t/**\n\t * The height of the horizontal scrollbar.\n\t */\n\thorizontalScrollbarHeight:number;\n\n\t/**\n\t * The position of the overview ruler.\n\t */\n\toverviewRuler:OverviewRulerPosition;\n\n\t/**\n\t * @internal\n\t */\n\tconstructor(source:{\n\t\twidth:number;\n\t\theight:number;\n\t\tglyphMarginLeft:number;\n\t\tglyphMarginWidth:number;\n\t\tglyphMarginHeight:number;\n\t\tlineNumbersLeft:number;\n\t\tlineNumbersWidth:number;\n\t\tlineNumbersHeight:number;\n\t\tdecorationsLeft:number;\n\t\tdecorationsWidth:number;\n\t\tdecorationsHeight:number;\n\t\tcontentLeft:number;\n\t\tcontentWidth:number;\n\t\tcontentHeight:number;\n\t\tverticalScrollbarWidth:number;\n\t\thorizontalScrollbarHeight:number;\n\t\toverviewRuler:OverviewRulerPosition;\n\t}) {\n\t\tthis.width = source.width|0;\n\t\tthis.height = source.height|0;\n\t\tthis.glyphMarginLeft = source.glyphMarginLeft|0;\n\t\tthis.glyphMarginWidth = source.glyphMarginWidth|0;\n\t\tthis.glyphMarginHeight = source.glyphMarginHeight|0;\n\t\tthis.lineNumbersLeft = source.lineNumbersLeft|0;\n\t\tthis.lineNumbersWidth = source.lineNumbersWidth|0;\n\t\tthis.lineNumbersHeight = source.lineNumbersHeight|0;\n\t\tthis.decorationsLeft = source.decorationsLeft|0;\n\t\tthis.decorationsWidth = source.decorationsWidth|0;\n\t\tthis.decorationsHeight = source.decorationsHeight|0;\n\t\tthis.contentLeft = source.contentLeft|0;\n\t\tthis.contentWidth = source.contentWidth|0;\n\t\tthis.contentHeight = source.contentHeight|0;\n\t\tthis.verticalScrollbarWidth = source.verticalScrollbarWidth|0;\n\t\tthis.horizontalScrollbarHeight = source.horizontalScrollbarHeight|0;\n\t\tthis.overviewRuler = source.overviewRuler.clone();\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic equals(other:EditorLayoutInfo): boolean {\n\t\treturn (\n\t\t\tthis.width === other.width\n\t\t\t&& this.height === other.height\n\t\t\t&& this.glyphMarginLeft === other.glyphMarginLeft\n\t\t\t&& this.glyphMarginWidth === other.glyphMarginWidth\n\t\t\t&& this.glyphMarginHeight === other.glyphMarginHeight\n\t\t\t&& this.lineNumbersLeft === other.lineNumbersLeft\n\t\t\t&& this.lineNumbersWidth === other.lineNumbersWidth\n\t\t\t&& this.lineNumbersHeight === other.lineNumbersHeight\n\t\t\t&& this.decorationsLeft === other.decorationsLeft\n\t\t\t&& this.decorationsWidth === other.decorationsWidth\n\t\t\t&& this.decorationsHeight === other.decorationsHeight\n\t\t\t&& this.contentLeft === other.contentLeft\n\t\t\t&& this.contentWidth === other.contentWidth\n\t\t\t&& this.contentHeight === other.contentHeight\n\t\t\t&& this.verticalScrollbarWidth === other.verticalScrollbarWidth\n\t\t\t&& this.horizontalScrollbarHeight === other.horizontalScrollbarHeight\n\t\t\t&& this.overviewRuler.equals(other.overviewRuler)\n\t\t);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic clone(): EditorLayoutInfo {\n\t\treturn new EditorLayoutInfo(this);\n\t}\n}\n\n/**\n * Options for creating the editor.\n */\nexport interface ICodeEditorWidgetCreationOptions extends IEditorOptions {\n\tmodel?:IModel;\n}\n\n/**\n * An editor model.\n */\nexport interface IEditorModel {\n}\n/**\n * An editor view state.\n */\nexport interface IEditorViewState {\n}\nexport interface IDimension {\n\twidth:number;\n\theight:number;\n}\n/**\n * Conditions describing action enablement\n */\nexport interface IActionEnablement {\n\t/**\n\t * The action is enabled only if text in the editor is focused (e.g. blinking cursor).\n\t * Warning: This condition will be disabled if the action is marked to be displayed in the context menu\n\t * Defaults to false.\n\t */\n\ttextFocus?: boolean;\n\t/**\n\t * The action is enabled only if the editor or its widgets have focus (e.g. focus is in find widget).\n\t * Defaults to false.\n\t */\n\twidgetFocus?: boolean;\n\t/**\n\t * The action is enabled only if the editor is not in read only mode.\n\t * Defaults to false.\n\t */\n\twriteableEditor?: boolean;\n\t/**\n\t * The action is enabled only if the cursor position is over tokens of a certain kind.\n\t * Defaults to no tokens required.\n\t */\n\ttokensAtPosition?: string[];\n\t/**\n\t * The action is enabled only if the cursor position is over a word (i.e. not whitespace).\n\t * Defaults to false.\n\t */\n\twordAtPosition?: boolean;\n}\n\n/**\n * A (serializable) state of the cursors.\n */\nexport interface ICursorState {\n\tinSelectionMode:boolean;\n\tselectionStart:IPosition;\n\tposition:IPosition;\n}\n/**\n * A (serializable) state of the view.\n */\nexport interface IViewState {\n\tscrollTop: number;\n\tscrollTopWithoutViewZones: number;\n\tscrollLeft: number;\n}\n/**\n * A (serializable) state of the code editor.\n */\nexport interface ICodeEditorViewState extends IEditorViewState {\n\tcursorState:ICursorState[];\n\tviewState:IViewState;\n\tcontributionsState: {[id:string]:any};\n}\n\n/**\n * Type of hit element with the mouse in the editor.\n */\nexport enum MouseTargetType {\n\t/**\n\t * Mouse is on top of an unknown element.\n\t */\n\tUNKNOWN,\n\t/**\n\t * Mouse is on top of the textarea used for input.\n\t */\n\tTEXTAREA,\n\t/**\n\t * Mouse is on top of the glyph margin\n\t */\n\tGUTTER_GLYPH_MARGIN,\n\t/**\n\t * Mouse is on top of the line numbers\n\t */\n\tGUTTER_LINE_NUMBERS,\n\t/**\n\t * Mouse is on top of the line decorations\n\t */\n\tGUTTER_LINE_DECORATIONS,\n\t/**\n\t * Mouse is on top of the whitespace left in the gutter by a view zone.\n\t */\n\tGUTTER_VIEW_ZONE,\n\t/**\n\t * Mouse is on top of text in the content.\n\t */\n\tCONTENT_TEXT,\n\t/**\n\t * Mouse is on top of empty space in the content (e.g. after line text or below last line)\n\t */\n\tCONTENT_EMPTY,\n\t/**\n\t * Mouse is on top of a view zone in the content.\n\t */\n\tCONTENT_VIEW_ZONE,\n\t/**\n\t * Mouse is on top of a content widget.\n\t */\n\tCONTENT_WIDGET,\n\t/**\n\t * Mouse is on top of the decorations overview ruler.\n\t */\n\tOVERVIEW_RULER,\n\t/**\n\t * Mouse is on top of a scrollbar.\n\t */\n\tSCROLLBAR,\n\t/**\n\t * Mouse is on top of an overlay widget.\n\t */\n\tOVERLAY_WIDGET\n}\n\n/**\n * A model for the diff editor.\n */\nexport interface IDiffEditorModel extends IEditorModel {\n\t/**\n\t * Original model.\n\t */\n\toriginal: IModel;\n\t/**\n\t * Modified model.\n\t */\n\tmodified: IModel;\n}\n/**\n * (Serializable) View state for the diff editor.\n */\nexport interface IDiffEditorViewState extends IEditorViewState {\n\toriginal: ICodeEditorViewState;\n\tmodified: ICodeEditorViewState;\n}\n/**\n * A change\n */\nexport interface IChange {\n\toriginalStartLineNumber:number;\n\toriginalEndLineNumber:number;\n\tmodifiedStartLineNumber:number;\n\tmodifiedEndLineNumber:number;\n}\n/**\n * A character level change.\n */\nexport interface ICharChange extends IChange {\n\toriginalStartColumn:number;\n\toriginalEndColumn:number;\n\tmodifiedStartColumn:number;\n\tmodifiedEndColumn:number;\n}\n/**\n * A line change\n */\nexport interface ILineChange extends IChange {\n\tcharChanges:ICharChange[];\n}\n/**\n * Information about a line in the diff editor\n * @internal\n */\nexport interface IDiffLineInformation {\n\tequivalentLineNumber: number;\n}\n\nexport const KEYBINDING_CONTEXT_EDITOR_TEXT_FOCUS = 'editorTextFocus';\nexport const KEYBINDING_CONTEXT_EDITOR_FOCUS = 'editorFocus';\n/**\n * @internal\n */\nexport const KEYBINDING_CONTEXT_EDITOR_TAB_MOVES_FOCUS = 'editorTabMovesFocus';\nexport const KEYBINDING_CONTEXT_EDITOR_HAS_MULTIPLE_SELECTIONS = 'editorHasMultipleSelections';\nexport const KEYBINDING_CONTEXT_EDITOR_HAS_NON_EMPTY_SELECTION = 'editorHasSelection';\nexport const KEYBINDING_CONTEXT_EDITOR_LANGUAGE_ID = 'editorLangId';\n/**\n * @internal\n */\nexport const SHOW_ACCESSIBILITY_HELP_ACTION_ID = 'editor.action.showAccessibilityHelp';\n\nexport class BareFontInfo {\n\t_bareFontInfoBrand: void;\n\n\tfontFamily: string;\n\tfontSize: number;\n\tlineHeight: number;\n\n\t/**\n\t * @internal\n\t */\n\tconstructor(opts: {\n\t\tfontFamily: string;\n\t\tfontSize: number;\n\t\tlineHeight: number;\n\t}) {\n\t\tthis.fontFamily = String(opts.fontFamily);\n\t\tthis.fontSize = opts.fontSize|0;\n\t\tthis.lineHeight = opts.lineHeight|0;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic getId(): string {\n\t\treturn this.fontFamily + '-' + this.fontSize + '-' + this.lineHeight;\n\t}\n}\n\nexport class FontInfo extends BareFontInfo {\n\t_editorStylingBrand: void;\n\n\ttypicalHalfwidthCharacterWidth:number;\n\ttypicalFullwidthCharacterWidth:number;\n\tspaceWidth:number;\n\tmaxDigitWidth: number;\n\n\t/**\n\t * @internal\n\t */\n\tconstructor(opts:{\n\t\tfontFamily: string;\n\t\tfontSize: number;\n\t\tlineHeight: number;\n\t\ttypicalHalfwidthCharacterWidth:number;\n\t\ttypicalFullwidthCharacterWidth:number;\n\t\tspaceWidth:number;\n\t\tmaxDigitWidth: number;\n\t}) {\n\t\tsuper(opts);\n\t\tthis.typicalHalfwidthCharacterWidth = opts.typicalHalfwidthCharacterWidth;\n\t\tthis.typicalFullwidthCharacterWidth = opts.typicalFullwidthCharacterWidth;\n\t\tthis.spaceWidth = opts.spaceWidth;\n\t\tthis.maxDigitWidth = opts.maxDigitWidth;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic equals(other:FontInfo): boolean {\n\t\treturn (\n\t\t\tthis.fontFamily === other.fontFamily\n\t\t\t&& this.fontSize === other.fontSize\n\t\t\t&& this.lineHeight === other.lineHeight\n\t\t\t&& this.typicalHalfwidthCharacterWidth === other.typicalHalfwidthCharacterWidth\n\t\t\t&& this.typicalFullwidthCharacterWidth === other.typicalFullwidthCharacterWidth\n\t\t\t&& this.spaceWidth === other.spaceWidth\n\t\t\t&& this.maxDigitWidth === other.maxDigitWidth\n\t\t);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic clone(): FontInfo {\n\t\treturn new FontInfo(this);\n\t}\n}\n\n/**\n * @internal\n */\nexport interface IConfiguration {\n\tonDidChange: Event<IConfigurationChangedEvent>;\n\n\teditor:InternalEditorOptions;\n\n\tsetLineCount(lineCount:number): void;\n}\n\n// --- view\n\n/**\n * @internal\n */\nexport interface IViewEventNames {\n\tModelFlushedEvent: string;\n\tLinesDeletedEvent: string;\n\tLinesInsertedEvent: string;\n\tLineChangedEvent: string;\n\tTokensChangedEvent: string;\n\tDecorationsChangedEvent: string;\n\tCursorPositionChangedEvent: string;\n\tCursorSelectionChangedEvent: string;\n\tRevealRangeEvent: string;\n\tLineMappingChangedEvent: string;\n}\n\n/**\n * @internal\n */\nexport var ViewEventNames = {\n\tModelFlushedEvent: 'modelFlushedEvent',\n\tLinesDeletedEvent: 'linesDeletedEvent',\n\tLinesInsertedEvent: 'linesInsertedEvent',\n\tLineChangedEvent: 'lineChangedEvent',\n\tTokensChangedEvent: 'tokensChangedEvent',\n\tDecorationsChangedEvent: 'decorationsChangedEvent',\n\tCursorPositionChangedEvent: 'cursorPositionChangedEvent',\n\tCursorSelectionChangedEvent: 'cursorSelectionChangedEvent',\n\tRevealRangeEvent: 'revealRangeEvent',\n\tLineMappingChangedEvent: 'lineMappingChangedEvent',\n\tScrollRequestEvent: 'scrollRequestEvent'\n};\n\nexport interface IScrollEvent {\n\tscrollTop: number;\n\tscrollLeft: number;\n\tscrollWidth: number;\n\tscrollHeight: number;\n\n\tscrollTopChanged: boolean;\n\tscrollLeftChanged: boolean;\n\tscrollWidthChanged: boolean;\n\tscrollHeightChanged: boolean;\n}\n\nexport interface INewScrollPosition {\n\tscrollLeft?: number;\n\tscrollTop?: number;\n}\n\n/**\n * @internal\n */\nexport interface IViewLinesDeletedEvent {\n\t/**\n\t * At what line the deletion began (inclusive).\n\t */\n\tfromLineNumber: number;\n\t/**\n\t * At what line the deletion stopped (inclusive).\n\t */\n\ttoLineNumber: number;\n}\n\n/**\n * @internal\n */\nexport interface IViewLinesInsertedEvent {\n\t/**\n\t * Before what line did the insertion begin\n\t */\n\tfromLineNumber: number;\n\t/**\n\t * `toLineNumber` - `fromLineNumber` + 1 denotes the number of lines that were inserted\n\t */\n\ttoLineNumber: number;\n}\n\n/**\n * @internal\n */\nexport interface IViewLineChangedEvent {\n\t/**\n\t * The line that has changed.\n\t */\n\tlineNumber: number;\n}\n\n/**\n * @internal\n */\nexport interface IViewTokensChangedEvent {\n\t/**\n\t * Start line number of range\n\t */\n\tfromLineNumber: number;\n\t/**\n\t * End line number of range\n\t */\n\ttoLineNumber: number;\n}\n\n/**\n * @internal\n */\nexport interface IViewDecorationsChangedEvent {\n\t/**\n\t * signals that at least one inline decoration has changed\n\t */\n\tinlineDecorationsChanged: boolean;\n}\n\n/**\n * @internal\n */\nexport interface IViewCursorPositionChangedEvent {\n\t/**\n\t * Primary cursor's position.\n\t */\n\tposition: Position;\n\t/**\n\t * Secondary cursors' position.\n\t */\n\tsecondaryPositions: Position[];\n\t/**\n\t * Is the primary cursor in the editable range?\n\t */\n\tisInEditableRange: boolean;\n}\n\n/**\n * @internal\n */\nexport interface IViewCursorSelectionChangedEvent {\n\t/**\n\t * The primary selection.\n\t */\n\tselection: Selection;\n\t/**\n\t * The secondary selections.\n\t */\n\tsecondarySelections: Selection[];\n}\n\n/**\n * @internal\n */\nexport interface IViewRevealRangeEvent {\n\t/**\n\t * Range to be reavealed.\n\t */\n\trange: Range;\n\n\tverticalType: VerticalRevealType;\n\t/**\n\t * If true: there should be a horizontal & vertical revealing\n\t * If false: there should be just a vertical revealing\n\t */\n\trevealHorizontal: boolean;\n}\n\n/**\n * @internal\n */\nexport interface IViewScrollRequestEvent {\n\tdeltaLines: number;\n}\n\n/**\n * @internal\n */\nexport interface IViewWhitespaceViewportData {\n\tid:number;\n\tafterLineNumber:number;\n\tverticalOffset:number;\n\theight:number;\n}\n\n/**\n * @internal\n */\nexport class Viewport {\n\t_viewportBrand: void;\n\n\ttop: number;\n\tleft: number;\n\twidth: number;\n\theight: number;\n\n\tconstructor(top:number, left:number, width:number, height:number) {\n\t\tthis.top = top|0;\n\t\tthis.left = left|0;\n\t\tthis.width = width|0;\n\t\tthis.height = height|0;\n\t}\n}\n\n/**\n * Description of an action contribution\n */\nexport interface IActionDescriptor {\n\t/**\n\t * An unique identifier of the contributed action.\n\t */\n\tid: string;\n\t/**\n\t * A label of the action that will be presented to the user.\n\t */\n\tlabel: string;\n\t/**\n\t * An array of keybindings for the action.\n\t */\n\tkeybindings?: number[];\n\tkeybindingContext?: string;\n\t/**\n\t * A set of enablement conditions.\n\t */\n\tenablement?: IActionEnablement;\n\t/**\n\t * Control if the action should show up in the context menu and where.\n\t * Built-in groups:\n\t *   1_goto/* => e.g. 1_goto/1_peekDefinition\n\t *   2_change/* => e.g. 2_change/2_format\n\t *   3_edit/* => e.g. 3_edit/1_copy\n\t *   4_tools/* => e.g. 4_tools/1_commands\n\t * You can also create your own group.\n\t * Defaults to null (don't show in context menu).\n\t */\n\tcontextMenuGroupId?: string;\n\t/**\n\t * Method that will be executed when the action is triggered.\n\t * @param editor The editor instance is passed in as a convinience\n\t */\n\trun:(editor:ICommonCodeEditor)=>TPromise<void>;\n}\n\n/**\n * Data associated with an editor action contribution\n * @internal\n */\nexport interface IEditorActionDescriptorData {\n\tid:string;\n\tlabel:string;\n\talias?:string;\n}\n\n/**\n * @internal\n */\nexport type IEditorActionContributionCtor = IConstructorSignature2<IEditorActionDescriptorData, ICommonCodeEditor, IEditorContribution>;\n\n/**\n * @internal\n */\nexport type ICommonEditorContributionCtor = IConstructorSignature1<ICommonCodeEditor, IEditorContribution>;\n\n/**\n * An editor contribution descriptor that will be used to construct editor contributions\n * @internal\n */\nexport interface ICommonEditorContributionDescriptor {\n\t/**\n\t * Create an instance of the contribution\n\t */\n\tcreateInstance(instantiationService:IInstantiationService, editor:ICommonCodeEditor): IEditorContribution;\n}\n\n/**\n * An editor.\n */\nexport interface IEditor {\n\n\tonDidChangeModelRawContent(listener: (e:IModelContentChangedEvent)=>void): IDisposable;\n\tonDidChangeModelContent(listener: (e:IModelContentChangedEvent2)=>void): IDisposable;\n\tonDidChangeModelMode(listener: (e:IModelModeChangedEvent)=>void): IDisposable;\n\tonDidChangeModelOptions(listener: (e:IModelOptionsChangedEvent)=>void): IDisposable;\n\tonDidChangeConfiguration(listener: (e:IConfigurationChangedEvent)=>void): IDisposable;\n\tonDidChangeCursorPosition(listener: (e:ICursorPositionChangedEvent)=>void): IDisposable;\n\tonDidChangeCursorSelection(listener: (e:ICursorSelectionChangedEvent)=>void): IDisposable;\n\tonDidDispose(listener: ()=>void): IDisposable;\n\n\tdispose(): void;\n\n\tgetId(): string;\n\n\t/**\n\t * Get the editor type. Current supported types:\n\t * \t\t\tEditorCommon.EditorType.ICodeEditor => ICodeEditor;\n\t * \t\t\tEditorCommon.EditorType.IDiffEditor => IDiffEditor;\n\t * This is to avoid an instanceof check\n\t */\n\tgetEditorType(): string;\n\n\t/**\n\t * Destroy the editor.\n\t * @internal\n\t */\n\tdestroy(): void;\n\n\t/**\n\t * Update the editor's options after the editor has been created.\n\t */\n\tupdateOptions(newOptions: IEditorOptions): void;\n\n\t/**\n\t * Indicates that the editor becomes visible.\n\t * @internal\n\t */\n\tonVisible(): void;\n\n\t/**\n\t * Indicates that the editor becomes hidden.\n\t * @internal\n\t */\n\tonHide(): void;\n\n\t/**\n\t * Instructs the editor to remeasure its container. This method should\n\t * be called when the container of the editor gets resized.\n\t */\n\tlayout(dimension?:IDimension): void;\n\n\t/**\n\t * Brings browser focus to the editor text\n\t */\n\tfocus(): void;\n\n\t/**\n\t * Returns true if this editor has keyboard focus (e.g. cursor is blinking).\n\t */\n\tisFocused(): boolean;\n\n\t/**\n\t * Add a new action to this editor.\n\t */\n\taddAction(descriptor:IActionDescriptor): void;\n\n\t/**\n\t * Returns all actions associated with this editor.\n\t */\n\tgetActions(): IAction[];\n\n\t/**\n\t * Saves current view state of the editor in a serializable object.\n\t */\n\tsaveViewState(): IEditorViewState;\n\n\t/**\n\t * Restores the view state of the editor from a serializable object generated by `saveViewState`.\n\t */\n\trestoreViewState(state: IEditorViewState): void;\n\n\t/**\n\t * Given a position, returns a column number that takes tab-widths into account.\n\t */\n\tgetVisibleColumnFromPosition(position:IPosition): number;\n\n\t/**\n\t * Returns the primary position of the cursor.\n\t */\n\tgetPosition(): Position;\n\n\t/**\n\t * Set the primary position of the cursor. This will remove any secondary cursors.\n\t * @param position New primary cursor's position\n\t */\n\tsetPosition(position:IPosition): void;\n\n\t/**\n\t * Scroll vertically as necessary and reveal a line.\n\t */\n\trevealLine(lineNumber: number): void;\n\n\t/**\n\t * Scroll vertically as necessary and reveal a line centered vertically.\n\t */\n\trevealLineInCenter(lineNumber: number): void;\n\n\t/**\n\t * Scroll vertically as necessary and reveal a line centered vertically only if it lies outside the viewport.\n\t */\n\trevealLineInCenterIfOutsideViewport(lineNumber: number): void;\n\n\t/**\n\t * Scroll vertically or horizontally as necessary and reveal a position.\n\t */\n\trevealPosition(position: IPosition): void;\n\n\t/**\n\t * Scroll vertically or horizontally as necessary and reveal a position centered vertically.\n\t */\n\trevealPositionInCenter(position: IPosition): void;\n\n\t/**\n\t * Scroll vertically or horizontally as necessary and reveal a position centered vertically only if it lies outside the viewport.\n\t */\n\trevealPositionInCenterIfOutsideViewport(position: IPosition): void;\n\n\t/**\n\t * Returns the primary selection of the editor.\n\t */\n\tgetSelection(): Selection;\n\n\t/**\n\t * Returns all the selections of the editor.\n\t */\n\tgetSelections(): Selection[];\n\n\t/**\n\t * Set the primary selection of the editor. This will remove any secondary cursors.\n\t * @param selection The new selection\n\t */\n\tsetSelection(selection:IRange): void;\n\tsetSelection(selection:Range): void;\n\tsetSelection(selection:ISelection): void;\n\tsetSelection(selection:Selection): void;\n\n\t/**\n\t * Set the selections for all the cursors of the editor.\n\t * Cursors will be removed or added, as necessary.\n\t */\n\tsetSelections(selections:ISelection[]): void;\n\n\t/**\n\t * Scroll vertically as necessary and reveal lines.\n\t */\n\trevealLines(startLineNumber: number, endLineNumber: number): void;\n\n\t/**\n\t * Scroll vertically as necessary and reveal lines centered vertically.\n\t */\n\trevealLinesInCenter(lineNumber: number, endLineNumber: number): void;\n\n\t/**\n\t * Scroll vertically as necessary and reveal lines centered vertically only if it lies outside the viewport.\n\t */\n\trevealLinesInCenterIfOutsideViewport(lineNumber: number, endLineNumber: number): void;\n\n\t/**\n\t * Scroll vertically or horizontally as necessary and reveal a range.\n\t */\n\trevealRange(range: IRange): void;\n\n\t/**\n\t * Scroll vertically or horizontally as necessary and reveal a range centered vertically.\n\t */\n\trevealRangeInCenter(range: IRange): void;\n\n\t/**\n\t * Scroll vertically or horizontally as necessary and reveal a range centered vertically only if it lies outside the viewport.\n\t */\n\trevealRangeInCenterIfOutsideViewport(range: IRange): void;\n\n\n\t/**\n\t * Directly trigger a handler or an editor action.\n\t * @param source The source of the call.\n\t * @param handlerId The id of the handler or the id of a contribution.\n\t * @param payload Extra data to be sent to the handler.\n\t */\n\ttrigger(source:string, handlerId:string, payload:any): void;\n\n\t/**\n\t * Gets the current model attached to this editor.\n\t */\n\tgetModel(): IEditorModel;\n\n\t/**\n\t * Sets the current model attached to this editor.\n\t * If the previous model was created by the editor via the value key in the options\n\t * literal object, it will be destroyed. Otherwise, if the previous model was set\n\t * via setModel, or the model key in the options literal object, the previous model\n\t * will not be destroyed.\n\t * It is safe to call setModel(null) to simply detach the current model from the editor.\n\t */\n\tsetModel(model:IEditorModel): void;\n\n\t/**\n\t * Change the decorations. All decorations added through this changeAccessor\n\t * will get the ownerId of the editor (meaning they will not show up in other\n\t * editors).\n\t * @see IModel.changeDecorations\n\t * @internal\n\t */\n\tchangeDecorations(callback: (changeAccessor:IModelDecorationsChangeAccessor)=>any): any;\n}\n\n/**\n * @internal\n */\nexport interface ICodeEditorState {\n\tvalidate(editor:ICommonCodeEditor): boolean;\n}\n\n/**\n * @internal\n */\nexport enum CodeEditorStateFlag {\n\tValue,\n\tSelection,\n\tPosition,\n\tScroll\n}\n\n/**\n * An editor contribution that gets created every time a new editor gets created and gets disposed when the editor gets disposed.\n */\nexport interface IEditorContribution {\n\t/**\n\t * Get a unique identifier for this contribution.\n\t */\n\tgetId(): string;\n\t/**\n\t * Dispose this contribution.\n\t */\n\tdispose(): void;\n\t/**\n\t * Store view state.\n\t */\n\tsaveViewState?(): any;\n\t/**\n\t * Restore view state.\n\t */\n\trestoreViewState?(state: any): void;\n}\n\n/**\n * @internal\n */\nexport interface IThemeDecorationRenderOptions {\n\tbackgroundColor?: string;\n\n\toutlineColor?: string;\n\toutlineStyle?: string;\n\toutlineWidth?: string;\n\n\tborderColor?: string;\n\tborderRadius?: string;\n\tborderSpacing?: string;\n\tborderStyle?: string;\n\tborderWidth?: string;\n\n\ttextDecoration?: string;\n\tcursor?: string;\n\tcolor?: string;\n\tletterSpacing?: string;\n\n\tgutterIconPath?: string;\n\n\toverviewRulerColor?: string;\n}\n\n/**\n * @internal\n */\nexport interface IDecorationRenderOptions extends IThemeDecorationRenderOptions {\n\tisWholeLine?: boolean;\n\toverviewRulerLane?: OverviewRulerLane;\n\n\tlight?: IThemeDecorationRenderOptions;\n\tdark?: IThemeDecorationRenderOptions;\n}\n\n/**\n * @internal\n */\nexport interface IRangeWithMessage {\n\trange: IRange;\n\thoverMessage?: IHTMLContentElement[];\n}\n\nexport interface ICommonCodeEditor extends IEditor {\n\n\tonDidChangeModel(listener: (e:IModelChangedEvent)=>void): IDisposable;\n\tonDidChangeModelModeSupport(listener: (e:IModeSupportChangedEvent)=>void): IDisposable;\n\tonDidChangeModelDecorations(listener: (e:IModelDecorationsChangedEvent)=>void): IDisposable;\n\n\tonDidFocusEditorText(listener: ()=>void): IDisposable;\n\tonDidBlurEditorText(listener: ()=>void): IDisposable;\n\n\tonDidFocusEditor(listener: ()=>void): IDisposable;\n\tonDidBlurEditor(listener: ()=>void): IDisposable;\n\n\t/**\n\t * Returns true if this editor or one of its widgets has keyboard focus.\n\t */\n\thasWidgetFocus(): boolean;\n\n\t/**\n\t * Get a contribution of this editor.\n\t * @id Unique identifier of the contribution.\n\t * @return The contribution or null if contribution not found.\n\t */\n\tgetContribution(id: string): IEditorContribution;\n\n\t/**\n\t * @internal\n\t */\n\tcaptureState(...flags:CodeEditorStateFlag[]): ICodeEditorState;\n\n\t/**\n\t * Type the getModel() of IEditor.\n\t */\n\tgetModel(): IModel;\n\n\t/**\n\t * Returns the current editor's configuration\n\t */\n\tgetConfiguration(): InternalEditorOptions;\n\n\t/**\n\t * Returns the 'raw' editor's configuration, as it was applied over the defaults, but without any computed members.\n\t * @internal\n\t */\n\tgetRawConfiguration(): IEditorOptions;\n\n\t/**\n\t * Get value of the current model attached to this editor.\n\t * @see IModel.getValue\n\t */\n\tgetValue(options?: { preserveBOM: boolean; lineEnding: string; }): string;\n\n\t/**\n\t * Set the value of the current model attached to this editor.\n\t * @see IModel.setValue\n\t */\n\tsetValue(newValue: string): void;\n\n\t/**\n\t * Get the scrollWidth of the editor's viewport.\n\t */\n\tgetScrollWidth(): number;\n\t/**\n\t * Get the scrollLeft of the editor's viewport.\n\t */\n\tgetScrollLeft(): number;\n\n\t/**\n\t * Get the scrollHeight of the editor's viewport.\n\t */\n\tgetScrollHeight(): number;\n\t/**\n\t * Get the scrollTop of the editor's viewport.\n\t */\n\tgetScrollTop(): number;\n\n\t/**\n\t * Change the scrollLeft of the editor's viewport.\n\t */\n\tsetScrollLeft(newScrollLeft: number): void;\n\t/**\n\t * Change the scrollTop of the editor's viewport.\n\t */\n\tsetScrollTop(newScrollTop: number): void;\n\t/**\n\t * Change the scroll position of the editor's viewport.\n\t */\n\tsetScrollPosition(position: INewScrollPosition): void;\n\n\t/**\n\t * Get an action that is a contribution to this editor.\n\t * @id Unique identifier of the contribution.\n\t * @return The action or null if action not found.\n\t */\n\tgetAction(id: string): IAction;\n\n\t/**\n\t * Execute a command on the editor.\n\t * @param source The source of the call.\n\t * @param command The command to execute\n\t */\n\texecuteCommand(source: string, command: ICommand): void;\n\n\t/**\n\t * Execute a command on the editor.\n\t * @param source The source of the call.\n\t * @param command The command to execute\n\t */\n\texecuteEdits(source: string, edits: IIdentifiedSingleEditOperation[]): boolean;\n\n\t/**\n\t * Execute multiple (concommitent) commands on the editor.\n\t * @param source The source of the call.\n\t * @param command The commands to execute\n\t */\n\texecuteCommands(source: string, commands: ICommand[]): void;\n\n\t/**\n\t * Get all the decorations on a line (filtering out decorations from other editors).\n\t */\n\tgetLineDecorations(lineNumber: number): IModelDecoration[];\n\n\t/**\n\t * All decorations added through this call will get the ownerId of this editor.\n\t * @see IModel.deltaDecorations\n\t */\n\tdeltaDecorations(oldDecorations: string[], newDecorations: IModelDeltaDecoration[]): string[];\n\n\t/**\n\t * @internal\n\t */\n\tsetDecorations(decorationTypeKey: string, ranges:IRangeWithMessage[]): void;\n\n\t/**\n\t * @internal\n\t */\n\tremoveDecorations(decorationTypeKey:string): void;\n\n\t/**\n\t * Get the layout info for the editor.\n\t */\n\tgetLayoutInfo(): EditorLayoutInfo;\n\n\t/**\n\t * Prevent the editor from sending a widgetFocusLost event,\n\t * set it in a state where it believes that focus is in one of its widgets.\n\t * Use this method with care and always add a matching `endForcedWidgetFocus`\n\t * @internal\n\t */\n\tbeginForcedWidgetFocus(): void;\n\n\t/**\n\t * End the preventing of sending a widgetFocusLost event.\n\t * @internal\n\t */\n\tendForcedWidgetFocus(): void;\n\n\t/**\n\t * This listener is notified when a keypress produces a visible character.\n\t * The callback should not do operations on the view, as the view might not be updated to reflect previous typed characters.\n\t * @param character Character to listen to.\n\t * @param callback Function to call when `character` is typed.\n\t * @internal\n\t */\n\taddTypingListener(character: string, callback: () => void): IDisposable;\n\n}\n\nexport interface ICommonDiffEditor extends IEditor {\n\tonDidUpdateDiff(listener: ()=>void): IDisposable;\n\n\t/**\n\t * Type the getModel() of IEditor.\n\t */\n\tgetModel(): IDiffEditorModel;\n\n\tgetOriginalEditor(): ICommonCodeEditor;\n\tgetModifiedEditor(): ICommonCodeEditor;\n\n\tgetLineChanges(): ILineChange[];\n\n\t/**\n\t * Get information based on computed diff about a line number from the original model.\n\t * If the diff computation is not finished or the model is missing, will return null.\n\t * @internal\n\t */\n\tgetDiffLineInformationForOriginal(lineNumber:number): IDiffLineInformation;\n\t/**\n\t * Get information based on computed diff about a line number from the modified model.\n\t * If the diff computation is not finished or the model is missing, will return null.\n\t * @internal\n\t */\n\tgetDiffLineInformationForModified(lineNumber:number): IDiffLineInformation;\n\n\t/**\n\t * @see ICodeEditor.getValue\n\t */\n\tgetValue(options?:{ preserveBOM:boolean; lineEnding:string; }): string;\n\n\t/**\n\t * Returns whether the diff editor is ignoring trim whitespace or not.\n\t * @internal\n\t */\n\tignoreTrimWhitespace: boolean;\n\t/**\n\t * Returns whether the diff editor is rendering side by side or not.\n\t * @internal\n\t */\n\trenderSideBySide: boolean;\n}\n\nexport var EditorType = {\n\tICodeEditor: 'vs.editor.ICodeEditor',\n\tIDiffEditor: 'vs.editor.IDiffEditor'\n};\n\n/**\n * @internal\n */\nexport var ClassName = {\n\tEditorWarningDecoration: 'greensquiggly',\n\tEditorErrorDecoration: 'redsquiggly'\n};\n\n/**\n * @internal\n */\nexport var EventType = {\n\tDisposed: 'disposed',\n\n\tConfigurationChanged: 'configurationChanged',\n\n\tModelDispose: 'modelDispose',\n\n\tModelChanged: 'modelChanged',\n\n\tModelTokensChanged: 'modelTokensChanged',\n\tModelModeChanged: 'modelsModeChanged',\n\tModelModeSupportChanged: 'modelsModeSupportChanged',\n\tModelOptionsChanged: 'modelOptionsChanged',\n\tModelRawContentChanged: 'contentChanged',\n\tModelContentChanged2: 'contentChanged2',\n\tModelRawContentChangedFlush: 'flush',\n\tModelRawContentChangedLinesDeleted: 'linesDeleted',\n\tModelRawContentChangedLinesInserted: 'linesInserted',\n\tModelRawContentChangedLineChanged: 'lineChanged',\n\n\tEditorTextBlur: 'blur',\n\tEditorTextFocus: 'focus',\n\tEditorFocus: 'widgetFocus',\n\tEditorBlur: 'widgetBlur',\n\n\tModelDecorationsChanged: 'decorationsChanged',\n\n\tCursorPositionChanged: 'positionChanged',\n\tCursorSelectionChanged: 'selectionChanged',\n\tCursorRevealRange: 'revealRange',\n\tCursorScrollRequest: 'scrollRequest',\n\n\tViewFocusGained: 'focusGained',\n\tViewFocusLost: 'focusLost',\n\tViewFocusChanged: 'focusChanged',\n\tViewScrollChanged: 'scrollChanged',\n\tViewZonesChanged: 'zonesChanged',\n\n\tViewLayoutChanged: 'viewLayoutChanged',\n\n\tContextMenu: 'contextMenu',\n\tMouseDown: 'mousedown',\n\tMouseUp: 'mouseup',\n\tMouseMove: 'mousemove',\n\tMouseLeave: 'mouseleave',\n\tKeyDown: 'keydown',\n\tKeyUp: 'keyup',\n\n\tEditorLayout: 'editorLayout',\n\n\tDiffUpdated: 'diffUpdated'\n};\n\nexport var Handler = {\n\tExecuteCommand:\t\t\t\t'executeCommand',\n\tExecuteCommands:\t\t\t'executeCommands',\n\n\tCursorLeft:\t\t\t\t\t'cursorLeft',\n\tCursorLeftSelect:\t\t\t'cursorLeftSelect',\n\n\tCursorWordLeft:\t\t\t\t'cursorWordLeft',\n\tCursorWordStartLeft:\t\t'cursorWordStartLeft',\n\tCursorWordEndLeft:\t\t\t'cursorWordEndLeft',\n\n\tCursorWordLeftSelect:\t\t'cursorWordLeftSelect',\n\tCursorWordStartLeftSelect:\t'cursorWordStartLeftSelect',\n\tCursorWordEndLeftSelect:\t'cursorWordEndLeftSelect',\n\n\tCursorRight:\t\t\t\t'cursorRight',\n\tCursorRightSelect:\t\t\t'cursorRightSelect',\n\n\tCursorWordRight:\t\t\t'cursorWordRight',\n\tCursorWordStartRight:\t\t'cursorWordStartRight',\n\tCursorWordEndRight:\t\t\t'cursorWordEndRight',\n\n\tCursorWordRightSelect:\t\t'cursorWordRightSelect',\n\tCursorWordStartRightSelect:\t'cursorWordStartRightSelect',\n\tCursorWordEndRightSelect:\t'cursorWordEndRightSelect',\n\n\tCursorUp:\t\t\t\t\t'cursorUp',\n\tCursorUpSelect:\t\t\t\t'cursorUpSelect',\n\tCursorDown:\t\t\t\t\t'cursorDown',\n\tCursorDownSelect:\t\t\t'cursorDownSelect',\n\n\tCursorPageUp:\t\t\t\t'cursorPageUp',\n\tCursorPageUpSelect:\t\t\t'cursorPageUpSelect',\n\tCursorPageDown:\t\t\t\t'cursorPageDown',\n\tCursorPageDownSelect:\t\t'cursorPageDownSelect',\n\n\tCursorHome:\t\t\t\t\t'cursorHome',\n\tCursorHomeSelect:\t\t\t'cursorHomeSelect',\n\n\tCursorEnd:\t\t\t\t\t'cursorEnd',\n\tCursorEndSelect:\t\t\t'cursorEndSelect',\n\n\tExpandLineSelection:\t\t'expandLineSelection',\n\n\tCursorTop:\t\t\t\t\t'cursorTop',\n\tCursorTopSelect:\t\t\t'cursorTopSelect',\n\tCursorBottom:\t\t\t\t'cursorBottom',\n\tCursorBottomSelect:\t\t\t'cursorBottomSelect',\n\n\tCursorColumnSelectLeft:\t\t'cursorColumnSelectLeft',\n\tCursorColumnSelectRight:\t'cursorColumnSelectRight',\n\tCursorColumnSelectUp:\t\t'cursorColumnSelectUp',\n\tCursorColumnSelectPageUp:\t'cursorColumnSelectPageUp',\n\tCursorColumnSelectDown:\t\t'cursorColumnSelectDown',\n\tCursorColumnSelectPageDown:\t'cursorColumnSelectPageDown',\n\n\tAddCursorDown:\t\t\t\t'addCursorDown',\n\tAddCursorUp:\t\t\t\t'addCursorUp',\n\tCursorUndo:\t\t\t\t\t'cursorUndo',\n\tMoveTo:\t\t\t\t\t\t'moveTo',\n\tMoveToSelect:\t\t\t\t'moveToSelect',\n\tColumnSelect:\t\t\t\t'columnSelect',\n\tCreateCursor:\t\t\t\t'createCursor',\n\tLastCursorMoveToSelect:\t\t'lastCursorMoveToSelect',\n\n\tJumpToBracket:\t\t\t\t'jumpToBracket',\n\n\tType:\t\t\t\t\t\t'type',\n\tReplacePreviousChar:\t\t'replacePreviousChar',\n\tPaste:\t\t\t\t\t\t'paste',\n\n\tTab:\t\t\t\t\t\t'tab',\n\tIndent:\t\t\t\t\t\t'indent',\n\tOutdent:\t\t\t\t\t'outdent',\n\n\tDeleteLeft:\t\t\t\t\t'deleteLeft',\n\tDeleteRight:\t\t\t\t'deleteRight',\n\n\tDeleteWordLeft:\t\t\t\t'deleteWordLeft',\n\tDeleteWordStartLeft:\t\t'deleteWordStartLeft',\n\tDeleteWordEndLeft:\t\t\t'deleteWordEndLeft',\n\n\tDeleteWordRight:\t\t\t'deleteWordRight',\n\tDeleteWordStartRight:\t\t'deleteWordStartRight',\n\tDeleteWordEndRight:\t\t\t'deleteWordEndRight',\n\n\tDeleteAllLeft:\t\t\t\t'deleteAllLeft',\n\tDeleteAllRight:\t\t\t\t'deleteAllRight',\n\n\tRemoveSecondaryCursors: \t'removeSecondaryCursors',\n\tCancelSelection:\t\t\t'cancelSelection',\n\n\tCut:\t\t\t\t\t\t'cut',\n\n\tUndo:\t\t\t\t\t\t'undo',\n\tRedo:\t\t\t\t\t\t'redo',\n\n\tWordSelect:\t\t\t\t\t'wordSelect',\n\tWordSelectDrag:\t\t\t\t'wordSelectDrag',\n\tLastCursorWordSelect: \t\t'lastCursorWordSelect',\n\n\tLineSelect:\t\t\t\t\t'lineSelect',\n\tLineSelectDrag:\t\t\t\t'lineSelectDrag',\n\tLastCursorLineSelect:\t\t'lastCursorLineSelect',\n\tLastCursorLineSelectDrag:\t'lastCursorLineSelectDrag',\n\tLineInsertBefore:\t\t\t'lineInsertBefore',\n\tLineInsertAfter:\t\t\t'lineInsertAfter',\n\tLineBreakInsert:\t\t\t'lineBreakInsert',\n\n\tSelectAll:\t\t\t\t\t'selectAll',\n\n\tScrollLineUp:\t\t\t\t'scrollLineUp',\n\tScrollLineDown:\t\t\t\t'scrollLineDown',\n\n\tScrollPageUp:\t\t\t\t'scrollPageUp',\n\tScrollPageDown:\t\t\t\t'scrollPageDown'\n};\n\nexport enum TextEditorCursorStyle {\n\tLine = 1,\n\tBlock = 2,\n\tUnderline = 3\n}\n\n/**\n * @internal\n */\nexport function cursorStyleToString(cursorStyle:TextEditorCursorStyle): string {\n\tif (cursorStyle === TextEditorCursorStyle.Line) {\n\t\treturn 'line';\n\t} else if (cursorStyle === TextEditorCursorStyle.Block) {\n\t\treturn 'block';\n\t} else if (cursorStyle === TextEditorCursorStyle.Underline) {\n\t\treturn 'underline';\n\t} else {\n\t\tthrow new Error('cursorStyleToString: Unknown cursorStyle');\n\t}\n}\n\n/**\n * @internal\n */\nexport class ColorZone {\n\t_colorZoneBrand: void;\n\n\tfrom: number;\n\tto: number;\n\tcolorId: number;\n\tposition: OverviewRulerLane;\n\n\tconstructor(from:number, to:number, colorId:number, position: OverviewRulerLane) {\n\t\tthis.from = from|0;\n\t\tthis.to = to|0;\n\t\tthis.colorId = colorId|0;\n\t\tthis.position = position|0;\n\t}\n}\n\n/**\n * A zone in the overview ruler\n * @internal\n */\nexport class OverviewRulerZone {\n\t_overviewRulerZoneBrand: void;\n\n\tstartLineNumber: number;\n\tendLineNumber: number;\n\tposition: OverviewRulerLane;\n\tforceHeight: number;\n\n\tprivate _color: string;\n\tprivate _darkColor: string;\n\n\tprivate _colorZones: ColorZone[];\n\n\tconstructor(\n\t\tstartLineNumber: number, endLineNumber: number,\n\t\tposition: OverviewRulerLane,\n\t\tforceHeight: number,\n\t\tcolor: string, darkColor: string\n\t) {\n\t\tthis.startLineNumber = startLineNumber;\n\t\tthis.endLineNumber = endLineNumber;\n\t\tthis.position = position;\n\t\tthis.forceHeight = forceHeight;\n\t\tthis._color = color;\n\t\tthis._darkColor = darkColor;\n\t\tthis._colorZones = null;\n\t}\n\n\tpublic getColor(useDarkColor:boolean): string {\n\t\tif (useDarkColor) {\n\t\t\treturn this._darkColor;\n\t\t}\n\t\treturn this._color;\n\t}\n\n\tpublic equals(other:OverviewRulerZone): boolean {\n\t\treturn (\n\t\t\tthis.startLineNumber === other.startLineNumber\n\t\t\t&& this.endLineNumber === other.endLineNumber\n\t\t\t&& this.position === other.position\n\t\t\t&& this.forceHeight === other.forceHeight\n\t\t\t&& this._color === other._color\n\t\t\t&& this._darkColor === other._darkColor\n\t\t);\n\t}\n\n\tpublic compareTo(other:OverviewRulerZone): number {\n\t\tif (this.startLineNumber === other.startLineNumber) {\n\t\t\tif (this.endLineNumber === other.endLineNumber) {\n\t\t\t\tif (this.forceHeight === other.forceHeight) {\n\t\t\t\t\tif (this.position === other.position) {\n\t\t\t\t\t\tif (this._darkColor === other._darkColor) {\n\t\t\t\t\t\t\tif (this._color === other._color) {\n\t\t\t\t\t\t\t\treturn 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn this._color < other._color ? -1 : 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn this._darkColor < other._darkColor ? -1 : 1;\n\t\t\t\t\t}\n\t\t\t\t\treturn this.position - other.position;\n\t\t\t\t}\n\t\t\t\treturn this.forceHeight - other.forceHeight;\n\t\t\t}\n\t\t\treturn this.endLineNumber - other.endLineNumber;\n\t\t}\n\t\treturn this.startLineNumber - other.startLineNumber;\n\t}\n\n\tpublic setColorZones(colorZones:ColorZone[]): void {\n\t\tthis._colorZones = colorZones;\n\t}\n\n\tpublic getColorZones(): ColorZone[] {\n\t\treturn this._colorZones;\n\t}\n}\n\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {Range} from 'vs/editor/common/core/range';\nimport {ISelection, SelectionDirection} from 'vs/editor/common/editorCommon';\n\n/**\n * A selection in the editor.\n */\nexport class Selection extends Range {\n\tpublic selectionStartLineNumber: number;\n\tpublic selectionStartColumn: number;\n\tpublic positionLineNumber: number;\n\tpublic positionColumn: number;\n\n\tconstructor(selectionStartLineNumber: number, selectionStartColumn: number, positionLineNumber: number, positionColumn: number) {\n\t\tsuper(selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn);\n\t\tthis.selectionStartLineNumber = selectionStartLineNumber;\n\t\tthis.selectionStartColumn = selectionStartColumn;\n\t\tthis.positionLineNumber = positionLineNumber;\n\t\tthis.positionColumn = positionColumn;\n\t}\n\n\t/**\n\t * Clone this selection.\n\t */\n\tpublic clone(): Selection {\n\t\treturn new Selection(this.selectionStartLineNumber, this.selectionStartColumn, this.positionLineNumber, this.positionColumn);\n\t}\n\n\tpublic toString(): string {\n\t\treturn '[' + this.selectionStartLineNumber + ',' + this.selectionStartColumn + ' -> ' + this.positionLineNumber + ',' + this.positionColumn + ']';\n\t}\n\n\t/**\n\t * Test if equals other selection.\n\t */\n\tpublic equalsSelection(other: ISelection): boolean {\n\t\treturn (\n\t\t\tSelection.selectionsEqual(this, other)\n\t\t);\n\t}\n\n\t/**\n\t * Get directions (LTR or RTL).\n\t */\n\tpublic getDirection(): SelectionDirection {\n\t\tif (this.selectionStartLineNumber === this.startLineNumber && this.selectionStartColumn === this.startColumn) {\n\t\t\treturn SelectionDirection.LTR;\n\t\t}\n\t\treturn SelectionDirection.RTL;\n\t}\n\n\t/**\n\t * Create a new selection with a different `positionLineNumber` and `positionColumn`.\n\t */\n\tpublic setEndPosition(endLineNumber: number, endColumn: number): Selection {\n\t\tif (this.getDirection() === SelectionDirection.LTR) {\n\t\t\treturn new Selection(this.startLineNumber, this.startColumn, endLineNumber, endColumn);\n\t\t}\n\t\treturn new Selection(endLineNumber, endColumn, this.startLineNumber, this.startColumn);\n\t}\n\n\t/**\n\t * Create a new selection with a different `selectionStartLineNumber` and `selectionStartColumn`.\n\t */\n\tpublic setStartPosition(startLineNumber: number, startColumn: number): Selection {\n\t\tif (this.getDirection() === SelectionDirection.LTR) {\n\t\t\treturn new Selection(startLineNumber, startColumn, this.endLineNumber, this.endColumn);\n\t\t}\n\t\treturn new Selection(this.endLineNumber, this.endColumn, startLineNumber, startColumn);\n\t}\n\n\t// ----\n\n\tpublic static createSelection(selectionStartLineNumber: number, selectionStartColumn: number, positionLineNumber: number, positionColumn: number): Selection {\n\t\treturn new Selection(selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn);\n\t}\n\n\tpublic static liftSelection(sel:ISelection): Selection {\n\t\treturn new Selection(sel.selectionStartLineNumber, sel.selectionStartColumn, sel.positionLineNumber, sel.positionColumn);\n\t}\n\n\tpublic static selectionsEqual(a:ISelection, b:ISelection): boolean {\n\t\treturn (\n\t\t\ta.selectionStartLineNumber === b.selectionStartLineNumber &&\n\t\t\ta.selectionStartColumn === b.selectionStartColumn &&\n\t\t\ta.positionLineNumber === b.positionLineNumber &&\n\t\t\ta.positionColumn === b.positionColumn\n\t\t);\n\t}\n\n\tpublic static selectionsArrEqual(a:ISelection[], b:ISelection[]): boolean {\n\t\tif (a && !b || !a && b) {\n\t\t\treturn false;\n\t\t}\n\t\tif (!a && !b) {\n\t\t\treturn true;\n\t\t}\n\t\tif (a.length !== b.length) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (var i = 0, len = a.length; i < len; i++) {\n\t\t\tif (!this.selectionsEqual(a[i], b[i])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic static isISelection(obj: any): boolean {\n\t\treturn (\n\t\t\tobj\n\t\t\t&& (typeof obj.selectionStartLineNumber === 'number')\n\t\t\t&& (typeof obj.selectionStartColumn === 'number')\n\t\t\t&& (typeof obj.positionLineNumber === 'number')\n\t\t\t&& (typeof obj.positionColumn === 'number')\n\t\t);\n\t}\n\n\tpublic static createWithDirection(startLineNumber: number, startColumn: number, endLineNumber: number, endColumn: number, direction:SelectionDirection): Selection {\n\n\t\tif (direction === SelectionDirection.LTR) {\n\t\t\treturn new Selection(startLineNumber, startColumn, endLineNumber, endColumn);\n\t\t}\n\n\t\treturn new Selection(endLineNumber, endColumn, startLineNumber, startColumn);\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nexport class PrefixSumIndexOfResult {\n\t_prefixSumIndexOfResultBrand: void;\n\n\tindex: number;\n\tremainder: number;\n\n\tconstructor(index:number, remainder:number) {\n\t\tthis.index = index;\n\t\tthis.remainder = remainder;\n\t}\n}\n\nexport class PrefixSumComputer {\n\n\t/**\n\t * values[i] is the value at index i\n\t */\n\tprivate values:number[];\n\n\t/**\n\t * prefixSum[i] = SUM(heights[j]), 0 <= j <= i\n\t */\n\tprivate prefixSum:number[];\n\n\t/**\n\t * prefixSum[i], 0 <= i <= prefixSumValidIndex can be trusted\n\t */\n\tprivate prefixSumValidIndex:number;\n\n\tconstructor(values:number[]) {\n\t\tthis.values = values;\n\t\tthis.prefixSum = [];\n\t\tfor (let i = 0, len = this.values.length; i < len; i++) {\n\t\t\tthis.prefixSum[i] = 0;\n\t\t}\n\t\tthis.prefixSumValidIndex = -1;\n\t}\n\n\tpublic getCount(): number {\n\t\treturn this.values.length;\n\t}\n\n\tpublic insertValue(insertIndex:number, value:number): void {\n\t\tinsertIndex = Math.floor(insertIndex); //@perf\n\t\tvalue = Math.floor(value); //@perf\n\n\t\tthis.values.splice(insertIndex, 0, value);\n\t\tthis.prefixSum.splice(insertIndex, 0, 0);\n\t\tif (insertIndex - 1 < this.prefixSumValidIndex) {\n\t\t\tthis.prefixSumValidIndex = insertIndex - 1;\n\t\t}\n\t}\n\n\tpublic insertValues(insertIndex: number, values: number[]): void {\n\t\tinsertIndex = Math.floor(insertIndex); //@perf\n\n\t\tif (values.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.values = this.values.slice(0, insertIndex).concat(values).concat(this.values.slice(insertIndex));\n\t\tthis.prefixSum = this.prefixSum.slice(0, insertIndex).concat(PrefixSumComputer._zeroArray(values.length)).concat(this.prefixSum.slice(insertIndex));\n\n\t\tif (insertIndex - 1 < this.prefixSumValidIndex) {\n\t\t\tthis.prefixSumValidIndex = insertIndex - 1;\n\t\t}\n\t}\n\n\tprivate static _zeroArray(count: number): number[] {\n\t\tcount = Math.floor(count); //@perf\n\n\t\tlet r: number[] = [];\n\t\tfor (let i = 0; i < count; i++) {\n\t\t\tr[i] = 0;\n\t\t}\n\t\treturn r;\n\t}\n\n\tpublic changeValue(index:number, value:number): void {\n\t\tindex = Math.floor(index); //@perf\n\t\tvalue = Math.floor(value); //@perf\n\n\t\tif (this.values[index] === value) {\n\t\t\treturn;\n\t\t}\n\t\tthis.values[index] = value;\n\t\tif (index - 1 < this.prefixSumValidIndex) {\n\t\t\tthis.prefixSumValidIndex = index - 1;\n\t\t}\n\t}\n\n\tpublic removeValues(startIndex:number, cnt:number): void {\n\t\tstartIndex = Math.floor(startIndex); //@perf\n\t\tcnt = Math.floor(cnt); //@perf\n\n\t\tthis.values.splice(startIndex, cnt);\n\t\tthis.prefixSum.splice(startIndex, cnt);\n\t\tif (startIndex - 1 < this.prefixSumValidIndex) {\n\t\t\tthis.prefixSumValidIndex = startIndex - 1;\n\t\t}\n\t}\n\n\tpublic getTotalValue(): number {\n\t\tif (this.values.length === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn this.getAccumulatedValue(this.values.length - 1);\n\t}\n\n\tpublic getAccumulatedValue(index:number): number {\n\t\tindex = Math.floor(index); //@perf\n\n\t\tif (index < 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (index <= this.prefixSumValidIndex) {\n\t\t\treturn this.prefixSum[index];\n\t\t}\n\n\t\tlet startIndex = this.prefixSumValidIndex + 1;\n\t\tif (startIndex === 0) {\n\t\t\tthis.prefixSum[0] = this.values[0];\n\t\t\tstartIndex++;\n\t\t}\n\n\t\tif (index >= this.values.length) {\n\t\t\tindex = this.values.length - 1;\n\t\t}\n\n\t\tfor (let i = startIndex; i <= index; i++) {\n\t\t\tthis.prefixSum[i] = this.prefixSum[i - 1] + this.values[i];\n\t\t}\n\t\tthis.prefixSumValidIndex = Math.max(this.prefixSumValidIndex, index);\n\t\treturn this.prefixSum[index];\n\t}\n\n\tpublic getIndexOf(accumulatedValue:number): PrefixSumIndexOfResult {\n\t\taccumulatedValue = Math.floor(accumulatedValue); //@perf\n\n\t\tlet low = 0;\n\t\tlet high = this.values.length - 1;\n\t\tlet mid:number;\n\t\tlet midStop:number;\n\t\tlet midStart:number;\n\n\t\twhile (low <= high) {\n\t\t\tmid = low + ( (high-low)/2 ) | 0;\n\n\t\t\tmidStop = this.getAccumulatedValue(mid);\n\t\t\tmidStart = midStop - this.values[mid];\n\n\t\t\tif (accumulatedValue < midStart) {\n\t\t\t\thigh = mid - 1;\n\t\t\t} else if (accumulatedValue >= midStop) {\n\t\t\t\tlow = mid + 1;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn new PrefixSumIndexOfResult(mid, accumulatedValue - midStart);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport URI from 'vs/base/common/uri';\nimport {IModelContentChangedEvent2, IPosition, IRange} from 'vs/editor/common/editorCommon';\nimport {PrefixSumComputer} from 'vs/editor/common/viewModel/prefixSumComputer';\n\nexport class MirrorModel2 {\n\n\tprotected _uri: URI;\n\tprotected _lines: string[];\n\tprotected _eol: string;\n\tprotected _versionId: number;\n\tprotected _lineStarts: PrefixSumComputer;\n\n\tconstructor(uri: URI, lines: string[], eol: string, versionId: number) {\n\t\tthis._uri = uri;\n\t\tthis._lines = lines;\n\t\tthis._eol = eol;\n\t\tthis._versionId = versionId;\n\t}\n\n\tdispose(): void {\n\t\tthis._lines.length = 0;\n\t}\n\n\tget version(): number {\n\t\treturn this._versionId;\n\t}\n\n\tgetText(): string {\n\t\treturn this._lines.join(this._eol);\n\t}\n\n\tonEvents(events: IModelContentChangedEvent2[]): void {\n\t\tlet newEOL: string = null;\n\t\tfor (let i = 0, len = events.length; i < len; i++) {\n\t\t\tlet e = events[i];\n\t\t\tif (e.eol) {\n\t\t\t\tnewEOL = e.eol;\n\t\t\t}\n\t\t}\n\t\tif (newEOL && newEOL !== this._eol) {\n\t\t\tthis._eol = newEOL;\n\t\t\tthis._lineStarts = null;\n\t\t}\n\n\t\t// Update my lines\n\t\tlet lastVersionId = -1;\n\t\tfor (let i = 0, len = events.length; i < len; i++) {\n\t\t\tlet e = events[i];\n\n\t\t\tthis._acceptDeleteRange(e.range);\n\t\t\tthis._acceptInsertText({\n\t\t\t\tlineNumber: e.range.startLineNumber,\n\t\t\t\tcolumn: e.range.startColumn\n\t\t\t}, e.text);\n\t\t\tlastVersionId = Math.max(lastVersionId, e.versionId);\n\t\t}\n\t\tif (lastVersionId !== -1) {\n\t\t\tthis._versionId = lastVersionId;\n\t\t}\n\t}\n\n\tprotected _ensureLineStarts(): void {\n\t\tif (!this._lineStarts) {\n\t\t\tconst lineStartValues:number[] = [];\n\t\t\tconst eolLength = this._eol.length;\n\t\t\tfor (let i = 0, len = this._lines.length; i < len; i++) {\n\t\t\t\tlineStartValues.push(this._lines[i].length + eolLength);\n\t\t\t}\n\t\t\tthis._lineStarts = new PrefixSumComputer(lineStartValues);\n\t\t}\n\t}\n\n\t/**\n\t * All changes to a line's text go through this method\n\t */\n\tprivate _setLineText(lineIndex:number, newValue:string): void {\n\t\tthis._lines[lineIndex] = newValue;\n\t\tif (this._lineStarts) {\n\t\t\t// update prefix sum\n\t\t\tthis._lineStarts.changeValue(lineIndex, this._lines[lineIndex].length + this._eol.length);\n\t\t}\n\t}\n\n\tprivate _acceptDeleteRange(range: IRange): void {\n\n\t\tif (range.startLineNumber === range.endLineNumber) {\n\t\t\tif (range.startColumn === range.endColumn) {\n\t\t\t\t// Nothing to delete\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// Delete text on the affected line\n\t\t\tthis._setLineText(range.startLineNumber - 1,\n\t\t\t\tthis._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\n\t\t\t\t+ this._lines[range.startLineNumber - 1].substring(range.endColumn - 1)\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\t// Take remaining text on last line and append it to remaining text on first line\n\t\tthis._setLineText(range.startLineNumber - 1,\n\t\t\tthis._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\n\t\t\t+ this._lines[range.endLineNumber - 1].substring(range.endColumn - 1)\n\t\t);\n\n\t\t// Delete middle lines\n\t\tthis._lines.splice(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n\t\tif (this._lineStarts) {\n\t\t\t// update prefix sum\n\t\t\tthis._lineStarts.removeValues(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n\t\t}\n\t}\n\n\tprivate _acceptInsertText(position: IPosition, insertText:string): void {\n\t\tif (insertText.length === 0) {\n\t\t\t// Nothing to insert\n\t\t\treturn;\n\t\t}\n\t\tlet insertLines = insertText.split(/\\r\\n|\\r|\\n/);\n\t\tif (insertLines.length === 1) {\n\t\t\t// Inserting text on one line\n\t\t\tthis._setLineText(position.lineNumber - 1,\n\t\t\t\tthis._lines[position.lineNumber - 1].substring(0, position.column - 1)\n\t\t\t\t+ insertLines[0]\n\t\t\t\t+ this._lines[position.lineNumber - 1].substring(position.column - 1)\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\t// Append overflowing text from first line to the end of text to insert\n\t\tinsertLines[insertLines.length - 1] += this._lines[position.lineNumber - 1].substring(position.column - 1);\n\n\t\t// Delete overflowing text from first line and insert text on first line\n\t\tthis._setLineText(position.lineNumber - 1,\n\t\t\tthis._lines[position.lineNumber - 1].substring(0, position.column - 1)\n\t\t\t+ insertLines[0]\n\t\t);\n\n\t\t// Insert new lines & store lengths\n\t\tlet newLengths:number[] = new Array<number>(insertLines.length - 1);\n\t\tfor (let i = 1; i < insertLines.length; i++) {\n\t\t\tthis._lines.splice(position.lineNumber + i - 1, 0, insertLines[i]);\n\t\t\tnewLengths[i - 1] = insertLines[i].length + this._eol.length;\n\t\t}\n\n\t\tif (this._lineStarts) {\n\t\t\t// update prefix sum\n\t\t\tthis._lineStarts.insertValues(position.lineNumber, newLengths);\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {IDisposable} from 'vs/base/common/lifecycle';\nimport {onUnexpectedError} from 'vs/base/common/errors';\n\nexport default class CallbackList {\n\n\tprivate _callbacks: Function[];\n\tprivate _contexts: any[];\n\n\tpublic add(callback: Function, context: any = null, bucket?: IDisposable[]): void {\n\t\tif (!this._callbacks) {\n\t\t\tthis._callbacks = [];\n\t\t\tthis._contexts = [];\n\t\t}\n\t\tthis._callbacks.push(callback);\n\t\tthis._contexts.push(context);\n\n\t\tif (Array.isArray(bucket)) {\n\t\t\tbucket.push({ dispose: () => this.remove(callback, context) });\n\t\t}\n\t}\n\n\tpublic remove(callback: Function, context: any = null): void {\n\t\tif (!this._callbacks) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet foundCallbackWithDifferentContext = false;\n\t\tfor (var i = 0, len = this._callbacks.length; i < len; i++) {\n\t\t\tif (this._callbacks[i] === callback) {\n\t\t\t\tif (this._contexts[i] === context) {\n\t\t\t\t\t// callback & context match => remove it\n\t\t\t\t\tthis._callbacks.splice(i, 1);\n\t\t\t\t\tthis._contexts.splice(i, 1);\n\t\t\t\t\treturn;\n\t\t\t\t} else {\n\t\t\t\t\tfoundCallbackWithDifferentContext = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (foundCallbackWithDifferentContext) {\n\t\t\tthrow new Error('When adding a listener with a context, you should remove it with the same context');\n\t\t}\n\t}\n\n\tpublic invoke(...args: any[]): any[] {\n\t\tif (!this._callbacks) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst ret: any[] = [],\n\t\t\tcallbacks = this._callbacks.slice(0),\n\t\t\tcontexts = this._contexts.slice(0);\n\n\t\tfor (var i = 0, len = callbacks.length; i < len; i++) {\n\t\t\ttry {\n\t\t\t\tret.push(callbacks[i].apply(contexts[i], args));\n\t\t\t} catch (e) {\n\t\t\t\tonUnexpectedError(e);\n\t\t\t}\n\t\t}\n\t\treturn ret;\n\t}\n\n\tpublic isEmpty(): boolean {\n\t\treturn !this._callbacks || this._callbacks.length === 0;\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._callbacks = undefined;\n\t\tthis._contexts = undefined;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {IDisposable}  from 'vs/base/common/lifecycle';\nimport CallbackList from 'vs/base/common/callbackList';\nimport {EventEmitter} from 'vs/base/common/eventEmitter';\n\n/**\n * To an event a function with one or zero parameters\n * can be subscribed. The event is the subscriber function itself.\n */\ninterface Event<T> {\n\t(listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[]): IDisposable;\n}\n\nnamespace Event {\n\tconst _disposable = { dispose() { } };\n\texport const None: Event<any> = function() { return _disposable; };\n}\n\nexport default Event;\n\nexport interface EmitterOptions {\n\tonFirstListenerAdd?: Function;\n\tonLastListenerRemove?: Function;\n}\n\n/**\n * The Emitter can be used to expose an Event to the public\n * to fire it from the insides.\n * Sample:\n\tclass Document {\n\n\t\tprivate _onDidChange = new Emitter<(value:string)=>any>();\n\n\t\tpublic onDidChange = this._onDidChange.event;\n\n\t\t// getter-style\n\t\t// get onDidChange(): Event<(value:string)=>any> {\n\t\t// \treturn this._onDidChange.event;\n\t\t// }\n\n\t\tprivate _doIt() {\n\t\t\t//...\n\t\t\tthis._onDidChange.fire(value);\n\t\t}\n\t}\n */\nexport class Emitter<T> {\n\n\tprivate static _noop = function () { };\n\n\tprivate _event: Event<T>;\n\tprivate _callbacks: CallbackList;\n\tprivate _disposed: boolean;\n\n\tconstructor(private _options?: EmitterOptions) {\n\n\t}\n\n\t/**\n\t * For the public to allow to subscribe\n\t * to events from this Emitter\n\t */\n\tget event(): Event<T> {\n\t\tif (!this._event) {\n\t\t\tthis._event = (listener: (e: T) => any,  thisArgs?: any, disposables?: IDisposable[]) => {\n\t\t\t\tif (!this._callbacks) {\n\t\t\t\t\tthis._callbacks = new CallbackList();\n\t\t\t\t}\n\t\t\t\tif (this._options && this._options.onFirstListenerAdd && this._callbacks.isEmpty()) {\n\t\t\t\t\tthis._options.onFirstListenerAdd(this);\n\t\t\t\t}\n\t\t\t\tthis._callbacks.add(listener, thisArgs);\n\n\t\t\t\tlet result: IDisposable;\n\t\t\t\tresult = {\n\t\t\t\t\tdispose: () => {\n\t\t\t\t\t\tresult.dispose = Emitter._noop;\n\t\t\t\t\t\tif (!this._disposed) {\n\t\t\t\t\t\t\tthis._callbacks.remove(listener, thisArgs);\n\t\t\t\t\t\t\tif(this._options && this._options.onLastListenerRemove && this._callbacks.isEmpty()) {\n\t\t\t\t\t\t\t\tthis._options.onLastListenerRemove(this);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tif(Array.isArray(disposables)) {\n\t\t\t\t\tdisposables.push(result);\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t};\n\t\t}\n\t\treturn this._event;\n\t}\n\n\t/**\n\t * To be kept private to fire an event to\n\t * subscribers\n\t */\n\tfire(event?: T): any {\n\t\tif (this._callbacks) {\n\t\t\tthis._callbacks.invoke.call(this._callbacks, event);\n\t\t}\n\t}\n\n\tdispose() {\n\t\tif(this._callbacks) {\n\t\t\tthis._callbacks.dispose();\n\t\t\tthis._callbacks = undefined;\n\t\t\tthis._disposed = true;\n\t\t}\n\t}\n}\n\n/**\n * Creates an Event which is backed-up by the event emitter. This allows\n * to use the existing eventing pattern and is likely using less memory.\n * Sample:\n *\n * \tclass Document {\n *\n *\t\tprivate _eventbus = new EventEmitter();\n *\n *\t\tpublic onDidChange = fromEventEmitter(this._eventbus, 'changed');\n *\n *\t\t// getter-style\n *\t\t// get onDidChange(): Event<(value:string)=>any> {\n *\t\t// \tcache fromEventEmitter result and return\n *\t\t// }\n *\n *\t\tprivate _doIt() {\n *\t\t\t// ...\n *\t\t\tthis._eventbus.emit('changed', value)\n *\t\t}\n *\t}\n */\nexport function fromEventEmitter<T>(emitter: EventEmitter, eventType: string): Event<T> {\n\treturn function (listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[]): IDisposable {\n\t\tconst result = emitter.addListener2(eventType, function () {\n\t\t\tlistener.apply(thisArgs, arguments);\n\t\t});\n\t\tif(Array.isArray(disposables)) {\n\t\t\tdisposables.push(result);\n\t\t}\n\t\treturn result;\n\t};\n}\n\nexport function mapEvent<I,O>(event: Event<I>, map: (i:I)=>O): Event<O> {\n\treturn (listener, thisArgs?, disposables?) =>\n\t\tevent(i => listener(map(i)), thisArgs, disposables);\n}\n\nenum EventDelayerState {\n\tIdle,\n\tRunning\n}\n\n/**\n * The EventDelayer is useful in situations in which you want\n * to delay firing your events during some code.\n * You can wrap that code and be sure that the event will not\n * be fired during that wrap.\n *\n * ```\n * const emitter: Emitter;\n * const delayer = new EventDelayer();\n * const delayedEvent = delayer.delay(emitter.event);\n *\n * delayedEvent(console.log);\n *\n * delayer.wrap(() => {\n *   emitter.fire(); // event will not be fired yet\n * });\n *\n * // event will only be fired at this point\n * ```\n */\nexport class EventBufferer {\n\n\tprivate buffers: Function[][] = [];\n\n\twrapEvent<T>(event: Event<T>): Event<T> {\n\t\treturn (listener, thisArgs?, disposables?) => {\n\t\t\treturn event(i => {\n\t\t\t\tconst buffer = this.buffers[this.buffers.length - 1];\n\n\t\t\t\tif (buffer) {\n\t\t\t\t\tbuffer.push(() => listener.call(thisArgs, i));\n\t\t\t\t} else {\n\t\t\t\t\tlistener.call(thisArgs, i);\n\t\t\t\t}\n\t\t\t}, void 0, disposables);\n\t\t};\n\t}\n\n\tbufferEvents(fn: () => void): void {\n\t\tconst buffer = [];\n\t\tthis.buffers.push(buffer);\n\t\tfn();\n\t\tthis.buffers.pop();\n\t\tbuffer.forEach(flush => flush());\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport Event, {Emitter} from 'vs/base/common/event';\n\nexport interface CancellationToken {\n\tisCancellationRequested: boolean;\n\tonCancellationRequested: Event<any>;\n}\n\nexport namespace CancellationToken {\n\n\texport const None: CancellationToken = Object.freeze({\n\t\tisCancellationRequested: false,\n\t\tonCancellationRequested: Event.None\n\t});\n\n\texport const Cancelled: CancellationToken = Object.freeze({\n\t\tisCancellationRequested: true,\n\t\tonCancellationRequested: Event.None\n\t});\n}\n\nconst shortcutEvent: Event<any> = Object.freeze(function(callback, context?) {\n\tlet handle = setTimeout(callback.bind(context), 0);\n\treturn { dispose() { clearTimeout(handle); } };\n});\n\nclass MutableToken implements CancellationToken {\n\n\tprivate _isCancelled: boolean = false;\n\tprivate _emitter: Emitter<any>;\n\n\tpublic cancel() {\n\t\tif (!this._isCancelled) {\n\t\t\tthis._isCancelled = true;\n\t\t\tif (this._emitter) {\n\t\t\t\tthis._emitter.fire(undefined);\n\t\t\t\tthis._emitter = undefined;\n\t\t\t}\n\t\t}\n\t}\n\n\tget isCancellationRequested(): boolean {\n\t\treturn this._isCancelled;\n\t}\n\n\tget onCancellationRequested(): Event<any> {\n\t\tif (this._isCancelled) {\n\t\t\treturn shortcutEvent;\n\t\t}\n\t\tif (!this._emitter) {\n\t\t\tthis._emitter = new Emitter<any>();\n\t\t}\n\t\treturn this._emitter.event;\n\t}\n}\n\nexport class CancellationTokenSource {\n\n\tprivate _token: CancellationToken;\n\n\tget token(): CancellationToken {\n\t\tif (!this._token) {\n\t\t\t// be lazy and create the token only when\n\t\t\t// actually needed\n\t\t\tthis._token = new MutableToken();\n\t\t}\n\t\treturn this._token;\n\t}\n\n\tcancel(): void {\n\t\tif (!this._token) {\n\t\t\t// save an object by returning the default\n\t\t\t// cancelled token when cancellation happens\n\t\t\t// before someone asks for the token\n\t\t\tthis._token = CancellationToken.Cancelled;\n\t\t} else {\n\t\t\t(<MutableToken>this._token).cancel();\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.cancel();\n\t}\n}\n","define(\"vs/nls!vs/editor/common/config/defaultConfig\",['vs/nls', 'vs/nls!vs/editor/browser/standalone/standaloneWorker'], function(nls, data) { return nls.create(\"vs/editor/common/config/defaultConfig\", data); });","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport * as nls from 'vs/nls';\nimport * as defaultPlatform from 'vs/base/common/platform';\nimport {IHTMLContentElement} from 'vs/base/common/htmlContent';\n\nexport interface ISimplifiedPlatform {\n\tisMacintosh: boolean;\n\tisWindows: boolean;\n}\n\n/**\n * Virtual Key Codes, the value does not hold any inherent meaning.\n * Inspired somewhat from https://msdn.microsoft.com/en-us/library/windows/desktop/dd375731(v=vs.85).aspx\n * But these are \"more general\", as they should work across browsers & OS`s.\n */\nexport enum KeyCode {\n\t/**\n\t * Placed first to cover the 0 value of the enum.\n\t */\n\tUnknown,\n\n\tBackspace,\n\tTab,\n\tEnter,\n\tShift,\n\tCtrl,\n\tAlt,\n\tPauseBreak,\n\tCapsLock,\n\tEscape,\n\tSpace,\n\tPageUp,\n\tPageDown,\n\tEnd,\n\tHome,\n\tLeftArrow,\n\tUpArrow,\n\tRightArrow,\n\tDownArrow,\n\tInsert,\n\tDelete,\n\n\tKEY_0,\n\tKEY_1,\n\tKEY_2,\n\tKEY_3,\n\tKEY_4,\n\tKEY_5,\n\tKEY_6,\n\tKEY_7,\n\tKEY_8,\n\tKEY_9,\n\n\tKEY_A,\n\tKEY_B,\n\tKEY_C,\n\tKEY_D,\n\tKEY_E,\n\tKEY_F,\n\tKEY_G,\n\tKEY_H,\n\tKEY_I,\n\tKEY_J,\n\tKEY_K,\n\tKEY_L,\n\tKEY_M,\n\tKEY_N,\n\tKEY_O,\n\tKEY_P,\n\tKEY_Q,\n\tKEY_R,\n\tKEY_S,\n\tKEY_T,\n\tKEY_U,\n\tKEY_V,\n\tKEY_W,\n\tKEY_X,\n\tKEY_Y,\n\tKEY_Z,\n\n\tMeta,\n\tContextMenu,\n\n\tF1,\n\tF2,\n\tF3,\n\tF4,\n\tF5,\n\tF6,\n\tF7,\n\tF8,\n\tF9,\n\tF10,\n\tF11,\n\tF12,\n\tF13,\n\tF14,\n\tF15,\n\tF16,\n\tF17,\n\tF18,\n\tF19,\n\n\tNumLock,\n\tScrollLock,\n\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the ';:' key\n\t */\n\tUS_SEMICOLON,\n\t/**\n\t * For any country/region, the '+' key\n\t * For the US standard keyboard, the '=+' key\n\t */\n\tUS_EQUAL,\n\t/**\n\t * For any country/region, the ',' key\n\t * For the US standard keyboard, the ',<' key\n\t */\n\tUS_COMMA,\n\t/**\n\t * For any country/region, the '-' key\n\t * For the US standard keyboard, the '-_' key\n\t */\n\tUS_MINUS,\n\t/**\n\t * For any country/region, the '.' key\n\t * For the US standard keyboard, the '.>' key\n\t */\n\tUS_DOT,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the '/?' key\n\t */\n\tUS_SLASH,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the '`~' key\n\t */\n\tUS_BACKTICK,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the '[{' key\n\t */\n\tUS_OPEN_SQUARE_BRACKET,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the '\\|' key\n\t */\n\tUS_BACKSLASH,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the ']}' key\n\t */\n\tUS_CLOSE_SQUARE_BRACKET,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the ''\"' key\n\t */\n\tUS_QUOTE,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t */\n\tOEM_8,\n\t/**\n\t * Either the angle bracket key or the backslash key on the RT 102-key keyboard.\n\t */\n\tOEM_102,\n\n\tNUMPAD_0, // VK_NUMPAD0, 0x60, Numeric keypad 0 key\n\tNUMPAD_1, // VK_NUMPAD1, 0x61, Numeric keypad 1 key\n\tNUMPAD_2, // VK_NUMPAD2, 0x62, Numeric keypad 2 key\n\tNUMPAD_3, // VK_NUMPAD3, 0x63, Numeric keypad 3 key\n\tNUMPAD_4, // VK_NUMPAD4, 0x64, Numeric keypad 4 key\n\tNUMPAD_5, // VK_NUMPAD5, 0x65, Numeric keypad 5 key\n\tNUMPAD_6, // VK_NUMPAD6, 0x66, Numeric keypad 6 key\n\tNUMPAD_7, // VK_NUMPAD7, 0x67, Numeric keypad 7 key\n\tNUMPAD_8, // VK_NUMPAD8, 0x68, Numeric keypad 8 key\n\tNUMPAD_9, // VK_NUMPAD9, 0x69, Numeric keypad 9 key\n\n\tNUMPAD_MULTIPLY,\t// VK_MULTIPLY, 0x6A, Multiply key\n\tNUMPAD_ADD,\t\t\t// VK_ADD, 0x6B, Add key\n\tNUMPAD_SEPARATOR,\t// VK_SEPARATOR, 0x6C, Separator key\n\tNUMPAD_SUBTRACT,\t// VK_SUBTRACT, 0x6D, Subtract key\n\tNUMPAD_DECIMAL,\t\t// VK_DECIMAL, 0x6E, Decimal key\n\tNUMPAD_DIVIDE,\t\t// VK_DIVIDE, 0x6F,\n\n\t/**\n\t * Placed last to cover the length of the enum.\n\t */\n\tMAX_VALUE\n}\n\ninterface IReverseMap {\n\t[str:string]:KeyCode;\n}\n\nclass Mapping {\n\n\t_fromKeyCode: string[];\n\t_toKeyCode: IReverseMap;\n\n\tconstructor(fromKeyCode: string[], toKeyCode: IReverseMap) {\n\t\tthis._fromKeyCode = fromKeyCode;\n\t\tthis._toKeyCode = toKeyCode;\n\t}\n\n\tfromKeyCode(keyCode:KeyCode): string {\n\t\treturn this._fromKeyCode[keyCode];\n\t}\n\n\ttoKeyCode(str:string): KeyCode {\n\t\tif (this._toKeyCode.hasOwnProperty(str)) {\n\t\t\treturn this._toKeyCode[str];\n\t\t}\n\t\treturn KeyCode.Unknown;\n\t}\n\n}\n\nfunction createMapping(fill1:(map:string[])=>void, fill2:(reverseMap:IReverseMap)=>void): Mapping {\n\tlet MAP: string[] = [];\n\tfill1(MAP);\n\n\tlet REVERSE_MAP: IReverseMap = {};\n\tfor (let i = 0, len = MAP.length; i < len; i++) {\n\t\tif (!MAP[i]) {\n\t\t\tcontinue;\n\t\t}\n\t\tREVERSE_MAP[MAP[i]] = i;\n\t}\n\tfill2(REVERSE_MAP);\n\n\tlet FINAL_REVERSE_MAP: IReverseMap = {};\n\tfor (let entry in REVERSE_MAP) {\n\t\tif (REVERSE_MAP.hasOwnProperty(entry)) {\n\t\t\tFINAL_REVERSE_MAP[entry] = REVERSE_MAP[entry];\n\t\t\tFINAL_REVERSE_MAP[entry.toLowerCase()] = REVERSE_MAP[entry];\n\t\t}\n\t}\n\n\treturn new Mapping(MAP, FINAL_REVERSE_MAP);\n}\n\nlet STRING = createMapping((TO_STRING_MAP) => {\n\tTO_STRING_MAP[KeyCode.Unknown] \t\t= 'unknown';\n\n\tTO_STRING_MAP[KeyCode.Backspace] \t= 'Backspace';\n\tTO_STRING_MAP[KeyCode.Tab] \t\t\t= 'Tab';\n\tTO_STRING_MAP[KeyCode.Enter] \t\t= 'Enter';\n\tTO_STRING_MAP[KeyCode.Shift] \t\t= 'Shift';\n\tTO_STRING_MAP[KeyCode.Ctrl] \t\t= 'Ctrl';\n\tTO_STRING_MAP[KeyCode.Alt] \t\t\t= 'Alt';\n\tTO_STRING_MAP[KeyCode.PauseBreak] \t= 'PauseBreak';\n\tTO_STRING_MAP[KeyCode.CapsLock] \t= 'CapsLock';\n\tTO_STRING_MAP[KeyCode.Escape] \t\t= 'Escape';\n\tTO_STRING_MAP[KeyCode.Space] \t\t= 'Space';\n\tTO_STRING_MAP[KeyCode.PageUp] \t\t= 'PageUp';\n\tTO_STRING_MAP[KeyCode.PageDown] \t= 'PageDown';\n\tTO_STRING_MAP[KeyCode.End] \t\t\t= 'End';\n\tTO_STRING_MAP[KeyCode.Home] \t\t= 'Home';\n\tTO_STRING_MAP[KeyCode.LeftArrow] \t= 'LeftArrow';\n\tTO_STRING_MAP[KeyCode.UpArrow] \t\t= 'UpArrow';\n\tTO_STRING_MAP[KeyCode.RightArrow] \t= 'RightArrow';\n\tTO_STRING_MAP[KeyCode.DownArrow] \t= 'DownArrow';\n\tTO_STRING_MAP[KeyCode.Insert] \t\t= 'Insert';\n\tTO_STRING_MAP[KeyCode.Delete] \t\t= 'Delete';\n\n\tTO_STRING_MAP[KeyCode.KEY_0] = '0';\n\tTO_STRING_MAP[KeyCode.KEY_1] = '1';\n\tTO_STRING_MAP[KeyCode.KEY_2] = '2';\n\tTO_STRING_MAP[KeyCode.KEY_3] = '3';\n\tTO_STRING_MAP[KeyCode.KEY_4] = '4';\n\tTO_STRING_MAP[KeyCode.KEY_5] = '5';\n\tTO_STRING_MAP[KeyCode.KEY_6] = '6';\n\tTO_STRING_MAP[KeyCode.KEY_7] = '7';\n\tTO_STRING_MAP[KeyCode.KEY_8] = '8';\n\tTO_STRING_MAP[KeyCode.KEY_9] = '9';\n\n\tTO_STRING_MAP[KeyCode.KEY_A] = 'A';\n\tTO_STRING_MAP[KeyCode.KEY_B] = 'B';\n\tTO_STRING_MAP[KeyCode.KEY_C] = 'C';\n\tTO_STRING_MAP[KeyCode.KEY_D] = 'D';\n\tTO_STRING_MAP[KeyCode.KEY_E] = 'E';\n\tTO_STRING_MAP[KeyCode.KEY_F] = 'F';\n\tTO_STRING_MAP[KeyCode.KEY_G] = 'G';\n\tTO_STRING_MAP[KeyCode.KEY_H] = 'H';\n\tTO_STRING_MAP[KeyCode.KEY_I] = 'I';\n\tTO_STRING_MAP[KeyCode.KEY_J] = 'J';\n\tTO_STRING_MAP[KeyCode.KEY_K] = 'K';\n\tTO_STRING_MAP[KeyCode.KEY_L] = 'L';\n\tTO_STRING_MAP[KeyCode.KEY_M] = 'M';\n\tTO_STRING_MAP[KeyCode.KEY_N] = 'N';\n\tTO_STRING_MAP[KeyCode.KEY_O] = 'O';\n\tTO_STRING_MAP[KeyCode.KEY_P] = 'P';\n\tTO_STRING_MAP[KeyCode.KEY_Q] = 'Q';\n\tTO_STRING_MAP[KeyCode.KEY_R] = 'R';\n\tTO_STRING_MAP[KeyCode.KEY_S] = 'S';\n\tTO_STRING_MAP[KeyCode.KEY_T] = 'T';\n\tTO_STRING_MAP[KeyCode.KEY_U] = 'U';\n\tTO_STRING_MAP[KeyCode.KEY_V] = 'V';\n\tTO_STRING_MAP[KeyCode.KEY_W] = 'W';\n\tTO_STRING_MAP[KeyCode.KEY_X] = 'X';\n\tTO_STRING_MAP[KeyCode.KEY_Y] = 'Y';\n\tTO_STRING_MAP[KeyCode.KEY_Z] = 'Z';\n\n\tTO_STRING_MAP[KeyCode.ContextMenu] = 'ContextMenu';\n\n\tTO_STRING_MAP[KeyCode.F1] = 'F1';\n\tTO_STRING_MAP[KeyCode.F2] = 'F2';\n\tTO_STRING_MAP[KeyCode.F3] = 'F3';\n\tTO_STRING_MAP[KeyCode.F4] = 'F4';\n\tTO_STRING_MAP[KeyCode.F5] = 'F5';\n\tTO_STRING_MAP[KeyCode.F6] = 'F6';\n\tTO_STRING_MAP[KeyCode.F7] = 'F7';\n\tTO_STRING_MAP[KeyCode.F8] = 'F8';\n\tTO_STRING_MAP[KeyCode.F9] = 'F9';\n\tTO_STRING_MAP[KeyCode.F10] = 'F10';\n\tTO_STRING_MAP[KeyCode.F11] = 'F11';\n\tTO_STRING_MAP[KeyCode.F12] = 'F12';\n\tTO_STRING_MAP[KeyCode.F13] = 'F13';\n\tTO_STRING_MAP[KeyCode.F14] = 'F14';\n\tTO_STRING_MAP[KeyCode.F15] = 'F15';\n\tTO_STRING_MAP[KeyCode.F16] = 'F16';\n\tTO_STRING_MAP[KeyCode.F17] = 'F17';\n\tTO_STRING_MAP[KeyCode.F18] = 'F18';\n\tTO_STRING_MAP[KeyCode.F19] = 'F19';\n\n\n\tTO_STRING_MAP[KeyCode.NumLock] \t\t= 'NumLock';\n\tTO_STRING_MAP[KeyCode.ScrollLock] \t= 'ScrollLock';\n\n\tTO_STRING_MAP[KeyCode.US_SEMICOLON] \t\t\t= ';';\n\tTO_STRING_MAP[KeyCode.US_EQUAL] \t\t\t\t= '=';\n\tTO_STRING_MAP[KeyCode.US_COMMA] \t\t\t\t= ',';\n\tTO_STRING_MAP[KeyCode.US_MINUS] \t\t\t\t= '-';\n\tTO_STRING_MAP[KeyCode.US_DOT] \t\t\t\t\t= '.';\n\tTO_STRING_MAP[KeyCode.US_SLASH] \t\t\t\t= '/';\n\tTO_STRING_MAP[KeyCode.US_BACKTICK] \t\t\t\t= '`';\n\tTO_STRING_MAP[KeyCode.US_OPEN_SQUARE_BRACKET] \t= '[';\n\tTO_STRING_MAP[KeyCode.US_BACKSLASH] \t\t\t= '\\\\';\n\tTO_STRING_MAP[KeyCode.US_CLOSE_SQUARE_BRACKET] \t= ']';\n\tTO_STRING_MAP[KeyCode.US_QUOTE]\t\t\t\t\t= '\\'';\n\tTO_STRING_MAP[KeyCode.OEM_8]\t\t\t\t\t= 'OEM_8';\n\tTO_STRING_MAP[KeyCode.OEM_102]\t\t\t\t\t= 'OEM_102';\n\n\tTO_STRING_MAP[KeyCode.NUMPAD_0] = 'NumPad0';\n\tTO_STRING_MAP[KeyCode.NUMPAD_1] = 'NumPad1';\n\tTO_STRING_MAP[KeyCode.NUMPAD_2] = 'NumPad2';\n\tTO_STRING_MAP[KeyCode.NUMPAD_3] = 'NumPad3';\n\tTO_STRING_MAP[KeyCode.NUMPAD_4] = 'NumPad4';\n\tTO_STRING_MAP[KeyCode.NUMPAD_5] = 'NumPad5';\n\tTO_STRING_MAP[KeyCode.NUMPAD_6] = 'NumPad6';\n\tTO_STRING_MAP[KeyCode.NUMPAD_7] = 'NumPad7';\n\tTO_STRING_MAP[KeyCode.NUMPAD_8] = 'NumPad8';\n\tTO_STRING_MAP[KeyCode.NUMPAD_9] = 'NumPad9';\n\n\tTO_STRING_MAP[KeyCode.NUMPAD_MULTIPLY] = 'NumPad_Multiply';\n\tTO_STRING_MAP[KeyCode.NUMPAD_ADD] = 'NumPad_Add';\n\tTO_STRING_MAP[KeyCode.NUMPAD_SEPARATOR] = 'NumPad_Separator';\n\tTO_STRING_MAP[KeyCode.NUMPAD_SUBTRACT] = 'NumPad_Subtract';\n\tTO_STRING_MAP[KeyCode.NUMPAD_DECIMAL] = 'NumPad_Decimal';\n\tTO_STRING_MAP[KeyCode.NUMPAD_DIVIDE] = 'NumPad_Divide';\n\n\t// for (let i = 0; i < KeyCode.MAX_VALUE; i++) {\n\t// \tif (!TO_STRING_MAP[i]) {\n\t// \t\tconsole.warn('Missing string representation for ' + KeyCode[i]);\n\t// \t}\n\t// }\n}, (FROM_STRING_MAP) => {\n\tFROM_STRING_MAP['\\r'] = KeyCode.Enter;\n});\n\n\nlet USER_SETTINGS = createMapping((TO_USER_SETTINGS_MAP) => {\n\tfor (let i = 0, len = STRING._fromKeyCode.length; i < len; i++) {\n\t\tTO_USER_SETTINGS_MAP[i] = STRING._fromKeyCode[i];\n\t}\n\tTO_USER_SETTINGS_MAP[KeyCode.LeftArrow] = 'Left';\n\tTO_USER_SETTINGS_MAP[KeyCode.UpArrow] = 'Up';\n\tTO_USER_SETTINGS_MAP[KeyCode.RightArrow] = 'Right';\n\tTO_USER_SETTINGS_MAP[KeyCode.DownArrow] = 'Down';\n}, (FROM_USER_SETTINGS_MAP) => {\n\tFROM_USER_SETTINGS_MAP['OEM_1'] = KeyCode.US_SEMICOLON;\n\tFROM_USER_SETTINGS_MAP['OEM_PLUS'] = KeyCode.US_EQUAL;\n\tFROM_USER_SETTINGS_MAP['OEM_COMMA'] = KeyCode.US_COMMA;\n\tFROM_USER_SETTINGS_MAP['OEM_MINUS'] = KeyCode.US_MINUS;\n\tFROM_USER_SETTINGS_MAP['OEM_PERIOD'] = KeyCode.US_DOT;\n\tFROM_USER_SETTINGS_MAP['OEM_2'] = KeyCode.US_SLASH;\n\tFROM_USER_SETTINGS_MAP['OEM_3'] = KeyCode.US_BACKTICK;\n\tFROM_USER_SETTINGS_MAP['OEM_4'] = KeyCode.US_OPEN_SQUARE_BRACKET;\n\tFROM_USER_SETTINGS_MAP['OEM_5'] = KeyCode.US_BACKSLASH;\n\tFROM_USER_SETTINGS_MAP['OEM_6'] = KeyCode.US_CLOSE_SQUARE_BRACKET;\n\tFROM_USER_SETTINGS_MAP['OEM_7'] = KeyCode.US_QUOTE;\n\tFROM_USER_SETTINGS_MAP['OEM_8'] = KeyCode.OEM_8;\n\tFROM_USER_SETTINGS_MAP['OEM_102'] = KeyCode.OEM_102;\n});\n\nexport namespace KeyCode {\n\texport function toString(key:KeyCode): string {\n\t\treturn STRING.fromKeyCode(key);\n\t}\n\texport function fromString(key:string): KeyCode {\n\t\treturn STRING.toKeyCode(key);\n\t}\n}\n\n// Binary encoding strategy:\n// 15:  1 bit for ctrlCmd\n// 14:  1 bit for shift\n// 13:  1 bit for alt\n// 12:  1 bit for winCtrl\n//  0: 12 bits for keyCode (up to a maximum keyCode of 4096. Given we have 83 at this point thats good enough)\n\nconst BIN_CTRLCMD_MASK = 1 << 15;\nconst BIN_SHIFT_MASK = 1 << 14;\nconst BIN_ALT_MASK = 1 << 13;\nconst BIN_WINCTRL_MASK = 1 << 12;\nconst BIN_KEYCODE_MASK = 0x00000fff;\n\nexport class BinaryKeybindings {\n\n\tpublic static extractFirstPart(keybinding:number): number {\n\t\treturn keybinding & 0x0000ffff;\n\t}\n\n\tpublic static extractChordPart(keybinding:number): number {\n\t\treturn (keybinding >> 16) & 0x0000ffff;\n\t}\n\n\tpublic static hasChord(keybinding:number): boolean {\n\t\treturn (this.extractChordPart(keybinding) !== 0);\n\t}\n\n\tpublic static hasCtrlCmd(keybinding:number): boolean {\n\t\treturn (keybinding & BIN_CTRLCMD_MASK ? true : false);\n\t}\n\n\tpublic static hasShift(keybinding:number): boolean {\n\t\treturn (keybinding & BIN_SHIFT_MASK ? true : false);\n\t}\n\n\tpublic static hasAlt(keybinding:number): boolean {\n\t\treturn (keybinding & BIN_ALT_MASK ? true : false);\n\t}\n\n\tpublic static hasWinCtrl(keybinding:number): boolean {\n\t\treturn (keybinding & BIN_WINCTRL_MASK ? true : false);\n\t}\n\n\tpublic static extractKeyCode(keybinding:number): KeyCode {\n\t\treturn (keybinding & BIN_KEYCODE_MASK);\n\t}\n}\n\n\n\nexport class KeyMod {\n\tpublic static CtrlCmd = BIN_CTRLCMD_MASK;\n\tpublic static Shift = BIN_SHIFT_MASK;\n\tpublic static Alt = BIN_ALT_MASK;\n\tpublic static WinCtrl = BIN_WINCTRL_MASK;\n\n\tpublic static chord(firstPart:number, secondPart:number): number {\n\t\treturn firstPart | ((secondPart & 0x0000ffff) << 16);\n\t}\n}\n\n/**\n * A set of usual keybindings that can be reused in code\n */\nexport class CommonKeybindings {\n\n\tpublic static ENTER: number = KeyCode.Enter;\n\tpublic static SHIFT_ENTER: number = KeyMod.Shift | KeyCode.Enter;\n\tpublic static CTRLCMD_ENTER: number = KeyMod.CtrlCmd | KeyCode.Enter;\n\tpublic static WINCTRL_ENTER: number = KeyMod.WinCtrl | KeyCode.Enter;\n\n\tpublic static TAB: number = KeyCode.Tab;\n\tpublic static SHIFT_TAB: number = KeyMod.Shift | KeyCode.Tab;\n\tpublic static ESCAPE: number = KeyCode.Escape;\n\tpublic static SPACE: number = KeyCode.Space;\n\tpublic static DELETE: number = KeyCode.Delete;\n\tpublic static SHIFT_DELETE: number = KeyMod.Shift | KeyCode.Delete;\n\tpublic static CTRLCMD_BACKSPACE: number = KeyMod.CtrlCmd | KeyCode.Backspace;\n\n\tpublic static UP_ARROW: number = KeyCode.UpArrow;\n\tpublic static SHIFT_UP_ARROW: number = KeyMod.Shift | KeyCode.UpArrow;\n\tpublic static CTRLCMD_UP_ARROW: number = KeyMod.CtrlCmd | KeyCode.UpArrow;\n\n\tpublic static DOWN_ARROW: number = KeyCode.DownArrow;\n\tpublic static SHIFT_DOWN_ARROW: number = KeyMod.Shift | KeyCode.DownArrow;\n\tpublic static CTRLCMD_DOWN_ARROW: number = KeyMod.CtrlCmd | KeyCode.DownArrow;\n\n\tpublic static LEFT_ARROW: number = KeyCode.LeftArrow;\n\n\tpublic static RIGHT_ARROW: number = KeyCode.RightArrow;\n\n\tpublic static PAGE_UP: number = KeyCode.PageUp;\n\tpublic static SHIFT_PAGE_UP: number = KeyMod.Shift | KeyCode.PageUp;\n\n\tpublic static PAGE_DOWN: number = KeyCode.PageDown;\n\tpublic static SHIFT_PAGE_DOWN: number = KeyMod.Shift | KeyCode.PageDown;\n\n\tpublic static F2: number = KeyCode.F2;\n\n\tpublic static CTRLCMD_S: number = KeyMod.CtrlCmd | KeyCode.KEY_S;\n\tpublic static CTRLCMD_C: number = KeyMod.CtrlCmd | KeyCode.KEY_C;\n\tpublic static CTRLCMD_V: number = KeyMod.CtrlCmd | KeyCode.KEY_V;\n}\n\nexport class Keybinding {\n\n\t/**\n\t * Format the binding to a format appropiate for rendering in the UI\n\t */\n\tprivate static _toUSLabel(value:number, Platform:ISimplifiedPlatform): string {\n\t\treturn _asString(value, (Platform.isMacintosh ? MacUIKeyLabelProvider.INSTANCE : ClassicUIKeyLabelProvider.INSTANCE), Platform);\n\t}\n\n\t/**\n\t * Format the binding to a format appropiate for placing in an aria-label.\n\t */\n\tprivate static _toUSAriaLabel(value:number, Platform:ISimplifiedPlatform): string {\n\t\treturn _asString(value, AriaKeyLabelProvider.INSTANCE, Platform);\n\t}\n\n\t/**\n\t * Format the binding to a format appropiate for rendering in the UI\n\t */\n\tprivate static _toUSHTMLLabel(value:number, Platform:ISimplifiedPlatform): IHTMLContentElement[] {\n\t\treturn _asHTML(value, (Platform.isMacintosh ? MacUIKeyLabelProvider.INSTANCE : ClassicUIKeyLabelProvider.INSTANCE), Platform);\n\t}\n\n\t/**\n\t * Format the binding to a format appropiate for rendering in the UI\n\t */\n\tprivate static _toCustomLabel(value:number, labelProvider:IKeyBindingLabelProvider, Platform:ISimplifiedPlatform): string {\n\t\treturn _asString(value, labelProvider, Platform);\n\t}\n\n\t/**\n\t * Format the binding to a format appropiate for rendering in the UI\n\t */\n\tprivate static _toCustomHTMLLabel(value:number, labelProvider:IKeyBindingLabelProvider, Platform:ISimplifiedPlatform): IHTMLContentElement[] {\n\t\treturn _asHTML(value, labelProvider, Platform);\n\t}\n\n\t/**\n\t * This prints the binding in a format suitable for electron's accelerators.\n\t * See https://github.com/electron/electron/blob/master/docs/api/accelerator.md\n\t */\n\tprivate static _toElectronAccelerator(value:number, Platform:ISimplifiedPlatform): string {\n\t\tif (BinaryKeybindings.hasChord(value)) {\n\t\t\t// Electron cannot handle chords\n\t\t\treturn null;\n\t\t}\n\t\treturn _asString(value, ElectronAcceleratorLabelProvider.INSTANCE, Platform);\n\t}\n\n\tprivate static _cachedKeybindingRegex: string = null;\n\tpublic static getUserSettingsKeybindingRegex(): string {\n\t\tif (!this._cachedKeybindingRegex) {\n\t\t\tlet numpadKey = 'numpad(0|1|2|3|4|5|6|7|8|9|_multiply|_add|_subtract|_decimal|_divide|_separator)';\n\t\t\tlet oemKey = '`|\\\\-|=|\\\\[|\\\\]|\\\\\\\\\\\\\\\\|;|\\'|,|\\\\.|\\\\/|oem_8|oem_102';\n\t\t\tlet specialKey = 'left|up|right|down|pageup|pagedown|end|home|tab|enter|escape|space|backspace|delete|pausebreak|capslock|insert|contextmenu|numlock|scrolllock';\n\t\t\tlet casualKey = '[a-z]|[0-9]|f(1|2|3|4|5|6|7|8|9|10|11|12|13|14|15|16|17|18|19)';\n\t\t\tlet key = '((' + [numpadKey, oemKey, specialKey, casualKey].join(')|(') + '))';\n\t\t\tlet mod = '((ctrl|shift|alt|cmd|win|meta)\\\\+)*';\n\t\t\tlet keybinding = '(' + mod + key + ')';\n\n\t\t\tthis._cachedKeybindingRegex = '\"\\\\s*(' + keybinding + '(\\\\s+' + keybinding +')?' + ')\\\\s*\"';\n\t\t}\n\t\treturn this._cachedKeybindingRegex;\n\t}\n\n\t/**\n\t * Format the binding to a format appropiate for the user settings file.\n\t */\n\tpublic static toUserSettingsLabel(value:number, Platform:ISimplifiedPlatform = defaultPlatform): string {\n\t\tlet result = _asString(value, UserSettingsKeyLabelProvider.INSTANCE, Platform);\n\t\tresult = result.toLowerCase();\n\n\t\tif (Platform.isMacintosh) {\n\t\t\tresult = result.replace(/meta/g, 'cmd');\n\t\t} else if (Platform.isWindows) {\n\t\t\tresult = result.replace(/meta/g, 'win');\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tpublic static fromUserSettingsLabel(input: string, Platform: ISimplifiedPlatform = defaultPlatform): number {\n\t\tif (!input) {\n\t\t\treturn null;\n\t\t}\n\t\tinput = input.toLowerCase().trim();\n\n\t\tlet ctrlCmd = false,\n\t\t\tshift = false,\n\t\t\talt = false,\n\t\t\twinCtrl = false,\n\t\t\tkey:string = '';\n\n\t\twhile (/^(ctrl|shift|alt|meta|win|cmd)(\\+|\\-)/.test(input)) {\n\t\t\tif (/^ctrl(\\+|\\-)/.test(input)) {\n\t\t\t\tif (Platform.isMacintosh) {\n\t\t\t\t\twinCtrl = true;\n\t\t\t\t} else {\n\t\t\t\t\tctrlCmd = true;\n\t\t\t\t}\n\t\t\t\tinput = input.substr('ctrl-'.length);\n\t\t\t}\n\t\t\tif (/^shift(\\+|\\-)/.test(input)) {\n\t\t\t\tshift = true;\n\t\t\t\tinput = input.substr('shift-'.length);\n\t\t\t}\n\t\t\tif (/^alt(\\+|\\-)/.test(input)) {\n\t\t\t\talt = true;\n\t\t\t\tinput = input.substr('alt-'.length);\n\t\t\t}\n\t\t\tif (/^meta(\\+|\\-)/.test(input)) {\n\t\t\t\tif (Platform.isMacintosh) {\n\t\t\t\t\tctrlCmd = true;\n\t\t\t\t} else {\n\t\t\t\t\twinCtrl = true;\n\t\t\t\t}\n\t\t\t\tinput = input.substr('meta-'.length);\n\t\t\t}\n\t\t\tif (/^win(\\+|\\-)/.test(input)) {\n\t\t\t\tif (Platform.isMacintosh) {\n\t\t\t\t\tctrlCmd = true;\n\t\t\t\t} else {\n\t\t\t\t\twinCtrl = true;\n\t\t\t\t}\n\t\t\t\tinput = input.substr('win-'.length);\n\t\t\t}\n\t\t\tif (/^cmd(\\+|\\-)/.test(input)) {\n\t\t\t\tif (Platform.isMacintosh) {\n\t\t\t\t\tctrlCmd = true;\n\t\t\t\t} else {\n\t\t\t\t\twinCtrl = true;\n\t\t\t\t}\n\t\t\t\tinput = input.substr('cmd-'.length);\n\t\t\t}\n\t\t}\n\n\t\tlet chord: number = 0;\n\n\t\tlet firstSpaceIdx = input.indexOf(' ');\n\t\tif (firstSpaceIdx > 0) {\n\t\t\tkey = input.substring(0, firstSpaceIdx);\n\t\t\tchord = Keybinding.fromUserSettingsLabel(input.substring(firstSpaceIdx), Platform);\n\t\t} else {\n\t\t\tkey = input;\n\t\t}\n\n\t\tlet keyCode = USER_SETTINGS.toKeyCode(key);\n\n\t\tlet result = 0;\n\t\tif (ctrlCmd) {\n\t\t\tresult |= KeyMod.CtrlCmd;\n\t\t}\n\t\tif (shift) {\n\t\t\tresult |= KeyMod.Shift;\n\t\t}\n\t\tif (alt) {\n\t\t\tresult |= KeyMod.Alt;\n\t\t}\n\t\tif (winCtrl) {\n\t\t\tresult |= KeyMod.WinCtrl;\n\t\t}\n\t\tresult |= keyCode;\n\t\treturn KeyMod.chord(result, chord);\n\t}\n\n\tpublic value:number;\n\n\tconstructor(keybinding:number) {\n\t\tthis.value = keybinding;\n\t}\n\n\tpublic hasCtrlCmd(): boolean {\n\t\treturn BinaryKeybindings.hasCtrlCmd(this.value);\n\t}\n\n\tpublic hasShift(): boolean {\n\t\treturn BinaryKeybindings.hasShift(this.value);\n\t}\n\n\tpublic hasAlt(): boolean {\n\t\treturn BinaryKeybindings.hasAlt(this.value);\n\t}\n\n\tpublic hasWinCtrl(): boolean {\n\t\treturn BinaryKeybindings.hasWinCtrl(this.value);\n\t}\n\n\tpublic extractKeyCode(): KeyCode {\n\t\treturn BinaryKeybindings.extractKeyCode(this.value);\n\t}\n\n\t/**\n\t * Format the binding to a format appropiate for rendering in the UI\n\t */\n\tpublic _toUSLabel(Platform:ISimplifiedPlatform = defaultPlatform): string {\n\t\treturn Keybinding._toUSLabel(this.value, Platform);\n\t}\n\n\t/**\n\t * Format the binding to a format appropiate for placing in an aria-label.\n\t */\n\tpublic _toUSAriaLabel(Platform:ISimplifiedPlatform = defaultPlatform): string {\n\t\treturn Keybinding._toUSAriaLabel(this.value, Platform);\n\t}\n\n\t/**\n\t * Format the binding to a format appropiate for rendering in the UI\n\t */\n\tpublic _toUSHTMLLabel(Platform:ISimplifiedPlatform = defaultPlatform): IHTMLContentElement[] {\n\t\treturn Keybinding._toUSHTMLLabel(this.value, Platform);\n\t}\n\n\t/**\n\t * Format the binding to a format appropiate for rendering in the UI\n\t */\n\tpublic toCustomLabel(labelProvider:IKeyBindingLabelProvider, Platform:ISimplifiedPlatform = defaultPlatform): string {\n\t\treturn Keybinding._toCustomLabel(this.value, labelProvider, Platform);\n\t}\n\n\t/**\n\t * Format the binding to a format appropiate for rendering in the UI\n\t */\n\tpublic toCustomHTMLLabel(labelProvider:IKeyBindingLabelProvider, Platform:ISimplifiedPlatform = defaultPlatform): IHTMLContentElement[] {\n\t\treturn Keybinding._toCustomHTMLLabel(this.value, labelProvider, Platform);\n\t}\n\n\t/**\n\t * This prints the binding in a format suitable for electron's accelerators.\n\t * See https://github.com/electron/electron/blob/master/docs/api/accelerator.md\n\t */\n\tpublic _toElectronAccelerator(Platform:ISimplifiedPlatform = defaultPlatform): string {\n\t\treturn Keybinding._toElectronAccelerator(this.value, Platform);\n\t}\n\n\t/**\n\t * Format the binding to a format appropiate for the user settings file.\n\t */\n\tpublic toUserSettingsLabel(Platform:ISimplifiedPlatform = defaultPlatform): string {\n\t\treturn Keybinding.toUserSettingsLabel(this.value, Platform);\n\t}\n\n}\n\nexport interface IKeyBindingLabelProvider {\n\tctrlKeyLabel:string;\n\tshiftKeyLabel:string;\n\taltKeyLabel:string;\n\tcmdKeyLabel:string;\n\twindowsKeyLabel:string;\n\tmodifierSeparator:string;\n\tgetLabelForKey(keyCode:KeyCode): string;\n}\n\n/**\n * Print for Electron\n */\nexport class ElectronAcceleratorLabelProvider implements IKeyBindingLabelProvider {\n\tpublic static INSTANCE = new ElectronAcceleratorLabelProvider();\n\n\tpublic ctrlKeyLabel = 'Ctrl';\n\tpublic shiftKeyLabel = 'Shift';\n\tpublic altKeyLabel = 'Alt';\n\tpublic cmdKeyLabel = 'Cmd';\n\tpublic windowsKeyLabel = 'Super';\n\tpublic modifierSeparator = '+';\n\n\tpublic getLabelForKey(keyCode:KeyCode): string {\n\t\tswitch (keyCode) {\n\t\t\tcase KeyCode.UpArrow:\n\t\t\t\treturn 'Up';\n\t\t\tcase KeyCode.DownArrow:\n\t\t\t\treturn 'Down';\n\t\t\tcase KeyCode.LeftArrow:\n\t\t\t\treturn 'Left';\n\t\t\tcase KeyCode.RightArrow:\n\t\t\t\treturn 'Right';\n\t\t}\n\n\t\treturn KeyCode.toString(keyCode);\n\t}\n}\n\n/**\n * Print for Mac UI\n */\nexport class MacUIKeyLabelProvider implements IKeyBindingLabelProvider {\n\tpublic static INSTANCE = new MacUIKeyLabelProvider();\n\n\tprivate static leftArrowUnicodeLabel = String.fromCharCode(8592);\n\tprivate static upArrowUnicodeLabel = String.fromCharCode(8593);\n\tprivate static rightArrowUnicodeLabel = String.fromCharCode(8594);\n\tprivate static downArrowUnicodeLabel = String.fromCharCode(8595);\n\n\tpublic ctrlKeyLabel = '\\u2303';\n\tpublic shiftKeyLabel = '\\u21E7';\n\tpublic altKeyLabel = '\\u2325';\n\tpublic cmdKeyLabel = '\\u2318';\n\tpublic windowsKeyLabel = nls.localize('windowsKey', \"Windows\");\n\tpublic modifierSeparator = '';\n\n\tpublic getLabelForKey(keyCode:KeyCode): string {\n\t\tswitch (keyCode) {\n\t\t\tcase KeyCode.LeftArrow:\n\t\t\t\treturn MacUIKeyLabelProvider.leftArrowUnicodeLabel;\n\t\t\tcase KeyCode.UpArrow:\n\t\t\t\treturn MacUIKeyLabelProvider.upArrowUnicodeLabel;\n\t\t\tcase KeyCode.RightArrow:\n\t\t\t\treturn MacUIKeyLabelProvider.rightArrowUnicodeLabel;\n\t\t\tcase KeyCode.DownArrow:\n\t\t\t\treturn MacUIKeyLabelProvider.downArrowUnicodeLabel;\n\t\t}\n\n\t\treturn KeyCode.toString(keyCode);\n\t}\n}\n\n/**\n * Aria label provider for Mac.\n */\nexport class AriaKeyLabelProvider implements IKeyBindingLabelProvider {\n\tpublic static INSTANCE = new MacUIKeyLabelProvider();\n\n\tpublic ctrlKeyLabel = nls.localize('ctrlKey.long', \"Control\");\n\tpublic shiftKeyLabel = nls.localize('shiftKey.long', \"Shift\");\n\tpublic altKeyLabel = nls.localize('altKey.long', \"Alt\");\n\tpublic cmdKeyLabel = nls.localize('cmdKey.long', \"Command\");\n\tpublic windowsKeyLabel = nls.localize('windowsKey.long', \"Windows\");\n\tpublic modifierSeparator = '+';\n\n\tpublic getLabelForKey(keyCode:KeyCode): string {\n\t\treturn KeyCode.toString(keyCode);\n\t}\n}\n\n/**\n * Print for Windows, Linux UI\n */\nexport class ClassicUIKeyLabelProvider implements IKeyBindingLabelProvider {\n\tpublic static INSTANCE = new ClassicUIKeyLabelProvider();\n\n\tpublic ctrlKeyLabel = nls.localize('ctrlKey', \"Ctrl\");\n\tpublic shiftKeyLabel = nls.localize('shiftKey', \"Shift\");\n\tpublic altKeyLabel = nls.localize('altKey', \"Alt\");\n\tpublic cmdKeyLabel = nls.localize('cmdKey', \"Command\");\n\tpublic windowsKeyLabel = nls.localize('windowsKey', \"Windows\");\n\tpublic modifierSeparator = '+';\n\n\tpublic getLabelForKey(keyCode:KeyCode): string {\n\t\treturn KeyCode.toString(keyCode);\n\t}\n}\n\n/**\n * Print for the user settings file.\n */\nclass UserSettingsKeyLabelProvider implements IKeyBindingLabelProvider {\n\tpublic static INSTANCE = new UserSettingsKeyLabelProvider();\n\n\tpublic ctrlKeyLabel = 'Ctrl';\n\tpublic shiftKeyLabel = 'Shift';\n\tpublic altKeyLabel = 'Alt';\n\tpublic cmdKeyLabel = 'Meta';\n\tpublic windowsKeyLabel = 'Meta';\n\n\tpublic modifierSeparator = '+';\n\n\tpublic getLabelForKey(keyCode:KeyCode): string {\n\t\treturn USER_SETTINGS.fromKeyCode(keyCode);\n\t}\n}\n\nfunction _asString(keybinding:number, labelProvider:IKeyBindingLabelProvider, Platform:ISimplifiedPlatform): string {\n\tlet result:string[] = [],\n\t\tctrlCmd = BinaryKeybindings.hasCtrlCmd(keybinding),\n\t\tshift = BinaryKeybindings.hasShift(keybinding),\n\t\talt = BinaryKeybindings.hasAlt(keybinding),\n\t\twinCtrl = BinaryKeybindings.hasWinCtrl(keybinding),\n\t\tkeyCode = BinaryKeybindings.extractKeyCode(keybinding);\n\n\tlet keyLabel = labelProvider.getLabelForKey(keyCode);\n\tif (!keyLabel) {\n\t\t// cannot trigger this key code under this kb layout\n\t\treturn '';\n\t}\n\n\t// translate modifier keys: Ctrl-Shift-Alt-Meta\n\tif ((ctrlCmd && !Platform.isMacintosh) || (winCtrl && Platform.isMacintosh)) {\n\t\tresult.push(labelProvider.ctrlKeyLabel);\n\t}\n\n\tif (shift) {\n\t\tresult.push(labelProvider.shiftKeyLabel);\n\t}\n\n\tif (alt) {\n\t\tresult.push(labelProvider.altKeyLabel);\n\t}\n\n\tif (ctrlCmd && Platform.isMacintosh) {\n\t\tresult.push(labelProvider.cmdKeyLabel);\n\t}\n\n\tif (winCtrl && !Platform.isMacintosh) {\n\t\tresult.push(labelProvider.windowsKeyLabel);\n\t}\n\n\t// the actual key\n\tresult.push(keyLabel);\n\n\tvar actualResult = result.join(labelProvider.modifierSeparator);\n\n\tif (BinaryKeybindings.hasChord(keybinding)) {\n\t\treturn actualResult + ' ' + _asString(BinaryKeybindings.extractChordPart(keybinding), labelProvider, Platform);\n\t}\n\n\treturn actualResult;\n}\n\nfunction _pushKey(result:IHTMLContentElement[], str:string): void {\n\tif (result.length > 0) {\n\t\tresult.push({\n\t\t\ttagName: 'span',\n\t\t\ttext: '+'\n\t\t});\n\t}\n\tresult.push({\n\t\ttagName: 'span',\n\t\tclassName: 'monaco-kbkey',\n\t\ttext: str\n\t});\n}\n\nfunction _asHTML(keybinding:number, labelProvider:IKeyBindingLabelProvider, Platform:ISimplifiedPlatform, isChord:boolean = false): IHTMLContentElement[] {\n\tlet result:IHTMLContentElement[] = [],\n\t\tctrlCmd = BinaryKeybindings.hasCtrlCmd(keybinding),\n\t\tshift = BinaryKeybindings.hasShift(keybinding),\n\t\talt = BinaryKeybindings.hasAlt(keybinding),\n\t\twinCtrl = BinaryKeybindings.hasWinCtrl(keybinding),\n\t\tkeyCode = BinaryKeybindings.extractKeyCode(keybinding);\n\n\tlet keyLabel = labelProvider.getLabelForKey(keyCode);\n\tif (!keyLabel) {\n\t\t// cannot trigger this key code under this kb layout\n\t\treturn [];\n\t}\n\n\t// translate modifier keys: Ctrl-Shift-Alt-Meta\n\tif ((ctrlCmd && !Platform.isMacintosh) || (winCtrl && Platform.isMacintosh)) {\n\t\t_pushKey(result, labelProvider.ctrlKeyLabel);\n\t}\n\n\tif (shift) {\n\t\t_pushKey(result, labelProvider.shiftKeyLabel);\n\t}\n\n\tif (alt) {\n\t\t_pushKey(result, labelProvider.altKeyLabel);\n\t}\n\n\tif (ctrlCmd && Platform.isMacintosh) {\n\t\t_pushKey(result, labelProvider.cmdKeyLabel);\n\t}\n\n\tif (winCtrl && !Platform.isMacintosh) {\n\t\t_pushKey(result, labelProvider.windowsKeyLabel);\n\t}\n\n\t// the actual key\n\t_pushKey(result, keyLabel);\n\n\tlet chordTo: IHTMLContentElement[] = null;\n\n\tif (BinaryKeybindings.hasChord(keybinding)) {\n\t\tchordTo = _asHTML(BinaryKeybindings.extractChordPart(keybinding), labelProvider, Platform, true);\n\t\tresult.push({\n\t\t\ttagName: 'span',\n\t\t\ttext: ' '\n\t\t});\n\t\tresult = result.concat(chordTo);\n\t}\n\n\tif (isChord) {\n\t\treturn result;\n\t}\n\n\treturn [{\n\t\ttagName: 'span',\n\t\tclassName: 'monaco-kb',\n\t\tchildren: result\n\t}];\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport nls = require('vs/nls');\nimport strings = require('vs/base/common/strings');\n\nenum Severity {\n\tIgnore = 0,\n\tInfo = 1,\n\tWarning = 2,\n\tError = 3\n}\n\nnamespace Severity {\n\n\tvar _error = 'error',\n\t\t_warning = 'warning',\n\t\t_warn = 'warn',\n\t\t_info = 'info';\n\n\tvar _displayStrings: { [value: number]: string; } = Object.create(null);\n\t_displayStrings[Severity.Error] = nls.localize('sev.error', \"Error\");\n\t_displayStrings[Severity.Warning] = nls.localize('sev.warning', \"Warning\");\n\t_displayStrings[Severity.Info] = nls.localize('sev.info', \"Info\");\n\n\t/**\n\t * Parses 'error', 'warning', 'warn', 'info' in call casings\n\t * and falls back to ignore.\n\t */\n\texport function fromValue(value: string): Severity {\n\t\tif (!value) {\n\t\t\treturn Severity.Ignore;\n\t\t}\n\n\t\tif (strings.equalsIgnoreCase(_error, value)) {\n\t\t\treturn Severity.Error;\n\t\t}\n\n\t\tif (strings.equalsIgnoreCase(_warning, value) || strings.equalsIgnoreCase(_warn, value)) {\n\t\t\treturn Severity.Warning;\n\t\t}\n\n\t\tif (strings.equalsIgnoreCase(_info, value)) {\n\t\t\treturn Severity.Info;\n\t\t}\n\n\t\treturn Severity.Ignore;\n\t}\n\n\texport function toString(value: Severity): string {\n\t\treturn _displayStrings[value] || strings.empty;\n\t}\n\n\texport function compare(a: Severity, b: Severity): number {\n\t\treturn b - a;\n\t}\n}\n\nexport default Severity;","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {Emitter} from 'vs/base/common/event';\nimport {KeyCode, KeyMod} from 'vs/base/common/keyCodes';\nimport {Position} from 'vs/editor/common/core/position';\nimport {Range} from 'vs/editor/common/core/range';\nimport {Selection} from 'vs/editor/common/core/selection';\nimport {SelectionDirection} from 'vs/editor/common/editorCommon';\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {CancellationTokenSource} from 'vs/base/common/cancellation';\nimport Severity from 'vs/base/common/severity';\nimport URI from 'vs/base/common/uri';\n\nexport function createMonacoBaseAPI(): typeof monaco {\n\treturn {\n\t\teditor: undefined,\n\t\tworker: undefined,\n\t\tlanguages: undefined,\n\t\tCancellationTokenSource: CancellationTokenSource,\n\t\tEmitter: Emitter,\n\t\tKeyCode: KeyCode,\n\t\tKeyMod: KeyMod,\n\t\tPosition: Position,\n\t\tRange: Range,\n\t\tSelection: Selection,\n\t\tSelectionDirection: SelectionDirection,\n\t\tSeverity: Severity,\n\t\tPromise: TPromise,\n\t\tUri: URI\n\t};\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport * as nls from 'vs/nls';\nimport {IEditorOptions} from 'vs/editor/common/editorCommon';\nimport * as platform from 'vs/base/common/platform';\n\nexport interface IConfiguration {\n\teditor:IEditorOptions;\n}\n\nexport const USUAL_WORD_SEPARATORS = '`~!@#$%^&*()-=+[{]}\\\\|;:\\'\",.<>/?';\nexport const DEFAULT_INDENTATION = {\n\ttabSize: 4,\n\tinsertSpaces: true,\n\tdetectIndentation: true\n};\nexport const DEFAULT_TRIM_AUTO_WHITESPACE = true;\n\nconst DEFAULT_WINDOWS_FONT_FAMILY = 'Consolas, \\'Courier New\\', monospace';\nconst DEFAULT_MAC_FONT_FAMILY = 'Menlo, Monaco, \\'Courier New\\', monospace';\nconst DEFAULT_LINUX_FONT_FAMILY = '\\'Droid Sans Mono\\', \\'Courier New\\', monospace, \\'Droid Sans Fallback\\'';\n\n/**\n * Determined from empirical observations.\n */\nexport const GOLDEN_LINE_HEIGHT_RATIO = platform.isMacintosh ? 1.5 : 1.35;\n\nclass ConfigClass implements IConfiguration {\n\n\tpublic editor: IEditorOptions;\n\n\tconstructor() {\n\t\tthis.editor = {\n\t\t\texperimentalScreenReader: true,\n\t\t\trulers: [],\n\t\t\twordSeparators: USUAL_WORD_SEPARATORS,\n\t\t\tselectionClipboard: true,\n\t\t\tariaLabel: nls.localize('editorViewAccessibleLabel', \"Editor content\"),\n\t\t\tlineNumbers: true,\n\t\t\tselectOnLineNumbers: true,\n\t\t\tlineNumbersMinChars: 5,\n\t\t\tglyphMargin: false,\n\t\t\tlineDecorationsWidth: 10,\n\t\t\trevealHorizontalRightPadding: 30,\n\t\t\troundedSelection: true,\n\t\t\ttheme: 'vs',\n\t\t\treadOnly: false,\n\t\t\tscrollbar: {\n\t\t\t\tverticalScrollbarSize: 14,\n\t\t\t\thorizontal: 'auto',\n\t\t\t\tuseShadows: true,\n\t\t\t\tverticalHasArrows: false,\n\t\t\t\thorizontalHasArrows: false\n\t\t\t},\n\t\t\toverviewRulerLanes: 2,\n\t\t\tcursorBlinking: 'blink',\n\t\t\tcursorStyle: 'line',\n\t\t\tfontLigatures: false,\n\t\t\tdisableTranslate3d: false,\n\t\t\thideCursorInOverviewRuler: false,\n\t\t\tscrollBeyondLastLine: true,\n\t\t\tautomaticLayout: false,\n\t\t\twrappingColumn: 300,\n\t\t\twrappingIndent: 'same',\n\t\t\twordWrapBreakBeforeCharacters: '([{‘“〈《「『【〔（［｛｢£¥＄￡￥+＋',\n\t\t\twordWrapBreakAfterCharacters: ' \\t})]?|&,;¢°′″‰℃、。｡､￠，．：；？！％・･ゝゞヽヾーァィゥェォッャュョヮヵヶぁぃぅぇぉっゃゅょゎゕゖㇰㇱㇲㇳㇴㇵㇶㇷㇸㇹㇺㇻㇼㇽㇾㇿ々〻ｧｨｩｪｫｬｭｮｯｰ’”〉》」』】〕）］｝｣',\n\t\t\twordWrapBreakObtrusiveCharacters: '.',\n\t\t\ttabFocusMode: false,\n\n\t\t\t// Features\n\t\t\thover: true,\n\t\t\tcontextmenu: true,\n\t\t\tmouseWheelScrollSensitivity: 1,\n\t\t\tquickSuggestions: true,\n\t\t\tquickSuggestionsDelay: 10,\n\t\t\ticonsInSuggestions: true,\n\t\t\tautoClosingBrackets: true,\n\t\t\tformatOnType: false,\n\t\t\tsuggestOnTriggerCharacters: true,\n\t\t\tacceptSuggestionOnEnter: true,\n\t\t\tselectionHighlight: true,\n\t\t\toutlineMarkers: false,\n\t\t\treferenceInfos: true,\n\t\t\tfolding: true,\n\t\t\trenderWhitespace: false,\n\t\t\tindentGuides: false,\n\t\t\tuseTabStops: true,\n\n\t\t\tfontFamily: (\n\t\t\t\tplatform.isMacintosh ? DEFAULT_MAC_FONT_FAMILY : (platform.isLinux ? DEFAULT_LINUX_FONT_FAMILY : DEFAULT_WINDOWS_FONT_FAMILY)\n\t\t\t),\n\t\t\tfontSize: (\n\t\t\t\tplatform.isMacintosh ? 12 : 14\n\t\t\t),\n\t\t\tlineHeight: 0\n\t\t};\n\t}\n}\n\nexport var DefaultConfig: IConfiguration = new ConfigClass();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport * as modes from 'vs/editor/common/modes';\nimport {USUAL_WORD_SEPARATORS} from 'vs/editor/common/config/defaultConfig';\n\nexport class NullState implements modes.IState {\n\n\tprivate mode: modes.IMode;\n\tprivate stateData: modes.IState;\n\n\tconstructor(mode: modes.IMode, stateData: modes.IState) {\n\t\tthis.mode = mode;\n\t\tthis.stateData = stateData;\n\t}\n\n\tpublic clone(): modes.IState {\n\t\tvar stateDataClone:modes.IState = (this.stateData ? this.stateData.clone() : null);\n\t\treturn new NullState(this.mode, stateDataClone);\n\t}\n\n\tpublic equals(other:modes.IState): boolean {\n\t\tif (this.mode !== other.getMode()) {\n\t\t\treturn false;\n\t\t}\n\t\tvar otherStateData = other.getStateData();\n\t\tif (!this.stateData && !otherStateData) {\n\t\t\treturn true;\n\t\t}\n\t\tif (this.stateData && otherStateData) {\n\t\t\treturn this.stateData.equals(otherStateData);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic getMode(): modes.IMode {\n\t\treturn this.mode;\n\t}\n\n\tpublic tokenize(stream:modes.IStream):modes.ITokenizationResult {\n\t\tstream.advanceToEOS();\n\t\treturn { type:'' };\n\t}\n\n\tpublic getStateData(): modes.IState {\n\t\treturn this.stateData;\n\t}\n\n\tpublic setStateData(stateData:modes.IState):void {\n\t\tthis.stateData = stateData;\n\t}\n}\n\nexport class NullMode implements modes.IMode {\n\n\t/**\n\t * Create a word definition regular expression based on default word separators.\n\t * Optionally provide allowed separators that should be included in words.\n\t *\n\t * The default would look like this:\n\t * /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#\\$\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g\n\t */\n\tpublic static createWordRegExp(allowInWords:string = ''): RegExp {\n\t\tvar usualSeparators = USUAL_WORD_SEPARATORS;\n\t\tvar source = '(-?\\\\d*\\\\.\\\\d\\\\w*)|([^';\n\t\tfor (var i = 0; i < usualSeparators.length; i++) {\n\t\t\tif (allowInWords.indexOf(usualSeparators[i]) >= 0) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tsource += '\\\\' + usualSeparators[i];\n\t\t}\n\t\tsource += '\\\\s]+)';\n\t\treturn new RegExp(source, 'g');\n\t}\n\n\t// catches numbers (including floating numbers) in the first group, and alphanum in the second\n\tstatic DEFAULT_WORD_REGEXP = NullMode.createWordRegExp();\n\n\tpublic static ID = 'vs.editor.modes.nullMode';\n\n\tpublic richEditSupport: modes.IRichEditSupport;\n\n\tconstructor() {\n\t\tthis.richEditSupport = {\n\t\t\twordDefinition: NullMode.DEFAULT_WORD_REGEXP\n\t\t};\n\t}\n\n\tpublic getId():string {\n\t\treturn NullMode.ID;\n\t}\n\n\tpublic toSimplifiedMode(): modes.IMode {\n\t\treturn this;\n\t}\n}\n\nexport function nullTokenize(mode: modes.IMode, buffer:string, state: modes.IState, deltaOffset:number = 0, stopAtOffset?:number): modes.ILineTokens {\n\tvar tokens:modes.IToken[] = [\n\t\t{\n\t\t\tstartIndex: deltaOffset,\n\t\t\ttype: ''\n\t\t}\n\t];\n\n\tvar modeTransitions:modes.IModeTransition[] = [\n\t\t{\n\t\t\tstartIndex: deltaOffset,\n\t\t\tmode: mode\n\t\t}\n\t];\n\n\treturn {\n\t\ttokens: tokens,\n\t\tactualStopOffset: deltaOffset + buffer.length,\n\t\tendState: state,\n\t\tmodeTransitions: modeTransitions\n\t};\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {IPosition, IWordAtPosition} from 'vs/editor/common/editorCommon';\nimport {IMode, IModeTransition} from 'vs/editor/common/modes';\nimport {NullMode} from 'vs/editor/common/modes/nullMode';\nimport {ModeTransition} from 'vs/editor/common/core/modeTransition';\n\nexport interface ITextSource {\n\n\t_lineIsTokenized(lineNumber:number): boolean;\n\n\tgetLineContent(lineNumber:number): string;\n\n\tgetMode(): IMode;\n\n\t_getLineModeTransitions(lineNumber:number): ModeTransition[];\n}\n\nexport interface INonWordTokenMap {\n\t[key:string]:boolean;\n}\n\nexport class WordHelper {\n\n\tprivate static _safeGetWordDefinition(mode:IMode): RegExp {\n\t\treturn (mode.richEditSupport ? mode.richEditSupport.wordDefinition : null);\n\t}\n\n\tpublic static ensureValidWordDefinition(wordDefinition?:RegExp): RegExp {\n\t\tvar result: RegExp = NullMode.DEFAULT_WORD_REGEXP;\n\n\t\tif (wordDefinition && (wordDefinition instanceof RegExp)) {\n\t\t\tif (!wordDefinition.global) {\n\t\t\t\tvar flags = 'g';\n\t\t\t\tif (wordDefinition.ignoreCase) {\n\t\t\t\t\tflags += 'i';\n\t\t\t\t}\n\t\t\t\tif (wordDefinition.multiline) {\n\t\t\t\t\tflags += 'm';\n\t\t\t\t}\n\t\t\t\tresult = new RegExp(wordDefinition.source, flags);\n\t\t\t} else {\n\t\t\t\tresult = wordDefinition;\n\t\t\t}\n\t\t}\n\n\t\tresult.lastIndex = 0;\n\n\t\treturn result;\n\t}\n\n\tpublic static massageWordDefinitionOf(mode:IMode): RegExp {\n\t\treturn WordHelper.ensureValidWordDefinition(WordHelper._safeGetWordDefinition(mode));\n\t}\n\n\tprivate static _getWordAtColumn(txt:string, column:number, modeIndex: number, modeTransitions:IModeTransition[]): IWordAtPosition {\n\t\tvar modeStartIndex = modeTransitions[modeIndex].startIndex,\n\t\t\tmodeEndIndex = (modeIndex + 1 < modeTransitions.length ? modeTransitions[modeIndex + 1].startIndex : txt.length),\n\t\t\tmode = modeTransitions[modeIndex].mode;\n\n\t\treturn WordHelper._getWordAtText(\n\t\t\tcolumn, WordHelper.massageWordDefinitionOf(mode),\n\t\t\ttxt.substring(modeStartIndex, modeEndIndex), modeStartIndex\n\t\t);\n\t}\n\n\tpublic static getWordAtPosition(textSource:ITextSource, position:IPosition): IWordAtPosition {\n\n\t\tif (!textSource._lineIsTokenized(position.lineNumber)) {\n\t\t\treturn WordHelper._getWordAtText(position.column, WordHelper.massageWordDefinitionOf(textSource.getMode()), textSource.getLineContent(position.lineNumber), 0);\n\t\t}\n\n\t\tvar result: IWordAtPosition = null;\n\t\tvar txt = textSource.getLineContent(position.lineNumber),\n\t\t\tmodeTransitions = textSource._getLineModeTransitions(position.lineNumber),\n\t\t\tcolumnIndex = position.column - 1,\n\t\t\tmodeIndex = ModeTransition.findIndexInSegmentsArray(modeTransitions, columnIndex);\n\n\t\tresult = WordHelper._getWordAtColumn(txt, position.column, modeIndex, modeTransitions);\n\n\t\tif (!result && modeIndex > 0 && modeTransitions[modeIndex].startIndex === columnIndex) {\n\t\t\t// The position is right at the beginning of `modeIndex`, so try looking at `modeIndex` - 1 too\n\t\t\tresult = WordHelper._getWordAtColumn(txt, position.column, modeIndex - 1, modeTransitions);\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tstatic _getWordAtText(column:number, wordDefinition:RegExp, text:string, textOffset:number): IWordAtPosition {\n\n\t\t// console.log('_getWordAtText: ', column, text, textOffset);\n\n\t\tvar words = text.match(wordDefinition),\n\t\t\tk:number,\n\t\t\tstartWord:number,\n\t\t\tendWord:number,\n\t\t\tstartColumn:number,\n\t\t\tendColumn:number,\n\t\t\tword:string;\n\n\t\tif (words) {\n\t\t\tfor (k = 0; k < words.length; k++) {\n\t\t\t\tword = words[k].trim();\n\t\t\t\tif (word.length > 0) {\n\t\t\t\t\tstartWord = text.indexOf(word, endWord);\n\t\t\t\t\tendWord = startWord + word.length;\n\n\t\t\t\t\tstartColumn = textOffset + startWord + 1;\n\t\t\t\t\tendColumn = textOffset + endWord + 1;\n\n\t\t\t\t\tif (startColumn <= column && column <= endColumn) {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tword: word,\n\t\t\t\t\t\t\tstartColumn: startColumn,\n\t\t\t\t\t\t\tendColumn: endColumn\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport URI from 'vs/base/common/uri';\nimport {ErrorCallback, TPromise, ValueCallback} from 'vs/base/common/winjs.base';\nimport {IRequestHandler} from 'vs/base/common/worker/simpleWorker';\nimport {Range} from 'vs/editor/common/core/range';\nimport * as editorCommon from 'vs/editor/common/editorCommon';\nimport {MirrorModel2} from 'vs/editor/common/model/mirrorModel2';\nimport {WordHelper} from 'vs/editor/common/model/textModelWithTokensHelpers';\nimport {IRawModelData} from 'vs/editor/common/services/editorSimpleWorkerCommon';\nimport {createMonacoBaseAPI} from 'vs/editor/common/standalone/standaloneBase';\n\nexport class MirrorModel extends MirrorModel2 {\n\n\tpublic get uri(): URI {\n\t\treturn this._uri;\n\t}\n\n\tpublic get version(): number {\n\t\treturn this._versionId;\n\t}\n\n\tpublic getLinesContent(): string[] {\n\t\treturn this._lines.slice(0);\n\t}\n\n\tpublic getLineCount(): number {\n\t\treturn this._lines.length;\n\t}\n\n\tpublic getLineContent(lineNumber:number): string {\n\t\treturn this._lines[lineNumber - 1];\n\t}\n\n\tpublic getWordAtPosition(position:editorCommon.IPosition, wordDefinition:RegExp): Range {\n\n\t\tlet wordAtText = WordHelper._getWordAtText(\n\t\t\tposition.column,\n\t\t\tWordHelper.ensureValidWordDefinition(wordDefinition),\n\t\t\tthis._lines[position.lineNumber - 1],\n\t\t\t0\n\t\t);\n\n\t\tif (wordAtText) {\n\t\t\treturn new Range(position.lineNumber, wordAtText.startColumn, position.lineNumber, wordAtText.endColumn);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic getWordUntilPosition(position: editorCommon.IPosition, wordDefinition:RegExp): editorCommon.IWordAtPosition {\n\t\tvar wordAtPosition = this.getWordAtPosition(position, wordDefinition);\n\t\tif (!wordAtPosition) {\n\t\t\treturn {\n\t\t\t\tword: '',\n\t\t\t\tstartColumn: position.column,\n\t\t\t\tendColumn: position.column\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\tword: this._lines[position.lineNumber - 1].substring(wordAtPosition.startColumn - 1, position.column - 1),\n\t\t\tstartColumn: wordAtPosition.startColumn,\n\t\t\tendColumn: position.column\n\t\t};\n\t}\n\n\tprivate _getAllWords(wordDefinition:RegExp): string[] {\n\t\tvar result:string[] = [];\n\t\tthis._lines.forEach((line) => {\n\t\t\tthis._wordenize(line, wordDefinition).forEach((info) => {\n\t\t\t\tresult.push(line.substring(info.start, info.end));\n\t\t\t});\n\t\t});\n\t\treturn result;\n\t}\n\n\tpublic getAllUniqueWords(wordDefinition:RegExp, skipWordOnce?:string) : string[] {\n\t\tvar foundSkipWord = false;\n\t\tvar uniqueWords = {};\n\t\treturn this._getAllWords(wordDefinition).filter((word) => {\n\t\t\tif (skipWordOnce && !foundSkipWord && skipWordOnce === word) {\n\t\t\t\tfoundSkipWord = true;\n\t\t\t\treturn false;\n\t\t\t} else if (uniqueWords[word]) {\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\tuniqueWords[word] = true;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n\t}\n\n//\t// TODO@Joh, TODO@Alex - remove these and make sure the super-things work\n\tprivate _wordenize(content:string, wordDefinition:RegExp): editorCommon.IWordRange[] {\n\t\tvar result:editorCommon.IWordRange[] = [];\n\t\tvar match:RegExpExecArray;\n\t\twhile (match = wordDefinition.exec(content)) {\n\t\t\tif (match[0].length === 0) {\n\t\t\t\t// it did match the empty string\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tresult.push({ start: match.index, end: match.index + match[0].length });\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic getValueInRange(range:editorCommon.IRange): string {\n\t\tif (range.startLineNumber === range.endLineNumber) {\n\t\t\treturn this._lines[range.startLineNumber - 1].substring(range.startColumn - 1, range.endColumn - 1);\n\t\t}\n\n\t\tvar lineEnding = this._eol,\n\t\t\tstartLineIndex = range.startLineNumber - 1,\n\t\t\tendLineIndex = range.endLineNumber - 1,\n\t\t\tresultLines:string[] = [];\n\n\t\tresultLines.push(this._lines[startLineIndex].substring(range.startColumn - 1));\n\t\tfor (var i = startLineIndex + 1; i < endLineIndex; i++) {\n\t\t\tresultLines.push(this._lines[i]);\n\t\t}\n\t\tresultLines.push(this._lines[endLineIndex].substring(0, range.endColumn - 1));\n\n\t\treturn resultLines.join(lineEnding);\n\t}\n}\n\nexport class StandaloneWorker /*extends EditorSimpleWorker*/ implements IRequestHandler {\n\t_requestHandlerTrait: any;\n\n\tprivate _models:{[uri:string]:MirrorModel;};\n\tprivate _foreignModule: any;\n\n\tconstructor() {\n\t\t// super();\n\t\tthis._models = Object.create(null);\n\t\tthis._foreignModule = null;\n\t}\n\n\tpublic getModels(): MirrorModel[] {\n\t\tlet all: MirrorModel[] = [];\n\t\tObject.keys(this._models).forEach((key) => all.push(this._models[key]));\n\t\treturn all;\n\t}\n\n\tpublic acceptNewModel(data:IRawModelData): void {\n\t\tthis._models[data.url] = new MirrorModel(URI.parse(data.url), data.value.lines, data.value.EOL, data.versionId);\n\t}\n\n\tpublic acceptModelChanged(strURL: string, events: editorCommon.IModelContentChangedEvent2[]): void {\n\t\tif (!this._models[strURL]) {\n\t\t\treturn;\n\t\t}\n\t\tlet model = this._models[strURL];\n\t\tmodel.onEvents(events);\n\t}\n\n\tpublic acceptRemovedModel(strURL: string): void {\n\t\tif (!this._models[strURL]) {\n\t\t\treturn;\n\t\t}\n\t\tdelete this._models[strURL];\n\t}\n\n\tpublic loadModule(moduleId:string): TPromise<string[]> {\n\t\tlet cc: ValueCallback;\n\t\tlet ee: ErrorCallback;\n\t\tlet r = new TPromise<any>((c, e, p) => {\n\t\t\tcc = c;\n\t\t\tee = e;\n\t\t});\n\n\t\trequire([moduleId], (foreignModule) => {\n\t\t\tthis._foreignModule = foreignModule.create();\n\n\t\t\tlet methods: string[] = [];\n\t\t\tfor (let prop in this._foreignModule) {\n\t\t\t\tif (typeof this._foreignModule[prop] === 'function') {\n\t\t\t\t\tmethods.push(prop);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcc(methods);\n\n\t\t}, ee);\n\n\t\treturn r;\n\t}\n\n\t// foreign method request\n\tpublic fmr(method:string, args:any[]): TPromise<any> {\n\t\tif (!this._foreignModule || typeof this._foreignModule[method] !== 'function') {\n\t\t\treturn TPromise.wrapError(new Error('Missing requestHandler or method: ' + method));\n\t\t}\n\n\t\ttry {\n\t\t\treturn TPromise.as(this._foreignModule[method].apply(this._foreignModule, args));\n\t\t} catch (e) {\n\t\t\treturn TPromise.wrapError(e);\n\t\t}\n\t}\n}\n\nconst standaloneWorker = new StandaloneWorker();\n\n/**\n * Called on the worker side\n */\nexport function create(): IRequestHandler {\n\treturn standaloneWorker;\n}\n\nfunction createMonacoWorkerAPI(): typeof monaco.worker {\n\treturn {\n\t\tget mirrorModels () {\n\t\t\treturn standaloneWorker.getModels();\n\t\t}\n\t};\n}\n\nvar global:any = self;\nglobal.monaco = createMonacoBaseAPI();\nglobal.monaco.worker = createMonacoWorkerAPI();\n"]}