{"version":3,"sources":["vs/editor/standalone-languages/vb.js","vs/editor/standalone-languages/file:/C:/Alex/src/vscode/src/vs/editor/standalone-languages/vb.ts"],"names":["define","require","exports","language","displayName","name","defaultToken","ignoreCase","brackets","token","open","close","autoClosingPairs","lineComment","blockCommentStart","blockCommentEnd","keywords","tagwords","symbols","escapes","integersuffix","floatsuffix","tokenizer","root","include","bracket","cases","@tagwords","@keywords","@default","whitespace","string"],"mappings":"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","file":"vs/editor/standalone-languages/vb.js","sourcesContent":["/*!-----------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.2.3(84e204b238a1eff25d4c6f611fdcd76a494005a7)\n * Released under the MIT license\n * https://github.com/Microsoft/vscode/blob/master/LICENSE.txt\n *-----------------------------------------------------------*/\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\ndefine(\"vs/editor/standalone-languages/vb\", [\"require\", \"exports\"], function (require, exports) {\r\n    'use strict';\r\n    exports.language = {\r\n        displayName: 'VB',\r\n        name: 'vb',\r\n        defaultToken: '',\r\n        ignoreCase: true,\r\n        brackets: [\r\n            { token: 'delimiter.bracket', open: '{', close: '}' },\r\n            { token: 'delimiter.array', open: '[', close: ']' },\r\n            { token: 'delimiter.parenthesis', open: '(', close: ')' },\r\n            { token: 'delimiter.angle', open: '<', close: '>' },\r\n            // Special bracket statement pairs\r\n            // according to https://msdn.microsoft.com/en-us/library/tsw2a11z.aspx\r\n            { token: 'keyword.tag-addhandler', open: 'addhandler', close: 'end addhandler' },\r\n            { token: 'keyword.tag-class', open: 'class', close: 'end class' },\r\n            { token: 'keyword.tag-enum', open: 'enum', close: 'end enum' },\r\n            { token: 'keyword.tag-event', open: 'event', close: 'end event' },\r\n            { token: 'keyword.tag-function', open: 'function', close: 'end function' },\r\n            { token: 'keyword.tag-get', open: 'get', close: 'end get' },\r\n            { token: 'keyword.tag-if', open: 'if', close: 'end if' },\r\n            { token: 'keyword.tag-interface', open: 'interface', close: 'end interface' },\r\n            { token: 'keyword.tag-module', open: 'module', close: 'end module' },\r\n            { token: 'keyword.tag-namespace', open: 'namespace', close: 'end namespace' },\r\n            { token: 'keyword.tag-operator', open: 'operator', close: 'end operator' },\r\n            { token: 'keyword.tag-property', open: 'property', close: 'end property' },\r\n            { token: 'keyword.tag-raiseevent', open: 'raiseevent', close: 'end raiseevent' },\r\n            { token: 'keyword.tag-removehandler', open: 'removehandler', close: 'end removehandler' },\r\n            { token: 'keyword.tag-select', open: 'select', close: 'end select' },\r\n            { token: 'keyword.tag-set', open: 'set', close: 'end set' },\r\n            { token: 'keyword.tag-structure', open: 'structure', close: 'end structure' },\r\n            { token: 'keyword.tag-sub', open: 'sub', close: 'end sub' },\r\n            { token: 'keyword.tag-synclock', open: 'synclock', close: 'end synclock' },\r\n            { token: 'keyword.tag-try', open: 'try', close: 'end try' },\r\n            { token: 'keyword.tag-while', open: 'while', close: 'end while' },\r\n            { token: 'keyword.tag-with', open: 'with', close: 'end with' },\r\n            // Other pairs\r\n            { token: 'keyword.tag-using', open: 'using', close: 'end using' },\r\n            { token: 'keyword.tag-do', open: 'do', close: 'loop' },\r\n            { token: 'keyword.tag-for', open: 'for', close: 'next' }\r\n        ],\r\n        autoClosingPairs: [['{', '}'], ['[', ']'], ['(', ')'], ['\"', '\"'], ['<', '>'],],\r\n        lineComment: '\\'',\r\n        blockCommentStart: '/*',\r\n        blockCommentEnd: '*/',\r\n        keywords: [\r\n            'AddHandler', 'AddressOf', 'Alias', 'And', 'AndAlso', 'As', 'Async', 'Boolean', 'ByRef', 'Byte', 'ByVal', 'Call',\r\n            'Case', 'Catch', 'CBool', 'CByte', 'CChar', 'CDate', 'CDbl', 'CDec', 'Char', 'CInt', 'Class', 'CLng',\r\n            'CObj', 'Const', 'Continue', 'CSByte', 'CShort', 'CSng', 'CStr', 'CType', 'CUInt', 'CULng', 'CUShort',\r\n            'Date', 'Decimal', 'Declare', 'Default', 'Delegate', 'Dim', 'DirectCast', 'Do', 'Double', 'Each', 'Else',\r\n            'ElseIf', 'End', 'EndIf', 'Enum', 'Erase', 'Error', 'Event', 'Exit', 'False', 'Finally', 'For', 'Friend',\r\n            'Function', 'Get', 'GetType', 'GetXMLNamespace', 'Global', 'GoSub', 'GoTo', 'Handles', 'If', 'Implements',\r\n            'Imports', 'In', 'Inherits', 'Integer', 'Interface', 'Is', 'IsNot', 'Let', 'Lib', 'Like', 'Long', 'Loop',\r\n            'Me', 'Mod', 'Module', 'MustInherit', 'MustOverride', 'MyBase', 'MyClass', 'NameOf', 'Namespace', 'Narrowing', 'New',\r\n            'Next', 'Not', 'Nothing', 'NotInheritable', 'NotOverridable', 'Object', 'Of', 'On', 'Operator', 'Option',\r\n            'Optional', 'Or', 'OrElse', 'Out', 'Overloads', 'Overridable', 'Overrides', 'ParamArray', 'Partial',\r\n            'Private', 'Property', 'Protected', 'Public', 'RaiseEvent', 'ReadOnly', 'ReDim', 'RemoveHandler', 'Resume',\r\n            'Return', 'SByte', 'Select', 'Set', 'Shadows', 'Shared', 'Short', 'Single', 'Static', 'Step', 'Stop',\r\n            'String', 'Structure', 'Sub', 'SyncLock', 'Then', 'Throw', 'To', 'True', 'Try', 'TryCast', 'TypeOf',\r\n            'UInteger', 'ULong', 'UShort', 'Using', 'Variant', 'Wend', 'When', 'While', 'Widening', 'With', 'WithEvents',\r\n            'WriteOnly', 'Xor'\r\n        ],\r\n        tagwords: [\r\n            'If', 'Sub', 'Select', 'Try', 'Class', 'Enum',\r\n            'Function', 'Get', 'Interface', 'Module', 'Namespace', 'Operator', 'Set', 'Structure', 'Using', 'While', 'With',\r\n            'Do', 'Loop', 'For', 'Next', 'Property', 'Continue', 'AddHandler', 'RemoveHandler', 'Event', 'RaiseEvent', 'SyncLock'\r\n        ],\r\n        // we include these common regular expressions\r\n        symbols: /[=><!~?;\\.,:&|+\\-*\\/\\^%]+/,\r\n        escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\r\n        integersuffix: /U?[DI%L&S@]?/,\r\n        floatsuffix: /[R#F!]?/,\r\n        // The main tokenizer for our languages\r\n        tokenizer: {\r\n            root: [\r\n                // whitespace\r\n                { include: '@whitespace' },\r\n                // special ending tag-words\r\n                [/next(?!\\w)/, { token: 'keyword.tag-for', bracket: '@close' }],\r\n                [/loop(?!\\w)/, { token: 'keyword.tag-do', bracket: '@close' }],\r\n                // usual ending tags\r\n                [/end\\s+(?!for|do)([a-zA-Z_]\\w*)/, { token: 'keyword.tag-$1', bracket: '@close' }],\r\n                // identifiers, tagwords, and keywords\r\n                [/[a-zA-Z_]\\w*/, { cases: { '@tagwords': { token: 'keyword.tag-$0', bracket: '@open' },\r\n                            '@keywords': { token: 'keyword.$0' },\r\n                            '@default': 'identifier' } }],\r\n                // Preprocessor directive\r\n                [/^\\s*#\\w+/, 'keyword'],\r\n                // numbers\r\n                [/\\d*\\d+e([\\-+]?\\d+)?(@floatsuffix)/, 'number.float'],\r\n                [/\\d*\\.\\d+(e[\\-+]?\\d+)?(@floatsuffix)/, 'number.float'],\r\n                [/&H[0-9a-f]+(@integersuffix)/, 'number.hex'],\r\n                [/&0[0-7]+(@integersuffix)/, 'number.octal'],\r\n                [/\\d+(@integersuffix)/, 'number'],\r\n                // date literal\r\n                [/#.*#/, 'number'],\r\n                // delimiters and operators\r\n                [/[{}()\\[\\]]/, '@brackets'],\r\n                [/@symbols/, 'delimiter'],\r\n                // strings\r\n                [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'],\r\n                [/\"/, 'string', '@string'],\r\n            ],\r\n            whitespace: [\r\n                [/[ \\t\\r\\n]+/, ''],\r\n                [/(\\'|REM(?!\\w)).*$/, 'comment'],\r\n            ],\r\n            string: [\r\n                [/[^\\\\\"]+/, 'string'],\r\n                [/@escapes/, 'string.escape'],\r\n                [/\\\\./, 'string.escape.invalid'],\r\n                [/\"C?/, 'string', '@pop']\r\n            ],\r\n        },\r\n    };\r\n});\r\n\n\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport {ILanguage} from './types';\n\nexport var language = <ILanguage> {\n\tdisplayName: 'VB',\n\tname: 'vb',\n\tdefaultToken: '',\n\tignoreCase: true,\n\n\tbrackets: [\n\t{ token:'delimiter.bracket', open: '{', close: '}'},\n\t{ token:'delimiter.array', open: '[', close: ']'},\n\t{ token:'delimiter.parenthesis', open: '(', close: ')'},\n\t{ token:'delimiter.angle', open: '<', close: '>'},\n\n\t// Special bracket statement pairs\n\t// according to https://msdn.microsoft.com/en-us/library/tsw2a11z.aspx\n\t{ token: 'keyword.tag-addhandler', open: 'addhandler', close: 'end addhandler'},\n\t{ token: 'keyword.tag-class', open: 'class', close: 'end class'},\n\t{ token: 'keyword.tag-enum', open: 'enum', close: 'end enum'},\n\t{ token: 'keyword.tag-event', open: 'event', close: 'end event'},\n\t{ token: 'keyword.tag-function', open: 'function', close: 'end function'},\n\t{ token: 'keyword.tag-get', open: 'get', close: 'end get'},\n\t{ token: 'keyword.tag-if', open: 'if', close: 'end if'},\n\t{ token: 'keyword.tag-interface', open: 'interface', close: 'end interface'},\n\t{ token: 'keyword.tag-module', open: 'module', close: 'end module'},\n\t{ token: 'keyword.tag-namespace', open: 'namespace', close: 'end namespace'},\n\t{ token: 'keyword.tag-operator', open: 'operator', close: 'end operator'},\n\t{ token: 'keyword.tag-property', open: 'property', close: 'end property'},\n\t{ token: 'keyword.tag-raiseevent', open: 'raiseevent', close: 'end raiseevent'},\n\t{ token: 'keyword.tag-removehandler', open: 'removehandler', close: 'end removehandler'},\n\t{ token: 'keyword.tag-select', open: 'select', close: 'end select'},\n\t{ token: 'keyword.tag-set', open: 'set', close: 'end set'},\n\t{ token: 'keyword.tag-structure', open: 'structure', close: 'end structure'},\n\t{ token: 'keyword.tag-sub', open: 'sub', close: 'end sub'},\n\t{ token: 'keyword.tag-synclock', open: 'synclock', close: 'end synclock'},\n\t{ token: 'keyword.tag-try', open: 'try', close: 'end try'},\n\t{ token: 'keyword.tag-while', open: 'while', close: 'end while'},\n\t{ token: 'keyword.tag-with', open: 'with', close: 'end with'},\n\n\t// Other pairs\n\t{ token: 'keyword.tag-using', open: 'using', close: 'end using' },\n\t{ token: 'keyword.tag-do', open: 'do', close: 'loop' },\n\t{ token: 'keyword.tag-for', open: 'for', close: 'next' }\n\t],\n\n\tautoClosingPairs:  [ ['{', '}'], ['[', ']'], ['(', ')'], ['\"', '\"'], ['<', '>'], ],\n\n\tlineComment:      '\\'',\n\tblockCommentStart: '/*',\n\tblockCommentEnd: '*/',\n\n\tkeywords: [\n\t\t'AddHandler', 'AddressOf', 'Alias', 'And', 'AndAlso', 'As', 'Async', 'Boolean', 'ByRef', 'Byte', 'ByVal', 'Call',\n\t\t'Case', 'Catch', 'CBool', 'CByte', 'CChar', 'CDate', 'CDbl', 'CDec', 'Char', 'CInt', 'Class', 'CLng',\n\t\t'CObj', 'Const', 'Continue', 'CSByte', 'CShort', 'CSng', 'CStr', 'CType', 'CUInt', 'CULng', 'CUShort',\n\t\t'Date', 'Decimal', 'Declare', 'Default', 'Delegate', 'Dim', 'DirectCast', 'Do', 'Double', 'Each', 'Else',\n\t\t'ElseIf', 'End', 'EndIf', 'Enum', 'Erase', 'Error', 'Event', 'Exit', 'False', 'Finally', 'For', 'Friend',\n\t\t'Function', 'Get', 'GetType', 'GetXMLNamespace', 'Global', 'GoSub', 'GoTo', 'Handles', 'If', 'Implements',\n\t\t'Imports', 'In', 'Inherits', 'Integer', 'Interface', 'Is', 'IsNot', 'Let', 'Lib', 'Like', 'Long', 'Loop',\n\t\t'Me', 'Mod', 'Module', 'MustInherit', 'MustOverride', 'MyBase', 'MyClass', 'NameOf', 'Namespace', 'Narrowing', 'New',\n\t\t'Next', 'Not', 'Nothing', 'NotInheritable', 'NotOverridable', 'Object', 'Of', 'On', 'Operator', 'Option',\n\t\t'Optional', 'Or', 'OrElse', 'Out', 'Overloads', 'Overridable', 'Overrides', 'ParamArray', 'Partial',\n\t\t'Private', 'Property', 'Protected', 'Public', 'RaiseEvent', 'ReadOnly', 'ReDim', 'RemoveHandler', 'Resume',\n\t\t'Return', 'SByte', 'Select', 'Set', 'Shadows', 'Shared', 'Short', 'Single', 'Static', 'Step', 'Stop',\n\t\t'String', 'Structure', 'Sub', 'SyncLock', 'Then', 'Throw', 'To', 'True', 'Try', 'TryCast', 'TypeOf',\n\t\t'UInteger', 'ULong', 'UShort', 'Using', 'Variant', 'Wend', 'When', 'While', 'Widening', 'With', 'WithEvents',\n\t\t'WriteOnly', 'Xor'\n\t],\n\n\ttagwords: [\n\t\t'If', 'Sub', 'Select', 'Try', 'Class', 'Enum',\n\t\t'Function', 'Get', 'Interface', 'Module', 'Namespace', 'Operator', 'Set', 'Structure', 'Using', 'While', 'With',\n\t\t'Do', 'Loop', 'For', 'Next', 'Property', 'Continue', 'AddHandler', 'RemoveHandler', 'Event', 'RaiseEvent', 'SyncLock'\n\t],\n\n\t// we include these common regular expressions\n\tsymbols:  /[=><!~?;\\.,:&|+\\-*\\/\\^%]+/,\n\tescapes:  /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n\tintegersuffix: /U?[DI%L&S@]?/,\n\tfloatsuffix: /[R#F!]?/,\n\n\t// The main tokenizer for our languages\n\ttokenizer: {\n\t\troot: [\n\n\t\t\t// whitespace\n\t\t\t{ include: '@whitespace' },\n\n\t\t\t// special ending tag-words\n\t\t\t[/next(?!\\w)/, { token: 'keyword.tag-for', bracket: '@close'}],\n\t\t\t[/loop(?!\\w)/, { token: 'keyword.tag-do', bracket: '@close' }],\n\n\t\t\t// usual ending tags\n\t\t\t[/end\\s+(?!for|do)([a-zA-Z_]\\w*)/, { token: 'keyword.tag-$1', bracket: '@close' }],\n\n\t\t\t// identifiers, tagwords, and keywords\n\t\t\t[/[a-zA-Z_]\\w*/, { cases: { '@tagwords': {token:'keyword.tag-$0', bracket: '@open'},\n\t\t\t\t\t\t\t\t\t\t'@keywords': {token:'keyword.$0'},\n\t\t\t\t\t\t\t\t\t\t'@default': 'identifier' } }],\n\n\t\t\t// Preprocessor directive\n\t\t\t[/^\\s*#\\w+/, 'keyword'],\n\n\t\t\t// numbers\n\t\t\t[/\\d*\\d+e([\\-+]?\\d+)?(@floatsuffix)/, 'number.float'],\n\t\t\t[/\\d*\\.\\d+(e[\\-+]?\\d+)?(@floatsuffix)/, 'number.float'],\n\t\t\t[/&H[0-9a-f]+(@integersuffix)/, 'number.hex'],\n\t\t\t[/&0[0-7]+(@integersuffix)/, 'number.octal'],\n\t\t\t[/\\d+(@integersuffix)/, 'number'],\n\n\t\t\t// date literal\n\t\t\t[/#.*#/, 'number'],\n\n\t\t\t// delimiters and operators\n\t\t\t[/[{}()\\[\\]]/, '@brackets'],\n\t\t\t[/@symbols/, 'delimiter'],\n\n\t\t\t// strings\n\t\t\t[/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid' ],  // non-teminated string\n\t\t\t[/\"/,  'string', '@string' ],\n\n\t\t],\n\n\t\twhitespace: [\n\t\t\t[/[ \\t\\r\\n]+/, ''],\n\t\t\t[/(\\'|REM(?!\\w)).*$/,        'comment'],\n\t\t],\n\n\t\tstring: [\n\t\t\t[/[^\\\\\"]+/,  'string'],\n\t\t\t[/@escapes/, 'string.escape'],\n\t\t\t[/\\\\./,      'string.escape.invalid'],\n\t\t\t[/\"C?/,        'string', '@pop' ]\n\t\t],\n\t},\n};"]}