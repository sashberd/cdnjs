{"version":3,"sources":["vs/editor/standalone-languages/objective-c.js","vs/editor/standalone-languages/file:/C:/Alex/src/vscode/src/vs/editor/standalone-languages/objective-c.ts"],"names":["define","require","exports","language","displayName","name","defaultToken","lineComment","blockCommentStart","blockCommentEnd","keywords","decpart","decimal","tokenizer","root","include","cases","@keywords","@default","whitespace","comments","comment","numbers","(\\d)*","$0","strings","stringBody","dblStringBody"],"mappings":";;;;;;AAWAA,OAAO,8CAA+C,UAAW,WAAY,SAAUC,EAASC,GCNhG,YAIWA,GAAAC,UACVC,YAAa,cACbC,KAAM,cACNC,aAAc,GAEdC,YAAa,KACbC,kBAAmB,KACnBC,gBAAiB,KAEjBC,UACC,UACA,WACA,UACA,QACA,SACA,MACA,SACA,UACA,SACA,SAEA,SACA,QACA,WACA,UACA,OACA,kBACA,aACA,WACA,WACA,aACA,YACA,YACA,UACA,YACA,cAEA,aAEA,SACA,OAEA,OACA,QACA,SACA,QAEA,OACA,OACA,QACA,QACA,OACA,WAEA,UACA,KACA,SAEA,OACA,OACA,SAEA,QACA,QACA,QACA,MAEA,OAEA,KACA,KACA,MACA,KACA,QACA,MAEA,OAEA,MACA,YACA,OAEA,SACA,MAEA,UACA,SACA,YAEA,YACA,WACA,WACA,SAEA,MACA,OACA,QACA,SACA,SACA,SACA,SACA,QACA,SAEA,UACA,OACA,OAEA,QACA,WAEA,WACA,OAEA,SAGDC,QAAS,YACTC,QAAS,aAETC,WACAC,OACIC,QAAS,cACTA,QAAS,gBACTA,QAAS,aACTA,QAAS,aAEV,QAAS,cACT,eAAgB,cAEhB,iBAAmBC,OAASC,YAAa,UACnCC,WAAY,iBAElB,mDAAoD,aAGvDC,aACE,MAAO,UAGTC,WACG,SAAS,UAAU,aACnB,YAAY,YAGfC,UACG,SAAS,UAAU,SACnB,IAAK,YAGRC,UACG,oCAAqC,eACrC,qDACAN,OAAWO,SAAU,SAClBC,GAAK,mBAIXC,UACE,KAAM,gBAAiB,YACvB,IAAK,gBAAiB,gBACtB,KAAM,gBAAiB,YACvB,IAAK,gBAAiB,mBAExBC,aACE,MAAO,WACP,IAAK,gBAAiB,YACtB,WAAY,WACZ,QAAS,WACT,MAAO,SAAU,YAEnBC,gBACE,MAAO,WACP,IAAK,gBAAiB,YACtB,WAAY,WACZ,QAAS,WACT,MAAO,SAAU","file":"vs/editor/standalone-languages/objective-c.js","sourcesContent":["/*!-----------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.2.3(84e204b238a1eff25d4c6f611fdcd76a494005a7)\n * Released under the MIT license\n * https://github.com/Microsoft/vscode/blob/master/LICENSE.txt\n *-----------------------------------------------------------*/\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\ndefine(\"vs/editor/standalone-languages/objective-c\", [\"require\", \"exports\"], function (require, exports) {\r\n    'use strict';\r\n    exports.language = {\r\n        displayName: 'Objective-C',\r\n        name: 'objective-c',\r\n        defaultToken: '',\r\n        lineComment: '//',\r\n        blockCommentStart: '/*',\r\n        blockCommentEnd: '*/',\r\n        keywords: [\r\n            '#import',\r\n            '#include',\r\n            '#define',\r\n            '#else',\r\n            '#endif',\r\n            '#if',\r\n            '#ifdef',\r\n            '#ifndef',\r\n            '#ident',\r\n            '#undef',\r\n            '@class',\r\n            '@defs',\r\n            '@dynamic',\r\n            '@encode',\r\n            '@end',\r\n            '@implementation',\r\n            '@interface',\r\n            '@package',\r\n            '@private',\r\n            '@protected',\r\n            '@property',\r\n            '@protocol',\r\n            '@public',\r\n            '@selector',\r\n            '@synthesize',\r\n            '__declspec',\r\n            'assign',\r\n            'auto',\r\n            'BOOL',\r\n            'break',\r\n            'bycopy',\r\n            'byref',\r\n            'case',\r\n            'char',\r\n            'Class',\r\n            'const',\r\n            'copy',\r\n            'continue',\r\n            'default',\r\n            'do',\r\n            'double',\r\n            'else',\r\n            'enum',\r\n            'extern',\r\n            'FALSE',\r\n            'false',\r\n            'float',\r\n            'for',\r\n            'goto',\r\n            'if',\r\n            'in',\r\n            'int',\r\n            'id',\r\n            'inout',\r\n            'IMP',\r\n            'long',\r\n            'nil',\r\n            'nonatomic',\r\n            'NULL',\r\n            'oneway',\r\n            'out',\r\n            'private',\r\n            'public',\r\n            'protected',\r\n            'readwrite',\r\n            'readonly',\r\n            'register',\r\n            'return',\r\n            'SEL',\r\n            'self',\r\n            'short',\r\n            'signed',\r\n            'sizeof',\r\n            'static',\r\n            'struct',\r\n            'super',\r\n            'switch',\r\n            'typedef',\r\n            'TRUE',\r\n            'true',\r\n            'union',\r\n            'unsigned',\r\n            'volatile',\r\n            'void',\r\n            'while',\r\n        ],\r\n        decpart: /\\d(_?\\d)*/,\r\n        decimal: /0|@decpart/,\r\n        tokenizer: {\r\n            root: [\r\n                { include: '@comments' },\r\n                { include: '@whitespace' },\r\n                { include: '@numbers' },\r\n                { include: '@strings' },\r\n                [/[,:;]/, 'delimiter'],\r\n                [/[{}\\[\\]()<>]/, '@brackets'],\r\n                [/[a-zA-Z@#]\\w*/, { cases: { '@keywords': 'keyword',\r\n                            '@default': 'identifier' } }],\r\n                [/[<>=\\\\+\\\\-\\\\*\\\\/\\\\^\\\\|\\\\~,]|and\\\\b|or\\\\b|not\\\\b]/, 'operator'],\r\n            ],\r\n            whitespace: [\r\n                [/\\s+/, 'white'],\r\n            ],\r\n            comments: [\r\n                ['\\\\/\\\\*', 'comment', '@comment'],\r\n                ['\\\\/\\\\/+.*', 'comment'],\r\n            ],\r\n            comment: [\r\n                ['\\\\*\\\\/', 'comment', '@pop'],\r\n                ['.', 'comment',],\r\n            ],\r\n            numbers: [\r\n                [/0[xX][0-9a-fA-F]*(_?[0-9a-fA-F])*/, 'number.hex'],\r\n                [/@decimal((\\.@decpart)?([eE][\\-+]?@decpart)?)[fF]*/, {\r\n                        cases: { '(\\\\d)*': 'number',\r\n                            '$0': 'number.float' } }]\r\n            ],\r\n            // Recognize strings, including those broken across lines with \\ (but not without)\r\n            strings: [\r\n                [/'$/, 'string.escape', '@popall'],\r\n                [/'/, 'string.escape', '@stringBody'],\r\n                [/\"$/, 'string.escape', '@popall'],\r\n                [/\"/, 'string.escape', '@dblStringBody']\r\n            ],\r\n            stringBody: [\r\n                [/\\\\./, 'string'],\r\n                [/'/, 'string.escape', '@popall'],\r\n                [/.(?=.*')/, 'string'],\r\n                [/.*\\\\$/, 'string'],\r\n                [/.*$/, 'string', '@popall']\r\n            ],\r\n            dblStringBody: [\r\n                [/\\\\./, 'string'],\r\n                [/\"/, 'string.escape', '@popall'],\r\n                [/.(?=.*\")/, 'string'],\r\n                [/.*\\\\$/, 'string'],\r\n                [/.*$/, 'string', '@popall']\r\n            ]\r\n        }\r\n    };\r\n});\r\n\n\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport {ILanguage} from './types';\n\nexport var language = <ILanguage> {\n\tdisplayName: 'Objective-C',\n\tname: 'objective-c',\n\tdefaultToken: '',\n\n\tlineComment: '//',\n\tblockCommentStart: '/*',\n\tblockCommentEnd: '*/',\n\n\tkeywords: [\n\t\t'#import',\n\t\t'#include',\n\t\t'#define',\n\t\t'#else',\n\t\t'#endif',\n\t\t'#if',\n\t\t'#ifdef',\n\t\t'#ifndef',\n\t\t'#ident',\n\t\t'#undef',\n\n\t\t'@class',\n\t\t'@defs',\n\t\t'@dynamic',\n\t\t'@encode',\n\t\t'@end',\n\t\t'@implementation',\n\t\t'@interface',\n\t\t'@package',\n\t\t'@private',\n\t\t'@protected',\n\t\t'@property',\n\t\t'@protocol',\n\t\t'@public',\n\t\t'@selector',\n\t\t'@synthesize',\n\n\t\t'__declspec',\n\n\t\t'assign',\n\t\t'auto',\n\n\t\t'BOOL',\n\t\t'break',\n\t\t'bycopy',\n\t\t'byref',\n\n\t\t'case',\n\t\t'char',\n\t\t'Class',\n\t\t'const',\n\t\t'copy',\n\t\t'continue',\n\n\t\t'default',\n\t\t'do',\n\t\t'double',\n\n\t\t'else',\n\t\t'enum',\n\t\t'extern',\n\n\t\t'FALSE',\n\t\t'false',\n\t\t'float',\n\t\t'for',\n\n\t\t'goto',\n\n\t\t'if',\n\t\t'in',\n\t\t'int',\n\t\t'id',\n\t\t'inout',\n\t\t'IMP',\n\n\t\t'long',\n\n\t\t'nil',\n\t\t'nonatomic',\n\t\t'NULL',\n\n\t\t'oneway',\n\t\t'out',\n\n\t\t'private',\n\t\t'public',\n\t\t'protected',\n\n\t\t'readwrite',\n\t\t'readonly',\n\t\t'register',\n\t\t'return',\n\n\t\t'SEL',\n\t\t'self',\n\t\t'short',\n\t\t'signed',\n\t\t'sizeof',\n\t\t'static',\n\t\t'struct',\n\t\t'super',\n\t\t'switch',\n\n\t\t'typedef',\n\t\t'TRUE',\n\t\t'true',\n\n\t\t'union',\n\t\t'unsigned',\n\n\t\t'volatile',\n\t\t'void',\n\n\t\t'while',\n\t],\n\n\tdecpart: /\\d(_?\\d)*/,\n\tdecimal: /0|@decpart/,\n\n\ttokenizer: {\n\troot: [\n\t\t\t{ include: '@comments' },\n\t\t\t{ include: '@whitespace' },\n\t\t\t{ include: '@numbers' },\n\t\t\t{ include: '@strings' },\n\n\t\t\t[/[,:;]/, 'delimiter'],\n\t\t\t[/[{}\\[\\]()<>]/, '@brackets'],\n\n\t\t\t[/[a-zA-Z@#]\\w*/, { cases: { '@keywords': 'keyword',\n\t\t\t\t\t\t\t\t\t\t'@default': 'identifier' } }],\n\n\t\t\t[/[<>=\\\\+\\\\-\\\\*\\\\/\\\\^\\\\|\\\\~,]|and\\\\b|or\\\\b|not\\\\b]/, 'operator'],\n\t],\n\n\twhitespace: [\n\t\t[/\\s+/, 'white'],\n\t],\n\n\tcomments: [\n\t\t\t['\\\\/\\\\*','comment','@comment' ],\n\t\t\t['\\\\/\\\\/+.*','comment' ],\n\t\t],\n\n\tcomment: [\n\t\t\t['\\\\*\\\\/','comment','@pop' ],\n\t\t\t['.', 'comment', ],\n\t\t],\n\n\tnumbers: [\n\t\t\t[/0[xX][0-9a-fA-F]*(_?[0-9a-fA-F])*/, 'number.hex'],\n\t\t\t[/@decimal((\\.@decpart)?([eE][\\-+]?@decpart)?)[fF]*/, {\n\t\t\t\tcases: {  \t'(\\\\d)*': 'number',\n\t\t\t\t\t\t\t'$0':'number.float' }} ]\n\t\t],\n\n\t// Recognize strings, including those broken across lines with \\ (but not without)\n\tstrings: [\n\t\t[/'$/, 'string.escape', '@popall'],\n\t\t[/'/, 'string.escape', '@stringBody'],\n\t\t[/\"$/, 'string.escape', '@popall'],\n\t\t[/\"/, 'string.escape', '@dblStringBody']\n\t],\n\tstringBody: [\n\t\t[/\\\\./, 'string'],\n\t\t[/'/, 'string.escape', '@popall'],\n\t\t[/.(?=.*')/, 'string'],\n\t\t[/.*\\\\$/, 'string'],\n\t\t[/.*$/, 'string', '@popall']\n\t],\n\tdblStringBody: [\n\t\t[/\\\\./, 'string'],\n\t\t[/\"/, 'string.escape', '@popall'],\n\t\t[/.(?=.*\")/, 'string'],\n\t\t[/.*\\\\$/, 'string'],\n\t\t[/.*$/, 'string', '@popall']\n\t]\n\t}\n};"]}